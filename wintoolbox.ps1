#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: b214b4dd-9fc6-4ac9-9bc2-60c016f068a8
# Source File: wintoolbox.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
+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
+dMAAA==#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2020 v5.7.172
     Generated on:       3/10/2022 8:42 AM
     Generated by:       Administrator
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2020
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-wintoolbox_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formWindowsOptimizationT = New-Object 'System.Windows.Forms.Form'
	$tabcontrol1 = New-Object 'System.Windows.Forms.TabControl'
	$tabpage1 = New-Object 'System.Windows.Forms.TabPage'
	$buttonDiskDefragUtility = New-Object 'System.Windows.Forms.Button'
	$buttonFixWindows11PlayStor = New-Object 'System.Windows.Forms.Button'
	$buttonEnableGodMode = New-Object 'System.Windows.Forms.Button'
	$AddTakeOwnershipMenu = New-Object 'System.Windows.Forms.Button'
	$RemoveTakeOwnershipMenu = New-Object 'System.Windows.Forms.Button'
	$textbox90 = New-Object 'System.Windows.Forms.TextBox'
	$DisableWin10Explorer = New-Object 'System.Windows.Forms.Button'
	$EnableWin10Ribbon = New-Object 'System.Windows.Forms.Button'
	$buttonDisableWindows10Expl = New-Object 'System.Windows.Forms.Button'
	$buttonEnableWindows10Explo = New-Object 'System.Windows.Forms.Button'
	$textbox89 = New-Object 'System.Windows.Forms.TextBox'
	$DisableBackgroundApps = New-Object 'System.Windows.Forms.Button'
	$RemoveWindows10XBoot = New-Object 'System.Windows.Forms.Button'
	$CompactOS = New-Object 'System.Windows.Forms.Button'
	$Windows10XBootAnimat = New-Object 'System.Windows.Forms.Button'
	$EnableMSIMode = New-Object 'System.Windows.Forms.Button'
	$BypassTPM20 = New-Object 'System.Windows.Forms.Button'
	$AMDGpuTweaks = New-Object 'System.Windows.Forms.Button'
	$DefaultTaskbar = New-Object 'System.Windows.Forms.Button'
	$NVIDIAGpuTweaks = New-Object 'System.Windows.Forms.Button'
	$SmallTaskbar = New-Object 'System.Windows.Forms.Button'
	$NetworkTweaks = New-Object 'System.Windows.Forms.Button'
	$DefaultContextMenu = New-Object 'System.Windows.Forms.Button'
	$EnableNet35 = New-Object 'System.Windows.Forms.Button'
	$OldContextMenu = New-Object 'System.Windows.Forms.Button'
	$textbox12 = New-Object 'System.Windows.Forms.TextBox'
	$textbox75 = New-Object 'System.Windows.Forms.TextBox'
	$textbox19 = New-Object 'System.Windows.Forms.TextBox'
	$textbox18 = New-Object 'System.Windows.Forms.TextBox'
	$textbox17 = New-Object 'System.Windows.Forms.TextBox'
	$textbox16 = New-Object 'System.Windows.Forms.TextBox'
	$textbox14 = New-Object 'System.Windows.Forms.TextBox'
	$textbox13 = New-Object 'System.Windows.Forms.TextBox'
	$textbox10 = New-Object 'System.Windows.Forms.TextBox'
	$textbox9 = New-Object 'System.Windows.Forms.TextBox'
	$textbox8 = New-Object 'System.Windows.Forms.TextBox'
	$textbox7 = New-Object 'System.Windows.Forms.TextBox'
	$textbox6 = New-Object 'System.Windows.Forms.TextBox'
	$textbox5 = New-Object 'System.Windows.Forms.TextBox'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$textbox2 = New-Object 'System.Windows.Forms.TextBox'
	$textbox3 = New-Object 'System.Windows.Forms.TextBox'
	$textbox4 = New-Object 'System.Windows.Forms.TextBox'
	$EnableNFS = New-Object 'System.Windows.Forms.Button'
	$RemoveStartupProgram = New-Object 'System.Windows.Forms.Button'
	$WindowsSearchAndTask = New-Object 'System.Windows.Forms.Button'
	$LaptopNumlockFix = New-Object 'System.Windows.Forms.Button'
	$FixWhitelistedApps = New-Object 'System.Windows.Forms.Button'
	$YourPhoneAppFIx = New-Object 'System.Windows.Forms.Button'
	$RepairHardDrive = New-Object 'System.Windows.Forms.Button'
	$FixNetworkProblems = New-Object 'System.Windows.Forms.Button'
	$SystemFileChecker = New-Object 'System.Windows.Forms.Button'
	$RepairWindowsImage = New-Object 'System.Windows.Forms.Button'
	$ApplyTweaks = New-Object 'System.Windows.Forms.Button'
	$EnableClipboardHisto = New-Object 'System.Windows.Forms.Button'
	$DisableClipboardHist = New-Object 'System.Windows.Forms.Button'
	$DisableLocationTrack = New-Object 'System.Windows.Forms.Button'
	$DisableCortana = New-Object 'System.Windows.Forms.Button'
	$EnableLocationTRacki = New-Object 'System.Windows.Forms.Button'
	$DisableActionCenter = New-Object 'System.Windows.Forms.Button'
	$Hide = New-Object 'System.Windows.Forms.Button'
	$EnableCortanaSearch = New-Object 'System.Windows.Forms.Button'
	$Show = New-Object 'System.Windows.Forms.Button'
	$EnableBackgroundApps = New-Object 'System.Windows.Forms.Button'
	$LightMode = New-Object 'System.Windows.Forms.Button'
	$DisableHibernation = New-Object 'System.Windows.Forms.Button'
	$DarkMode = New-Object 'System.Windows.Forms.Button'
	$EnableHibernation = New-Object 'System.Windows.Forms.Button'
	$SetTimeToUTCDualBoot = New-Object 'System.Windows.Forms.Button'
	$CleanTempFilesAndLog = New-Object 'System.Windows.Forms.Button'
	$AppearanceVisualFX = New-Object 'System.Windows.Forms.Button'
	$EnableActionCenter = New-Object 'System.Windows.Forms.Button'
	$PerformanceVisualFX = New-Object 'System.Windows.Forms.Button'
	$DisableMemoryCompres = New-Object 'System.Windows.Forms.Button'
	$EnableMemoryCompress = New-Object 'System.Windows.Forms.Button'
	$tabpage6 = New-Object 'System.Windows.Forms.TabPage'
	$buttonUnistallEdge = New-Object 'System.Windows.Forms.Button'
	$buttonRevertRegistryChange = New-Object 'System.Windows.Forms.Button'
	$textbox88 = New-Object 'System.Windows.Forms.TextBox'
	$InstallOnedrive = New-Object 'System.Windows.Forms.Button'
	$textbox87 = New-Object 'System.Windows.Forms.TextBox'
	$EnableEdgePDF = New-Object 'System.Windows.Forms.Button'
	$textbox86 = New-Object 'System.Windows.Forms.TextBox'
	$buttonDebloatWithBlocklist = New-Object 'System.Windows.Forms.Button'
	$DebloatAll = New-Object 'System.Windows.Forms.Button'
	$ReinstallAllBloatwar = New-Object 'System.Windows.Forms.Button'
	$textbox84 = New-Object 'System.Windows.Forms.TextBox'
	$UnsintallOnedrive = New-Object 'System.Windows.Forms.Button'
	$DisableEdgePDF = New-Object 'System.Windows.Forms.Button'
	$UnpinTitilesFromStar = New-Object 'System.Windows.Forms.Button'
	$RemoveBloatwareRegKe = New-Object 'System.Windows.Forms.Button'
	$textbox85 = New-Object 'System.Windows.Forms.TextBox'
	$tabpage3 = New-Object 'System.Windows.Forms.TabPage'
	$buttonRestore = New-Object 'System.Windows.Forms.Button'
	$textbox114 = New-Object 'System.Windows.Forms.TextBox'
	$textbox113 = New-Object 'System.Windows.Forms.TextBox'
	$textbox112 = New-Object 'System.Windows.Forms.TextBox'
	$textbox111 = New-Object 'System.Windows.Forms.TextBox'
	$textbox110 = New-Object 'System.Windows.Forms.TextBox'
	$buttonCreateARestorePoint = New-Object 'System.Windows.Forms.Button'
	$textbox109 = New-Object 'System.Windows.Forms.TextBox'
	$textbox108 = New-Object 'System.Windows.Forms.TextBox'
	$textbox107 = New-Object 'System.Windows.Forms.TextBox'
	$textbox106 = New-Object 'System.Windows.Forms.TextBox'
	$textbox105 = New-Object 'System.Windows.Forms.TextBox'
	$textbox103 = New-Object 'System.Windows.Forms.TextBox'
	$textbox102 = New-Object 'System.Windows.Forms.TextBox'
	$textbox101 = New-Object 'System.Windows.Forms.TextBox'
	$textbox100 = New-Object 'System.Windows.Forms.TextBox'
	$textbox99 = New-Object 'System.Windows.Forms.TextBox'
	$textbox98 = New-Object 'System.Windows.Forms.TextBox'
	$textbox97 = New-Object 'System.Windows.Forms.TextBox'
	$textbox96 = New-Object 'System.Windows.Forms.TextBox'
	$textbox95 = New-Object 'System.Windows.Forms.TextBox'
	$textbox94 = New-Object 'System.Windows.Forms.TextBox'
	$textbox93 = New-Object 'System.Windows.Forms.TextBox'
	$textbox92 = New-Object 'System.Windows.Forms.TextBox'
	$buttonActivateMSOffice = New-Object 'System.Windows.Forms.Button'
	$buttonActivateWindows = New-Object 'System.Windows.Forms.Button'
	$textbox91 = New-Object 'System.Windows.Forms.TextBox'
	$WindowsUpdateReset = New-Object 'System.Windows.Forms.Button'
	$Low = New-Object 'System.Windows.Forms.Button'
	$textbox49 = New-Object 'System.Windows.Forms.TextBox'
	$EnableWindowsUpdates = New-Object 'System.Windows.Forms.Button'
	$DisableWindowsUpdate = New-Object 'System.Windows.Forms.Button'
	$textbox71 = New-Object 'System.Windows.Forms.TextBox'
	$textbox72 = New-Object 'System.Windows.Forms.TextBox'
	$textbox73 = New-Object 'System.Windows.Forms.TextBox'
	$DefaultSetting = New-Object 'System.Windows.Forms.Button'
	$SecurityUpdatesOnly = New-Object 'System.Windows.Forms.Button'
	$textbox74 = New-Object 'System.Windows.Forms.TextBox'
	$RemoveMalware = New-Object 'System.Windows.Forms.Button'
	$RemoveViruses = New-Object 'System.Windows.Forms.Button'
	$textbox62 = New-Object 'System.Windows.Forms.TextBox'
	$textbox63 = New-Object 'System.Windows.Forms.TextBox'
	$textbox64 = New-Object 'System.Windows.Forms.TextBox'
	$textbox65 = New-Object 'System.Windows.Forms.TextBox'
	$textbox66 = New-Object 'System.Windows.Forms.TextBox'
	$textbox67 = New-Object 'System.Windows.Forms.TextBox'
	$textbox68 = New-Object 'System.Windows.Forms.TextBox'
	$textbox69 = New-Object 'System.Windows.Forms.TextBox'
	$textbox70 = New-Object 'System.Windows.Forms.TextBox'
	$High = New-Object 'System.Windows.Forms.Button'
	$tabpage8 = New-Object 'System.Windows.Forms.TabPage'
	$buttonEpicGames = New-Object 'System.Windows.Forms.Button'
	$buttonSteam = New-Object 'System.Windows.Forms.Button'
	$textbox115 = New-Object 'System.Windows.Forms.TextBox'
	$buttonInstallGooglePlaySto = New-Object 'System.Windows.Forms.Button'
	$textbox104 = New-Object 'System.Windows.Forms.TextBox'
	$buttonGithub = New-Object 'System.Windows.Forms.Button'
	$textbox76 = New-Object 'System.Windows.Forms.TextBox'
	$textbox77 = New-Object 'System.Windows.Forms.TextBox'
	$textbox78 = New-Object 'System.Windows.Forms.TextBox'
	$textbox79 = New-Object 'System.Windows.Forms.TextBox'
	$textbox80 = New-Object 'System.Windows.Forms.TextBox'
	$textbox81 = New-Object 'System.Windows.Forms.TextBox'
	$textbox83 = New-Object 'System.Windows.Forms.TextBox'
	$textbox82 = New-Object 'System.Windows.Forms.TextBox'
	$GeforceExperience = New-Object 'System.Windows.Forms.Button'
	$IntelDriverSupportAs = New-Object 'System.Windows.Forms.Button'
	$GoogleChrome = New-Object 'System.Windows.Forms.Button'
	$FireFox = New-Object 'System.Windows.Forms.Button'
	$Ventoy = New-Object 'System.Windows.Forms.Button'
	$7zip = New-Object 'System.Windows.Forms.Button'
	$StartIsBack = New-Object 'System.Windows.Forms.Button'
	$VLC = New-Object 'System.Windows.Forms.Button'
	$Blender = New-Object 'System.Windows.Forms.Button'
	$PaintNET = New-Object 'System.Windows.Forms.Button'
	$OpenShell = New-Object 'System.Windows.Forms.Button'
	$DirectX = New-Object 'System.Windows.Forms.Button'
	$Cleanmgr = New-Object 'System.Windows.Forms.Button'
	$VisualC = New-Object 'System.Windows.Forms.Button'
	$LibreOffice = New-Object 'System.Windows.Forms.Button'
	$XNAFramework40 = New-Object 'System.Windows.Forms.Button'
	$GreenShot = New-Object 'System.Windows.Forms.Button'
	$OpenAl = New-Object 'System.Windows.Forms.Button'
	$balenaEtcher = New-Object 'System.Windows.Forms.Button'
	$Audacity = New-Object 'System.Windows.Forms.Button'
	$Java = New-Object 'System.Windows.Forms.Button'
	$Discord = New-Object 'System.Windows.Forms.Button'
	$PhysX = New-Object 'System.Windows.Forms.Button'
	$OBSStudio = New-Object 'System.Windows.Forms.Button'
	$Everything = New-Object 'System.Windows.Forms.Button'
	$AMDRyzenChipsetDrive = New-Object 'System.Windows.Forms.Button'
	$SumatraPDF = New-Object 'System.Windows.Forms.Button'
	$Rufus = New-Object 'System.Windows.Forms.Button'
	$FoxitReader = New-Object 'System.Windows.Forms.Button'
	$WinRAR = New-Object 'System.Windows.Forms.Button'
	$IDM = New-Object 'System.Windows.Forms.Button'
	$MediaPlayerClassic = New-Object 'System.Windows.Forms.Button'
	$GPUZ = New-Object 'System.Windows.Forms.Button'
	$PowerToys = New-Object 'System.Windows.Forms.Button'
	$CPUZ = New-Object 'System.Windows.Forms.Button'
	$WindowsTerminal = New-Object 'System.Windows.Forms.Button'
	$Vivaldi = New-Object 'System.Windows.Forms.Button'
	$Brave = New-Object 'System.Windows.Forms.Button'
	$Edge = New-Object 'System.Windows.Forms.Button'
	$BleachBit = New-Object 'System.Windows.Forms.Button'
	$Notepad = New-Object 'System.Windows.Forms.Button'
	$MicrosoftSilverLight = New-Object 'System.Windows.Forms.Button'
	$UTorrent = New-Object 'System.Windows.Forms.Button'
	$ImageGlass = New-Object 'System.Windows.Forms.Button'
	$CCleaner = New-Object 'System.Windows.Forms.Button'
	$VSCode = New-Object 'System.Windows.Forms.Button'
	$Gimp = New-Object 'System.Windows.Forms.Button'
	$VSCodium = New-Object 'System.Windows.Forms.Button'
	$ShareX = New-Object 'System.Windows.Forms.Button'
	$AdobeReaderDC = New-Object 'System.Windows.Forms.Button'
	$Opera = New-Object 'System.Windows.Forms.Button'
	$IrfanView = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	$ErrorActionPreference = 'silentlycontinue'
	If (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]'Administrator'))
	{
		Start-Process powershell.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
		Exit
	}
	$formWindowsOptimizationT_Load = {
		Write-Host "
  __        __ _         _____            _    ___              
  \ \      / /(_) _ __  |_   _|___   ___ | |  |   \   ___  __  __ 
   \ \ /\ / / | ||  _ \   | | / _ \ / _ \| |  |  _/  / _ \ \ \/ /
    \ V  V /  | || | | |  | || (_) | (_) | |_ |   \ | (_) | >  <  
     \_/\_/   |_||_| |_|  |_| \___/ \___/|___||___/  \___/ /_/\_\
_______________________________________________________________________                                                
"
		Write-Host "Initializing..." -ForegroundColor Green
		Write-Host "Instaling Chocolatey"
		Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
		choco install chocolatey-core.extension
		Write-Host "Finished Instaling Chocolatey"
		Write-Host "Checking winget..."
		
		# Check if winget is installed
		if (Test-Path ~\AppData\Local\Microsoft\WindowsApps\winget.exe)
		{
			Write-Host "Winget Already Installed."
		}
		else
		{
			# Installing winget from the Microsoft Store
			Write-Host "Installing winget..."
			Start-Process "ms-appinstaller:?source=https://aka.ms/getwinget"
			$nid = (Get-Process AppInstaller).Id
			Wait-Process -Id $nid
			Write-Host "Winget Installed"
		}
	    Write-Host "Toolbox Is Ready For Use!"
	}
	
	$ApplyTweaks_Click = {
		Write-Host "Disabling automatic installation of network devices..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\NcdAutoSetup\Private"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\NcdAutoSetup\Private" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\NcdAutoSetup\Private" -Name "AutoSetup" -Type DWord -Value 0
		Write-Host "Disabling Controlled Folder Access..."
		Set-MpPreference -EnableControlledFolderAccess Disabled
		Write-Host "Disabling Application suggestions..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "ContentDeliveryAllowed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "OemPreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEverEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SilentInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338387Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338388Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353698Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SystemPaneSuggestionsEnabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type DWord -Value 1
		Write-Host "Disabling Activity History..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableActivityFeed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "PublishUserActivities" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "UploadUserActivities" -Type DWord -Value 0
		Write-Host "Disabling Feedback..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Name "NumberOfSIUFInPeriod" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClient" -ErrorAction SilentlyContinue 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload" -ErrorAction SilentlyContinue 
		Write-Host "Disabling Error reporting..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Windows Error Reporting\QueueReporting" 
		Write-Host "Stopping and disabling Diagnostics Tracking Service..."
		Stop-Service "DiagTrack" -WarningAction SilentlyContinue
		Set-Service "DiagTrack" -StartupType Disabled
		Write-Host "Stopping and disabling WAP Push Service..."
		Stop-Service "dmwappushservice" -WarningAction SilentlyContinue
		Set-Service "dmwappushservice" -StartupType Disabled
		Write-Host "Disabling implicit administrative shares..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "AutoShareWks" -Type DWord -Value 0
		Write-Host "Disabling sharing mapped drives between users..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "EnableLinkedConnections" -ErrorAction SilentlyContinue
		Write-Host "Disabling SMB 1.0 protocol..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		Write-Host "Disabling SMB Server..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		Set-SmbServerConfiguration -EnableSMB2Protocol $false -Force
		Write-Host "Disabling LLMNR..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" -Name "EnableMulticast" -Type DWord -Value 0
	Write-Host "Disabling Aero Shake..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "DisallowShaking" -Type DWord -Value 1
		Write-Host "Done!"
		Write-Host "Disabling accessibility keys prompts..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\StickyKeys" -Name "Flags" -Type String -Value "506"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\ToggleKeys" -Name "Flags" -Type String -Value "58"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\Keyboard Response" -Name "Flags" -Type String -Value "122"
		Write-Host "Done!"
	    Write-Host "Disable Game DVR and Game Bar"
	    Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" "AllowgameDVR" 0
		Write-Host "Done!"
		Write-Host "Hiding People icon..."
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People" -Name "PeopleBand" -Type DWord -Value 0
		Write-Host "Disable Xbox Game Tips ..."
		
		if ((Get-AppxPackage -Name Microsoft.XboxGamingOverlay) -or (Get-AppxPackage -Name Microsoft.GamingApp))
		{
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\GameBar -Name ShowStartupPanel -PropertyType DWord -Value 0 -Force
		}
		Write-Host "Disable Teams Autostart ..."
		if (Get-AppxPackage -Name MicrosoftTeams)
		{
			if (-not (Test-Path -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask"))
			{
				New-Item -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask" -Force
			}
			New-ItemProperty -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask" -Name State -PropertyType DWord -Value 1 -Force
		}
		Write-Host "Hide OneDrive File Explorer Ad ..."
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name ShowSyncProviderNotifications -PropertyType DWord -Value 0 -Force
		Write-Host "Disable Snap Assist ..."
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name SnapAssist -PropertyType DWord -Value 0 -Force
		Write-Host "Disable Snap Assist Flyout ..."
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name EnableSnapAssistFlyout -PropertyType DWord -Value 0 -Force
	    Write-Host "Disabling Telemetry..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\ProgramDataUpdater" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Autochk\Proxy" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\Consolidator" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\UsbCeip" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\DiskDiagnostic\Microsoft-Windows-DiskDiagnosticDataCollector" 
		Write-Host "Disabling SmartScreen Filter..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableSmartScreen" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter" -Name "EnabledV9" -Type DWord -Value 0
		Write-Host "Disabling Bing Search in Start Menu..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "BingSearchEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "CortanaConsent" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "DisableWebSearch" -Type DWord -Value 1
		Write-Host "Disabling Application suggestions..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "ContentDeliveryAllowed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "OemPreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEverEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SilentInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338387Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338388Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353698Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SystemPaneSuggestionsEnabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type DWord -Value 1
		Write-Host "Disabling Activity History..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableActivityFeed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "PublishUserActivities" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "UploadUserActivities" -Type DWord -Value 0
		Write-Host "Disabling automatic Maps updates..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\Maps" -Name "AutoUpdateEnabled" -Type DWord -Value 0
		Write-Host "Disabling Feedback..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Name "NumberOfSIUFInPeriod" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClient" -ErrorAction SilentlyContinue 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload" -ErrorAction SilentlyContinue 
		Write-Host "Disabling Tailored Experiences..."
		If (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableTailoredExperiencesWithDiagnosticData" -Type DWord -Value 1
		Write-Host "Disabling Advertising ID..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" -Name "DisabledByGroupPolicy" -Type DWord -Value 1
		Write-Host "Disabling Cortana..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -Type DWord -Value 0
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type DWord -Value 1
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Name "HarvestContacts" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -Type DWord -Value 0
	Write-Host "Disable Cortana Autostart ..."
		if (Get-AppxPackage -Name Microsoft.549981C3F5F10)
		{
			if (-not (Test-Path -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId"))
			{
				New-Item -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Force
			}
			New-ItemProperty -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Name State -PropertyType DWord -Value 1 -Force
		}
		Write-Host "$($EnableStatus[0])Show me the windows welcome experience after updates..."
		Write-Host "Removing and Refreshing Local Policies..."
		Remove-Item -Recurse -Force "$env:WinDir\System32\GroupPolicy" 
		Remove-Item -Recurse -Force "$env:WinDir\System32\GroupPolicyUsers" 
		secedit /configure /cfg "$env:WinDir\inf\defltbase.inf" /db defltbase.sdb /verbose 
		gpupdate /force
		Write-Host "Disabling Telemetry and Services"
		###This is a template which will block and disable telemetry features of the following apps: ###
		###- Block Google Chrome Software Reporter Tool
		# The Software Reporter Tool (also known as Chrome Cleanup Tool and Software Removal Tool, the executable file is software_reporter_tool.exe), is a tool that Google distributes with the Google Chrome web browser. 
		# It is a part of Google Chrome's Clean up Computer feature which scans your computer for harmful software. If this tool finds any harmful app or extension which can cause problems, it removes them from your computer. 
		# Anything that interferes with a user's browsing experience may be removed by the tool.
		# Its disadvantages, high CPU load or privacy implications, may be reason enough to block it from running. This script will disable the software_reporter_tool.exe in a more cleaner way using Image File Execution Options Debugger value. 
		# Setting this value to an executable designed to kill processes disables it. Chrome won't re-enable it with almost each update. Next to this, it will also be disabled per default in Registry.
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name ChromeCleanupEnabled -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name ChromeCleanupReportingEnabled -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name MetricsReportingEnabled -Type String -Value 0 -Force
		# This will disable the software_reporter_tool.exe in a more cleaner way using Image File Execution Options Debugger value. 
		# Setting this value to an executable designed to kill processes disables it. Chrome won't re-enable it with almost each update. 
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\software_reporter_tool.exe"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\software_reporter_tool.exe" -Force 
			Write-Host "Google Chrome Software Reporter Tool has been successfully blocked."
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\software_reporter_tool.exe" -Name "Debugger" -Type String -Value %windir%\System32\taskkill.exe -Force
		
		###- Disable Mozilla Firefox telemetry
		# Firefox 75 comes with a new telemetry agent that sends information about your operating system and your default browser to Firefox every day. 
		# The information collected is sent as a background telemetry ping every 24 hours to Mozilla.
		# Mozilla has introduced a Windows group policy that prevents the default-browser-agent.exe executable from sending your default browser info. 
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Mozilla\Firefox" -Name DisableTelemetry -Type DWord -Value 1 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Mozilla\Firefox" -Name DisableDefaultBrowserAgent -Type DWord -Value 1 -Force
		
		###- Disable CCleaner Monitoring
		# Since Avast acquired Piriform, the popular system cleaning software CCleaner has become bloated with malware, bundled PUPs(potentially unwanted programs), and an alarming amount of pop-up ads.
		# If you're highly dependent on CCleaner you can disable with this script the CCleaner Active Monitoring ("Active Monitoring" feature has been renamed with v5.46 to "Smart Cleaning"), 
		# automatic Update check and download function, trial offer notifications, the new integrated Software Updater and the privacy option to "Help Improve CCleaner by sending anonymous usage data".
		Stop-Process -name CCleaner*
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name Monitoring -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name HelpImproveCCleaner -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name SystemMonitoring -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name UpdateAuto -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name UpdateCheck -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name CheckTrialOffer -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name (Cfg)GetIpmForTrial -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name (Cfg)SoftwareUpdater -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name (Cfg)SoftwareUpdaterIpm -Type String -Value 0 -Force
		Get-ScheduledTask -TaskName "CCleaner Update" | Disable-ScheduledTask
		
		###- Disable Dropbox Update service
		# This will disable Dropbox auto update service
		Get-ScheduledTask -TaskName "DropboxUpdateTaskMachineCore" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "DropboxUpdateTaskMachineUA" | Disable-ScheduledTask
		
		###- Disable Google Update service
		# This will disable Google update service
		Get-ScheduledTask -TaskName "GoogleUpdateTaskMachineCore" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "GoogleUpdateTaskMachineUA" | Disable-ScheduledTask
		
		###- Disable Media Player telemetry
		# This will disable Media Player telemetry
		New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\MediaPlayer\Preferences" -Name UsageTracking -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name PreventCDDVDMetadataRetrieval -Type DWord -Value 1 -Force
		New-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name PreventMusicFileMetadataRetrieval -Type DWord -Value 1 -Force
		New-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name PreventRadioPresetsRetrieval -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WMDRM" -Name DisableOnline -Type DWord -Value 1 -Force
		Set-Service WMPNetworkSvc -StartupType Disabled
		
		###- Disable Microsoft Office telemetry
		# This will disable Microsoft Office telemetry (supports Microsoft Office 2013 and 2016)
		Get-ScheduledTask -TaskName "OfficeTelemetryAgentFallBack2016" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "OfficeTelemetryAgentLogOn2016" | Disable-ScheduledTask
		New-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\osm" -Name Enablelogging -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\osm" -Name EnableUpload -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\osm" -Name Enablelogging -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\osm" -Name EnableUpload -Type DWord -Value 0 -Force
		###
		###Requires -RunSilent
		wmic service where name='SysMain'  call ChangeStartmode Disabled
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		# Remove "News and Interest" from taskbar
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Feeds" -Name "ShellFeedsTaskbarViewMode" -Type DWord -Value 2
		# Remove "Meet Now" button from taskbar
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force 
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		
		Write-Host "Removing AutoLogger file and restricting directory..."
		$autoLoggerDir = "$env:PROGRAMDATA\Microsoft\Diagnosis\ETLLogs\AutoLogger"
		If (Test-Path "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl")
		{
			Remove-Item "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl"
		}
		icacls $autoLoggerDir /deny SYSTEM:`(OI`)`(CI`)F 
		Write-Host "Hide Settings Suggested Content ..."
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name SubscribedContent-338393Enabled -PropertyType DWord -Value 0 -Force
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name SubscribedContent-353694Enabled -PropertyType DWord -Value 0 -Force
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name SubscribedContent-353696Enabled -PropertyType DWord -Value 0 -Force
		Write-Host "Disable Whats New In Windows ..."
		if (-not (Test-Path -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\UserProfileEngagement))
		{
			New-Item -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\UserProfileEngagement -Force
		}
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\UserProfileEngagement -Name ScoobeSystemSettingEnabled -PropertyType DWord -Value 0 -Force
		Write-Host "setting smb optimizations"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "DisableBandwidthThrottling" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "FileInfoCacheEntriesMax" -Type "DWORD" -Value 1024 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "DirectoryCacheEntriesMax" -Type "DWORD" -Value 1024 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "FileNotFoundCacheEntriesMax" -Type "DWORD" -Value 2048 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type "DWORD" -Value 20 -Force
		Set-SmbServerConfiguration -EnableMultiChannel $true -Force
		Set-SmbServerConfiguration -MaxChannelPerSession 16 -Force
		Set-SmbServerConfiguration -ServerHidden $False -AnnounceServer $False -Force
		Set-SmbServerConfiguration -EnableLeasing $false -Force
		Set-SmbClientConfiguration -EnableLargeMtu $true -Force
		Set-SmbClientConfiguration -EnableMultiChannel $true -Force
	    Write-Host "Disabling Error reporting..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Windows Error Reporting\QueueReporting" 
		Write-Host "Applying SVCHost Tweaks ..."
		$ram = (Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum / 1kb
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value $ram -Force
		Write-Host "Optimizing Services..."
		$servicesDisable = @(
			"AJRouter",
			"ALG",
			"AppMgmt",
			"CscService", # Offline Files
			"diagnosticshub.standardcollector.service",
			"dmwappushservice",
			"HomeGroupListener",
			"HomeGroupProvider",
			"TrkWks",
			"WSearch",
			"IKEEXT",
			"PcaSvc", #Compatibility Mode
			#"wcncsvc", # Laptops and other wireless computers need this service for connecting to wireless networks. Desktops that don't have a wireless card do not need this service.
			"WerSvc",
			"WMPNetworkSvc", #Delete this line if you use OBS-NDI
			"BthHFSrv",
			"PeerDistSvc",
			"MapsBroker", #Delete this line if you use in start menu widgets who use bing maps or whatever
			"Ifsvc",
			"HvHost",
			"Dnscache",
			"SSDPSRV",
			"upnphost",
			"pla",
			"SharedAccess",
			"SysMain",
			"TapiSrv",
			"WebClient",
			"tzautoupdate",
			"RemoteRegistry",
			"RemoteAccess",
			"WbioSrvc",
			"lfsvc",
			"NetTcpPortSharing",
			"CDPSvc",
			"TabletInputService", # Delete this line if you are using laptop touch screens and tablets
			"WdiServiceHost",
			"PhoneSvc",
			"SmsRouter",
			"DPS",
			"iphlpsvc", #Delete if you are using IPv6 translation
			"stisvc",
			"DusmSvc",
			"IpxlatCfgSvc",
			"wlpasvc",
			"MSiSCSI",
			"irmon", #File transfer via infrared devices.
			"NaturalAuthentication",
			"Netlogon", #Delete this line if you are using  a domain controller environment.
			"NcdAutoSetup",
			"SEMgrSvc", #Delete this line if you are using NFC but Near Field Communication is a mobile phone technology. Not needed on desktops and tablets.
			"SessionEnv", # Windows RDP
			"TermService", # Windows RDP
			"UmRdpService", # Windows RDP
			"RpcLocator",
			"RetailDemo",
			"SensorDataService",
			"SensrSvc",
			"SensorService",
			"shpamsvc",
			"SNMPTRAP",
			"StorSvc",
			"FrameServer", #Delete if you are using webcam, could be needed to capture webcam frames. at the moment no problems for streaming
			"wisvc", #Delete this line if you want beta testing new versions of Windows via the Insider program.
			"icssvc", #Delete this line if you are using Mobile Network Connection (3G, 4G, LTE, Etc). Keep this line on devices without those options.
			"WinRM",
			"workfolderssvc",
			"EntAppSvc",
			"DiagTrack", #Feedback and Diagnostics
			"NfsClnt",
			"WFDSConSvc",
			"WwanSvc",
			"fhsvc", #delete this line if you are using Windows Backup, Used by Windows Backup.
			"SDRSVC",
			"SecurityHealthService", # Windows Defender Security Center Service
			"Sense", # Windows Defender Advanced Threat Protection Service
			"WdNisSvc", # Windows Defender Antivirus Network Inspection Service
	        "WinDefend", # Windows Defender Antivirus Service
			"wscsvc", # Security Center
			"WdiSystemHost",
			"diagsvc",
			"wlidsvc", #Delete if using MS account to log in to computer.
			"BDESVC", #Delete line if you are using storage encryption or if not uncomment it
			"BthAvctpSvc", #Delete line if you are using Bluetooth Audio Device or Wireless Headphones or if not uncomment it
			#"RmSvc", #Delete line if you are using wifi card and bluetooth or if not uncomment it
			"bthserv", #Delete line if you are using bluetooth devices or if not uncomment it
			#"WlanSvc", #Delete line if you are using wifi card or if not uncomment it
			"lmhosts", #Delete line if you are using shared files in your network (NAS and others ...) or if not uncomment it
			"Browser" #Delete line if you are using Network discovery of systems on local network or if not uncomment it
			"WpcMonSvc", #Delete line if you are using parental controls or if not uncomment it
			"seclogon", #Need validation | some disable it others not
			"wuauserv", #WINDOWS UPDATE I personally recommend not to disable this service
			"XboxGipSvc", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"xbgm", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"XblAuthManager", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"XblGameSave", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"XboxNetApiSvc", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"vmickvpexchange", #Delete this line if you use hyper-v or if not uncomment it
			"vmicguestinterface", #Delete this line if you use hyper-v or if not uncomment it
			"vmicshutdown", #Delete this line if you use hyper-v or if not uncomment it
			"vmicheartbeat", #Delete this line if you use hyper-v or if not uncomment it
			"vmcompute", #Delete this line if you use hyper-v or if not uncomment it
			"vmicvmsession", #Delete this line if you use hyper-v or if not uncomment it
			"vmicrdv", #Delete this line if you use hyper-v or if not uncomment it
			"vmictimesync", #Delete this line if you use hyper-v or if not uncomment it
			"vmms", #Delete this line if you use hyper-v or if not uncomment it
			"vmicvss", #Delete this line if you use hyper-v or if not uncomment it
			"CertPropSvc", #Delete this line if you use Smart Card login or if not uncomment it
			"SCardSvr", #Delete this line if you use Smart Card login or if not uncomment it
			"ScDeviceEnum", #Delete this line if you use Smart Card login or if not uncomment it
			"SCPolicySvc", #Delete this line if you use Smart Card login or if not uncomment it
			"Spooler" # Need validation | some disable it others not | print spooler
			"Fax",
			"MixedRealityOpenXRSvc",
			"W32Time",
			"spectrum" # New Virtual Reality Service
			"FontCache3.0.0.0",
			"FontCache",
			"Wecsvc",
			"TokenBroker",
			"UevAgentService",
			"Themes",
			"LanmanServer",
			"NcbService",
			"AppVClient",
			"InstallService",
			"ssh-agent"
		)
		foreach ($service in $servicesDisable)
		{
			Write-Host "Stoping service ${service}"
			Stop-Service -Name $service -ErrorAction 'silentlycontinue'
			Write-Host "Change the type of startup to Disabled for the service ${service}"
			Set-Service -Name $service -StartupType Disabled -ErrorAction 'silentlycontinue'
			Write-Host "Change the value of the key ${service} in the registry"
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\${service}" -Name "Start" -Force -Value 4 -ErrorAction 'silentlycontinue'
		}
		
		$servicesDemand = @(
			"BITS",
			"IKEEXT"
		)
		
		foreach ($service in $servicesDemand)
		{
			Write-Host "Stoping service ${service}"
			Stop-Service -Name $service -ErrorAction 'silentlycontinue'
			Write-Host "Change the type of startup to Manual for the service ${service}"
			Set-Service -Name $service -StartupType Manual -ErrorAction 'silentlycontinue'
			Write-Host "Change the value of the key ${service} in the registry"
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\${service}" -Name "Start" -Force -Value 3 -ErrorAction 'silentlycontinue'
		}
		wmic service where name='wisvc'  call ChangeStartmode Disabled
	
		wmic service where name='icssvc'  call ChangeStartmode Disabled
	
		wmic service where name='Fax'  call ChangeStartmode Disabled
		
		wmic service where name='SessionEnv'  call ChangeStartmode Disabled
	
		wmic service where name='TermService'  call ChangeStartmode Disabled
	
		wmic service where name='bthserv'  call ChangeStartmode Disabled
	
		wmic service where name='TabletInputService'  call ChangeStartmode Disabled
	
		wmic service where name='DiagTrack'  call ChangeStartmode Disabled
		
		wmic service where name='DPS'  call ChangeStartmode Disabled
	
		wmic service where name='DoSvc'  call ChangeStartmode Disabled
	
		wmic service where name='WpnService'  call ChangeStartmode Disabled
	
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name BingSearchEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name CortanaConsent -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Search" -Name BingSearchEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Search" -Name CortanaConsent -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name AllowCortana -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\" -Name "Search" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Search" -Name BingSearchEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\FirewallRules" -Name "{2765E0F4-2918-4A46-B9C9-43CDD8FCBA2B}" -Type "String" -Value "BlockCortana|Action=Block|Active=TRUE|Dir=Out|App=C:\windows\systemapps\microsoft.windows.cortana_cw5n1h2txyewy\searchui.exe|Name=Search and Cortana application|AppPkgId=S-1-15-2-1861897761-1695161497-2927542615-642690995-327840285-2659745135-2630312742|" -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\" -Name "AU" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name NoAutoUpdate -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name AUOptions -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name ScheduledInstallDay -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name ScheduledInstallTime -Type "DWORD" -Value 3 -Force
		New-Item -Path "HKLM:\Software\Microsoft\PolicyManager\current\device\" -Name "Update" -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "ContentDeliveryAllowed" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "OemPreInstalledAppsEnabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEnabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEverEnabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SilentInstalledAppsEnabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338387Enabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338388Enabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353698Enabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SystemPaneSuggestionsEnabled" -Type "DWORD" -Value 0 -Force
		If (!(Test-Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent" -Force 
		}
		New-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type "DWORD" -Value 1 -Force
		Write-Host "Disabling NVDIA Telemetry..."
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\Global\FTS" -Name EnableRID44231 -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\Global\FTS" -Name EnableRID64640 -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\Global\FTS" -Name EnableRID66610 -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\NVIDIA Corporation\NvControlPanel2\Client" -Force
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\NvControlPanel2\Client" -Name OptInOrOutPreference -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\services\NvTelemetryContainer" -Name Start -Type "DWORD" -Value 4 -Force
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\Global\Startup\SendTelemetryData" -Name 0 -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\nvlddmkm\Global\Startup" -Name "SendTelemetryData" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\services\NvTelemetryContainer" -Name "Start" -Type "DWORD" -Value 4 -Force
		Stop-Service NvTelemetryContainer
		Set-Service NvTelemetryContainer -StartupType Disabled
		#Delete NVIDIA residual telemetry files
		Remove-Item -Recurse $env:systemdrive\System32\DriverStore\FileRepository\NvTelemetry*.dll
		Remove-Item -Recurse "$env:ProgramFiles\NVIDIA Corporation\NvTelemetry" 
		Write-Host "Disabling Gamebar..."
		If (!(Test-Path "HKLM:\Software\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\GameDVR" -Force 
		}
		New-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\current\device\Update" -Name ExcludeWUDriversInQualityUpdate -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\default\Update" -Name ExcludeWUDriversInQualityUpdate -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKLM:\Software\Microsoft\PolicyManager\default\Update\" -Name "ExcludeWUDriversInQualityUpdates" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\default\Update\ExcludeWUDriversInQualityUpdates" -Name Value -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\WindowsUpdate\UX\Settings" -Name ExcludeWUDriversInQualityUpdate -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate" -Name ExcludeWUDriversInQualityUpdate -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\WMDRM" -Name DisableOnline -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Edge" -Name BlockThirdPartyCookies -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Edge" -Name AutofillCreditCardEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Edge" -Name SyncDisabled -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\MicrosoftEdge\Main" -Name AllowPrelaunch -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\MicrosoftEdge\" -Name "TabPreloader" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\MicrosoftEdge\TabPreloader" -Name AllowTabPreloading -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\" -Name "MicrosoftEdge.exe" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\MicrosoftEdge.exe" -Name Debugger -Type "String" -Value "%windir%\System32\taskkill.exe" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Edge" -Name BackgroundModeEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft" -Name DoNotUpdateToEdgeWithChromium -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\GameDVR" -Name AllowgameDVR -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name GameDVR_Enabled -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\System\" -Name "GameConfigStore" -Force
		Set-ItemProperty -Path "HKLM:\System\GameConfigStore" -Name GameDVR_Enabled -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\CurrentControlSet\" -Name "Control" -Force
		Set-ItemProperty -Path "HKLM:\Software\CurrentControlSet\Control" -Name SvcHostSplitThresholdInKB -Type "DWORD" -Value 04000000 -Force
		New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\" -Name "GameDVR" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\GameDVR" -Name AppCaptureEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\GameDVR" -Name HistoricalCaptureEnabled -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\" -Name "GameDVR" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\GameDVR" -Name AppCaptureEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLm:\Software\Microsoft\Windows\CurrentVersion\GameDVR" -Name HistoricalCaptureEnabled -Type "DWORD" -Value 0 -Force
		Write-Host "Disabling 3rd Party Telemetry..."
	
		Write-HOst "Disabling Logitech Gaming service...."
		Stop-Service "LogiRegistryService"
		Set-Service "LogiRegistryService" -StartupType Disabled
		Write-Host "Disabling Razer Game Scanner Service..."
		Stop-Service "Razer Game Scanner Service"
		Set-Service  "Razer Game Scanner Service" -StartupType Disabled
		Write-Host "Disabling Visual Studio Code Telemetry..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\VSCommon\14.0\SQM" -Name "OptIn" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\VSCommon\15.0\SQM" -Name "OptIn" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\VSCommon\16.0\SQM" -Name "OptIn" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\14.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\15.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\16.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\14.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\15.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\16.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\VisualStudio\Telemetry" -Name TurnOffSwitch -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\VisualStudio\Feedback" -Name "DisableFeedbackDialog" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\VisualStudio\Feedback" -Name "DisableEmailInput" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\VisualStudio\Feedback" -Name "DisableScreenshotCapture" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\VisualStudio\Telemetry" -Name "TurnOffSwitch" -Type "DWORD" -Value 1 -Force
		Stop-Service "VSStandardCollectorService150"
		Set-Service "VSStandardCollectorService150" -StartupType Disabled
		
		Write-Host "Disabling Google Chrome Telemetry..."
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name "ChromeCleanupEnabled" -Type "String" -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name "ChromeCleanupReportingEnabled" -Type "String" -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name "MetricsReportingEnabled" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "DisallowRun" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\DisallowRun" -Name "1" -Type "String" -Value "software_reporter_tool.exe" /f
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\software_reporter_tool.exe" -Name Debugger -Type "String" -Value "%windir%\System32\taskkill.exe" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Google\Chrome" -Name "ChromeCleanupEnabled" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Google\Chrome" -Name "ChromeCleanupReportingEnabled" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Google\Chrome" -Name "MetricsReportingEnabled" -Type "String" -Value 0 -Force
		#Disable Windows Password Reveal Option
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CredUI" -Name DisablePasswordReveal -Type "DWORD" -Value 1 -Force
		#Disable storing sensitive data in Acrobat Reader DC
		Set-ItemProperty -Path "HKCU:\Software\Adobe\Adobe ARM\1.0\ARM" -Name "iCheck" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" -Name "cSharePoint" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bToggleAdobeDocumentServices" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bToggleAdobeSign" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bTogglePrefSync" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bToggleWebConnectors" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bAdobeSendPluginToggle" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bUpdater" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Adobe\Adobe ARM\1.0\ARM" -Name "iCheck" -Type "String" -Value 0 -Force
		
		#Disable Adobe Acrobat Update Service
		Set-Service "Adobe Acrobat Update Task" -StartupType Disabled
		Set-Service "Adobe Flash Player Updater" -StartupType Disabled
		Set-Service "adobeflashplayerupdatesvc" -StartupType Disabled
		Set-Service "adobeupdateservice" -StartupType Disabled
		Set-Service "AdobeARMservice" -StartupType Disabled
		
		#Disable CCleaner Health Check
		Stop-Process -Force -Force -Name ccleaner.exe
		Stop-Process -Force -Force -Name ccleaner64.exe
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "HomeScreen" -Type "String" -Value 2 -Force
		
		#Disable CCleaner Monitoring && more
		Stop-Process -Force -Force -Name "IMAGENAME eq CCleaner*"
		schtasks /Change /TN "CCleaner Update" /Disable
		Get-ScheduledTask -TaskName "CCleaner Update" | Disable-ScheduledTask
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "Monitoring" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "HelpImproveCCleaner" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "SystemMonitoring" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "UpdateAuto" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "UpdateCheck" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "CheckTrialOffer" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)HealthCheck" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)QuickClean" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)QuickCleanIpm" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)GetIpmForTrial" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)SoftwareUpdater" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)SoftwareUpdaterIpm" -Type "DWORD" -Value 0 -Force
		
		#Disable Dropbox Update service
		Set-Service dbupdate -StartupType Disabled
		Set-Service dbupdatem -StartupType Disabled
		Get-ScheduledTask -TaskName "DropboxUpdateTaskMachineCore" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "DropboxUpdateTaskMachineUA" | Disable-ScheduledTask
		schtasks /Change /TN "DropboxUpdateTaskMachineCore" /Disable
		schtasks /Change /TN "DropboxUpdateTaskMachineUA" /Disable
		
		#Disable Google update service
		Get-ScheduledTask -TaskName "GoogleUpdateTaskMachineCore" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "GoogleUpdateTaskMachineUA" | Disable-ScheduledTask
		schtasks /Change /TN "GoogleUpdateTaskMachineCore" /Disable
		schtasks /Change /TN "GoogleUpdateTaskMachineUA" /Disable
		
		#Disable Media Player Telemetry
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\MediaPlayer\Preferences" -Name "UsageTracking" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventCDDVDMetadataRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventMusicFileMetadataRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventRadioPresetsRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\WMDRM" -Name "DisableOnline" -Type "DWORD" -Value 1 -Force
		Set-Service WMPNetworkSvc -StartupType Disabled
		
		#Disable Microsoft Office Telemetry
		Get-ScheduledTask -TaskName "OfficeTelemetryAgentFallBack2016" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "OfficeTelemetryAgentLogOn2016" | Disable-ScheduledTask
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Office\15.0\osm" -Name "Enablelogging" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Office\15.0\osm" -Name "EnableUpload" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Office\16.0\osm" -Name "Enablelogging" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Office\16.0\osm" -Name "EnableUpload" -Type "DWORD" -Value 0 -Force
		
		#Disable Mozilla Firefox Telemetry
		Set-ItemProperty -Path "HKLM:\Software\Policies\Mozilla\Firefox" -Name "DisableTelemetry" -Type "DWORD" -Value 1 -Force
		#Disable default browser agent reporting policy
		Set-ItemProperty -Path "HKLM:\Software\Policies\Mozilla\Firefox" -Name "DisableDefaultBrowserAgent" -Type "DWORD" -Value 1 -Force
		#Disable default browser agent reporting services
		schtasks.exe /change /disable /tn "\Mozilla\Firefox Default Browser Agent 308046B0AF4A39CB"
		schtasks.exe /change /disable /tn "\Mozilla\Firefox Default Browser Agent D2CEEC440E2074BD"
		
		Import-Module -DisableNameChecking $PSScriptRoot\..\lib\Mkdir -Force .psm1
		Import-Module -DisableNameChecking $PSScriptRoot\..\lib\take-own.psm1
		
		Write-Host "Defuse Windows search settings"
		Set-WindowsSearchSetting -EnableWebResultsSetting $false
		
		Write-Host "Set general privacy options"
		#"Let websites provide locally relevant content by accessing my language list"
		Set-ItemProperty "HKCU:\Control Panel\International\User Profile" "HttpAcceptLanguageOptOut" 1
		#Locaton aware printing (changes default based on connected network)
		Mkdir "HKCU:\Printers\Defaults" -Force
		New-Item -Path "HKCU:\Printers\" -Name "Defaults" -Force
		Set-ItemProperty "HKCU:\Printers\Defaults" "NetID" "{00000000-0000-0000-0000-000000000000}"
		#"Send Microsoft info about how I write to help us improve typing and writing in the future"
		Mkdir "HKCU:\Software\Microsoft\Input\TIPC" -Force
		Set-ItemProperty "HKCU:\Software\Microsoft\Input\TIPC" "Enabled" 0
		#"Let apps use my advertising ID for experiencess across apps"
		Mkdir -Force "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo" "Enabled" 0
		#"Turn on SmartScreen Filter to check web content"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\AppHost" "EnableWebContentEvaluation" 0
		
		Write-Host "Disable synchronisation of settings"
		#These only apply if you log on using Microsoft account
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync" "BackupPolicy" 0x3c
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync" "DeviceMetadataUploaded" 0
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync" "PriorLogons" 1
		$groups = @(
			"Accessibility"
			"AppSync"
			"BrowserSettings"
			"Credentials"
			"DesktopTheme"
			"Language"
			"PackageState"
			"Personalization"
			"StartLayout"
			"Windows"
		)
		foreach ($group in $groups)
		{
			Mkdir -Force "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync\Groups\$group"
			Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync\Groups\$group" "Enabled" 0
		}
		
		Write-Host "Set privacy policy accepted state to 0"
		#Prevents sending speech, inking and typing samples to MS (so Cortana
		#can learn to recognise you)
		Mkdir -Force "HKCU:\Software\Microsoft\Personalization\Settings"
		Set-ItemProperty "HKCU:\Software\Microsoft\Personalization\Settings" "AcceptedPrivacyPolicy" 0
		
		Write-Host "Do not scan contact informations"
		#Prevents sending contacts to MS (so Cortana can compare speech etc samples)
		Mkdir -Force "HKCU:\Software\Microsoft\InputPersonalization\TrainedDataStore"
		Set-ItemProperty "HKCU:\Software\Microsoft\InputPersonalization\TrainedDataStore" "HarvestContacts" 0
		
		Write-Host "Inking and typing settings"
		#Handwriting recognition personalization
		Mkdir -Force "HKCU:\Software\Microsoft\InputPersonalization"
		Set-ItemProperty "HKCU:\Software\Microsoft\InputPersonalization" "RestrictImplicitInkCollection" 1
		Set-ItemProperty "HKCU:\Software\Microsoft\InputPersonalization" "RestrictImplicitTextCollection" 1
		
		Write-Host "Disable background access of default apps"
		foreach ($key in (Get-ChildItem "HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications"))
		{
			Set-ItemProperty ("HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications\" + $key.PSChildName) "Disabled" 1
		}
		
		Write-Host "Denying device access"
		#Disable sharing information with unpaired devices
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\LooselyCoupled" "Type" "LooselyCoupled"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\LooselyCoupled" "Value" "Deny"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\LooselyCoupled" "InitialAppValue" "Unspecified"
		
		Write-Host "Disable location sensor"
		Mkdir -Force "HKCU:\Software\Microsoft\Windows NT\CurrentVersion\Sensor\Permissions\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows NT\CurrentVersion\Sensor\Permissions\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" "SensorPermissionState" 0
		
		Write-Host "Disable submission of Windows Defender findings (w/ elevated privileges)"
		Takeown-Registry("HKEY_LOCAL_MACHINE\Software\Microsoft\Windows Defender\Spynet")
		Set-ItemProperty "HKLM:\Software\Microsoft\Windows Defender\Spynet" "SpyNetReporting" 0 #write-protected even after takeown ?!
		Set-ItemProperty "HKLM:\Software\Microsoft\Windows Defender\Spynet" "SubmitSamplesConsent" 0
		
		Write-Host "Do not share wifi networks"
		$user = New-Object System.Security.Principal.NTAccount($env:UserName)
		$sid = $user.Translate([System.Security.Principal.SecurityIdentifier]).value
		Mkdir -Force ("HKLM:\Software\Microsoft\WcmSvc\wifinetworkmanager\features\" + $sid)
		Set-ItemProperty ("HKLM:\Software\Microsoft\WcmSvc\wifinetworkmanager\features\" + $sid) "FeatureStates" 0x33c
		Set-ItemProperty "HKLM:\Software\Microsoft\WcmSvc\wifinetworkmanager\features" "WiFiSenseCredShared" 0
		Set-ItemProperty "HKLM:\Software\Microsoft\WcmSvc\wifinetworkmanager\features" "WiFiSenseOpen" 0
		#Disable PowerShell 7+ Telemetry
		$POWERSHELL_Telemetry_OPTOUT = $true
		[System.Environment]::SetEnvironmentVariable('POWERSHELL_Telemetry_OPTOUT', 1, [System.EnvironmentVariableTarget]::Machine)
		Write-Host $POWERSHELL_Telemetry_OPTOUT
		
		#Disable NET Core CLI Telemetry
		$DOTNET_CLI_Telemetry_OPTOUT = $true
		[System.Environment]::SetEnvironmentVariable('DOTNET_CLI_Telemetry_OPTOUT', 1, [System.EnvironmentVariableTarget]::Machine)
		Write-Host $DOTNET_CLI_Telemetry_OPTOUT
		
		#Disable Office Telemetry
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\Common\ClientTelemetry" -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\ClientTelemetry" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\Common\ClientTelemetry" -Name "DisableTelemetry" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\ClientTelemetry" -Name "DisableTelemetry" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\Common\ClientTelemetry" -Name "VerboseLogging" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\ClientTelemetry" -Name "VerboseLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Outlook\Options\Mail" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Outlook\Options\Mail" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Outlook\Options\Mail" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Outlook\Options\Mail" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Outlook\Options\Calendar" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Outlook\Options\Calendar" -Name "EnableCalendarLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Outlook\Options\Calendar" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Outlook\Options\Calendar" -Name "EnableCalendarLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Word\Options" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Word\Options" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Word\Options" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Word\Options" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\OSM" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\OSM" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\OSM" -Name "EnableUpload" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\OSM" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\OSM" -Name "EnableLogging" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\OSM" -Name "EnableUpload" -Type "DWORD" -Value 0 -Force
		Write-Host "Optimizing Scheduled Tasks..."
		#Disable Office Telemetry Agent
		schtasks /Change /TN "\Microsoft\Windows\Maps\MapsUpdateTask" /disable
		schtasks /Change /TN "\Microsoft\Windows\Maps\MapsToastTask" /disable
		schtasks /Change /TN "\Microsoft\Windows\HelloFace\FODCleanupTask" /Disable
		schtasks /change /TN "Microsoft\Office\OfficeTelemetryAgentFallBack" /DISABLE
		schtasks /change /TN "Microsoft\Office\OfficeTelemetryAgentFallBack2016" /DISABLE
		schtasks /change /TN "Microsoft\Office\OfficeTelemetryAgentLogOn" /DISABLE
		schtasks /change /TN "Microsoft\Office\OfficeTelemetryAgentLogOn2016" /DISABLE
		#Disable Office Subscription Heartbeat
		schtasks /change /TN "Microsoft\Office\Office 15 Subscription Heartbeat" /DISABLE
		schtasks /change /TN "Microsoft\Office\Office 16 Subscription Heartbeat" /DISABLE
		#Disable Office feedback
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Common\Feedback" -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\Feedback" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Common\Feedback" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\Feedback" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		#Disable Office Customer Experience Improvement Program
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Common" -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Common" -Name "QMEnable" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common" -Name "QMEnable" -Type "DWORD" -Value 0 -Force
		
		#Breaks Windows Account Logon - While not recommended many people still use it
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\services\wlidsvc" -Name Start -Type "DWORD" -Value 4 -Force
		#Set-Service wlidsvc -StartupType Disabled
		
		#Disable Visual Studio Code Telemetry
		New-Item -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\14.0\SQM" -Force
		New-Item -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\15.0\SQM" -Force
		New-Item -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\16.0\SQM" -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\14.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\15.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\16.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Microsoft\VSCommon\14.0\SQM" -Force
		New-Item -Path "HKLM:\Software\Microsoft\VSCommon\15.0\SQM" -Force
		New-Item -Path "HKLM:\Software\Microsoft\VSCommon\16.0\SQM" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\14.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\15.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\16.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\Software\Microsoft\VisualStudio\Telemetry" -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\Feedback" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\VisualStudio\Telemetry" -Name TurnOffSwitch -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\Feedback" -Name DisableFeedbackDialog -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\Feedback" -Name DisableEmailInput -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\Feedback" -Name DisableScreenshotCapture -Type "DWORD" -Value 1 -Force
		Stop-Service "VSStandardCollectorService150"
		Set-Service  "VSStandardCollectorService150" -StartupType Disabled
		
		#Disable Unnecessary Windows Services
		Stop-Service "MessagingService"
		Set-Service "MessagingService" -StartupType Disabled
		Stop-Service "PimIndexMaintenanceSvc"
		Set-Service "PimIndexMaintenanceSvc" -StartupType Disabled
		Stop-Service "RetailDemo"
		Set-Service "RetailDemo" -StartupType Disabled
		Stop-Service "MapsBroker"
		Set-Service "MapsBroker" -StartupType Disabled
		Stop-Service "DoSvc"
		Set-Service "DoSvc" -StartupType Disabled
		Stop-Service "OneSyncSvc"
		Set-Service "OneSyncSvc" -StartupType Disabled
		Stop-Service "UnistoreSvc"
		Set-Service "UnistoreSvc" -StartupType Disabled
		Write-Host "$($EnableStatus[0]) 'Get fun facts and tips, etc. on lock screen'..."
		
		$ContentDeliveryManagerDisableOnZero = @(
			"SubscribedContent-310093Enabled"
			"SubscribedContent-314559Enabled"
			"SubscribedContent-314563Enabled"
			"SubscribedContent-338387Enabled"
			"SubscribedContent-338388Enabled"
			"SubscribedContent-338389Enabled"
			"SubscribedContent-338393Enabled"
			"SubscribedContent-353698Enabled"
			"RotatingLockScreenOverlayEnabled"
			"RotatingLockScreenEnabled"
			# Prevents Apps from re-installing
			"ContentDeliveryAllowed"
			"FeatureManagementEnabled"
			"OemPreInstalledAppsEnabled"
			"PreInstalledAppsEnabled"
			"PreInstalledAppsEverEnabled"
			"RemediationRequired"
			"SilentInstalledAppsEnabled"
			"SoftLandingEnabled"
			"SubscribedContentEnabled"
			"SystemPaneSuggestionsEnabled"
		)
		
		Write-Warning " From Path: [$PathToCUContentDeliveryManager]."
		ForEach ($Name in $ContentDeliveryManagerDisableOnZero)
		{
			Write-Host "$($EnableStatus[0]) $($Name): $Zero."
			Set-ItemProperty -Path "$PathToCUContentDeliveryManager" -Name "$Name" -Type DWord -Value $Zero
		}
		
		Write-Host " Disabling 'Suggested Content in the Settings App'..."
		If (Test-Path "$PathToCUContentDeliveryManager\Subscriptions")
		{
			Remove-Item -Path "$PathToCUContentDeliveryManager\Subscriptions" -Recurse
		}
		
		Write-Host "$($EnableStatus[0]) 'Show Suggestions' in Start..."
		If (Test-Path "$PathToCUContentDeliveryManager\SuggestedApps")
		{
			Remove-Item -Path "$PathToCUContentDeliveryManager\SuggestedApps" -Recurse
		}
		
		
		
		Write-Host "$($EnableStatus[0]) Let apps use my advertising ID..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo" -Name "Enabled" -Type DWord -Value $Zero
		If (!(Test-Path "$PathToLMPoliciesAdvertisingInfo"))
		{
			New-Item -Path "$PathToLMPoliciesAdvertisingInfo" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesAdvertisingInfo" -Name "DisabledByGroupPolicy" -Type DWord -Value $One
		
		Write-Host "$($EnableStatus[0]) 'Let websites provide locally relevant content by accessing my language list'..."
		Set-ItemProperty -Path "HKCU:\Control Panel\International\User Profile" -Name "HttpAcceptLanguageOptOut" -Type DWord -Value $One
		
		
		
		# [@] (0 = Decline, 1 = Accept)
		Write-Host "$($EnableStatus[0]) Online Speech Recognition..."
		If (!(Test-Path "$PathToCUOnlineSpeech"))
		{
			New-Item -Path "$PathToCUOnlineSpeech" -Force
		}
		Set-ItemProperty -Path "$PathToCUOnlineSpeech" -Name "HasAccepted" -Type DWord -Value $Zero
		
		
		
		Set-ItemProperty -Path "$PathToCUInputPersonalization\TrainedDataStore" -Name "HarvestContacts" -Type DWord -Value $Zero
		Set-ItemProperty -Path "$PathToCUInputPersonalization" -Name "RestrictImplicitInkCollection" -Type DWord -Value $One
		Set-ItemProperty -Path "$PathToCUInputPersonalization" -Name "RestrictImplicitTextCollection" -Type DWord -Value $One
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -Type DWord -Value $Zero
		
		
		# [@] (0 = Security (Enterprise only), 1 = Basic Telemetry, 2 = Enhanced Telemetry, 3 = Full Telemetry)
		Write-Host "$($EnableStatus[0]) telemetry..."
		Set-ItemProperty -Path "$PathToLMPoliciesTelemetry" -Name "AllowTelemetry" -Type DWord -Value $Zero
		Set-ItemProperty -Path "$PathToLMPoliciesTelemetry2" -Name "AllowTelemetry" -Type DWord -Value $Zero
		Set-ItemProperty -Path "$PathToLMPoliciesTelemetry" -Name "AllowDeviceNameInTelemetry" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) send inking and typing data to Microsoft..."
		If (!(Test-Path "$PathToCUInputTIPC"))
		{
			New-Item -Path "$PathToCUInputTIPC" -Force
		}
		Set-ItemProperty -Path "$PathToCUInputTIPC" -Name "Enabled" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) Tailored Experiences..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" -Name "TailoredExperiencesWithDiagnosticDataEnabled" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) View diagnostic data..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Diagnostics\DiagTrack\EventTranscriptKey" -Name "EnableEventTranscript" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) feedback frequency..."
		If (!(Test-Path "$PathToCUSiufRules"))
		{
			New-Item -Path "$PathToCUSiufRules" -Force
		}
		If ((Test-Path "$PathToCUSiufRules\PeriodInNanoSeconds"))
		{
			Remove-ItemProperty -Path "$PathToCUSiufRules" -Name "PeriodInNanoSeconds"
		}
		Set-ItemProperty -Path "$PathToCUSiufRules" -Name "NumberOfSIUFInPeriod" -Type DWord -Value $Zero
		
		
		
		Write-Host "$($EnableStatus[0]) Activity History..."
		$ActivityHistoryDisableOnZero = @(
			"EnableActivityFeed"
			"PublishUserActivities"
			"UploadUserActivities"
		)
		
		Write-Warning " From Path: [$PathToLMActivityHistory]."
		ForEach ($Name in $ActivityHistoryDisableOnZero)
		{
			Write-Host "$($EnableStatus[0]) $($Name): $Zero."
			Set-ItemProperty -Path "$PathToLMActivityHistory" -Name "$ActivityHistoryDisableOnZero" -Type DWord -Value $Zero
		}
		
		
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "EnableStatus" -Type DWord -Value $Zero
		
		
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userNotificationListener" -Name "Value" -Value "Deny"
		
		
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\appDiagnostics" -Name "Value" -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\appDiagnostics" -Name "Value" -Value "Deny"
		
		
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userAccountInformation" -Name "Value" -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userAccountInformation" -Name "Value" -Value "Deny"
		
		
		
		# Disable sharing information with unpaired devices
		Write-Host " Denying device access..."
		If (!(Test-Path "$PathToCUDeviceAccessGlobal\LooselyCoupled"))
		{
			New-Item -Path "$PathToCUDeviceAccessGlobal\LooselyCoupled" -Force
		}
		Set-ItemProperty -Path "$PathToCUDeviceAccessGlobal\LooselyCoupled" -Name "Value" -Value "Deny"
		ForEach ($key in (Get-ChildItem "$PathToCUDeviceAccessGlobal"))
		{
			If ($key.PSChildName -EQ "LooselyCoupled")
			{
				continue
			}
			Write-Host "$($EnableStatus[1]) Setting $($key.PSChildName) value to 'Deny'..."
			Set-ItemProperty -Path ("$PathToCUDeviceAccessGlobal\" + $key.PSChildName) -Name "Value" -Value "Deny"
		}
		
		
		
		Write-Host "$($EnableStatus[0]) Background Apps..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" -Name "GlobalUserDisabled" -Type DWord -Value $One
		Set-ItemProperty -Path "$PathToCUSearch" -Name "BackgroundAppGlobalToggle" -Type DWord -Value $Zero
		
		
		
		If (!(Test-Path "$PathToLMPoliciesWindowsUpdate"))
		{
			New-Item -Path "$PathToLMPoliciesWindowsUpdate" -Force
		}
		# [@] (2 = Notify before download, 3 = Automatically download and notify of installation)
		# [@] (4 = Automatically download and schedule installation, 5 = Automatic Updates is required and users can configure it)
		Write-Host " Disabling Automatic Download and Installation of Windows Updates..."
		Set-ItemProperty -Path "$PathToLMPoliciesWindowsUpdate" -Name "AUOptions" -Type DWord -Value 2
		
		# [@] (0 = Enable Automatic Updates, 1 = Disable Automatic Updates)
		Write-Host "$($EnableStatus[1]) Automatic Updates..."
		Set-ItemProperty -Path "$PathToLMPoliciesWindowsUpdate" -Name "NoAutoUpdate" -Type DWord -Value $Zero
		
		# [@] (0 = Every day, 1~7 = The days of the week from Sunday (1) to Saturday (7) (Only valid if AUOptions = 4))
		Write-Host "Setting Scheduled Day to Every day..."
		Set-ItemProperty -Path "$PathToLMPoliciesWindowsUpdate" -Name "ScheduledInstallDay" -Type DWord -Value 0
		
		# [@] (0-23 = The time of day in 24-hour format)
		Write-Host " Setting Scheduled time to 03h00m..."
		Set-ItemProperty -Path "$PathToLMPoliciesWindowsUpdate" -Name "ScheduledInstallTime" -Type DWord -Value 3
		
		Write-Host "Enabling automatic driver updates..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" -Name "SearchOrderConfig" -Type DWord -Value 1
		
		Write-Host "$($EnableStatus[1]) Change Windows Updates to 'Notify to schedule restart'..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "UxOption" -Type DWord -Value $One
		
		# [@] (0 = Off, 1 = Local Network only, 2 = Local Network private peering only)
		# [@] (3 = Local Network and Internet,  99 = Simply Download mode, 100 = Bypass mode)
		Write-Host "$($EnableStatus[1]) Restricting Windows Update P2P downloads for Local Network only..."
		If (!(Test-Path "$PathToLMDeliveryOptimizationCfg"))
		{
			New-Item -Path "$PathToLMDeliveryOptimizationCfg" -Force
		}
		Set-ItemProperty -Path "$PathToLMDeliveryOptimizationCfg" -Name "DODownloadMode" -Type DWord -Value $One
		
		
		
		Write-Host "Enabling Automatic Recommended Troubleshooting, then notify me..."
		if (!(Test-Path "$PathToLMWindowsTroubleshoot"))
		{
			New-Item -Path "$PathToLMWindowsTroubleshoot" -Force
		}
		Set-ItemProperty -Path "$PathToLMWindowsTroubleshoot" -Name "UserPreference" -Type DWord -Value 3
		
		Write-Host "$($EnableStatus[0]) Windows Spotlight Features..."
		Write-Host "$($EnableStatus[0]) Third Party Suggestions..."
		Write-Host "$($EnableStatus[0]) More Telemetry Features..."
		
		$CloudContentDisableOnOne = @(
			"DisableWindowsSpotlightFeatures"
			"DisableWindowsSpotlightOnActionCenter"
			"DisableWindowsSpotlightOnSettings"
			"DisableWindowsSpotlightWindowsWelcomeExperience"
			"DisableTailoredExperiencesWithDiagnosticData" # Tailored Experiences
			"DisableThirdPartySuggestions"
		)
		
		Write-Warning " From Path: [$PathToCUPoliciesCloudContent]."
		ForEach ($Name in $CloudContentDisableOnOne)
		{
			Write-Host "$($EnableStatus[0]) $($Name): $One."
			Set-ItemProperty -Path "$PathToCUPoliciesCloudContent" -Name "$Name" -Type DWord -Value $One
		}
		If (!(Test-Path "$PathToCUPoliciesCloudContent"))
		{
			New-Item -Path "$PathToCUPoliciesCloudContent" -Force
		}
		Set-ItemProperty -Path "$PathToCUPoliciesCloudContent" -Name "ConfigureWindowsSpotlight" -Type DWord -Value 2
		Set-ItemProperty -Path "$PathToCUPoliciesCloudContent" -Name "IncludeEnterpriseSpotlight" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) Apps Suggestions..."
		If (!(Test-Path "$PathToLMPoliciesCloudContent"))
		{
			New-Item -Path "$PathToLMPoliciesCloudContent" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesCloudContent" -Name "DisableThirdPartySuggestions" -Type DWord -Value $One
		Set-ItemProperty -Path "$PathToLMPoliciesCloudContent" -Name "DisableWindowsConsumerFeatures" -Type DWord -Value $One
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -Type DWord -Value $One
		If (!(Test-Path "$PathToLMPoliciesSQMClient"))
		{
			New-Item -Path "$PathToLMPoliciesSQMClient" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesSQMClient" -Name "CEIPEnable" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppCompat" -Name "AITEnable" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppCompat" -Name "DisableUAR" -Type DWord -Value $One
		
		# Details: https://docs.microsoft.com/pt-br/windows-server/remote/remote-desktop-services/rds-vdi-recommendations-2004#windows-system-startup-event-traces-autologgers
		Write-Host "$($EnableStatus[0]) some startup event traces (AutoLoggers)..."
		If (!(Test-Path "$PathToLMAutoLogger\AutoLogger-Diagtrack-Listener"))
		{
			New-Item -Path "$PathToLMAutoLogger\AutoLogger-Diagtrack-Listener" -Force
		}
		Set-ItemProperty -Path "$PathToLMAutoLogger\AutoLogger-Diagtrack-Listener" -Name "Start" -Type DWord -Value $Zero
		Set-ItemProperty -Path "$PathToLMAutoLogger\SQMLogger" -Name "Start" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) 'WiFi Sense: HotSpot Sharing'..."
		If (!(Test-Path "$PathToLMPoliciesToWifi\AllowWiFiHotSpotReporting"))
		{
			New-Item -Path "$PathToLMPoliciesToWifi\AllowWiFiHotSpotReporting" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesToWifi\AllowWiFiHotSpotReporting" -Name "value" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) 'WiFi Sense: Shared HotSpot Auto-Connect'..."
		If (!(Test-Path "$PathToLMPoliciesToWifi\AllowAutoConnectToWiFiSenseHotspots"))
		{
			New-Item -Path "$PathToLMPoliciesToWifi\AllowAutoConnectToWiFiSenseHotspots" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesToWifi\AllowAutoConnectToWiFiSenseHotspots" -Name "value" -Type DWord -Value $Zero
		
		
		
		Write-Host "$($EnableStatus[0]) Game Bar & Game DVR..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\ApplicationManagement\AllowGameDVR" -Name "value" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\GameDVR" -Name "AppCaptureEnabled" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value $Zero
		If (!(Test-Path "$PathToLMPoliciesGameDVR"))
		{
			New-Item -Path "$PathToLMPoliciesGameDVR" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesGameDVR" -Name "AllowGameDVR" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[1]) game mode..."
		Set-ItemProperty -Path "$PathToCUGameBar" -Name "AllowAutoGameMode" -Type DWord -Value $One
		Set-ItemProperty -Path "$PathToCUGameBar" -Name "AutoGameModeEnabled" -Type DWord -Value $One
		
		
		
		Write-Host "Enable Hardware Accelerated GPU Scheduling... (Windows 10 20H1+ - Needs Restart)"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "HwSchMode" -Type DWord -Value 2
		
		# Show Task Manager details - Applicable to 1607 and later - Although this functionality exist even in earlier versions, the Task Manager's behavior is different there and is not compatible with this tweak
		Write-Host "$($EnableStatus[1]) Showing task manager details..."
		$taskmgr = Start-Process -WindowStyle Hidden -FilePath taskmgr.exe -PassThru
		Do
		{
			Start-Sleep -Milliseconds 100
			$preferences = Get-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -ErrorAction SilentlyContinue
		}
		Until ($preferences)
		Stop-Process $taskmgr
		$preferences.Preferences[28] = 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -Type Binary -Value $preferences.Preferences
		Set-ItemProperty -Path "$PathToLMPrefetchParams" -Name "EnableSuperfetch" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value $Zero
		
		Write-Host " Disabling Ndu High RAM Usage..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\Ndu" -Name "Start" -Type DWord -Value 4
		
		# Details: https://www.tenforums.com/tutorials/94628-change-split-threshold-svchost-exe-windows-10-a.html
		# Will reduce Processes number considerably on > 4GB of RAM systems
		Write-Host "Setting SVCHost to match RAM size..."
		$Ram = (Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum / 1kb
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value $Ram
		
		Write-Host "Unlimiting your network bandwidth for all your system..." # Based on this Chris Titus video: https://youtu.be/7u1miYJmJ_4
		If (!(Test-Path "$PathToLMPoliciesPsched"))
		{
			New-Item -Path "$PathToLMPoliciesPsched" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesPsched" -Name "NonBestEffortLimit" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 0xffffffff
		
		# [@] (2 = Disable, 4 = Enable)
		Write-Host " Enabling Windows Store apps Automatic Updates..."
		If (!(Test-Path "$PathToLMPoliciesWindowsStore"))
		{
			New-Item -Path "$PathToLMPoliciesWindowsStore" -Force
		}
		If ((Get-Item "$PathToLMPoliciesWindowsStore").GetValueNames() -like "AutoDownload")
		{
			Remove-ItemProperty -Path "$PathToLMPoliciesWindowsStore" -Name "AutoDownload"
		}
		# Code from: https://www.reddit.com/r/PowerShell/comments/5iarip/set_proxy_settings_to_automatically_detect/?utm_source=share&utm_medium=web2x&context=3
		Write-Host "Fixing Edge slowdown by NOT Automatically Detecting Settings..."
		$key = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Connections'
		$data = (Get-ItemProperty -Path $key -Name DefaultConnectionSettings).DefaultConnectionSettings
		$data[8] = 3
		Set-ItemProperty -Path $key -Name DefaultConnectionSettings -Value $data
	
		Write-Host "Stopping and disabling Superfetch service..."
		Stop-Service "SysMain" -WarningAction SilentlyContinue
		Set-Service "SysMain" -StartupType Disabled
		Write-Host "Done!"
		Write-Host "Optimizing SSD..."
		fsutil behavior set DisableLastAccess 1
		fsutil behavior set EncryptPagingFile 0
		Write-Host "Apply Regedit..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 4294967295
		Write-Host "Disabling Windows Defender Cloud..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -Type DWord -Value 2
		Write-Host "Disabling Core Isolation Memory Integrity..."
		Remove-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\DeviceGuard\Scenarios\HypervisorEnforcedCodeIntegrity" -Name "Enabled" -ErrorAction SilentlyContinue
		Write-Host "Disabling Windows Script Host..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows Script Host\Settings" -Name "Enabled" -Type DWord -Value 0
		Write-Host "Disabling .NET strong cryptography..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v4.0.30319" -Name "SchUseStrongCrypto" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v4.0.30319" -Name "SchUseStrongCrypto" -ErrorAction SilentlyContinue
			Write-Host "Enabling Meltdown (CVE-2017-5754) compatibility flag..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat")) {
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" -Name "cadca5fe-87d3-4b96-b7fb-a231484277cc" -Type DWord -Value 0
		Write-Host "Disabling Meltdown (CVE-2017-5754) compatibility flag..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" -Name "cadca5fe-87d3-4b96-b7fb-a231484277cc" -ErrorAction SilentlyContinue
		Write-Host "Disabling Malicious Software Removal Tool offering..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\MRT"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\MRT" 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MRT" -Name "DontOfferThroughWUAU" -Type DWord -Value 1
		Write-Host "Disabling Windows Update automatic restart..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "NoAutoRebootWithLoggedOnUsers" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "AUPowerManagement" -Type DWord -Value 0
		Write-Host "Stopping and disabling Home Groups services..."
		Stop-Service "HomeGroupListener" -WarningAction SilentlyContinue
		Set-Service "HomeGroupListener" -StartupType Disabled
		Stop-Service "HomeGroupProvider" -WarningAction SilentlyContinue
		Set-Service "HomeGroupProvider" -StartupType Disabled
		Write-Host "Disabling Shared Experiences..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableCdp" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableMmx" -Type DWord -Value 0
		Write-Host "Disabling Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value 0
		Write-Host "Disabling Remote Desktop..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" -Name "UserAuthentication" -Type DWord -Value 1
		Disable-NetFirewallRule -Name "RemoteDesktop*"
		Write-Host "Disabling Autoplay..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers" -Name "DisableAutoplay" -Type DWord -Value 1
		Write-Host "Disabling Autorun for all drives..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoDriveTypeAutoRun" -Type DWord -Value 255
		Write-Host "Disabling Storage Sense..."
		Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy" -Recurse -ErrorAction SilentlyContinue
		Write-Host "Stopping and disabling Superfetch service..."
		Stop-Service "SysMain" -WarningAction SilentlyContinue
		Set-Service "SysMain" -StartupType Disabled
		Write-Host "Disabling Hibernation..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Session Manager\Power" -Name "HibernteEnabled" -Type Dword -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" -Name "ShowHibernateOption" -Type Dword -Value 0
		Write-Host "Disabling Sleep start menu and keyboard button..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" -Name "ShowSleepOption" -Type Dword -Value 0
		powercfg /SETACVALUEINDEX SCHEME_CURRENT SUB_BUTTONS SBUTTONACTION 0
		powercfg /SETDCVALUEINDEX SCHEME_CURRENT SUB_BUTTONS SBUTTONACTION 0
		Write-Host "Disabling display and sleep mode timeouts..."
		powercfg /X monitor-timeout-ac 0
		powercfg /X monitor-timeout-dc 0
		powercfg /X standby-timeout-ac 0
		powercfg /X standby-timeout-dc 0
		Write-Host "Disabling Fast Startup..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power" -Name "HiberbootEnabled" -Type DWord -Value 0
		Write-Host "Disabling Lock screen..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization" 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization" -Name "NoLockScreen" -Type DWord -Value 1
		Write-Host "Disabling Lock screen using scheduler workaround..."
		$service = New-Object -com Schedule.Service
		$service.Connect()
		$task = $service.NewTask(0)
		$task.Settings.DisallowStartIfOnBatteries = $false
		$trigger = $task.Triggers.Create(9)
		$trigger = $task.Triggers.Create(11)
		$trigger.StateChange = 8
		$action = $task.Actions.Create(0)
		$action.Path = "reg.exe"
		$action.Arguments = "add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\LogonUI\SessionData /t REG_DWORD /v AllowLockScreen /d 0 /f"
		$service.GetFolder("\").RegisterTaskDefinition("Disable LockScreen", $task, 6, "NT AUTHORITY\SYSTEM", $null, 4) 
		Write-Host "Disabling Sticky keys prompt..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\StickyKeys" -Name "Flags" -Type String -Value "506"
		Write-Host "Showing file operations details..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager" 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager" -Name "EnthusiastMode" -Type DWord -Value 1
		Write-Host "Showing sync provider notifications..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ShowSyncProviderNotifications" -Type DWord -Value 1
		Write-Host "Hiding recent shortcuts..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "ShowRecent" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "ShowFrequent" -Type DWord -Value 0
		Write-Host "Hiding 3D Objects icon from This PC..."
		Remove-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}" -Recurse -ErrorAction SilentlyContinue
		Write-Host "Hiding 3D Objects icon from Explorer namespace..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag" -Name "ThisPCPolicy" -Type String -Value "Hide"
		If (!(Test-Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag" -Name "ThisPCPolicy" -Type String -Value "Hide"
		Write-Host "Showing 3D Objects icon in Explorer namespace..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag" -Name "ThisPCPolicy" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag" -Name "ThisPCPolicy" -ErrorAction SilentlyContinue
		Write-Host "Disabling thumbnails..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "IconsOnly" -Type DWord -Value 1
		Write-Host "Disabling creation of Thumbs.db..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "DisableThumbnailCache" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "DisableThumbsDBOnNetworkFolders" -Type DWord -Value 1
		Write-Host "Hiding Server Manager after login..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Server\ServerManager"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Server\ServerManager" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Server\ServerManager" -Name "DoNotOpenAtLogon" -Type DWord -Value 1
		Write-Host "Disabling Shutdown Event Tracker..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Reliability"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Reliability" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Reliability" -Name "ShutdownReasonOn" -Type DWord -Value 0
		Write-Host "Disabling password complexity and maximum age requirements..."
		$tmpfile = New-TemporaryFile
		secedit /export /cfg $tmpfile /quiet
		(Get-Content $tmpfile).Replace("PasswordComplexity = 1", "PasswordComplexity = 0").Replace("MaximumPasswordAge = 42", "MaximumPasswordAge = -1") | Out-File $tmpfile
		secedit /configure /db "$env:SYSTEMROOT\security\database\local.sdb" /cfg $tmpfile /areas SECURITYPOLICY 
		Remove-Item -Path $tmpfile
		Write-Host "Disabling Ctrl+Alt+Del requirement before login..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "DisableCAD" -Type DWord -Value 1
		Write-Host "Disabling Internet Explorer Enhanced Security Configuration (IE ESC)..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Active Setup\Installed Components\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}" -Name "IsInstalled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Active Setup\Installed Components\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}" -Name "IsInstalled" -Type DWord -Value 0
		Write-Host "Disabling Full ScreenOptimization..."
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_FSEBehaviorMode" -Type DWord -Value 2
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_HonorUserFSEBehaviorMode" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_FSEBehavior" -Type DWord -Value 2
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_DXGIHonorFSEWindowsCompatible" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_EFSEFeatureFlags" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_DSEBehavior" -Type DWord -Value 2
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\GameDVR" -Name "AppCaptureEnabled" -Type DWord -Value 0
		Write-Host "Forcing RAW Mouse Input and Disabling Enhance Pointer Precision..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSpeed" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold1" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold2" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSensitivity" -Type String -Value "10"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseHoverTime" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseTrails" -Type String -Value "0"
		Write-Host "Disabling Core Parking on current PowerPlan..."
		Write-Host "Disabling DMA memory protection and cores isolation..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		bcdedit /set vsmlaunchtype Off 
		bcdedit /set vm No 
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE"  -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE" -Name "DisableExternalDMAUnderLock" -Type DWord -Value 0
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"  -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "EnableVirtualizationBasedSecurity" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "HVCIMATRequired" -Type DWord -Value 0
		Write-Host "Disabling Process and Kernel Mitigations..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		ForEach ($v in (Get-Command -Name "Set-ProcessMitigation").Parameters["Disable"].Attributes.ValidValues) { Set-ProcessMitigation -System -Disable $v.ToString() -ErrorAction SilentlyContinue }
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "DisableExceptionChainValidation" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "KernelSEHOPEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "EnableCfg" -Type DWord -Value 0
		Write-Host "Disabling drivers get paged into virtual memory..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "DisablePagingExecutive" -Type DWord -Value 1
		Write-Host "Enabling big system memory caching to improve microstuttering..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "LargeSystemCache" -Type DWord -Value 1
		Write-Host "Forcing Windows to stop tolerating high DPC/ISR latencies..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power"  -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatencyCheckEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceDefault" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceFSVP" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyTolerancePerfOverride" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceScreenOffIR" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceVSyncEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "RtlCapabilityCheckLatency" -Type DWord -Value 1
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power"  -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleShortTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleVeryLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceMemory" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContextMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceOther" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceTimerPeriod" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MaxIAverageGraphicsLatencyInOneBucket" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MiracastPerfTrackGraphicsLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorRefreshLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "TransitionLatency" -Type DWord -Value 1
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Show BSOD details instead of the sad smiley..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\CrashControl" -Name "DisplayParameters" -Type DWord -Value 1
		Write-Host "Disabling live tiles..."
		New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -ErrorAction SilentlyContinue 
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "NoTileApplicationNotification" -Type DWord -Value 1
		Write-Host "Setting Wallpaper Quality to 100%..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "JPEGImportQuality" -Type DWord -Value 100
		Write-Host "Disabling search history..."
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Windows\Explorer" -ErrorAction SilentlyContinue 
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\Explorer" -Name "DisableSearchBoxSuggestions" -Type DWord -Value 1
		Write-Host "Disabling Mouse Keys Keyboard Shortcut..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\MouseKeys" -Name "Flags" -Type String -Value "186"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\MouseKeys" -Name "MaximumSpeed" -Type String -Value "40"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\MouseKeys" -Name "TimeToMaximumSpeed" -Type String -Value "3000"
		Write-Host "Disabling Windows Transparency..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "EnableTransparency" -Type DWord -Value 0
		Write-Host "Disabling Cloud Search..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCloudSearch" -Type DWord -Value 0
		Write-Host "Turning Off Safe Search..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\SearchSettings" -Name "SafeSearchMode" -Type DWord -Value 0
		Write-Host "Disabling Device History..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name "DeviceHistoryEnabled" -Type DWord -Value 0
		Write-Host "Disabling Windows Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowFullControl" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value 0
		Write-Host "Disabling Search Histroy..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\SearchSettings" -Name "IsDeviceSearchHistoryEnabled" -Type DWord -Value 0
		Write-Host "Disabling Microsoft MeetNow..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		$ErrorActionPreference = $errpref #restore previous preference
		powercfg -attributes SUB_PROCESSOR CPMINCORES -ATTRIB_HIDE 
		Powercfg -setacvalueindex scheme_current sub_processor CPMINCORES 100 
		Powercfg -setactive scheme_current 
	Write-Host "Disabling Xbox features..."
		Get-AppxPackage "Microsoft.XboxApp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxIdentityProvider" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.XboxSpeechToTextOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxGameOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Xbox.TCUI" | Remove-AppxPackage
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"
		}
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "GPU Priority" -Type DWord -Value 8
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "Priority" -Type DWord -Value 6
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "Scheduling Category" -Type String -Value "High"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "SFIO Priority" -Type String -Value "High"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\PriorityControl" -Name "IRQ8Priority" -Type DWord -Value 1
		Write-Host "Forcing RAW Mouse Input and Disabling Enhance Pointer Precision..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSpeed" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold1" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold2" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSensitivity" -Type String -Value "10"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseHoverTime" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseTrails" -Type String -Value "0"
		$checkscreenscale = [Math]::round([DPI]::scaling(), 2) * 100
		if ($checkscreenscale -eq "100")
		{
			Write-Host "Windows screen scale is Detected as 100%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,0C,00,00,00,00,00,80,99,19,00,00,00,00,00,40,66,26,00,00,00,00,00,00,33,33,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "125")
		{
			Write-Host "Windows screen scale is Detected as 125%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,00,00,10,00,00,00,00,00,00,00,20,00,00,00,00,00,00,00,30,00,00,00,00,00,00,00,40,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "150")
		{
			Write-Host "Windows screen scale is Detected as 150%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,30,33,13,00,00,00,00,00,60,66,26,00,00,00,00,00,90,99,39,00,00,00,00,00,C0,CC,4C,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "175")
		{
			Write-Host "Windows screen scale is Detected as 175%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,60,66,16,00,00,00,00,00,C0,CC,2C,00,00,00,00,00,20,33,43,00,00,00,00,00,80,99,59,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "200")
		{
			Write-Host "Windows screen scale is Detected as 200%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,90,99,19,00,00,00,00,00,20,33,33,00,00,00,00,00,B0,CC,4C,00,00,00,00,00,40,66,66,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "225")
		{
			Write-Host "Windows screen scale is Detected as 225%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,1C,00,00,00,00,00,80,99,39,00,00,00,00,00,40,66,56,00,00,00,00,00,00,33,73,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "250")
		{
			Write-Host "Windows screen scale is Detected as 250%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,00,00,20,00,00,00,00,00,00,00,40,00,00,00,00,00,00,00,60,00,00,00,00,00,00,00,80,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "300")
		{
			Write-Host "Windows screen scale is Detected as 300%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,60,66,26,00,00,00,00,00,C0,CC,4C,00,00,00,00,00,20,33,73,00,00,00,00,00,80,99,99,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "350")
		{
			Write-Host "Windows screen scale is Detected as 350%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,2C,00,00,00,00,00,80,99,59,00,00,00,00,00,40,66,86,00,00,00,00,00,00,33,B3,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		else
		{
			Write-Host "HOUSTON WE HAVE A PROBLEM! screen scale is not set to traditional value, nothing has been set!"
		}
		$errpref = $ErrorActionPreference #save actual preference
		Write-Host "Disabling High Precision Event Timer..."
		$ErrorActionPreference = "silentlycontinue"
		Invoke-WebRequest -Uri "https://git.io/JkrLn" -OutFile "$Env:windir\system32\SetTimerResolutionService.exe" -ErrorAction SilentlyContinue
		New-Service -name "SetTimerResolutionService" -BinaryPathName "$Env:windir\system32\SetTimerResolutionService.exe" -StartupType Automatic -ErrorAction SilentlyContinue
		bcdedit /set x2apicpolicy Enable
		bcdedit /set configaccesspolicy Default
		bcdedit /set MSI Default
		bcdedit /set usephysicaldestination No
		Fsutil behavior query memoryusage
		Fsutil behavior set memoryusage 2
		bcdedit /set usefirmwarepcisettings No
		bcdedit /deletevalue useplatformclock
		bcdedit /set disabledynamictick yes
		bcdedit /set useplatformtick Yes
		bcdedit /set tscsyncpolicy Enhanced
		bcdedit /timeout 10
		bcdedit /set nx optout
		bcdedit /set bootux disabled
		bcdedit /set disabledynamictick yes
		bcdedit /set useplatformtick yes
		bcdedit /set useplatformclock false
		bcdedit /set tscsyncpolicy enhanced
		bcdedit /set x2apicpolicy enable
		wmic path Win32_PnPEntity where "name='High precision event timer'" call disable
		Write-Host "Disabling display and sleep mode timeouts..."
		powercfg /X monitor-timeout-ac 0
		powercfg /X monitor-timeout-dc 0
		powercfg /X standby-timeout-ac 0
		powercfg /X standby-timeout-dc 0
		Write-Host "Enabling Gaming Mode..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "AllowAutoGameMode" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "AutoGameModeEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "ShowStartupPanel" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "GamePanelStartupTipIndex" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "UseNexusForGameBarEnabled" -Type DWord -Value 0
		Write-Host "Enabling HAGS..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "HwSchMode" -Type DWord -Value 2
		Write-Host "Enabling and Activating Bitsum Highest Performance Power Plan..."
		Invoke-WebRequest -Uri "https://git.io/JsWhn" -OutFile "$Env:windir\system32\Bitsum-Highest-Performance.pow" -ErrorAction SilentlyContinue
		powercfg -import "$Env:windir\system32\Bitsum-Highest-Performance.pow" e6a66b66-d6df-666d-aa66-66f66666eb66
		powercfg -setactive e6a66b66-d6df-666d-aa66-66f66666eb66
		Write-Host "Disabling Core Parking on current PowerPlan Ultimate Performance..."
		powercfg -attributes SUB_PROCESSOR CPMINCORES -ATTRIB_HIDE
		Powercfg -setacvalueindex scheme_current sub_processor CPMINCORES 100
		Powercfg -setactive scheme_current
		Write-Host "Disabling DMA memory protection and cores isolation..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		bcdedit /set vsmlaunchtype Off
		bcdedit /set vm No
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE" -Name "DisableExternalDMAUnderLock" -Type DWord -Value 0
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "EnableVirtualizationBasedSecurity" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "HVCIMATRequired" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disabling Process and Kernel Mitigations..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		ForEach ($v in (Get-Command -Name "Set-ProcessMitigation").Parameters["Disable"].Attributes.ValidValues) { Set-ProcessMitigation -System -Disable $v.ToString() -ErrorAction SilentlyContinue }
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "DisableExceptionChainValidation" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "KernelSEHOPEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "EnableCfg" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disabling drivers get paged into virtual memory..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "DisablePagingExecutive" -Type DWord -Value 1
		Write-Host "Enabling big system memory caching to improve microstuttering..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "LargeSystemCache" -Type DWord -Value 1
		Write-Host "Forcing contiguous memory allocation in the DirectX Graphics Kernel..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "DpiMapIommuContiguous" -Type DWord -Value 1
		Write-Host "Forcing Windows to stop tolerating high DPC/ISR latencies..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatencyCheckEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceDefault" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceFSVP" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyTolerancePerfOverride" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceScreenOffIR" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceVSyncEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "RtlCapabilityCheckLatency" -Type DWord -Value 1
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleShortTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleVeryLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceMemory" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContextMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceOther" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceTimerPeriod" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MaxIAverageGraphicsLatencyInOneBucket" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MiracastPerfTrackGraphicsLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorRefreshLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "TransitionLatency" -Type DWord -Value 1
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Decreasing mouse and keyboard buffer sizes..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\mouclass\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\mouclass\Parameters" -Name "MouseDataQueueSize" -Type DWord -Value 0x00000010
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\kbdclass\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\kbdclass\Parameters" -Name "KeyboardDataQueueSize" -Type DWord -Value 0x00000010
		$ErrorActionPreference = $errpref #restore previous preference
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		$NetworkIDS = @(
			(Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\*").PSChildName
		)
		foreach ($NetworkID in $NetworkIDS)
		{
			Write-Host "Disabling Nagles Algorithm..."
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\$NetworkID" -Name "TcpAckFrequency" -Type DWord -Value 1
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\$NetworkID" -Name "TCPNoDelay" -Type DWord -Value 1
		}
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Fixing White Games Shortcuts created by game launchers...."
		choco Installing -y setuserfta
		Start-Sleep -s 5
		Push-Location
		Set-Location "$env:ProgramData\chocolatey\lib\setuserfta\tools\SetUserFTA\"
		SetUserFTA.exe del .url
		SetUserFTA.exe .url, InternetShortcut
		Pop-Location
		choco unInstalling -y setuserfta
		Write-Host "Applying PC Optimizations..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 4294967295
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name FeatureSettingsOverride -Type "DWORD" -Value 72 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name FeatureSettingsOverrideMask -Type "DWORD" -Value 3 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Virtualization" -Name MinVmVersionForCpuBasedMitigations -Type "String" -Value "1.0" -Force
		Write-Host "Disabling Xbox features..."
		Get-AppxPackage "Microsoft.XboxApp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxIdentityProvider" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.XboxSpeechToTextOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxGameOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Xbox.TCUI" | Remove-AppxPackage
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Stopping and disabling Unessessary Services For Gaming..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Stop-Service "wisvc" -WarningAction SilentlyContinue
		Set-Service "wisvc" -StartupType Disabled
		Stop-Service "MapsBroker" -WarningAction SilentlyContinue
		Set-Service "MapsBroker" -StartupType Disabled
		Stop-Service "UmRdpService" -WarningAction SilentlyContinue
		Set-Service "UmRdpService" -StartupType Disabled
		Stop-Service "TrkWks" -WarningAction SilentlyContinue
		Set-Service "TrkWks" -StartupType Disabled
		Stop-Service "TermService" -WarningAction SilentlyContinue
		Set-Service "TermService" -StartupType Disabled
		Stop-Service "PcaSvc" -WarningAction SilentlyContinue
		Set-Service "PcaSvc" -StartupType Disabled
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disable Xbox Game Tips ..."
		if ((Get-AppxPackage -Name Microsoft.XboxGamingOverlay) -or (Get-AppxPackage -Name Microsoft.GamingApp))
		{
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\GameBar -Name ShowStartupPanel -PropertyType DWord -Value 0 -Force
		}
		Write-Host "Disable Audit Process ..."
		auditpol /set /subcategory:"{0CCE922B-69AE-11D9-BED3-505054503030}" /success:disable /failure:disable
		Write-Host "Applying Latency Tweaks..."
		#Increase Diffie-Hellman key (DHK) exchange to 4096-bit
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" -Force -Name ServerMinKeyBitLength -Type "DWORD" -Value 0x00001000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" -Force -Name ClientMinKeyBitLength -Type "DWORD" -Value 0x00001000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" -Force -Name Enabled -Type "DWORD" -Value 0x00000001
		
		#Disable RC2 cipher
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 40/128" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 56/128" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 128/128" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 40/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 56/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 128/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable RC4 cipher
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 128/128" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 64/128" -Force  
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 56/128" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 40/128" -Force  
		New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 128/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 64/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 56/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 40/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable DES cipher
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\DES 56" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\DES 56/56" -Force  
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\DES 56" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\DES 56/56" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable 3DES (Triple DES) cipher
	    New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" -Force  
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" -Force -Name Enabled -Type "DWORD" -Value 0x00000000       
		
		#Disable MD5 hash function
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\MD5" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\MD5" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable SHA1
		#New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\SHA" -Force
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\SHA" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable null cipher
		#New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\NULL" -Force
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\NULL" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Force not to respond to renegotiation requests
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL" -Force -Name AllowInsecureRenegoClients -Type "DWORD" -Value 0x00000000
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL" -Force -Name AllowInsecureRenegoServers -Type "DWORD" -Value 0x00000000
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL" -Force -Name DisableRenegoOnServer -Type "DWORD" -Value 0x00000001
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL" -Force -Name UseScsvForTls -Type "DWORD" -Value 0x00000001
		
		#Disable SSL v2
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Server" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Client" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		
		#Disable SSL v3
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Server" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Client" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		
		#Enable TLS 1.0
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0x00000001
		
		#Enable DTLS 1.0
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable TLS 1.1
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable DTLS 1.1
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Server" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable TLS 1.2
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable TLS 1.3
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable DTLS 1.3
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable Strong Authentication for .NET applications (TLS 1.2)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v2.0.50727" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v2.0.50727" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v3.0" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v3.0" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v4.0.30319" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v4.0.30319" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v2.0.50727" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v2.0.50727" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v3.0" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v3.0" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v4.0.30319" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v4.0.30319" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Write-Host "SMB Optimizations"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "DisableBandwidthThrottling" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "FileInfoCacheEntriesMax" -Type "DWORD" -Value 1024 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "DirectoryCacheEntriesMax" -Type "DWORD" -Value 1024 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "FileNotFoundCacheEntriesMax" -Type "DWORD" -Value 2048 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type "DWORD" -Value 20 -Force
		Set-SmbServerConfiguration -EnableMultiChannel $true -Force
		Set-SmbServerConfiguration -MaxChannelPerSession 16 -Force
		Set-SmbServerConfiguration -ServerHidden $False -AnnounceServer $False -Force
		Set-SmbServerConfiguration -EnableLeasing $false -Force
		Set-SmbClientConfiguration -EnableLargeMtu $true -Force
		Set-SmbClientConfiguration -EnableMultiChannel $true -Force
		#Do not let apps on other devices open and message apps on this device, and vice versa
		New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\CDP" -Name RomeSdkChannelUserAuthzPolicy -PropertyType DWord -Value 1 -Force
		#Turn off Windows Location Provider
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableWindowsLocationProvider" -Type "DWORD" -Value "1" -Force
		#Turn off location scripting
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocationScripting" -Type "DWORD" -Value "1" -Force
		#Turn off location
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocation" -Value "1" -Type "DWORD" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Value "0" -Type "DWORD" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "Value" -Type "String" -Value "Deny" -Force
		#Deny app access to location
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Value "Deny" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Value "0" -Type "DWORD" -Force
		#Deny app access to motion data
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\activity" -Name "Value" -Value "Deny" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessMotion" -Type "DWORD" -Value 2 -Force
		#Deny app access to phone
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessPhone" -Type "DWORD" -Value 2 -Force
		#Deny app access to trusted devices
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{C1D23ACC-752B-43E5-8448-8D0E519CD6D6}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessTrustedDevices" -Type "DWORD" -Value 2 -Force
		#Deny app sync with devices (unpaired, beacons, TVs etc.)
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsSyncWithDevices" -Type "DWORD" -Value 2 -Force
		#Deny app access to diagnostics info about your other apps
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\appDiagnostics" -Name "Value" -Value "Deny" -Type "String" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsGetDiagnosticInfo" -Type "DWORD" -Value 2 -Force
		#Deny app access to your contacts
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\contacts" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{7D7E8402-7C54-4821-A34E-AEEFD62DED93}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessContacts" -Type "DWORD" -Value 2 -Force
		#Deny app access to Notifications
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userNotificationListener" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{52079E78-A92B-413F-B213-E8FE35712E72}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessNotifications" -Type "DWORD" -Value 2 -Force
		#Deny app access to Calendar
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\appointments" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{D89823BA-7180-4B81-B50C-7E471E6121A3}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessCalendar" -Type "DWORD" -Value 2 -Force
		#Deny app access to call history
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\phoneCallHistory" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{8BC668CF-7728-45BD-93F8-CF2B3B41D7AB}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessCallHistory" -Type "DWORD" -Value 2 -Force
		#Deny app access to email
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\email" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{9231CB4C-BF57-4AF3-8C55-FDA7BFCC04C5}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessEmail" -Type "DWORD" -Value 2 -Force
		#Deny app access to tasks
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userDataTasks" -Name "Value" -Value "Deny" -Type "String" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessTasks" -Type "DWORD" -Value 2 -Force
		#Deny app access to messaging (SMS / MMS)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\chat" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{992AFA70-6F47-4148-B3E9-3003349C1548}" -Type "String" -Name "Value" -Value "DENY" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{21157C1F-2651-4CC1-90CA-1F28B02263F6}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessMessaging" -Type "DWORD" -Value 2 -Force
		#Deny app access to radios
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\radios" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{A8804298-2D5F-42E3-9531-9C8C39EB29CE}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessRadios" -Type "DWORD" -Value 2 -Force
		#Deny app access to bluetooth devices
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\bluetoothSync" -Name "Value" -Value "Deny" -Type "String" -Force
		#Disable device metadata retrieval (breaks auto updates)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -Type "DWORD" -Value 1 -Force
		#Do not include drivers with Windows Updates
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ExcludeWUDriversInQualityUpdate" -Type "DWORD" -Value 1 -Force
		#Prevent Windows Update for device driver search
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" -Name "SearchOrderConfig" -Type "DWORD" -Value 0 -Force
		#Disable Customer Experience Improvement (CEIP/SQM)
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\SQMClient\Windows" -Name "CEIPEnable" -Type "DWORD" -Value "0" -Force
		#Disable Application Impact Telemetry (AIT)
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\AppCompat" -Name "AITEnable" -Type "DWORD" -Value "0" -Force
		#Disable diagnostics telemetry
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\DiagTrack" -Name "Start" -Type "DWORD" -Value 4 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\dmwappushsvc" -Name "Start" -Type "DWORD" -Value 4 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\dmwappushservice" -Name "Start" -Type "DWORD" -Value 4 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\diagnosticshub.standardcollector.service" -Name "Start" -Type "DWORD" -Value 4 -Force
		Stop-Service "DiagTrack"
		Set-Service "DiagTrack" -StartupType Disabled
		Stop-Service "dmwappushservice"
		Set-Service "dmwappushservice" -StartupType Disabled
		Stop-Service "diagnosticshub.standardcollector.service"
		Set-Service "diagnosticshub.standardcollector.service" -StartupType Disabled
		Stop-Service "diagsvc"
		Set-Service "diagsvc" -StartupType Disabled
		#Disable Customer Experience Improvement Program
		schtasks /change /TN "\Microsoft\Windows\Customer Experience Improvement Program\Consolidator" /DISABLE
		schtasks /change /TN "\Microsoft\Windows\Customer Experience Improvement Program\KernelCeipTask" /DISABLE
		schtasks /change /TN "\Microsoft\Windows\Customer Experience Improvement Program\UsbCeip" /DISABLE
		#Disable Webcam Telemetry (devicecensus.exe)
		schtasks /change /TN "Microsoft\Windows\Device Information\Device" /DISABLE
		# Disable Application Experience (Compatibility Telemetry)
		schtasks /change /TN "Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser" /DISABLE
		schtasks /change /TN "Microsoft\Windows\Application Experience\ProgramDataUpdater" /DISABLE
		schtasks /change /TN "Microsoft\Windows\Application Experience\StartupAppTask" /DISABLE
		schtasks /change /TN "Microsoft\Windows\Application Experience\AitAgent" /DISABLE
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\CompatTelRunner.exe" -Name "Debugger" -Type "String" -Value "%windir%\System32\taskkill.exe" -Force
		#Disable telemetry in data collection policy
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Value 0 -Type "DWORD" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "AllowTelemetry" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "LimitEnhancedDiagnosticDataWindowsAnalytics" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type "DWORD" -Value 0 -Force
		#Disable license telemetry
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows NT\CurrentVersion\Software Protection Platform" -Name "NoGenTicket" -Type "DWORD" -Value "1" -Force
		#Disable error reporting
		#Disable Windows Error Reporting (WER)
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type "DWORD" -Value "1" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type "DWORD" -Value "1" -Force
		#DefaultConsent / 1 - Always ask (default) / 2 - Parameters only / 3 - Parameters and safe data / 4 - All data
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\Windows Error Reporting\Consent" -Name "DefaultConsent" -Type "DWORD" -Value "0" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\Windows Error Reporting\Consent" -Name "DefaultOverrideBehavior" -Type "DWORD" -Value "1" -Force
		#Disable WER sending second-level data
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\Windows Error Reporting" -Name "DontSendAdditionalData" -Type "DWORD" -Value "1" -Force
		#Disable WER crash dialogs, popups
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\Windows Error Reporting" -Name "LoggingDisabled" -Type "DWORD" -Value "1" -Force
		schtasks /Change /TN "Microsoft\Windows\ErrorDetails\EnableErrorDetailsUpdate" /Disable
		schtasks /Change /TN "Microsoft\Windows\Windows Error Reporting\QueueReporting" /Disable
		#Disable Windows Error Reporting Service
		Stop-Service "WerSvc"
		Set-Service "WerSvc" -StartupType Disabled
		Stop-Service "wercplsupport"
		Set-Service "wercplsupport" -StartupType Disabled
		#Disable all settings sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableSyncOnPaidNetwork" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\SettingSync" -Name "SyncPolicy" -Type "DWORD" -Value 5 -Force
		#Disable Application Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableApplicationSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableApplicationSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable App Sync Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableAppSyncSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableAppSyncSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable App Sync Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableAppSyncSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableAppSyncSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Desktop Theme Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableDesktopThemeSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableDesktopThemeSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Personalization Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisablePersonalizationSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisablePersonalizationSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Start Layout Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableStartLayoutSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableStartLayoutSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Web Browser Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableWebBrowserSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableWebBrowserSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Windows Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableWindowsSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableWindowsSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Windows Insider Service
		Stop-Service "wisvc"
		Set-Service "wisvc" -StartupType Disabled
		#Do not let Microsoft try features on this build
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\PreviewBuilds" -Name "EnableExperimentation" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\PreviewBuilds" -Name "EnableConfigFlighting" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\System\AllowExperimentation" -Name "value" -Type "DWORD" -Value 0 -Force
		#Disable getting preview builds of Windows
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\PreviewBuilds" -Name "AllowBuildPreview" -Type "DWORD" -Value 0 -Force
		#Remove "Windows Insider Program" from Settings
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsSelfHost\UI\Visibility" -Name "HideInsiderPage" -Type "DWORD" -Value "1" -Force
		#Disable ad customization with Advertising ID
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" -Name "DisabledByGroupPolicy" -Type "DWORD" -Value 1 -Force
		#Disable targeted tips
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableSoftLanding" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsSpotlightFeatures" -Type "DWORD" -Value "1" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type "DWORD" -Value "1" -Force
		#Turn Off Suggested Content in Settings app
		New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -PropertyType "DWord" -Value "0" -Force
		New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-310093Enabled" -PropertyType "DWord" -Value "0" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338393Enabled" -Value "0" -Type "DWORD" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353694Enabled" -Value "0" -Type "DWORD" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353696Enabled" -Value "0" -Type "DWORD" -Force
		#Disable cortana
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\Experience\AllowCortana" -Name "value" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "CortanaEnabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "CortanaEnabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "CanCortanaBeEnabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name BingSearchEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCloudSearch" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortanaAboveLock" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowSearchToUseLocation" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "ConnectedSearchUseWeb" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name "CortanaConsent" -Value 0 -Type "DWORD" -Force
		#Disable web search in search bar
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name DisableWebSearch -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name "BingSearchEnabled" -Value 0 -Type "DWORD" -Force
		#Disable search web when searching pc
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name ConnectedSearchUseWeb -Type "DWORD" -Value 0 -Force
		#Disable search indexing encrypted items / stores
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name AllowIndexingEncryptedStoresOrItems -Type "DWORD" -Value 0 -Force
		#Disable location based info in searches
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name AllowSearchToUseLocation -Type "DWORD" -Value 0 -Force
		#Disable language detection
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name AlwaysUseAutoLangDetection -Type "DWORD" -Value 0 -Force
		#Opt out from Windows privacy consent
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -Type "DWORD" -Value 0 -Force
		#Disable cloud speech recognation
		New-Item -Path "HKCU:\Software\Microsoft\Speech_OneCore\Settings\OnlineSpeechPrivacy" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Speech_OneCore\Settings\OnlineSpeechPrivacy" -Name "HasAccepted" -Type "DWORD" -Value 0 -Force
		#Disable text and handwriting collection
		New-Item -Path "HKCU:\Software\Policies\Microsoft\InputPersonalization" -Force
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Windows\HandwritingErrorReports" -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\HandwritingErrorReports" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\HandwritingErrorReports" -Name "PreventHandwritingErrorReports" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\HandwritingErrorReports" -Name "PreventHandwritingErrorReports" -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Windows\TabletPC" -Force
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\TabletPC" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\TabletPC" -Name "PreventHandwritingDataSharing" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\TabletPC" -Name "PreventHandwritingDataSharing" -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Name "AllowInputPersonalization" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Name "HarvestContacts" -Type "DWORD" -Value 0 -Force
		#Disable Windows feedback
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Name "NumberOfSIUFInPeriod" -Type "DWORD" -Value 0 -Force
		reg delete "HKCU\SOFTWARE\Microsoft\Siuf\Rules" -Name "PeriodInNanoSeconds" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type "DWORD" -Value 1 -Force
		#Disable Wi-Fi sense
		New-Item -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting" -Name "value" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowAutoConnectToWiFiSenseHotspots" -Name "value" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WcmSvc\wifinetworkmanager\config" -Name "AutoConnectAllowedOEM" -Type "DWORD" -Value 0 -Force
		#Disable App Launch Tracking
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "Start_TrackProgs" -Value 0 -Type "DWORD" -Force
		#Disable Activity Feed
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableActivityFeed" -Value "0" -Type "DWORD" -Force
		#Disable feedback on write (sending typing info)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Input\TIPC" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Input\TIPC" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		#Disable Windows DRM internet access
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WMDRM" -Name "DisableOnline" -Type "DWORD" -Value 1 -Force
		#Disable game screen recording
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type "DWORD" -Value 0 -Force
		#Disable Auto Downloading Maps
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps" -Name "AllowUntriggeredNetworkTrafficOnSettingsPage" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps" -Name "AutoDownloadAndUpdateMapData" -Type "DWORD" -Value 0 -Force
		#Disable Website Access of Language List
		Set-ItemProperty -Path "HKCU:\Control Panel\International\User Profile" -Name "HttpAcceptLanguageOptOut" -Type "DWORD" -Value 1 -Force
		#Disable Inventory Collector
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppCompat" -Name "DisableInventory" -Type "DWORD" -Value 1 -Force
		#Do not send Watson events
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Reporting" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Reporting" -Name "DisableGenericReports" -Type "DWORD" -Value 1 -Force
		#Disable Malicious Software Reporting tool diagnostic data
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MRT" -Name "DontReportInfectionInformation" -Type "DWORD" -Value 1 -Force
		#Disable local setting override for reporting to Microsoft MAPS
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "LocalSettingOverrideSpynetReporting" -Type "DWORD" -Value 0 -Force
		#Turn off Windows Defender SpyNet reporting
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -Type "DWORD" -Value 0 -Force
		#Do not send file samples for further analysis
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -Type "DWORD" -Value 2 -Force
		#Disable live tile data collection
		New-Item -Path "HKCU:\Software\Policies\Microsoft\MicrosoftEdge\Main" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\MicrosoftEdge\Main" -Name "PreventLiveTileDataCollection" -Type "DWORD" -Value 1 -Force
		#Disable MFU tracking
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Windows\EdgeUI" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\EdgeUI" -Name "DisableMFUTracking" -Type "DWORD" -Value 1 -Force
		#Disable recent apps
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\EdgeUI" -Name "DisableRecentApps" -Type "DWORD" -Value 1 -Force
		#Turn off backtracking
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\EdgeUI" -Name "TurnOffBackstack" -Type "DWORD" -Value 1 -Force
		#Disable Search Suggestions in Edge
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\SearchScopes" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\SearchScopes" -Name "ShowSearchSuggestionsGlobal" -Type "DWORD" -Value 0 -Force
		#Disable Geolocation in Internet Explorer
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Internet Explorer\Geolocation" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Internet Explorer\Geolocation" -Name "PolicyDisableGeolocation" -Type "DWORD" -Value 1 -Force
		#Disable Internet Explorer InPrivate logging
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Safety\PrivacIE" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Safety\PrivacIE" -Name "DisableLogging" -Type "DWORD" -Value 1 -Force
		#Disable Internet Explorer CEIP
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\SQM" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\SQM" -Name "DisableCustomerImprovementProgram" -Type "DWORD" -Value 0 -Force
		#Disable calling legacy WCM policies
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings" -Name "CallLegacyWCMPolicies" -Type "DWORD" -Value 0 -Force
		#Do not send Windows Media Player statistics
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\MediaPlayer\Preferences" -Name "UsageTracking" -Type "DWORD" -Value 0 -Force
		#Disable metadata retrieval
		New-Item -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventCDDVDMetadataRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventMusicFileMetadataRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventRadioPresetsRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WMDRM" -Name "DisableOnline" -Type "DWORD" -Value 1 -Force
		#Disable dows Media Player Network Sharing Service
		Stop-Service "WMPNetworkSvc"
		Set-Service "WMPNetworkSvc" -StartupType Disabled
		#Disable lock screen camera
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization" -Name "NoLockScreenCamera" -Type "DWORD" -Value 1 -Force
		#Disable remote Assistance
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowFullControl" -Type "DWORD" -Value 0 -Force
		#Disable AutoPlay and AutoRun
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoDriveTypeAutoRun" -Type "DWORD" -Value 255 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoAutorun" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "NoAutoplayfornonVolume" -Type "DWORD" -Value 1 -Force
		#Disable Windows Installer Always install with elevated privileges
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer" -Name "AlwaysInstallElevated" -Type "DWORD" -Value 0 -Force
		#Refuse less secure authentication
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa" -Name "LmCompatibilityLevel" -Type "DWORD" -Value 5 -Force
		#Disable the Windows Connect Now wizard
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WCN\UI" -Name "DisableWcnUi" -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "DisableFlashConfigRegistrar" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "DisableInBand802DOT11Registrar" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "DisableUPnPRegistrar" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "DisableWPDRegistrar" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "EnableRegistrars" -Type "DWORD" -Value 0 -Force
		#Disable online tips
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "AllowOnlineTips" -Type "DWORD" -Value 0 -Force
		#Turn off Internet File Association service
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoInternetOpenWith" -Type "DWORD" -Value 1 -Force
		#Turn off the "Order Prints" picture task
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoOnlinePrintsWizard" -Type "DWORD" -Value 1 -Force
		#Disable the file and folder Publish to Web option
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoPublishingWizard" -Type "DWORD" -Value 1 -Force
		#Prevent downloading a list of providers for wizards
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoWebServices" -Type "DWORD" -Value 1 -Force
		#Do not keep history of recently opened documents
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoRecentDocsHistory" -Type "DWORD" -Value 1 -Force
		#Clear history of recently opened documents on exit
		New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "ClearRecentDocsOnExit" -Type "DWORD" -Value 1 -Force
		#Disable lock screen app notifications
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "DisableLockScreenAppNotifications" -Type "DWORD" -Value 1 -Force
		#Disable Live Tiles push notifications
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "NoTileApplicationNotification" -Type "DWORD" -Value 1 -Force
		#Turn off "Look For An App In The Store" option
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "NoUseStoreOpenWith" -Type "DWORD" -Value 1 -Force
		#Do not show recently used files in Quick Access
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name "ShowRecent" -Value 0 -Type "DWORD" -Force
		reg delete "HKLM\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\HomeFolderDesktop\NameSpace\DelegateFolders\{3134ef9c-6b18-4996-ad04-ed5912e00eb5}" /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\HomeFolderDesktop\NameSpace\DelegateFolders\{3134ef9c-6b18-4996-ad04-ed5912e00eb5}" /f
		#Disable Sync Provider Notifications
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ShowSyncProviderNotifications" -Value 0 -Type "DWORD" -Force
		#Enable camera on/off OSD notifications
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\OEM\Device\Capture" -Name "NoPhysicalCameraLED" -Value 1 -Type "DWORD" -Force
		
		#Windows Defender Privacy Options
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Defender\Reporting" -Name "DisableGenericRePorts" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Defender\Spynet" -Name "LocalSettingOverrideSpynetReporting" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\MRT" -Name "DontReportInfectionInformation" -Type "DWORD" -Value 1 -Force
		#Remove the automatic start item for OneDrive from the default user profile registry hive
		Write-Host "remove onedrive automatic start"
		Remove-Item -Path "C:\\Windows\\ServiceProfiles\\NetworkService\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\OneDrive.lnk" -Force
		Start-Process C:\\Windows\\System32\\Reg.exe -ArgumentList "Load HKLM\\Temp C:\\Users\\Default\\NTUSER.DAT" -Wait
		Start-Process C:\\Windows\\System32\\Reg.exe -ArgumentList "Delete HKLM\\Temp\\Software\\Microsoft\\Windows\\CurrentVersion\\Run -Name OneDriveSetup -Force" -Wait
		Start-Process C:\\Windows\\System32\\Reg.exe -ArgumentList "Unload HKLM\\Temp"
		#Disable Cortana
		Write-Host "disabling cortona"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name AllowCortana -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name AllowSearchToUseLocation -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name DisableWebSearch -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name ConnectedSearchUseWeb -Type "DWORD" -Value 0 -Force
		#Disable Device Metadata Retrieval
		Write-Host "Disable Device Metadata Retrieval"
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\" -Name "Device Metadata" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Device Metadata" -Name PreventDeviceMetadataFromNetwork -Type "DWORD" -Value 1 -Force
		#Disable Find My Device
		Write-Host "Disable Find My Device"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\FindMyDevice" -Name AllowFindMyDevice -Type "DWORD" -Value 0 -Force
		#Disable Font Streaming
		Write-Host "Disable Font Streaming"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\System" -Name EnableFontProviders -Type "DWORD" -Value 0 -Force
		#Disable Insider Preview Builds
		Write-Host "Disable Insider Preview Builds"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\PreviewBuilds" -Name AllowBuildPreview -Type "DWORD" -Value 0 -Force
		Write-Host "IE Optimizations"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\PhishingFilter" -Name EnabledV9 -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\" -Name "Geolocation" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\Geolocation" -Name PolicyDisableGeolocation -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\CurrentVersion\Explorer\" -Name "AutoComplete" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CurrentVersion\Explorer\AutoComplete" -Name AutoSuggest -Type "String" -Value no -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer" -Name AllowServicePoweredQSA -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\" -Name "Suggested Sites" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\Suggested Sites" -Name Enabled -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\" -Name "FlipAhead" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\FlipAhead" -Name Enabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\Feeds" -Name BackgroundSyncStatus -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name AllowOnlineTips -Type "DWORD" -Value 0 -Force
		#Restrict License Manager
		#Write-Host "Restrict License Manager"
		#Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Services\LicenseManager" -Name Start -Type "DWORD" -Value 4 -Force
		#Disable Live Tiles
		Write-Host "Disable Live Tiles"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -Name NoCloudApplicationNotification -Type "DWORD" -Value 1 -Force
		#Disable Windows Mail App
		Write-Host "Disable Windows Mail App"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Mail" -Name ManualLaunchAllowed -Type "DWORD" -Value 0 -Force
		#Disable Network Connection Status Indicator
		#Write-Host "Disable Network Connection Status Indicator"
		#Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\NetworkConnectivityStatusIndicator" -Name NoActiveProbe -Type "DWORD" -Value 1 -Force
		#Disable Offline Maps
		Write-Host "Disable Offline Maps"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Maps" -Name AutoDownloadAndUpdateMapData -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Maps" -Name AllowUntriggeredNetworkTrafficOnSettingsPage -Type "DWORD" -Value 0 -Force
		#SMB Hardening
		Write-Host "SMB Hardening"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters" -Name "RestrictNullSessAccess" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "RestrictAnonymousSAM" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" "RequireSecuritySignature" -Value 256 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\LSA" -Name "RestrictAnonymous" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa" -Name "NoLMHash" -Type "DWORD" -Value 1 -Force
		Disable-WindowsOptionalFeature -Online -FeatureName "SMB1Protocol" -NoRestart
		Disable-WindowsOptionalFeature -Online -FeatureName "SMB1Protocol-Client" -NoRestart
		Disable-WindowsOptionalFeature -Online -FeatureName "SMB1Protocol-Server" -NoRestart
		Set-SmbClientConfiguration -RequireSecuritySignature $True -Force
		Set-SmbClientConfiguration -EnableSecuritySignature $True -Force
		Set-SmbServerConfiguration -EncryptData $True -Force
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		Write-Host "Finished Applying Gaming Tweaks!"
		Write-Host "Disabling Fast Startup..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power" -Name "HiberbootEnabled" -Type DWord -Value 0
		Write-Host "Disabling Telemetry..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\ProgramDataUpdater"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Autochk\Proxy"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\Consolidator"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\UsbCeip"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\DiskDiagnostic\Microsoft-Windows-DiskDiagnosticDataCollector"
		Write-Host "Disabling Application suggestions..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "ContentDeliveryAllowed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "OemPreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEverEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SilentInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338387Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338388Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353698Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SystemPaneSuggestionsEnabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type DWord -Value 1
		Write-Host "Disabling Activity History..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableActivityFeed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "PublishUserActivities" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "UploadUserActivities" -Type DWord -Value 0
		Write-Host "Disabling Location Tracking..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Type String -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Type DWord -Value 0
		Write-Host "Disabling automatic Maps updates..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\Maps" -Name "AutoUpdateEnabled" -Type DWord -Value 0
		Write-Host "Disabling Feedback..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Name "NumberOfSIUFInPeriod" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClient" -ErrorAction SilentlyContinue
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload" -ErrorAction SilentlyContinue
		Write-Host "Disabling Tailored Experiences..."
		If (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableTailoredExperiencesWithDiagnosticData" -Type DWord -Value 1
		Write-Host "Disabling Advertising ID..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" -Name "DisabledByGroupPolicy" -Type DWord -Value 1
		Write-Host "Disabling Error reporting..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Windows Error Reporting\QueueReporting"
		Write-Host "Stopping and disabling Diagnostics Tracking Service..."
		Stop-Service "DiagTrack" -WarningAction SilentlyContinue
		Set-Service "DiagTrack" -StartupType Disabled
		Write-Host "Stopping and disabling WAP Push Service..."
		Stop-Service "dmwappushservice" -WarningAction SilentlyContinue
		Set-Service "dmwappushservice" -StartupType Disabled
		Write-Host "Enabling F8 boot menu options..."
		bcdedit /set `{current`} bootmenupolicy Legacy
		Write-Host "Disabling Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value 0
		Write-Host "Disabling Storage Sense..."
		Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy" -Recurse -ErrorAction SilentlyContinue
		Write-Host "Stopping and disabling Superfetch service..."
		Stop-Service "SysMain" -WarningAction SilentlyContinue
		Set-Service "SysMain" -StartupType Disabled
		Write-Host "Showing task manager details..."
		$taskmgr = Start-Process -WindowStyle Hidden -FilePath taskmgr.exe -PassThru
		Do
		{
			Start-Sleep -Milliseconds 100
			$preferences = Get-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -ErrorAction SilentlyContinue
		}
		Until ($preferences)
		Stop-Process $taskmgr
		$preferences.Preferences[28] = 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -Type Binary -Value $preferences.Preferences
		Write-Host "Showing file operations details..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager" -Name "EnthusiastMode" -Type DWord -Value 1
		Write-Host "Hiding Task View ..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ShowTaskView" -Type DWord -Value 0
		Write-Host "Hiding People icon..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People" -Name "PeopleBand" -Type DWord -Value 0
		# Update 10 : Commented out this part of the code, because some people might not like it
		#Write-Host "Showing all tray icons..."
		#Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "EnableAutoTray" -Type DWord -Value 0
		Write-Host "Changing default Explorer view to This PC..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "LaunchTo" -Type DWord -Value 1
		Write-Host "Hiding 3D Objects icon from This PC..."
		Remove-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}" -Recurse -ErrorAction SilentlyContinue
		#Network Tweaks (Most of the tweaks were provided to me by emilwojcik93) | https://github.com/emilwojcik93/sc-cmd#introduction
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type DWord -Value 20 # Causes problems with Mapped Drives and File Sharing Programs!
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "SizReqBuf" -Type DWord -Value 17424
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name DefaultTTL -Value 64
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name TCP1323Opts -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name MaxFreeTcbs -Value 65536
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name MaxUserPort -Value 65534
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name GlobalMaxTcpWindowSize -Value 65535
		#SVCHost Tweak
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value 4194304
		Write-Host "Disable News and Interests"
		if (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		#Remove news and interest from taskbar
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Feeds" -Name "ShellFeedsTaskbarViewMode" -Type DWord -Value 2
		#Remove meet now  from taskbar
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		
		Write-Host "Removing AutoLogger file and restricting directory..."
		$autoLoggerDir = "$env:PROGRAMDATA\Microsoft\Diagnosis\ETLLogs\AutoLogger"
		If (Test-Path "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl")
		{
			Remove-Item "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl"
		}
		icacls $autoLoggerDir /deny SYSTEM:`(OI`)`(CI`)F
		
		#Disable LockScreen
		If (!(Test-Path "HKLM:\Software\Policies\Microsoft\Windows\Personalization"))
		{
			New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\Personalization"
		}
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Personalization" -Name "NoLockScreen" -Type DWord -Value 1
		Write-Host "Lock Screen has been disabled"
		
		#Disable Advertising ID
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo" -Name "Enabled" -Type DWord -Value 0
		Write-Host "Advertising ID has been disabled"
		
		#Disable SmartScreen
		if (!(Test-Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer"))
		{
			New-Item -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Force
		}
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name "SmartScreenEnabled" -Type String -Value "Off"
		if (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AppHost"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AppHost" -Force
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AppHost" -Name "EnableWebContentEvaluation" -Value 0
		Write-Host "SmartScreen has been disabled"
		
		#Disable File History
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\FileHistory"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\FileHistory" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\FileHistory" -Name "Disabled" -Type DWord -Value 1
		
		#Disable Hand Writing Reports
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\HandwritingErrorReports"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\HandwritingErrorReports" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\HandwritingErrorReports" -Name "PreventHandwritingErrorReports" -Type DWord -Value 1
		
		#Disable Location Tracking...
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocation" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocationScripting" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableSensors" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableWindowsLocationProvider" -Type DWord -Value 1
		
		#Disable Auto Map Downloading/Updating
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps" -Name "AutoDownloadAndUpdateMapData" -Type DWord -Value 0
		
		# Disable Application Notifications / This might break some notifications like Windows Defender ones!
		# Thanks Niecks#2591 for reporting
		# Line to remove it : Remove-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "NoTileApplicationNotification" -Force 
		
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings" -Force
		}
		Get-ChildItem -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings" -ErrorAction SilentlyContinue | ForEach-Object {
			Set-ItemProperty -Path $_.PsPath -Name "Enabled" -Type DWord -Value 0
			Set-ItemProperty -Path $_.PsPath -Name "LastNotificationAddedTime" -Type QWord -Value "0"
		}
		
		#Disable Windows Feeds
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		
		#Disable Game DVR
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		
		#Disable Keyboard BS
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\StickyKeys" -Name "Flags" -Value "506"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\Keyboard Response" -Name "Flags" -Value "122"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\ToggleKeys" -Name "Flags" -Value "58"
		
		#Disable Mitigations
		Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management' -Name FeatureSettingsOverride -Value 3
		Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management' -Name FeatureSettingsOverrideMask -Value 3
		
		Write-Host "Disabling some services and scheduled tasks"
		
		$Services = @(
			"*xbox*" # Xbox Services
			"*Xbl*" # Xbox Services
			"XboxNetApiSvc" # Xbox Services
			"LanmanWorkstation" # Causes problems with Mapped Drives and File Sharing Programs!
			"workfolderssvc" # Causes problems with Mapped Drives and File Sharing Programs!
			"WSearch" # Windows Search
			"PushToInstall" # Needed for Microsoft Store
			"icssvc" # Mobile Hotspot
			"MixedRealityOpenXRSvc" # Mixed Reality
			"WMPNetworkSvc" # Windows Media Player Sharing
			"LicenseManager" # License Manager for Microsoft Store
			"wisvc" # Insider Program
			"WerSvc" # Error Reporting
			"WalletService" # Wallet Service
			"lmhosts" # TCP/IP NetBIOS Helper
			"SysMain" # SuperFetch - Safe to disable if you have a SSD
			"svsvc" # Spot Verifier
			"sppsvc" # Software Protection
			"SCPolicySvc" # Smart Card Removal Policy
			"ScDeviceEnum" # Smart Card Device Enumeration Service
			"SCardSvr" # Smart Card
			"LanmanServer" # Server # Causes problems with Mapped Drives and File Sharing Programs!
			"SensorService" # Sensor Service
			"RetailDemo" # Retail Demo Service
			"RemoteRegistry" # Remote Registry
			"UmRdpService" # Remote Desktop Services UserMode Port Redirector
			"TermService" # Remote Desktop Services
			"SessionEnv" # Remote Desktop Configuration
			"RasMan" # Remote Access Connection Manager
			"RasAuto" # Remote Access Auto Connection Manager
			"TroubleshootingSvc" # Recommended Troubleshooting Service
			#"RmSvc" # Radio Management Service (Might be needed for laptops)
			"QWAVE" # Quality Windows Audio Video Experience
			"wercplsupport" # Problem Reports Control Panel Support
			"Spooler" # Print Spooler
			"PrintNotify" # Printer Extensions and Notifications
			"PhoneSvc" # Phone Service
			"SEMgrSvc" # Payments and NFC/SE Manager
			"WpcMonSvc" # Parental Controls
			"CscService" # Offline Files
			"InstallService" # Microsoft Store Install Service
			"SmsRouter" # Microsoft Windows SMS Router Service
			"smphost" # Microsoft Storage Spaces SMP
			"NgcCtnrSvc" # Microsoft Passport Container
			"MsKeyboardFilter" # Microsoft Keyboard Filter ... thanks (.AtomRadar treasury ♛#8267) for report. 
			"cloudidsvc" # Microsoft Cloud Identity Service
			"wlidsvc" # Microsoft Account Sign-in Assistant
			"*diagnosticshub*" # Microsoft (R) Diagnostics Hub Standard Collector Service
			"iphlpsvc" # IP Helper - Might break some VPN Clients
			"lfsvc" # Geolocation Service
			"fhsvc" # File History Service
			"Fax" # Fax
			"embeddedmode" # Embedded Mode
			"MapsBroker" # Downloaded Maps Manager
			"TrkWks" # Distributed Link Tracking Client
			"WdiSystemHost" # Diagnostic System Host
			"WdiServiceHost" # Diagnostic Service Host
			"DPS" # Diagnostic Policy Service
			"diagsvc" # Diagnostic Execution Service
			"DusmSvc" # Data Usage
			"VaultSvc" # Credential Manager
			"AppReadiness" # App Readiness
			"BITS" # Background Intelligent Transfer Service
			"DiagTrack" # Connected User Experiences and Telemetry
			"diagnosticshub.standardcollector.service" # Microsoft (R) Diagnostics Hub Standard Collector Service
			"dmwappushservice" # Device Management Wireless Application Protocol (WAP)
			"GraphicsPerfSvc" # Graphics performance monitor service
			"HomeGroupListener" # HomeGroup Listener
			"HomeGroupProvider" # HomeGroup Provider
			"lfsvc" # Geolocation Service
			"MapsBroker" # Downloaded Maps Manager
			"NvContainerLocalSystem" # NVIDIA LocalSystem Container (GeForce Experience / NVIDIA Telemetry)
			"PcaSvc" # Program Compatibility Assistant (PCA)
			"RemoteAccess" # Routing and Remote Access
			"RemoteRegistry" # Remote Registry
			"SysMain" # SysMain / Superfetch (100% Disk on HDDs)
			"TrkWks" # Distributed Link Tracking Client
			"WbioSrvc" # Windows Biometric Service (required for Fingerprint reader / facial detection)
			"WSearch" # Windows Search (100% Disk on HDDs)
			
			
			
			"DPS" # Diagnostic Policy Service
			"NetTcpPortSharing" # Net.Tcp Port Sharing Service
			"SharedAccess" # Internet Connection Sharing (ICS)
			"stisvc" # Windows Image Acquisition (WIA)
			#"WlanSvc" # WLAN AutoConfig
			"Wecsvc" # Windows Event Collector
			"WerSvc" # Windows Error Reporting Service
			"wscsvc" # Windows Security Center Service
			"WdiServiceHost" # Diagnostic Service Host
			"WdiSystemHost" # Diagnostic System Host
			"WMPNetworkSvc" # Windows Media Player Network Sharing Service (Miracast / Wi-Fi Direct)
			
			# [DIY] If you don't use Bluetooth devices
			
			"BTAGService" # Bluetooth Audio Gateway Service
			"bthserv" # Bluetooth Support Service
			
			# [DIY] If you don't use a Printer
			
			"Spooler" # Print Spooler
			"PrintNotify" # Printer Extensions and Notifications
			
			# [DIY] If you don't use Xbox Live and Games
			
			"XblAuthManager" # Xbox Live Auth Manager
			"XblGameSave" # Xbox Live Game Save Service
			"XboxGipSvc" # Xbox Accessory Management Service
			"XboxNetApiSvc" # Xbox Live Networking Service
			
			
			"WdNisSvc"
		)
		
		#Disable Services listed above
		foreach ($Service in $Services)
		{
			Get-Service -Name $Service -ErrorAction SilentlyContinue | Set-Service -StartupType Disabled
			if ($Service.Status -match "Run")
			{
				Stop-Service -Name $Service -Force -ErrorAction SilentlyContinue
				Write-Host "Stopping $Service"
				
			}
		}
		
		
		
		#Disable Delivery Optimization
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\DoSvc" -Name Start -Value 4
		#Disable WinHTTP Web Proxy Auto-Discovery Service (Please do not disable this, this will fuck up Windows Explorer)
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WinHttpAutoProxySvc" -Name Start -Value 4
		
		[Array] @(
			"\Microsoft\Windows\ApplicationData\CleanupTemporaryState"
			"\Microsoft\Windows\ApplicationData\DsSvcCleanup"
			"\Microsoft\Windows\AppxDeploymentClient\Pre-stagedappcleanup"
			"\Microsoft\Windows\Autochk\Proxy"
			"\Microsoft\Windows\BrokerInfrastructure\BgTaskRegistrationMaintenanceTask"
			"\Microsoft\Windows\capabilityaccessmanager\maintenancetasks"
			"\Microsoft\Windows\Chkdsk\ProactiveScan"
			"\Microsoft\Windows\Chkdsk\SyspartRepair"
			"\Microsoft\Windows\Clip\LicenseValidation"
			"\Microsoft\Windows\CloudExperienceHost\CreateObjectTask"
			"\Microsoft\Windows\CustomerExperienceImprovementProgram\Consolidator"
			"\Microsoft\Windows\CustomerExperienceImprovementProgram\UsbCeip"
			"\Microsoft\Windows\Defrag\ScheduledDefrag"
			"\Microsoft\Windows\DeviceInformation\Device"
			"\Microsoft\Windows\DeviceInformation\DeviceUser"
			"\Microsoft\Windows\DeviceSetup\MetadataRefresh"
			"\Microsoft\Windows\ExploitGuard\ExploitGuardMDMpolicyRefresh"
			"\Microsoft\Windows\Feedback\Siuf\DmClient"
			"\Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload"
			"\Microsoft\Windows\FileHistory\FileHistory*"
			"\Microsoft\Windows\Location\Notifications"
			"\Microsoft\Windows\Location\WindowsActionDialog"
			"\Microsoft\Windows\Maps\MapsToastTask"
			"\Microsoft\Windows\Maps\MapsUpdateTask"
			"\Microsoft\Windows\MemoryDiagnostic\ProcessMemoryDiagnosticEvents"
			"\Microsoft\Windows\MemoryDiagnostic\RunFullMemoryDiagnostic"
			"\Microsoft\Windows\MUI\LPRemove"
			"\Microsoft\Windows\Multimedia\SystemSoundsService"
			"\Microsoft\Windows\OfflineFiles\BackgroundSynchronization"
			"\Microsoft\Windows\OfflineFiles\LogonSynchronization"
			"\Microsoft\Windows\Printing\EduPrintProv"
			"\Microsoft\Windows\Printing\PrinterCleanupTask"
			"\Microsoft\Windows\PushToInstall\LoginCheck"
			"\Microsoft\Windows\PushToInstall\Registration"
			"\Microsoft\Windows\RetailDemo\CleanupOfflineContent"
			"\Microsoft\Windows\Servicing\StartComponentCleanup"
			"\Microsoft\Windows\Setup\SetupCleanupTask"
			"\Microsoft\Windows\SharedPC\AccountCleanup"
			"\Microsoft\Windows\UNP\RunUpdateNotificationMgr"
			"\Microsoft\Windows\WindowsErrorReporting\QueueReporting"
			"\Microsoft\XblGameSave\XblGameSaveTask"
		) | ForEach-Object{
			Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue
			Write-Host "Task `"$($_)`" was disabled"
		}
		
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching")) { New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power")) { New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling")) { New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKCU:\System\GameConfigStore")) { New-Item -Path "HKCU:\System\GameConfigStore" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKCU:\Control Panel\Desktop")) { New-Item -Path "HKCU:\Control Panel\Desktop" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1")) { New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c")) { New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c" -Force -ErrorAction SilentlyContinue }
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching' -Name 'SearchOrderConfig' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power' -Name 'HiberbootEnabled' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling' -Name 'PowerThrottlingOff' -Value 1 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_Enabled' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_FSEBehaviorMode' -Value 2 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'Win32_AutoGameModeDefaultProfile' -Value ([byte[]](0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)) -PropertyType Binary -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'Win32_GameModeRelatedProcesses' -Value ([byte[]](0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)) -PropertyType Binary -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_HonorUserFSEBehaviorMode' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_DXGIHonorFSEWindowsCompatible' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_EFSEFeatureFlags' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'MenuShowDelay' -Value '0' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'WaitToKillAppTimeout' -Value '5000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'HungAppTimeout' -Value '4000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'AutoEndTasks' -Value '1' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'LowLevelHooksTimeout' -Value 4096 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'WaitToKillServiceTimeout' -Value 8192 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1' -Name 'Attributes' -Value 2 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'DCSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'DCSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		
		Stop-Process Explorer.exe -Force
		
		#Disables Windows Feedback Experience
		Write-Host "Disabling DiagTrack Service ..."
		# Connected User Experiences and Telemetry
		Get-Service -Name DiagTrack | Stop-Service -Force
		Get-Service -Name DiagTrack | Set-Service -StartupType Disabled
		
		# Block connection for the Unified Telemetry Client Outbound Traffic
		Get-NetFirewallRule -Group DiagTrack | Set-NetFirewallRule -Enabled False -Action Block
		Write-Host "Setting Minimal Diagnostic Data Level ..."
		if (Get-WindowsEdition -Online | Where-Object -FilterScript { $_.Edition -like "Enterprise*" -or $_.Edition -eq "Education" })
		{
			# Diagnostic data off
			New-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection -Name AllowTelemetry -PropertyType DWord -Value 0 -Force
		}
		else
		{
			# Send required diagnostic data
			New-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection -Name AllowTelemetry -PropertyType DWord -Value 1 -Force
		}
		New-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection -Name MaxTelemetryAllowed -PropertyType DWord -Value 1 -Force
		
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Diagnostics\DiagTrack -Name ShowedToastAtLevel -PropertyType DWord -Value 1 -Force
		
		Write-Host "Disabling Windows Feedback Experience program"
		$Advertising = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		If (Test-Path $Advertising)
		{
			Set-ItemProperty $Advertising Enabled -Value 0
		}
		
		#Stops Cortana from being used as part of your Windows Search Function
		Write-Host "Stopping Cortana from being used as part of your Windows Search Function"
		$Search = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		If (Test-Path $Search)
		{
			Set-ItemProperty $Search AllowCortana -Value 0
		}
		
		#Disables Web Search in Start Menu
		Write-Host "Disabling Bing Search in Start Menu"
		$WebSearch = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		Set-ItemProperty "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" BingSearchEnabled -Value 0
		If (!(Test-Path $WebSearch))
		{
			New-Item $WebSearch
		}
		Set-ItemProperty $WebSearch DisableWebSearch -Value 1
		
		#Stops the Windows Feedback Experience from sending anonymous data
		Write-Host "Stopping the Windows Feedback Experience program"
		$Period = "HKCU:\Software\Microsoft\Siuf\Rules"
		If (!(Test-Path $Period))
		{
			New-Item $Period
		}
		Set-ItemProperty $Period PeriodInNanoSeconds -Value 0
		
		# Took from: https://docs.microsoft.com/pt-br/windows-server/remote/remote-desktop-services/rds-vdi-recommendations#task-scheduler
		$DisableScheduledTasks = @(
			"\Microsoft\Office\OfficeTelemetryAgentLogOn"
			"\Microsoft\Office\OfficeTelemetryAgentFallBack"
			"\Microsoft\Office\Office 15 Subscription Heartbeat"
			"\Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser"
			"\Microsoft\Windows\Application Experience\ProgramDataUpdater"
			"\Microsoft\Windows\Application Experience\StartupAppTask"
			"\Microsoft\Windows\Autochk\Proxy"
			"\Microsoft\Windows\Customer Experience Improvement Program\Consolidator" # Recommended state for VDI use
			"\Microsoft\Windows\Customer Experience Improvement Program\KernelCeipTask" # Recommended state for VDI use
			"\Microsoft\Windows\Customer Experience Improvement Program\Uploader"
			"\Microsoft\Windows\Customer Experience Improvement Program\UsbCeip" # Recommended state for VDI use
			"\Microsoft\Windows\Defrag\ScheduledDefrag" # Recommended state for VDI use
			"\Microsoft\Windows\DiskDiagnostic\Microsoft-Windows-DiskDiagnosticDataCollector"
			"\Microsoft\Windows\Location\Notifications" # Recommended state for VDI use
			"\Microsoft\Windows\Location\WindowsActionDialog" # Recommended state for VDI use
			"\Microsoft\Windows\Maintenance\WinSAT" # Recommended state for VDI use
			"\Microsoft\Windows\Maps\MapsToastTask" # Recommended state for VDI use
			"\Microsoft\Windows\Maps\MapsUpdateTask" # Recommended state for VDI use
			"\Microsoft\Windows\Mobile Broadband Accounts\MNO Metadata Parser" # Recommended state for VDI use
			"\Microsoft\Windows\Power Efficiency Diagnostics\AnalyzeSystem" # Recommended state for VDI use
			"\Microsoft\Windows\Retail Demo\CleanupOfflineContent" # Recommended state for VDI use
			"\Microsoft\Windows\Shell\FamilySafetyMonitor" # Recommended state for VDI use
			"\Microsoft\Windows\Shell\FamilySafetyRefreshTask" # Recommended state for VDI use
			"\Microsoft\Windows\Shell\FamilySafetyUpload"
			"\Microsoft\Windows\Windows Media Sharing\UpdateLibrary" # Recommended state for VDI use
		)
		
		ForEach ($ScheduledTask in $DisableScheduledTasks)
		{
			Disable-ScheduledTask -TaskName $ScheduledTask -ErrorAction SilentlyContinue
			Write-Host "Task `"$($ScheduledTask)`" was disabled"
		}
		#Prevents bloatware applications from returning and removes Start Menu suggestions               
		Write-Host "Adding Registry key to prevent bloatware apps from returning"
		$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		$registryOEM = "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager"
		If (!(Test-Path $registryPath))
		{
			New-Item $registryPath
		}
		Set-ItemProperty $registryPath DisableWindowsConsumerFeatures -Value 1
		
		If (!(Test-Path $registryOEM))
		{
			New-Item $registryOEM
		}
		Set-ItemProperty $registryOEM  ContentDeliveryAllowed -Value 0
		Set-ItemProperty $registryOEM  OemPreInstalledAppsEnabled -Value 0
		Set-ItemProperty $registryOEM  PreInstalledAppsEnabled -Value 0
		Set-ItemProperty $registryOEM  PreInstalledAppsEverEnabled -Value 0
		Set-ItemProperty $registryOEM  SilentInstalledAppsEnabled -Value 0
		Set-ItemProperty $registryOEM  SystemPaneSuggestionsEnabled -Value 0
		
		#Preping mixed Reality Portal for removal    
		Write-Host "Setting Mixed Reality Portal value to 0 so that you can uninstall it in Settings"
		$Holo = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic"
		If (Test-Path $Holo)
		{
			Set-ItemProperty $Holo  FirstRunSucceeded -Value 0
		}
		
		#Disables Wi-fi Sense
		Write-Host "Disabling Wi-Fi Sense"
		$WifiSense1 = "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting"
		$WifiSense2 = "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowAutoConnectToWiFiSenseHotspots"
		$WifiSense3 = "HKLM:\SOFTWARE\Microsoft\WcmSvc\wifinetworkmanager\config"
		If (!(Test-Path $WifiSense1))
		{
			New-Item $WifiSense1
		}
		Set-ItemProperty $WifiSense1  Value -Value 0
		If (!(Test-Path $WifiSense2))
		{
			New-Item $WifiSense2
		}
		Set-ItemProperty $WifiSense2  Value -Value 0
		Set-ItemProperty $WifiSense3  AutoConnectAllowedOEM -Value 0
		
		#Disables live tiles
		Write-Host "Disabling live tiles"
		$Live = "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications"
		If (!(Test-Path $Live))
		{
			New-Item $Live
		}
		Set-ItemProperty $Live  NoTileApplicationNotification -Value 1
		
		#Turns off Data Collection via the AllowTelemtry key by changing it to 0
		Write-Host "Turning off Data Collection"
		$DataCollection1 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection"
		$DataCollection2 = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
		$DataCollection3 = "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection"
		If (Test-Path $DataCollection1)
		{
			Set-ItemProperty $DataCollection1  AllowTelemetry -Value 0
		}
		If (Test-Path $DataCollection2)
		{
			Set-ItemProperty $DataCollection2  AllowTelemetry -Value 0
		}
		If (Test-Path $DataCollection3)
		{
			Set-ItemProperty $DataCollection3  AllowTelemetry -Value 0
		}
		
		#Disabling Location Tracking
		Write-Host "Disabling Location Tracking"
		$SensorState = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}"
		$LocationConfig = "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration"
		If (!(Test-Path $SensorState))
		{
			New-Item $SensorState
		}
		Set-ItemProperty $SensorState SensorPermissionState -Value 0
		If (!(Test-Path $LocationConfig))
		{
			New-Item $LocationConfig
		}
		Set-ItemProperty $LocationConfig Status -Value 0
		
		#Disables People icon on Taskbar
		Write-Host "Disabling People icon on Taskbar"
		$People = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People'
		If (Test-Path $People)
		{
			Set-ItemProperty $People -Name PeopleBand -Value 0
		}
		
		#Disables scheduled tasks that are considered unnecessary 
		Write-Host "Disabling scheduled tasks"
		Get-ScheduledTask  XblGameSaveTaskLogon | Disable-ScheduledTask
		Get-ScheduledTask  XblGameSaveTask | Disable-ScheduledTask
		Get-ScheduledTask  Consolidator | Disable-ScheduledTask
		Get-ScheduledTask  UsbCeip | Disable-ScheduledTask
		Get-ScheduledTask  DmClient | Disable-ScheduledTask
		Get-ScheduledTask  DmClientOnScenarioDownload | Disable-ScheduledTask
		
		Write-Host "Stopping and disabling Diagnostics Tracking Service"
		#Disabling the Diagnostics Tracking Service
		Stop-Service "DiagTrack"
		Set-Service "DiagTrack" -StartupType Disabled
		
		
		Write-Host "Removing CloudStore from registry if it exists"
		$CloudStore = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\CloudStore'
		If (Test-Path $CloudStore)
		{
			Stop-Process Explorer.exe -Force
			Remove-Item $CloudStore -Recurse -Force
			Start-Process Explorer.exe -Wait
		}
		Write-Host "Disabling Cortana"
		$Cortana1 = "HKCU:\SOFTWARE\Microsoft\Personalization\Settings"
		$Cortana2 = "HKCU:\SOFTWARE\Microsoft\InputPersonalization"
		$Cortana3 = "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore"
		If (!(Test-Path $Cortana1))
		{
			New-Item $Cortana1
		}
		Set-ItemProperty $Cortana1 AcceptedPrivacyPolicy -Value 0
		If (!(Test-Path $Cortana2))
		{
			New-Item $Cortana2
		}
		Set-ItemProperty $Cortana2 RestrictImplicitTextCollection -Value 1
		Set-ItemProperty $Cortana2 RestrictImplicitInkCollection -Value 1
		If (!(Test-Path $Cortana3))
		{
			New-Item $Cortana3
		}
		Set-ItemProperty $Cortana3 HarvestContacts -Value 0
		
		Write-Host "Disabling Telemetry..."
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\ProgramDataUpdater"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Autochk\Proxy"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\Consolidator"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\UsbCeip"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\DiskDiagnostic\Microsoft-Windows-DiskDiagnosticDataCollector"
		Write-Host "Disabling Wi-Fi Sense..."
		If (!(Test-Path "HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting"))
		{
			New-Item -Path "HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting" -Force
		}
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting" -Name "Value" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowAutoConnectToWiFiSenseHotspots" -Name "Value" -Type DWord -Value 0
		Write-Host "Disabling Application suggestions..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "ContentDeliveryAllowed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "OemPreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEverEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SilentInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338387Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338388Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353698Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SystemPaneSuggestionsEnabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type DWord -Value 1
		Write-Host "Disabling Activity History..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableActivityFeed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "PublishUserActivities" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "UploadUserActivities" -Type DWord -Value 0
		# Keep Location Tracking commented out if you want the ability to locate your device
		Write-Host "Disabling Location Tracking..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Type String -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Type DWord -Value 0
		Write-Host "Disabling automatic Maps updates..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\Maps" -Name "AutoUpdateEnabled" -Type DWord -Value 0
		Write-Host "Disabling Feedback..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Name "NumberOfSIUFInPeriod" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClient" -ErrorAction SilentlyContinue
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload" -ErrorAction SilentlyContinue
		Write-Host "Disabling Tailored Experiences..."
		If (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableTailoredExperiencesWithDiagnosticData" -Type DWord -Value 1
		Write-Host "Disabling Advertising ID..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" -Name "DisabledByGroupPolicy" -Type DWord -Value 1
		Write-Host "Disabling Error reporting..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Windows Error Reporting\QueueReporting"
		Write-Host "Restricting Windows Update P2P only to local network..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config" -Name "DODownloadMode" -Type DWord -Value 1
		Write-Host "Stopping and disabling Diagnostics Tracking Service..."
		Stop-Service "DiagTrack" -WarningAction SilentlyContinue
		Set-Service "DiagTrack" -StartupType Disabled
		Write-Host "Stopping and disabling WAP Push Service..."
		Stop-Service "dmwappushservice" -WarningAction SilentlyContinue
		Set-Service "dmwappushservice" -StartupType Disabled
		Write-Host "Enabling F8 boot menu options..."
		bcdedit /set `{current`} bootmenupolicy Legacy
		Write-Host "Stopping and disabling Home Groups services..."
		Stop-Service "HomeGroupListener" -WarningAction SilentlyContinue
		Set-Service "HomeGroupListener" -StartupType Disabled
		Stop-Service "HomeGroupProvider" -WarningAction SilentlyContinue
		Set-Service "HomeGroupProvider" -StartupType Disabled
		Write-Host "Disabling Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value 0
		Write-Host "Disabling Storage Sense..."
		Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy" -Recurse -ErrorAction SilentlyContinue
		Write-Host "Stopping and disabling Superfetch service..."
		Stop-Service "SysMain" -WarningAction SilentlyContinue
		Set-Service "SysMain" -StartupType Disabled
		Write-Host "Disabling Hibernation..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Session Manager\Power" -Name "HibernteEnabled" -Type Dword -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" -Name "ShowHibernateOption" -Type Dword -Value 0
		Write-Host "Showing task manager details..."
		$taskmgr = Start-Process -WindowStyle Hidden -FilePath taskmgr.exe -PassThru
		Do
		{
			Start-Sleep -Milliseconds 100
			$preferences = Get-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -ErrorAction SilentlyContinue
		}
		Until ($preferences)
		Stop-Process $taskmgr
		$preferences.Preferences[28] = 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -Type Binary -Value $preferences.Preferences
		Write-Host "Showing file operations details..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager" -Name "EnthusiastMode" -Type DWord -Value 1
		Write-Host "Hiding People icon..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People" -Name "PeopleBand" -Type DWord -Value 0
		Write-Host "Hide tray icons..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "EnableAutoTray" -Type DWord -Value 1
		Write-Host "Enabling NumLock after startup..."
		If (!(Test-Path "HKU:"))
		{
			New-PSDrive -Name HKU -PSProvider Registry -Root HKEY_USERS
		}
		Set-ItemProperty -Path "HKU:\.DEFAULT\Control Panel\Keyboard" -Name "InitialKeyboardIndicators" -Type DWord -Value 2147483650
		Add-Type -AssemblyName System.Windows.Forms
		If (!([System.Windows.Forms.Control]::IsKeyLocked('NumLock')))
		{
			$wsh = New-Object -ComObject WScript.Shell
			$wsh.SendKeys('{NUMLOCK}')
		}
		
		Write-Host "Changing default Explorer view to This PC..."
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "LaunchTo" -Type DWord -Value 1
		
		Write-Host "Hiding 3D Objects icon from This PC..."
		Remove-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}" -Recurse -ErrorAction SilentlyContinue
		
		# Network Tweaks
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type DWord -Value 20
		
		# Group svchost.exe processes
		$ram = (Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum / 1kb
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value $ram -Force
		
		#Write-Host "Installing Windows Media Player..."
		#Enable-WindowsOptionalFeature -Online -FeatureName "WindowsMediaPlayer" -NoRestart -WarningAction SilentlyContinue 
		
		Write-Host "Disable News and Interests"
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		# Remove "News and Interest" from taskbar
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Feeds" -Name "ShellFeedsTaskbarViewMode" -Type DWord -Value 2
		
		# remove "Meet Now"  from taskbar
		
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force
		}
		
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		
		Write-Host "Removing AutoLogger file and restricting directory..."
		$autoLoggerDir = "$env:PROGRAMDATA\Microsoft\Diagnosis\ETLLogs\AutoLogger"
		If (Test-Path "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl")
		{
			Remove-Item "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl"
		}
		icacls $autoLoggerDir /deny SYSTEM:`(OI`)`(CI`)F
		
		Write-Host "Stopping and disabling Diagnostics Tracking Service..."
		Stop-Service "DiagTrack"
		Set-Service "DiagTrack" -StartupType Disabled
		
		Write-Host "Showing known file extensions..."
		Write-Host "Tweaking For Less Ram Usage..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "HideFileExt" -Type DWord -Value 0
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKCU:\System\GameConfigStore") -ne $true) { New-Item "HKCU:\System\GameConfigStore" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKCU:\Control Panel\Desktop") -ne $true) { New-Item "HKCU:\Control Panel\Desktop" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender") -ne $true) { New-Item "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -force -ea SilentlyContinue };
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control' -Name 'SvcHostSplitThresholdInKB' -Value 67108864 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control' -Name 'WaitToKillServiceTimeout' -Value '2000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile' -Name 'NetworkThrottlingIndex' -Value -1 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile' -Name 'SystemResponsiveness' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Priority' -Value 6 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Priority' -Value 5 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'BackgroundPriority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Scheduling Category' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Priority' -Value 4 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Background Only' -Value 'False' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Priority' -Value 6 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Scheduling Category' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'SFIO Priority' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Background Only' -Value 'False' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'BackgroundPriority' -Value 4 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Priority' -Value 3 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Background Only' -Value 'False' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Priority' -Value 1 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Scheduling Category' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Priority' -Value 5 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Background Only' -Value 'False' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Priority' -Value 6 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Scheduling Category' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'SFIO Priority' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching' -Name 'SearchOrderConfig' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power' -Name 'HiberbootEnabled' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling' -Name 'PowerThrottlingOff' -Value 1 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_Enabled' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_FSEBehaviorMode' -Value 2 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'Win32_AutoGameModeDefaultProfile' -Value ([byte[]](0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)) -PropertyType Binary -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'Win32_GameModeRelatedProcesses' -Value ([byte[]](0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)) -PropertyType Binary -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_HonorUserFSEBehaviorMode' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_DXGIHonorFSEWindowsCompatible' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_EFSEFeatureFlags' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power' -Name 'HibernateEnabledDefault' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'MenuShowDelay' -Value '0' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'WaitToKillAppTimeout' -Value '5000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'HungAppTimeout' -Value '4000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'AutoEndTasks' -Value '1' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'LowLevelHooksTimeout' -Value 4096 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'WaitToKillServiceTimeout' -Value 8192 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1' -Name 'Attributes' -Value 2 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'DCSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'DCSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		#New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender' -Name 'DisableAntiSpyware' -Value 1 -PropertyType DWord -Force -ea SilentlyContinue;
		
		
		# Service tweaks to Manual 
		
		$services = @(
			"diagnosticshub.standardcollector.service" # Microsoft (R) Diagnostics Hub Standard Collector Service
			"DiagTrack" # Diagnostics Tracking Service
			"DPS"
			"dmwappushservice" # WAP Push Message Routing Service (see known issues)
			"lfsvc" # Geolocation Service
			"MapsBroker" # Downloaded Maps Manager
			"NetTcpPortSharing" # Net.Tcp Port Sharing Service
			"RemoteAccess" # Routing and Remote Access
			"RemoteRegistry" # Remote Registry
			"SharedAccess" # Internet Connection Sharing (ICS)
			"TrkWks" # Distributed Link Tracking Client
			#"WbioSrvc"                                     # Windows Biometric Service (required for Fingerprint reader / facial detection)
			#"WlanSvc"                                      # WLAN AutoConfig
			"WMPNetworkSvc" # Windows Media Player Network Sharing Service
			"wscsvc" # Windows Security Center Service
			"WSearch" # Windows Search
			"XblAuthManager" # Xbox Live Auth Manager
			"XblGameSave" # Xbox Live Game Save Service
			"XboxNetApiSvc" # Xbox Live Networking Service
			"XboxGipSvc" #Disables Xbox Accessory Management Service
			"WerSvc" #disables windows error reporting
			"Spooler" #Disables your printer
			"Fax" #Disables fax
			"fhsvc" #Disables fax histroy
			"gupdate" #Disables google update
			"gupdatem" #Disable another google update
			"stisvc" #Disables Windows Image Acquisition (WIA)
			"AJRouter" #Disables (needed for AllJoyn Router Service)
			"MSDTC" # Disables Distributed Transaction Coordinator
			"WpcMonSvc" #Disables Parental Controls
			"PhoneSvc" #Disables Phone Service(Manages the telephony state on the device)
			"PrintNotify" #Disables Windows printer notifications and extentions
			"PcaSvc" #Disables Program Compatibility Assistant Service
			"WPDBusEnum" #Disables Portable Device Enumerator Service
			#"LicenseManager"                               #Disable LicenseManager(Windows store may not work properly)
			"seclogon" #Disables  Secondary Logon(disables other credentials only password will work)
			"SysMain" #Disables sysmain
			"lmhosts" #Disables TCP/IP NetBIOS Helper
			"wisvc" #Disables Windows Insider program(Windows Insider will not work)
			"FontCache" #Disables Windows font cache
			"RetailDemo" #Disables RetailDemo whic is often used when showing your device
			"ALG" # Disables Application Layer Gateway Service(Provides support for 3rd party protocol plug-ins for Internet Connection Sharing)
			"BFE" #Disables Base Filtering Engine (BFE) (is a service that manages firewall and Internet Protocol security)
			"BrokerInfrastructure" #Disables Windows infrastructure service that controls which background tasks can run on the system.
			"SCardSvr" #Disables Windows smart card
			"EntAppSvc" #Disables enterprise application management.
			"BthAvctpSvc" #Disables AVCTP service (if you use  Bluetooth Audio Device or Wireless Headphones. then don't disable this)
			#"FrameServer"                                   #Disables Windows Camera Frame Server(this allows multiple clients to access video frames from camera devices.)
			"Browser" #Disables computer browser
			"BthAvctpSvc" #AVCTP service (This is Audio Video Control Transport Protocol service.)
			#"BDESVC"                                        #Disables bitlocker
			"iphlpsvc" #Disables ipv6 but most websites don't use ipv6 they use ipv4     
			"edgeupdate" # Disables one of edge update service  
			"MicrosoftEdgeElevationService" # Disables one of edge  service 
			"edgeupdatem" # disbales another one of update service (disables edgeupdatem)                          
			"SEMgrSvc" #Disables Payments and NFC/SE Manager (Manages payments and Near Field Communication (NFC) based secure elements)
			#"PNRPsvc"                                      # Disables peer Name Resolution Protocol ( some peer-to-peer and collaborative applications, such as Remote Assistance, may not function, Discord will still work)
			#"p2psvc"                                       # Disbales Peer Name Resolution Protocol(nables multi-party communication using Peer-to-Peer Grouping.  If disabled, some applications, such as HomeGroup, may not function. Discord will still work)
			#"p2pimsvc"                                     # Disables Peer Networking Identity Manager (Peer-to-Peer Grouping services may not function, and some applications, such as HomeGroup and Remote Assistance, may not function correctly.Discord will still work)
			"PerfHost" #Disables  remote users and 64-bit processes to query performance .
			"BcastDVRUserService_48486de" #Disables GameDVR and Broadcast   is used for Game Recordings and Live Broadcasts
			"CaptureService_48486de" #Disables ptional screen capture functionality for applications that call the Windows.Graphics.Capture API.  
			"cbdhsvc_48486de" #Disables   cbdhsvc_48486de (clipboard service it disables)
			#"BluetoothUserService_48486de"                  #disbales BluetoothUserService_48486de (The Bluetooth user service supports proper functionality of Bluetooth features relevant to each user session.)
			"WpnService" #Disables WpnService (Push Notifications may not work )
			#"StorSvc"                                       #Disables StorSvc (usb external hard drive will not be reconised by windows)
			"RtkBtManServ" #Disables Realtek Bluetooth Device Manager Service
			"QWAVE" #Disables Quality Windows Audio Video Experience (audio and video might sound worse)
			#Hp services
			"HPAppHelperCap"
			"HPDiagsCap"
			"HPNetworkCap"
			"HPSysInfoCap"
			"HpTouchpointAnalyticsService"
			#hyper-v services
			"HvHost"
			"vmickvpexchange"
			"vmicguestinterface"
			"vmicshutdown"
			"vmicheartbeat"
			"vmicvmsession"
			"vmicrdv"
			"vmictimesync"
			# Services which cannot be disabled
			#"WdNisSvc"
		)
		
		foreach ($service in $services)
		{
			Write-Host "Setting $service StartupType to Disable"
			Get-Service -Name $service -ErrorAction SilentlyContinue | Set-Service -StartupType Disable
		}
		
		
		$services = @(
			"diagnosticshub.standardcollector.service" # Microsoft (R) Diagnostics Hub Standard Collector Service
			"DiagTrack" # Diagnostics Tracking Service
			"dmwappushservice" # WAP Push Message Routing Service (see known issues)
			"lfsvc" # Geolocation Service
			"MapsBroker" # Downloaded Maps Manager
			"NetTcpPortSharing" # Net.Tcp Port Sharing Service
			"RemoteAccess" # Routing and Remote Access
			"RemoteRegistry" # Remote Registry
			"SharedAccess" # Internet Connection Sharing (ICS)
			"TrkWks" # Distributed Link Tracking Client
			"WbioSrvc" # Windows Biometric Service (required for Fingerprint reader / facial detection)
			#"WlanSvc" # WLAN AutoConfig
			"WMPNetworkSvc" # Windows Media Player Network Sharing Service
			"wscsvc" # Windows Security Center Service
			"WSearch" # Windows Search
			"XblAuthManager" # Xbox Live Auth Manager
			"XblGameSave" # Xbox Live Game Save Service
			"XboxNetApiSvc" # Xbox Live Networking Service
			"XboxGipSvc" #Disables Xbox Accessory Management Service
			"WerSvc" #disables windows error reporting
			"Spooler" #Disables your printer
			"Fax" #Disables fax
			"fhsvc" #Disables fax histroy
			"gupdate" #Disables google update
			"gupdatem" #Disable another google update
			"stisvc" #Disables Windows Image Acquisition (WIA)
			"AJRouter" #Disables (needed for AllJoyn Router Service)
			"MSDTC" # Disables Distributed Transaction Coordinator
			"WpcMonSvc" #Disables Parental Controls
			"PhoneSvc" #Disables Phone Service(Manages the telephony state on the device)
			"PrintNotify" #Disables Windows printer notifications and extentions
			"PcaSvc" #Disables Program Compatibility Assistant Service
			"WPDBusEnum" #Disables Portable Device Enumerator Service
			"LicenseManager" #Disable LicenseManager(Windows store may not work properly)
			"seclogon" #Disables  Secondary Logon(disables other credentials only password will work)
			"SysMain" #Disables sysmain
			"lmhosts" #Disables TCP/IP NetBIOS Helper
			"wisvc" #Disables Windows Insider program(Windows Insider will not work)
			"FontCache" #Disables Windows font cache
			"RetailDemo" #Disables RetailDemo whic is often used when showing your device
			"ALG" # Disables Application Layer Gateway Service(Provides support for 3rd party protocol plug-ins for Internet Connection Sharing)
			"BFE" #Disables Base Filtering Engine (BFE) (is a service that manages firewall and Internet Protocol security)
			"BrokerInfrastructure" #Disables Windows infrastructure service that controls which background tasks can run on the system.
			"SCardSvr" #Disables Windows smart card
			"EntAppSvc" #Disables enterprise application management.
			"BthAvctpSvc" #Disables AVCTP service (if you use  Bluetooth Audio Device or Wireless Headphones. then don't disable this)
			"FrameServer" #Disables Windows Camera Frame Server(this allows multiple clients to access video frames from camera devices.)
			"Browser" #Disables computer browser
			"BthAvctpSvc" #AVCTP service (This is Audio Video Control Transport Protocol service.)
			"BDESVC" #Disables bitlocker
			"iphlpsvc" #Disables ipv6 but most websites don't use ipv6 they use ipv4     
			"edgeupdate" # Disables one of edge update service  
			"MicrosoftEdgeElevationService" # Disables one of edge  service 
			"edgeupdatem" # disbales another one of update service (disables edgeupdatem)                          
			"SEMgrSvc" #Disables Payments and NFC/SE Manager (Manages payments and Near Field Communication (NFC) based secure elements)
			"PNRPsvc" # Disables peer Name Resolution Protocol ( some peer-to-peer and collaborative applications, such as Remote Assistance, may not function, Discord will still work)
			"p2psvc" # Disbales Peer Name Resolution Protocol(nables multi-party communication using Peer-to-Peer Grouping.  If disabled, some applications, such as HomeGroup, may not function. Discord will still work)
			"p2pimsvc" # Disables Peer Networking Identity Manager (Peer-to-Peer Grouping services may not function, and some applications, such as HomeGroup and Remote Assistance, may not function correctly.Discord will still work)
			"PerfHost" #Disables  remote users and 64-bit processes to query performance .
			"BcastDVRUserService_48486de" #Disables GameDVR and Broadcast   is used for Game Recordings and Live Broadcasts
			"CaptureService_48486de" #Disables ptional screen capture functionality for applications that call the Windows.Graphics.Capture API.  
			"cbdhsvc_48486de" #Disables   cbdhsvc_48486de (clipboard service it disables)
			"BluetoothUserService_48486de" #disbales BluetoothUserService_48486de (The Bluetooth user service supports proper functionality of Bluetooth features relevant to each user session.)
			"WpnService" #Disables WpnService (Push Notifications may not work )
			"StorSvc" #Disables StorSvc (usb external hard drive will not be reconised by windows)
			"RtkBtManServ" #Disables Realtek Bluetooth Device Manager Service
			"QWAVE" #Disables Quality Windows Audio Video Experience (audio and video might sound worse)
			#Hp services
			"HPAppHelperCap"
			"HPDiagsCap"
			"HPNetworkCap"
			"HPSysInfoCap"
			"HpTouchpointAnalyticsService"
			#hyper-v services
			"HvHost"
			"vmickvpexchange"
			"vmicguestinterface"
			"vmicshutdown"
			"vmicheartbeat"
			"vmicvmsession"
			"vmicrdv"
			"vmictimesync"
			Services which cannot be disabled
			"WdNisSvc"
		)
		
		foreach ($service in $services)
		{
			# -ErrorAction SilentlyContinue is so it doesn't write an error to stdout if a service doesn't exist
			
			Write-Host "Setting $service StartupType to disabled"
			Get-Service -Name $service -ErrorAction SilentlyContinue | Set-Service -StartupType Disabled
			
			$running = Get-Service -Name $service -ErrorAction SilentlyContinue | Where-Object { $_.Status -eq 'Running' }
			if ($running)
			{
				Write-Host "Stopping $service"
				Stop-Service -Name $service
			}
		}
		
		Write-Host "Disabling Windows 10 News and Interests Feed..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		Write-Host "Running O&O Shutup with My Custom Settings"
		Import-Module BitsTransfer
		Start-BitsTransfer -Source "https://raw.githubusercontent.com/paint29/Windows-Optimization-Toolbox/main/ooshutup10.cfg" -Destination ooshutup10.cfg
		Start-BitsTransfer -Source "https://dl5.oo-software.com/files/ooshutup10/OOSU10.exe" -Destination OOSU10.exe
		.\OOSU10.exe ooshutup10.cfg
		Write-Host "Disabling power throttling..."
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling" -Name "PowerThrottlingOff" -Type DWord -Value 1
		Write-Host "Stopping and disabling Diagnostics Tracking Service..."
		Stop-Service "DiagTrack" -WarningAction SilentlyContinue
		Set-Service "DiagTrack" -StartupType Disabled
		Write-Host "Stopping and disabling WAP Push Service..."
		Stop-Service "dmwappushservice" -WarningAction SilentlyContinue
		Set-Service "dmwappushservice" -StartupType Disabled
		Write-Host "Setting Processor scheduling..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\PriorityControl" -Name "Win32PrioritySeparation" -Type DWord -Value 0x00000026
		Write-Host "Disabling aero shake..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "DisallowShaking" -Type DWord -Value 0
		Write-Host "Show BSOD details instead of the sad smiley..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\CrashControl" -Name "DisplayParameters" -Type DWord -Value 1
		New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "NoTileApplicationNotification" -Type DWord -Value 1
		Write-Host "Setting Wallpaper Quality to 100%..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "JPEGImportQuality" -Type DWord -Value 100
		Write-Host "Disabling search history..."
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Windows\Explorer" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\Explorer" -Name "DisableSearchBoxSuggestions" -Type DWord -Value 1
		Write-Host "Disabling - Shortcut Word..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "link" -Type Binary -Value ([byte[]](0, 0, 0, 0))
		Write-Host "Disabling Mouse Keys Keyboard Shortcut..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\MouseKeys" -Name "Flags" -Type String -Value "186"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\MouseKeys" -Name "MaximumSpeed" -Type String -Value "40"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\MouseKeys" -Name "TimeToMaximumSpeed" -Type String -Value "3000"
		Write-Host "Disabling Windows Transparency..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "EnableTransparency" -Type DWord -Value 0
		Write-Host "Turning Off Safe Search..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\SearchSettings" -Name "SafeSearchMode" -Type DWord -Value 0
		Write-Host "Disabling Cloud Search..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCloudSearch" -Type DWord -Value 0
		Write-Host "Disabling Device History..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name "DeviceHistoryEnabled" -Type DWord -Value 0
		Write-Host "Disabling Windows Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowFullControl" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value 0
		Write-Host "Disabling Search Histroy..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\SearchSettings" -Name "IsDeviceSearchHistoryEnabled" -Type DWord -Value 0
		Write-Host "Disabling Microsoft MeetNow..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Adding SVCHost Tweak..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value 4194304
		Write-Host "Enabling Quality of Life Tweaks..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\UserProfileEngagement" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\UserProfileEngagement" -Name "ScoobeSystemSettingEnabled" -Type DWord -Value 0 -ErrorAction SilentlyContinue #disable annoying Get even more out of Windows
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility" -Name "DynamicScrollbars" -Type DWord -Value 0 #disable Hide Scroll bars
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "SmoothScroll" -Type DWord -Value 0 #disable smooth scrolling 
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoInstrumentation" -Type DWord -Value 1 #disable microsoft usertracking
		Remove-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\Explorer" -Name "TaskbarNoMultimon" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "TaskbarNoMultimon" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "MMTaskbarMode" -Type DWord -Value 2 #Show taskbar s only on taskbar where window is open
		$ErrorActionPreference = $errpref #restore previous preference
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type DWord -Value 20
		Write-Host "Finished Applying Windows Tweaks"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Applying Windows Tweaks!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$DisableActionCenter_Click = {
		
		Write-Host "Disabling Action Center..."
		If (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "DisableNotificationCenter" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "ToastEnabled" -Type DWord -Value 0
		Write-Host "Finished Disabling Action Center"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Action Center!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$EnableActionCenter_Click = {
		
		Write-Host "Enabling Action Center..."
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "DisableNotificationCenter" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "ToastEnabled" -ErrorAction SilentlyContinue
		Write-Host "Finished Enabling Action Center"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Action Center!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	$EnableCortanaSearch_Click = {
		Write-Host "Enable Cortana Autostart ..."
		if (Get-AppxPackage -Name Microsoft.549981C3F5F10)
		{
			if (-not (Test-Path -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId"))
			{
				New-Item -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Force
			}
			New-ItemProperty -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Name State -PropertyType DWord -Value 2 -Force
		}
		Write-Host "Enabling Cortana..."
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -ErrorAction SilentlyContinue
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type DWord -Value 0
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Name "HarvestContacts" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -ErrorAction SilentlyContinue
		Write-Host "Finished Enabling Cortana"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Cortana!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$DisableBackgroundApps_Click = {
		
		Write-Host "Disabling Background application access..."
		Get-ChildItem -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" -Exclude "Microsoft.Windows.Cortana*" | ForEach-Object {
			Set-ItemProperty -Path $_.PsPath -Name "Disabled" -Type DWord -Value 1
			Set-ItemProperty -Path $_.PsPath -Name "DisabledByUser" -Type DWord -Value 1
		}
		Write-Host "Finished Disabling Background Apps"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Background Apps!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$EnableBackgroundApps_Click = {
		
		Write-Host "Enabling Background application access..."
		Get-ChildItem -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" | ForEach-Object {
			Remove-ItemProperty -Path $_.PsPath -Name "Disabled" -ErrorAction SilentlyContinue
			Remove-ItemProperty -Path $_.PsPath -Name "DisabledByUser" -ErrorAction SilentlyContinue
		}
		Write-Host "Finished Enabling Background Apps"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Background Apps!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$DisableHibernation_Click = {
		Write-Host "Disabling Hibernation..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Session Manager\Power" -Name "HibernteEnabled" -Type Dword -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" -Name "ShowHibernateOption" -Type Dword -Value 0
		Write-Host "Finished Disabling Hibernation"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Hibernation!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$EnableHibernation_Click = {
		Write-Host "Enabling Hibernation..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Session Manager\Power" -Name "HibernteEnabled" -Type Dword -Value 1
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" -Name "ShowHibernateOption" -Type Dword -Value 1
		Write-Host "Finished Enabling Hibernation"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Hibernation!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$CleanTempFilesAndLog_Click = {
		Write-Host "Cleaning Temp folders & Flush DNS + Reset IP..."
		#Delete "windows.old" folder
		#Cmd.exe /c Cleanmgr /sageset:65535 
	
		Write-Verbose "Removing .tmp, .etl, .evtx, thumbcache*.db, *.log files not in use"
		Get-ChildItem -Path c:\ -Include *.tmp, *.dmp, *.etl, *.evtx, thumbcache*.db, *.log -File -Recurse -Force -ErrorAction SilentlyContinue | Remove-Item -ErrorAction SilentlyContinue
		#Delete "RetailDemo" content (if it exits)
		Write-Verbose "Removing Retail Demo content (if it exists)"
		Get-ChildItem -Path $env:ProgramData\Microsoft\Windows\RetailDemo\* -Recurse -Force -ErrorAction SilentlyContinue | Remove-Item -Recurse -ErrorAction SilentlyContinue
		#Delete not in-use anything in the C:\Windows\Temp folder
		Write-Verbose "Removing all files not in use in $env:windir\TEMP"
		Remove-Item -Path $env:windir\Temp\* -Recurse -Force -ErrorAction SilentlyContinue
		#Clear out Windows Error Reporting (WER) report archive folders
		Write-Verbose "Cleaning up WER report archive"
		Remove-Item -Path $env:ProgramData\Microsoft\Windows\WER\Temp\* -Recurse -Force -ErrorAction SilentlyContinue
		Remove-Item -Path $env:ProgramData\Microsoft\Windows\WER\ReportArchive\* -Recurse -Force -ErrorAction SilentlyContinue
		Remove-Item -Path $env:ProgramData\Microsoft\Windows\WER\ReportQueue\* -Recurse -Force -ErrorAction SilentlyContinue
		#Delete not in-use anything in your $env:TEMP folder
		Write-Verbose "Removing files not in use in $env:TEMP directory"
		Remove-Item -Path $env:TEMP\* -Recurse -Force -ErrorAction SilentlyContinue
		#Clear out ALL visible Recycle Bins
		Write-Verbose "Clearing out ALL Recycle Bins"
		Clear-RecycleBin -Force -ErrorAction SilentlyContinue
		#Clear out BranchCache cache
		Write-Verbose "Clearing BranchCache cache"
		Clear-BCCache -Force -ErrorAction SilentlyContinue
		#Clear volume backups (shadow copies)
		vssadmin delete shadows /all /quiet
		#Empty trash bin
		Powershell -Command "$bin = (New-Object -ComObject Shell.Application).NameSpace(10);$bin.items() | ForEach { Write-Host "Deleting $($_.Name) from Recycle Bin"; Remove-Item $_.Path -Recurse -Force}"
		#Delete controversial default0 user
		net user defaultuser0 /delete 2>nul
		#Clear thumbnail cache
		Remove-Item /f /s /q /a $env:LocalAppData\Microsoft\Windows\Explorer\*.db
		#Clear Windows temp files
		Remove-Item /f /q $env:localappdata\Temp\*
		Remove-Item /s /q "$env:WINDIR\Temp"
		Remove-Item /s /q "$env:TEMP"
		#Clear main telemetry file
		takeown /f "$env:ProgramData\Microsoft\Diagnosis\ETLLogs\AutoLogger\AutoLogger-Diagtrack-Listener.etl" /r -Value y
		icacls "$env:ProgramData\Microsoft\Diagnosis\ETLLogs\AutoLogger\AutoLogger-Diagtrack-Listener.etl" /grant administrators:F /t
		Write-Host"" > "$env:ProgramData\Microsoft\Diagnosis\ETLLogs\AutoLogger\AutoLogger-Diagtrack-Listener.etl"
		Write-Host Clear successful: "$env:ProgramData\Microsoft\Diagnosis\ETLLogs\AutoLogger\AutoLogger-Diagtrack-Listener.etl"
		#Clear Distributed Transaction Coordinator logs
		Remove-Item /f /q $env:SystemRoot\DtcInstall.log
		#Clear Optional Component Manager and COM+ components logs
		Remove-Item /f /q $env:SystemRoot\comsetup.log
		#Clear Pending File Rename Operations logs
		Remove-Item /f /q $env:SystemRoot\PFRO.log
		#Clear Windows Deployment Upgrade Process Logs
		Remove-Item /f /q $env:SystemRoot\setupact.log
		Remove-Item /f /q $env:SystemRoot\setuperr.log
		#Clear Windows Setup Logs
		Remove-Item /f /q $env:SystemRoot\setupapi.log
		Remove-Item /f /q $env:SystemRoot\Panther\*
		Remove-Item /f /q $env:SystemRoot\inf\setupapi.app.log
		Remove-Item /f /q $env:SystemRoot\inf\setupapi.dev.log
		Remove-Item /f /q $env:SystemRoot\inf\setupapi.offline.log
		#Clear Windows System Assessment Tool logs
		Remove-Item /f /q $env:SystemRoot\Performance\WinSAT\winsat.log
		#Clear Password change events
		Remove-Item /f /q $env:SystemRoot\debug\PASSWD.LOG
		#Clear user web cache database
		Remove-Item /f /q $env:LocalAppData\Microsoft\Windows\WebCache\*.*
		#Clear system temp folder when noone is logged in
		Remove-Item /f /q $env:SystemRoot\ServiceProfiles\LocalService\AppData\Local\Temp\*.*
		#Clear DISM (Deployment Image Servicing and Management) Logs
		Remove-Item /f /q  $env:SystemRoot\Logs\CBS\CBS.log
		Remove-Item /f /q  $env:SystemRoot\Logs\DISM\DISM.log
		#Clear Server-initiated Healing Events Logs
		Remove-Item /f /q "$env:SystemRoot\Logs\SIH\*"
		#Common Language Runtime Logs
		Remove-Item /f /q "$env:LocalAppData\Microsoft\CLR_v4.0\UsageTraces\*"
		Remove-Item /f /q "$env:LocalAppData\Microsoft\CLR_v4.0_32\UsageTraces\*"
		#Network Setup Service Events Logs
		Remove-Item /f /q "$env:SystemRoot\Logs\NetSetup\*"
		#Disk Cleanup tool (Cleanmgr.exe) Logs
		Remove-Item /f /q "$env:SystemRoot\System32\LogFiles\setupcln\*"
		#Clear Windows update and SFC scan logs
		Remove-Item /f /q $env:SystemRoot\Temp\CBS\*
		#Clear Windows Update Medic Service logs
		takeown /f $env:SystemRoot\Logs\waasmedic /r -Value y
		icacls $env:SystemRoot\Logs\waasmedic /grant administrators:F /t
		Remove-Item /s /q $env:SystemRoot\Logs\waasmedic
		#Clear Cryptographic Services Traces
		Remove-Item /f /q $env:SystemRoot\System32\catroot2\dberr.txt
		Remove-Item /f /q $env:SystemRoot\System32\catroot2.log
		Remove-Item /f /q $env:SystemRoot\System32\catroot2.jrs
		Remove-Item /f /q $env:SystemRoot\System32\catroot2.edb
		Remove-Item /f /q $env:SystemRoot\System32\catroot2.chk
		#Windows Update Events Logs
		Remove-Item /f /q "$env:SystemRoot\Logs\SIH\*"
		#Windows Update Logs
		Remove-Item /f /q "$env:SystemRoot\Traces\WindowsUpdate\*"
		#Clear Internet Explorer traces
		Remove-Item /f /q "$env:LocalAppData\Microsoft\Windows\INetCache\IE\*"
		reg delete "HKCU\SOFTWARE\Microsoft\Internet Explorer\TypedURLs" /va /f
		reg delete "HKCU\SOFTWARE\Microsoft\Internet Explorer\TypedURLsTime" /va /f
		Remove-Item /s /q "$env:LocalAppData\Microsoft\Internet Explorer"
		Remove-Item /s /q "$env:APPDATA\Microsoft\Windows\Cookies"
		Remove-Item /s /q "$env:USERPROFILE\Cookies"
		Remove-Item /s /q "$env:USERPROFILE\Local Settings\Traces"
		Remove-Item /s /q "$env:LocalAppData\Temporary Internet Files"
		Remove-Item /s /q "$env:LocalAppData\Microsoft\Windows\Temporary Internet Files"
		Remove-Item /s /q "$env:LocalAppData\Microsoft\Windows\INetCookies\PrivacIE"
		Remove-Item /s /q "$env:LocalAppData\Microsoft\Feeds Cache"
		Remove-Item /s /q "$env:LocalAppData\Microsoft\InternetExplorer\DOMStore"
		#Clear Google Chrome traces
		Remove-Item /f /q "$env:LocalAppData\Google\Software Reporter Tool\*.log"
		Remove-Item /s /q "$env:USERPROFILE\Local Settings\Application Data\Google\Chrome\User Data"
		Remove-Item /s /q "$env:LocalAppData\Google\Chrome\User Data"
		Remove-Item /s /q "$env:LocalAppData\Google\CrashReports\""
    Remove-Item /s /q "$env:LocalAppData\Google\Chrome\User Data\Crashpad\reports\""
		#Clear Opera traces
		Remove-Item /s /q "$env:USERPROFILE\AppData\Local\Opera\Opera"
		Remove-Item /s /q "$env:APPDATA\Opera\Opera"
		Remove-Item /s /q "$env:USERPROFILE\Local Settings\Application Data\Opera\Opera"
		#Clear Safari traces
		Remove-Item /s /q "$env:USERPROFILE\AppData\Local\Apple Computer\Safari\Traces"
		Remove-Item /s /q "$env:APPDATA\Apple Computer\Safari"
		Remove-Item /q /s /f "$env:USERPROFILE\AppData\Local\Apple Computer\Safari\Cache.db"
		Remove-Item /q /s /f "$env:USERPROFILE\AppData\Local\Apple Computer\Safari\WebpageIcons.db"
		Remove-Item /s /q "$env:USERPROFILE\Local Settings\Application Data\Apple Computer\Safari\Traces"
		Remove-Item /q /s /f "$env:USERPROFILE\Local Settings\Application Data\Apple Computer\Safari\Cache.db"
		Remove-Item /q /s /f "$env:USERPROFILE\Local Settings\Application Data\Safari\WebpageIcons.db"
		#Clear Listary indexes
		Remove-Item /f /s /q $env:APPDATA\Listary\UserData > nul
		#Clear Java cache
		Remove-Item /s /q "$env:APPDATA\Sun\Java\Deployment\cache"
		#Clear Flash traces
		Remove-Item /s /q "$env:APPDATA\Macromedia\Flash Player"
		#Clear Steam dumps, logs and traces
		Remove-Item /f /q %ProgramFiles(x86)%\Steam\Dumps
		Remove-Item /f /q %ProgramFiles(x86)%\Steam\Traces
		Remove-Item /f /q %ProgramFiles(x86)%\Steam\appcache\*.log
		#Clear Visual Studio telemetry and feedback data
		Remove-Item /s /q "$env:APPDATA\vstelemetry" 2>nul
		Remove-Item /s /q "$env:LocalAppData\Microsoft\VSApplicationInsights" 2>nul
		Remove-Item /s /q "$env:ProgramData\Microsoft\VSApplicationInsights" 2>nul
		Remove-Item /s /q "$env:TEMP\Microsoft\VSApplicationInsights" 2>nul
		Remove-Item /s /q "$env:TEMP\VSFaultInfo" 2>nul
		Remove-Item /s /q "$env:TEMP\VSFeedbackPerfWatsonData" 2>nul
		Remove-Item /s /q "$env:TEMP\VSFeedbackVSRTCLogs" 2>nul
		Remove-Item /s /q "$env:TEMP\VSRemoteControl" 2>nul
		Remove-Item /s /q "$env:TEMP\VSTelem" 2>nul
		Remove-Item /s /q "$env:TEMP\VSTelem.Out" 2>nul
		#Clear Dotnet CLI telemetry
		Remove-Item /s /q "$env:USERPROFILE\.dotnet\TelemetryStorageService" 2>nul
		#Clear regedit last key
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Applets\Regedit" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Regedit" /va /f
		#Clear regedit favorites
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Applets\Regedit\Favorites" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Regedit\Favorites" /va /f
		#Clear list of recent programs opened
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\LastVisitedPidlMRU" /va /f
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\LastVisitedPidlMRULegacy" /va /f
		#Clear Adobe Media Browser MRU
		reg delete "HKCU\Software\Adobe\MediaBrowser\MRU" /va /f
		#Clear MSPaint MRU
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Applets\Paint\Recent File List" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Paint\Recent File List" /va /f
		#Clear Wordpad MRU
		reg delete "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Wordpad\Recent File List" /va /f
		#Clear Map Network Drive MRU MRU
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Map Network Drive MRU" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Map Network Drive MRU" /va /f
		#Clear Windows Search Assistant history
		reg delete "HKCU\Software\Microsoft\Search Assistant\ACMru" /va /f
		#Clear list of Recent Files Opened, by Filetype
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs" /va /f
		reg delete "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs" /va /f
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\OpenSaveMRU" /va /f
		#Clear windows media player recent files and urls
		reg delete "HKCU\Software\Microsoft\MediaPlayer\Player\RecentFileList" /va /f
		reg delete "HKCU\Software\Microsoft\MediaPlayer\Player\RecentURLList" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\MediaPlayer\Player\RecentFileList" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\MediaPlayer\Player\RecentURLList" /va /f
		#Clear Most Recent Application's Use of DirectX
		reg delete "HKCU\Software\Microsoft\Direct3D\MostRecentApplication" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Direct3D\MostRecentApplication" /va /f
		#Clear Windows Run MRU & typedpaths
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" /va /f
		reg delete "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\TypedPaths" /va /f
		#Clear recently accessed files
		Remove-Item /f /q "$env:APPDATA\Microsoft\Windows\Recent\AutomaticDestinations\*"
		#Clear user pins
		Remove-Item /f /q "$env:APPDATA\Microsoft\Windows\Recent\CustomDestinations\*"
		#Clear regedit last key
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Applets\Regedit" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Regedit" /va /f
		cmd /c 'netsh winsock reset '
		cmd /c 'netsh int ip reset '
		cmd /c 'ipconfig /release '
		cmd /c 'ipconfig /renew '
		cmd /c 'ipconfig /flushdns '
		cmd /c 'echo Flush DNS + IP Reset Completed Successfully!'
		cmd /c 'echo Clearing Temp folders....'
		cmd /c 'del /f /s /q %systemdrive%\*.tmp '
		cmd /c 'del /f /s /q %systemdrive%\*._mp '
		cmd /c 'del /f /s /q %systemdrive%\*.log '
		cmd /c 'del /f /s /q %systemdrive%\*.gid '
		cmd /c 'del /f /s /q %systemdrive%\*.chk '
		cmd /c 'del /f /s /q %systemdrive%\*.old '
		cmd /c 'del /f /s /q %systemdrive%\recycled\*.* '
		cmd /c 'del /f /s /q %windir%\*.bak '
		cmd /c 'del /f /s /q %windir%\prefetch\*.* '
		cmd /c 'del /f /q %userprofile%\cookies\*.* '
		cmd /c 'del /f /q %userprofile%\recent\*.* '
		cmd /c 'del /f /s /q %userprofile%\Local Settings\Temporary Internet Files\*.* '
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Get-ChildItem -Path "$env:temp" -Exclude "dmtmp" | ForEach-Object ($_) {
			"CLEANING :" + $_.fullname
			Remove-Item $_.fullname -Force -Recurse
			"CLEANED... :" + $_.fullname
		}
		$ErrorActionPreference = $errpref #restore previous preference
		cmd /c 'del /f /s /q %userprofile%\recent\*.* '
		cmd /c 'del /f /s /q %windir%\Temp\*.* '
		cmd /c 'echo Temp folders Cleared Successfully!'
		Write-Host 'Clearing CleanMgr.exe automation settings.'
		Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\*' -Name StateFlags0001 -ErrorAction SilentlyContinue | Remove-ItemProperty -Name StateFlags0001 -ErrorAction SilentlyContinue
		
		Write-Host 'Enabling Update Cleanup. This is done automatically in Windows 10 via a scheduled task.'
		New-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\Update Cleanup' -Name StateFlags0001 -Value 2 -PropertyType DWord
		
		Write-Host 'Cleaning Temp Files...'
		New-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\Temporary Files' -Name StateFlags0001 -Value 2 -PropertyType DWord
		Write-Host 'Starting CleanMgr.exe...'
		###This will use classic Disk clean-up utility aka Cleanmgr.exe to clear unnecessary files from your computer's hard disk instead of Microsoft's replacement "Storage Sense app" which is part of the Settings app.###
		###This script will use command-line options to specify that Cleanmgr.exe cleans up all areas expect Recycle Bin and Previous Windows Installations.###
		###Requires -RunSilent
		
		Requires -RunAsAdministrator
		
		$SageSet = "StateFlags0099"
		$Base = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\"
		$Locations = @(
			"Active Setup Temp Folders"
			"BranchCache"
			"Downloaded Program Files"
			"GameNewsFiles"
			"GameStatisticsFiles"
			"GameUpdateFiles"
			"Internet Cache Files"
			"Memory Dump Files"
			"Offline Pages Files"
			"Old ChkDsk Files"
			"D3D Shader Cache"
			"Delivery Optimization Files"
			"Diagnostic Data Viewer database files"
			"Previous Installations"
			"Recycle Bin"
			"Service Pack Cleanup"
			"Setup Log Files"
			"System error memory dump files"
			"System error minidump files"
			"Temporary Files"
			"Temporary Setup Files"
			"Temporary Sync Files"
			"Thumbnail Cache"
			"Update Cleanup"
			"Upgrade Discarded Files"
			"User file versions"
			"Windows Defender"
			"Windows Error Reporting Archive Files"
			"Windows Error Reporting Queue Files"
			"Windows Error Reporting System Archive Files"
			"Windows Error Reporting System Queue Files"
			"Windows ESD installation files"
			"Windows Upgrade Log Files"
		)
		
		# -ea silentlycontinue will supress error messages
		ForEach ($Location in $Locations)
		{
			Set-ItemProperty -Path $($Base + $Location) -Name $SageSet -Type DWORD -Value 2 -ea silentlycontinue 
		}
		
		# Do the clean-up. Have to convert the SageSet number
		$Args = "/sagerun:$([string]([int]$SageSet.Substring($SageSet.Length - 4)))"
		Start-Process -Wait "$env:SystemRoot\System32\cleanmgr.exe" -ArgumentList $Args
		
		# Remove the Stateflags
		ForEach ($Location in $Locations)
		{
			Remove-ItemProperty -Path $($Base + $Location) -Name $SageSet -Force -ea silentlycontinue 
		}
		Write-Host "Finished Cleaning Temp And Log Files"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Cleaning Temp And Log Files!', 'Windows Optimization Toolbox',  0, 64)
		
		
	}
	
	$SecurityUpdatesOnly_Click = {
		Write-Host "Improving Windows Update to delay Feature updates and only install Security Updates"
		Write-Host "Disabling automatic download and installation of Windows updates"
		New-FolderForced -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU" "NoAutoUpdate" 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU" "AUOptions" 2
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU" "ScheduledInstallDay" 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU" "ScheduledInstallTime" 3
		
		Write-Host "Disable seeding of updates to other computers via Group Policies"
		New-FolderForced -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeliveryOptimization"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeliveryOptimization" "DODownloadMode" 0
		
		#echo "Disabling automatic driver update"
		#sp "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" "SearchOrderConfig" 0
		
		$objSID = New-Object System.Security.Principal.SecurityIdentifier "S-1-1-0"
		$EveryOne = $objSID.Translate([System.Security.Principal.NTAccount]).Value
		
		
		Write-Host "Disable 'Updates are available' message"
		
		takeown /F "$env:WinDIR\System32\MusNotification.exe"
		icacls "$env:WinDIR\System32\MusNotification.exe" /deny "$($EveryOne):(X)"
		takeown /F "$env:WinDIR\System32\MusNotificationUx.exe"
		icacls "$env:WinDIR\System32\MusNotificationUx.exe" /deny "$($EveryOne):(X)"
		$UpdatesPath = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings"
		If (!(Get-ItemProperty $UpdatesPath  BranchReadinessLevel)) { New-ItemProperty -Path $UpdatesPath -Name "BranchReadinessLevel" -Type DWord -Value 20 }
		Set-ItemProperty -Path $UpdatesPath -Name "BranchReadinessLevel" -Type DWord -Value 20
		If (!(Get-ItemProperty $UpdatesPath  DeferFeatureUpdatesPeriodInDays)) { New-ItemProperty -Path $UpdatesPath -Name "DeferFeatureUpdatesPeriodInDays" -Type DWord -Value 365 }
		Set-ItemProperty -Path $UpdatesPath -Name "DeferFeatureUpdatesPeriodInDays" -Type DWord -Value 365
		If (!(Get-ItemProperty $UpdatesPath  DeferQualityUpdatesPeriodInDays)) { New-ItemProperty -Path $UpdatesPath -Name "DeferQualityUpdatesPeriodInDays" -Type DWord -Value 4 }
		Set-ItemProperty -Path $UpdatesPath -Name "DeferQualityUpdatesPeriodInDays" -Type DWord -Value 4
		If (!(Get-ItemProperty $UpdatesPath  ActiveHoursEnd)) { New-ItemProperty -Path $UpdatesPath -Name "ActiveHoursEnd" -Type DWord -Value 2 }
		Set-ItemProperty -Path $UpdatesPath -Name "ActiveHoursEnd" -Type DWord -Value 2
		If (!(Get-ItemProperty $UpdatesPath  DeferQualityUpdatesPeriodInDays)) { New-ItemProperty -Path $UpdatesPath -Name "ActiveHoursStart" -Type DWord -Value 8 }
		Set-ItemProperty -Path $UpdatesPath -Name "ActiveHoursStart" -Type DWord -Value 8
		Write-Host "Restricting Windows Update P2P only to local network..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config" -Name "DODownloadMode" -Type DWord -Value 1
		Write-Host "Improving Windows Update to delay Feature updates and only Installing Security Updates"
		### Fix Windows Update to delay feature updates and only update at certain times
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "BranchReadinessLevel" -Type DWord -Value 16 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "BranchReadinessLevel" -Type DWord -Value 16 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "DeferFeatureUpdates" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "DeferFeatureUpdates" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "DeferQualityUpdates" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "DeferQualityUpdates" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "DeferFeatureUpdatesPeriodInDays" -Type DWord -Value 45d -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "DeferFeatureUpdatesPeriodInDays" -Type DWord -Value 45d -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "DeferQualityUpdatesPeriodInDays" -Type DWord -Value 7d -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "DeferQualityUpdatesPeriodInDays" -Type DWord -Value 7d -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "PauseFeatureUpdatesStartTime" -Type String -Value "" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "PauseFeatureUpdatesStartTime" -Type String -Value "" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "PauseQualityUpdatesStartTime" -Type String -Value "" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "PauseQualityUpdatesStartTime" -Type String -Value "" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ActiveHoursEnd" -Type DWord -Value 2 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "ActiveHoursEnd" -Type DWord -Value 2 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ActiveHoursStart" -Type DWord -Value 8 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "ActiveHoursStart" -Type DWord -Value 8 -ErrorAction SilentlyContinue
		Write-Host "Disabling driver offering through Windows Update..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -Type DWord -Value 1
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DontPromptForWindowsUpdate" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DontSearchWindowsUpdate" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DriverUpdateWizardWuSearchEnabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ExcludeWUDriversInQualityUpdate" -Type DWord -Value 1
		Write-Host "Disabling Windows Update automatic restart..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "NoAutoRebootWithLoggedOnUsers" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "AUPowerManagement" -Type DWord -Value 0
		Write-Host "Disabled driver offering through Windows Update"
		
		Write-Host "Adjusting visual effects for performance..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "DragFullWindows" -Type String -Value 0
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Type String -Value 200
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Type Binary -Value ([byte[]](144, 18, 3, 128, 16, 0, 0, 0))
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop\WindowMetrics" -Name "MinAnimate" -Type String -Value 0
		Set-ItemProperty -Path "HKCU:\Control Panel\Keyboard" -Name "KeyboardDelay" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewAlphaSelect" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewShadow" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "TaskbarAnimations" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" -Name "VisualFXSetting" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\DWM" -Name "EnableAeroPeek" -Type DWord -Value 0
		Write-Host "Adjusted visual effects for performance"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$Low_Click = {
		Write-Host "Disabling Windows Defender via Group Policies"
		New-FolderForced -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender" "DisableAntiSpyware" 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender" "DisableRoutinelyTakingAction" 1
		New-FolderForced -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender\Real-Time Protection"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender\Real-Time Protection" "DisableRealtimeMonitoring" 1
		
		Write-Host "Disabling Windows Defender Services"
		Takeown-Registry("HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WinDefend")
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WinDefend" "Start" 4
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WinDefend" "AutorunsDisabled" 3
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WdNisSvc" "Start" 4
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WdNisSvc" "AutorunsDisabled" 3
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Sense" "Start" 4
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Sense" "AutorunsDisabled" 3
		
		Write-Host "Removing Windows Defender context menu item"
		Set-Item "HKLM:\SOFTWARE\Classes\CLSID\{09A47860-11B0-4DA5-AFA5-26D86198A780}\InprocServer32" ""
		
		Write-Host "Removing Windows Defender GUI / tray from autorun"
		Remove-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" "WindowsDefender" -ea 0
		gpupdate /force /target:computer
		Write-Host "Done!"
		Write-Host "Disabling Windows Defender Cloud..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -Type DWord -Value 2
		Write-Host "Lowering UAC level..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "ConsentPromptBehaviorAdmin" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "PromptOnSecureDesktop" -Type DWord -Value 0
		Write-Host "Disabling SMB 1.0 protocol..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		Write-Host "Disabling SMB Server..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		Set-SmbServerConfiguration -EnableSMB2Protocol $false -Force
		Write-Host "Disabling LLMNR..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" -Name "EnableMulticast" -Type DWord -Value 0
		Write-Host "Disabling Microsoft Windows Defender and related Processes..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile" -Name "EnableFirewall" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name "DisableAntiSpyware" -Type DWord -Value 1
		If ([System.Environment]::OSVersion.Version.Build -eq 14393)
		{
			Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -Name "WindowsDefender" -ErrorAction SilentlyContinue
		}
		ElseIf ([System.Environment]::OSVersion.Version.Build -ge 15063)
		{
			Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -Name "SecurityHealth" -ErrorAction SilentlyContinue
		}
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -Type DWord -Value 2
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name "PUAProtection" -ErrorAction SilentlyContinue
		Set-MpPreference -EnableControlledFolderAccess Disabled -ErrorAction SilentlyContinue
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Cache Maintenance"
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Cleanup"
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Scheduled Scan"
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Verification"
		
		Write-Host "Disabling Microsoft Software Protection Platform Service and related Processes..."
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\SoftwareProtectionPlatform\SvcRestartTask"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\sppsvc" -Name "Start" -Type DWord -Value 4 -ErrorAction SilentlyContinue
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	$High_Click = {
		Write-Warning "if you already use another antivirus, nothing will happen."
		
		Write-Host "Ensure your Windows Defender is ENABLED."
		Set-MpPreference -DisableRealtimeMonitoring $false -Force
		
		Write-Host "Enabling Microsoft Defender Exploit Guard network protection..."
		Set-MpPreference -EnableNetworkProtection Enabled -Force
		
		Write-Host "Enabling detection for potentially unwanted applications and block them..."
		Set-MpPreference -PUAProtection Enabled -Force
		
		# Details: https://techcommunity.microsoft.com/t5/storage-at-microsoft/stop-using-smb1/ba-p/425858
		Write-Host "Disabling SMB 1.0 protocol..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		
		# Enable strong cryptography for .NET Framework (version 4 and above) - https://stackoverflow.com/a/47682111
		Write-Host "Enabling .NET strong cryptography..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v4.0.30319" -Name "SchUseStrongCrypto" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v4.0.30319" -Name "SchUseStrongCrypto" -Type DWord -Value 1
		
		Write-Host "[-][Security] Disabling Autoplay..."
		Set-ItemProperty -Path "$PathToCUExplorer\AutoplayHandlers" -Name "DisableAutoplay" -Type DWord -Value 1
		
		Write-Host "[-][Security] Disabling Autorun for all Drives..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoDriveTypeAutoRun" -Type DWord -Value 255
		
		Write-Host "[-][Security] Disabling Search for App in Store for Unknown Extensions..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "NoUseStoreOpenWith" -Type DWord -Value 1
		
		Write-Host "Enabling Show file extensions in Explorer..."
		Set-ItemProperty -Path "$PathToCUExplorerAdvanced" -Name "HideFileExt" -Type DWord -Value 0
		
		# Details: https://docs.microsoft.com/pt-br/windows/security/identity-protection/user-account-control/user-account-control-group-policy-and-registry-key-settings
		Write-Host "Raising UAC level..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "ConsentPromptBehaviorAdmin" -Type DWord -Value 5
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "PromptOnSecureDesktop" -Type DWord -Value 1
		
		# Details: https://support.microsoft.com/en-us/help/4072699/january-3-2018-windows-security-updates-and-antivirus-software.
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" -Force
		}
		If ($CPU.contains("Intel" -or "ARM"))
		{
			Write-Host "Enabling Meltdown (CVE-2017-5754) compatibility flag..."
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" -Name "cadca5fe-87d3-4b96-b7fb-a231484277cc" -Type DWord -Value 0
		}
		else
		{
			Write-Host "[-][Security] Your processor doesn't need Meltdown (CVE-2017-5754) compatibility flag..."
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" -Name "cadca5fe-87d3-4b96-b7fb-a231484277cc" -Type DWord -Value 1
		}
		
		Write-Host "Enabling 'SmartScreen' for Microsoft Edge..."
		If (!(Test-Path "$PathToLMPoliciesEdge\PhishingFilter"))
		{
			New-Item -Path "$PathToLMPoliciesEdge\PhishingFilter" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesEdge\PhishingFilter" -Name "EnabledV9" -Type DWord -Value 1
		
		# Details: https://forums.malwarebytes.com/topic/246740-new-potentially-unwanted-modification-disablemrt/
		Write-Host "Enabling offer Malicious Software Removal Tool via Windows Update..."
		If (!(Test-Path "$PathToLMPoliciesMRT"))
		{
			New-Item -Path "$PathToLMPoliciesMRT" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesMRT" -Name "DontOfferThroughWUAU" -Type DWord -Value 0
		
		Write-Host "Enabling 'SmartScreen' for Store Apps..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppHost" -Name "EnableWebContentEvaluation" -Type DWord -Value 1
		
		
		Write-Host "Disabling Windows Script Host (execution of *.vbs scripts and alike)..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows Script Host\Settings" -Name "Enabled" -Type DWord -Value 0
		
		# Consumes more RAM - Make Windows Defender run in Sandbox Mode (MsMpEngCP.exe and MsMpEng.exe will run on background)
		# Details: https://www.microsoft.com/security/blog/2018/10/26/windows-defender-antivirus-can-now-run-in-a-sandbox/
		Write-Host "Enabling Windows Defender Sandbox mode..."
		setx /M MP_FORCE_USE_SANDBOX 1 # Restart the PC to apply the changes, 0 to Revert
		Write-Host "Raising UAC level..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "ConsentPromptBehaviorAdmin" -Type DWord -Value 5
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "PromptOnSecureDesktop" -Type DWord -Value 1
		Write-Host "Enabling SMB 1.0 protocol..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $true -Force
		Write-Host "Enabling SMB Server..."
		Set-SmbServerConfiguration -EnableSMB2Protocol $true -Force
		Write-Host "Enabling LLMNR..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" -Name "EnableMulticast" -ErrorAction SilentlyContinue
		Write-Host "Enabling Microsoft Windows Defender and related Processes..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile" -Name "EnableFirewall" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name "DisableAntiSpyware" -ErrorAction SilentlyContinue
		If ([System.Environment]::OSVersion.Version.Build -eq 14393)
		{
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -Name "WindowsDefender" -Type ExpandString -Value "`"%ProgramFiles%\Windows Defender\MSASCuiL.exe`""
		}
		ElseIf ([System.Environment]::OSVersion.Version.Build -ge 15063)
		{
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -Name "SecurityHealth" -Type ExpandString -Value "%windir%\system32\SecurityHealthSystray.exe"
		}
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name "PUAProtection" -Type DWord -Value 1
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Cache Maintenance"
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Cleanup"
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Scheduled Scan"
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Verification"
		Set-MpPreference -EnableControlledFolderAccess Disabled -ErrorAction SilentlyContinue
		Write-Host "Enabling Microsoft Software Protection Platform Service and related Processes..."
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\SoftwareProtectionPlatform\SvcRestartTask"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\sppsvc" -Name "Start" -Type DWord -Value 2 -ErrorAction SilentlyContinue
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$NetworkTweaks_Click = {
		Write-Host "Optimizing Network and applying Tweaks for no throttle and maximum speed!..."
		Write-Host "Setting current network profile to private..."
		Set-NetConnectionProfile -NetworkCategory Private
		Write-Host "Setting unknown networks profile to private..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24" -Name "Category" -Type DWord -Value 1
	
	If (!(Test-Path "$PathToLMPoliciesPsched"))
		{
			New-Item -Path "$PathToLMPoliciesPsched" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesPsched" -Name "NonBestEffortLimit" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 0xffffffff
		Write-Host "Setting current network profile to private..."
		Set-NetConnectionProfile -NetworkCategory Private
		Write-Host "Setting unknown networks profile to private..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24" -Name "Category" -Type DWord -Value 1
		Write-Host "Optimizing Network and applying Tweaks for no throttle and maximum speed!..."
		int ipv4 set glob defaultcurhoplimit=65
		int ipv6 set glob defaultcurhoplimit=65
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Psched" -ErrorAction SilentlyContinue
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\QoS" -ErrorAction SilentlyContinue
		New-Item -Path "HKLM:\SOFTWARE\Microsoft\MSMQ\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Internet Explorer\MAIN\FeatureControl\FEATURE_MAXCONNECTIONSPER1_0SERVER" -Name "explorer.exe" -Type DWord -Value 10
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Internet Explorer\MAIN\FeatureControl\FEATURE_MAXCONNECTIONSPERSERVER" -Name "explorer.exe" -Type DWord -Value 10
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\ServiceProvider" -Name "LocalPriority" -Type DWord -Value 4
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\ServiceProvider" -Name "HostsPriority" -Type DWord -Value 5
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\ServiceProvider" -Name "DnsPriority" -Type DWord -Value 6
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\ServiceProvider" -Name "NetbtPriority" -Type DWord -Value 7
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Psched" -Name "NonBestEffortlimit" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\QoS" -Name "Do not use NLA" -Type String -Value "1"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "Size" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type DWord -Value 20
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name "MaxUserPort" -Type DWord -Value 65534
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name "TcpTimedWaitDelay" -Type DWord -Value 30
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name "DefaultTTL" -Type DWord -Value 64
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\MSMQ\Parameters" -Name "TCPNoDelay" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Control\Lsa" -Name "LmCompatibilityLevel" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Dnscache\Parameters" -Name "EnableAutoDoh" -Type DWord -Value 2
		Set-NetTCPSetting -SettingName internet -EcnCapability disabled
		Set-NetOffloadGlobalSetting -Chimney disabled
		Set-NetTCPSetting -SettingName internet -Timestamps disabled
		Set-NetTCPSetting -SettingName internet -MaxSynRetransmissions 2
		Set-NetTCPSetting -SettingName internet -NonSackRttResiliency disabled
		Set-NetTCPSetting -SettingName internet -InitialRto 2000
		Set-NetTCPSetting -SettingName internet -MinRto 300
		Set-NetTCPSetting -SettingName Internet -AutoTuningLevelLocal normal
		Set-NetTCPSetting -SettingName internet -ScalingHeuristics disabled
		netsh int tcp set supplemental internet congestionprovider=ctcp
		Set-NetOffloadGlobalSetting -ReceiveSegmentCoalescing enabled
		Set-NetOffloadGlobalSetting -ReceiveSideScaling enabled
		Disable-NetAdapterLso -Name *
		Disable-NetAdapterChecksumOffload -Name *
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Energy-Efficient Ethernet" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Energy Efficient Ethernet" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Energy Efficient Ethernet" -DisplayValue "Off" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Ultra Low Power Mode" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "System Idle Power Saver" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Green Ethernet" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Power Saving Mode" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Gigabit Lite" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "EEE" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Advanced EEE" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "ARP Offload" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "NS Offload" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Idle Power Saving" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Flow Control" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Interrupt Moderation" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Reduce Speed On Power Down" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Interrupt Moderation Rate" -DisplayValue "Off" -ErrorAction SilentlyContinue
		netsh int tcp set heuristics disabled
		netsh int tcp set global rss=enabled
		netsh int tcp set global chimney=enabled
		netsh int tcp set global autotuninglevel=normal
		netsh int tcp set global congestionprovider=ctcp
		netsh int tcp set global ecncapability=disabled
		netsh int tcp set global timestamps=disabled
		netsh int ipv4 set subinterface "Local Area Connection" mtu=80 store=persistent
		netsh int tcp set global rsc=enabled
		netsh int tcp set heuristics disabled
		netsh int tcp set global dca=enabled
		netsh int tcp set global netdma=enabled
		netsh int tcp set global congestionprovider=ctcp
		netsh int tcp set global nonsackrttresiliency=disabled
		netsh int tcp set supplemental template=custom icw=10
		netsh int tcp set heuristics disabled
		netsh interface ip delete arpcache
		netsh winsock reset catalog
		netsh int ip reset c:resetlog.txt
		netsh int ip reset C:\tcplog.txt
		netsh winsock reset catalog
		netsh interface ip delete arpcache
		netsh winsock reset catalog
		netsh int ip reset c:resetlog.txt
		netsh int ip reset C:\tcplog.txt
		netsh winsock reset catalog
		netsh interface ipv4 set subinterface "Local Area Connection" mtu=150 store=persistent
		netsh interface ipv4 set subinterface "Internet" mtu=80 store=persistent
		netsh int ip reset c:resetlog.txt
		netsh int ip reset C:\tcplog.txt
		netsh int tcp set global autotuninglevel=normal
		netsh int tcp set global chimney=enabled
		netsh int tcp set global dca=enabled
		netsh int tcp set global netdma=disabled
		netsh int tcp set global congestionprovider=ctcp
		netsh int tcp set global ecncapability=disabled
		netsh int tcp set heuristics disabled
		netsh int tcp set global rss=enabled
		netsh int tcp set global fastopen=enabled
		netsh int tcp set global nonsackrttresiliency=disabled
		netsh int tcp set global rsc=enabled
		$ErrorActionPreference = $errpref #restore previous preference
		if ((Get-CimInstance -ClassName Win32_ComputerSystem).PCSystemType -ne 2)
		{
			$adapters = Get-NetAdapter -Physical | Get-NetAdapterPowerManagement | Where-Object -FilterScript { $_.AllowComputerToTurnOffDevice -ne "Unsupported" }
			foreach ($adapter in $adapters)
			{
				$adapter.AllowComputerToTurnOffDevice = "Disabled"
				$adapter | Set-NetAdapterPowerManagement
			}
		}
		Start-Sleep -s 5
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Applying Network Tweaks!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	$NVIDIAGpuTweaks_Click = {
		#TODO: Place custom script here
		Write-Host "Applying Nvidia Latency Tweaks..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "D3PCLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "F1TransitionLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LOWLATENCY" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "Node3DLowLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "PciLatencyTimerControl" -Type DWord -Value "0x00000020"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMDeepL1EntryLatencyUsec" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RmGspcMaxFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RmGspcMinFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RmGspcPerioduS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMLpwrEiIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMLpwrGrIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMLpwrGrRgIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMLpwrMsIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "VRDirectFlipDPCDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "VRDirectFlipTimingMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "VRDirectJITFlipMsHybridFlipDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "vrrCursorMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "vrrDeflickerMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "vrrDeflickerMaxUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "D3PCLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "F1TransitionLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LOWLATENCY" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "Node3DLowLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "PciLatencyTimerControl" -Type DWord -Value "0x00000020"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMDeepL1EntryLatencyUsec" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RmGspcMaxFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RmGspcMinFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RmGspcPerioduS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMLpwrEiIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMLpwrGrIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMLpwrGrRgIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMLpwrMsIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "VRDirectFlipDPCDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "VRDirectFlipTimingMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "VRDirectJITFlipMsHybridFlipDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "vrrCursorMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "vrrDeflickerMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "vrrDeflickerMaxUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "D3PCLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "F1TransitionLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LOWLATENCY" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "Node3DLowLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "PciLatencyTimerControl" -Type DWord -Value "0x00000020"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMDeepL1EntryLatencyUsec" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RmGspcMaxFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RmGspcMinFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RmGspcPerioduS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMLpwrEiIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMLpwrGrIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMLpwrGrRgIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMLpwrMsIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "VRDirectFlipDPCDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "VRDirectFlipTimingMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "VRDirectJITFlipMsHybridFlipDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "vrrCursorMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "vrrDeflickerMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "vrrDeflickerMaxUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "D3PCLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "F1TransitionLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LOWLATENCY" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "Node3DLowLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "PciLatencyTimerControl" -Type DWord -Value "0x00000020"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMDeepL1EntryLatencyUsec" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RmGspcMaxFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RmGspcMinFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RmGspcPerioduS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMLpwrEiIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMLpwrGrIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMLpwrGrRgIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMLpwrMsIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "VRDirectFlipDPCDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "VRDirectFlipTimingMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "VRDirectJITFlipMsHybridFlipDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "vrrCursorMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "vrrDeflickerMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "vrrDeflickerMaxUs" -Type DWord -Value 1
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Applying NVIDIA GPU Tweaks!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$GamingTweaks_Click = {
		#TODO: Place custom script here
		Write-Host "Apply Gaming Optimization Fixs..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 4294967295
		Write-Host "Disabling Xbox features..."
		Get-AppxPackage "Microsoft.XboxApp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxIdentityProvider" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.XboxSpeechToTextOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxGameOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Xbox.TCUI" | Remove-AppxPackage
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"
		}
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "GPU Priority" -Type DWord -Value 8
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "Priority" -Type DWord -Value 6
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "Scheduling Category" -Type String -Value "High"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "SFIO Priority" -Type String -Value "High"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\PriorityControl" -Name "IRQ8Priority" -Type DWord -Value 1
		Write-Host "Forcing RAW Mouse Input and Disabling Enhance Pointer Precision..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSpeed" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold1" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold2" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSensitivity" -Type String -Value "10"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseHoverTime" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseTrails" -Type String -Value "0"
		
		
		$checkscreenscale = [Math]::round([DPI]::scaling(), 2) * 100
		if ($checkscreenscale -eq "100")
		{
			Write-Host "Windows screen scale is Detected as 100%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,0C,00,00,00,00,00,80,99,19,00,00,00,00,00,40,66,26,00,00,00,00,00,00,33,33,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "125")
		{
			Write-Host "Windows screen scale is Detected as 125%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,00,00,10,00,00,00,00,00,00,00,20,00,00,00,00,00,00,00,30,00,00,00,00,00,00,00,40,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "150")
		{
			Write-Host "Windows screen scale is Detected as 150%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,30,33,13,00,00,00,00,00,60,66,26,00,00,00,00,00,90,99,39,00,00,00,00,00,C0,CC,4C,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "175")
		{
			Write-Host "Windows screen scale is Detected as 175%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,60,66,16,00,00,00,00,00,C0,CC,2C,00,00,00,00,00,20,33,43,00,00,00,00,00,80,99,59,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "200")
		{
			Write-Host "Windows screen scale is Detected as 200%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,90,99,19,00,00,00,00,00,20,33,33,00,00,00,00,00,B0,CC,4C,00,00,00,00,00,40,66,66,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "225")
		{
			Write-Host "Windows screen scale is Detected as 225%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,1C,00,00,00,00,00,80,99,39,00,00,00,00,00,40,66,56,00,00,00,00,00,00,33,73,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "250")
		{
			Write-Host "Windows screen scale is Detected as 250%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,00,00,20,00,00,00,00,00,00,00,40,00,00,00,00,00,00,00,60,00,00,00,00,00,00,00,80,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "300")
		{
			Write-Host "Windows screen scale is Detected as 300%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,60,66,26,00,00,00,00,00,C0,CC,4C,00,00,00,00,00,20,33,73,00,00,00,00,00,80,99,99,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "350")
		{
			Write-Host "Windows screen scale is Detected as 350%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,2C,00,00,00,00,00,80,99,59,00,00,00,00,00,40,66,86,00,00,00,00,00,00,33,B3,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		else
		{
			Write-Host "HOUSTON WE HAVE A PROBLEM! screen scale is not set to traditional value, nothing has been set!"
		}
		Write-Host "Disabling High Precision Event Timer..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Invoke-WebRequest -Uri "https://git.io/JkrLn" -OutFile "$Env:windir\system32\SetTimerResolutionService.exe" -ErrorAction SilentlyContinue
		New-Service -name "SetTimerResolutionService" -BinaryPathName "$Env:windir\system32\SetTimerResolutionService.exe" -StartupType Automatic -ErrorAction SilentlyContinue
		bcdedit /set x2apicpolicy Enable
		bcdedit /set configaccesspolicy Default
		bcdedit /set MSI Default
		bcdedit /set usephysicaldestination No
		Fsutil behavior query memoryusage
		Fsutil behavior set memoryusage 2
		bcdedit /set usefirmwarepcisettings No
		bcdedit /deletevalue useplatformclock
		bcdedit /set disabledynamictick yes
		bcdedit /set useplatformtick Yes
		bcdedit /set tscsyncpolicy Enhanced
		bcdedit /timeout 10
		bcdedit /set nx optout
		bcdedit /set bootux disabled
		bcdedit /set disabledynamictick yes
		bcdedit /set useplatformtick yes
		bcdedit /set useplatformclock false
		bcdedit /set tscsyncpolicy enhanced
		bcdedit /set x2apicpolicy enable
		wmic path Win32_PnPEntity where "name='High precision event timer'" call disable
		Write-Host "Disabling display and sleep mode timeouts..."
		powercfg /X monitor-timeout-ac 0
		powercfg /X monitor-timeout-dc 0
		powercfg /X standby-timeout-ac 0
		powercfg /X standby-timeout-dc 0
		Write-Host "Enabling Gaming Mode..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "AllowAutoGameMode" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "AutoGameModeEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "ShowStartupPanel" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "GamePanelStartupTipIndex" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "UseNexusForGameBarEnabled" -Type DWord -Value 0
		Write-Host "Enabling HAGS..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "HwSchMode" -Type DWord -Value 2
		Write-Host "Enabling and Activating Bitsum Highest Performance Power Plan..."
		Invoke-WebRequest -Uri "https://git.io/JsWhn" -OutFile "$Env:windir\system32\Bitsum-Highest-Performance.pow" -ErrorAction SilentlyContinue
		powercfg -import "$Env:windir\system32\Bitsum-Highest-Performance.pow" e6a66b66-d6df-666d-aa66-66f66666eb66
		powercfg -setactive e6a66b66-d6df-666d-aa66-66f66666eb66
		Write-Host "Disabling Core Parking on current PowerPlan Ultimate Performance..."
		powercfg -attributes SUB_PROCESSOR CPMINCORES -ATTRIB_HIDE
		Powercfg -setacvalueindex scheme_current sub_processor CPMINCORES 100
		Powercfg -setactive scheme_current
		Write-Host "Disabling DMA memory protection and cores isolation..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		bcdedit /set vsmlaunchtype Off
		bcdedit /set vm No
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE" -Name "DisableExternalDMAUnderLock" -Type DWord -Value 0
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "EnableVirtualizationBasedSecurity" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "HVCIMATRequired" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disabling Process and Kernel Mitigations..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		ForEach ($v in (Get-Command -Name "Set-ProcessMitigation").Parameters["Disable"].Attributes.ValidValues) { Set-ProcessMitigation -System -Disable $v.ToString() -ErrorAction SilentlyContinue }
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "DisableExceptionChainValidation" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "KernelSEHOPEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "EnableCfg" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disabling drivers get paged into virtual memory..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "DisablePagingExecutive" -Type DWord -Value 1
		Write-Host "Enabling big system memory caching to improve microstuttering..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "LargeSystemCache" -Type DWord -Value 1
		Write-Host "Forcing contiguous memory allocation in the DirectX Graphics Kernel..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "DpiMapIommuContiguous" -Type DWord -Value 1
		Write-Host "Forcing Windows to stop tolerating high DPC/ISR latencies..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatencyCheckEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceDefault" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceFSVP" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyTolerancePerfOverride" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceScreenOffIR" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceVSyncEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "RtlCapabilityCheckLatency" -Type DWord -Value 1
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleShortTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleVeryLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceMemory" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContextMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceOther" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceTimerPeriod" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MaxIAverageGraphicsLatencyInOneBucket" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MiracastPerfTrackGraphicsLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorRefreshLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "TransitionLatency" -Type DWord -Value 1
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Decreasing mouse and keyboard buffer sizes..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\mouclass\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\mouclass\Parameters" -Name "MouseDataQueueSize" -Type DWord -Value 0x00000010
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\kbdclass\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\kbdclass\Parameters" -Name "KeyboardDataQueueSize" -Type DWord -Value 0x00000010
		$ErrorActionPreference = $errpref #restore previous preference
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		$NetworkIDS = @(
			(Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\*").PSChildName
		)
		foreach ($NetworkID in $NetworkIDS)
		{
			Write-Host "Disabling Nagles Algorithm..."
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\$NetworkID" -Name "TcpAckFrequency" -Type DWord -Value 1
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\$NetworkID" -Name "TCPNoDelay" -Type DWord -Value 1
		}
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Fixing White Games Shortcuts created by game launchers...."
		choco Installing -y setuserfta
		Start-Sleep -s 5
		Push-Location
		Set-Location "$env:ProgramData\chocolatey\lib\setuserfta\tools\SetUserFTA\"
		SetUserFTA.exe del .url
		SetUserFTA.exe .url, InternetShortcut
		Pop-Location
		choco unInstalling -y setuserfta
		Write-Host "Applying PC Optimizations..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 4294967295
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Write-Host "Disabling Xbox features..."
		Get-AppxPackage "Microsoft.XboxApp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxIdentityProvider" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.XboxSpeechToTextOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxGameOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Xbox.TCUI" | Remove-AppxPackage
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Stopping and disabling Unessessary Services For Gaming..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Stop-Service "wisvc" -WarningAction SilentlyContinue
		Set-Service "wisvc" -StartupType Disabled
		Stop-Service "MapsBroker" -WarningAction SilentlyContinue
		Set-Service "MapsBroker" -StartupType Disabled
		Stop-Service "UmRdpService" -WarningAction SilentlyContinue
		Set-Service "UmRdpService" -StartupType Disabled
		Stop-Service "TrkWks" -WarningAction SilentlyContinue
		Set-Service "TrkWks" -StartupType Disabled
		Stop-Service "TermService" -WarningAction SilentlyContinue
		Set-Service "TermService" -StartupType Disabled
		Stop-Service "PcaSvc" -WarningAction SilentlyContinue
		Set-Service "PcaSvc" -StartupType Disabled
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disable Xbox Game Tips ..."
		if ((Get-AppxPackage -Name Microsoft.XboxGamingOverlay) -or (Get-AppxPackage -Name Microsoft.GamingApp))
		{
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\GameBar -Name ShowStartupPanel -PropertyType DWord -Value 0 -Force
		}
		Write-Host "Disable Audit Process ..."
		auditpol /set /subcategory:"{0CCE922B-69AE-11D9-BED3-505054503030}" /success:disable /failure:disable
		Write-Host "Finished Applying Gaming Tweaks!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Applying Gaming Tweaks!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	$AMDGpuTweaks_Click = {
		#TODO: Place custom script here
		Write-Host "Applying AMD Latency Tweaks..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LTRMaxNoSnoopLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "KMD_RpmComputeLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "DalUrgentLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "memClockSwitchLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "PP_RTPMComputeF1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "PP_DGBMMMaxTransitionLatencyUvd" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "PP_DGBPMMaxTransitionLatencyGfx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "DalNBLatencyForUnderFlow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "DalDramClockChangeLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRNoSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRMaxSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRMaxNoSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LTRMaxNoSnoopLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "KMD_RpmComputeLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "DalUrgentLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "memClockSwitchLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "PP_RTPMComputeF1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "PP_DGBMMMaxTransitionLatencyUvd" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "PP_DGBPMMaxTransitionLatencyGfx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "DalNBLatencyForUnderFlow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "DalDramClockChangeLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRNoSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRMaxSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRMaxNoSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LTRMaxNoSnoopLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "KMD_RpmComputeLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "DalUrgentLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "memClockSwitchLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "PP_RTPMComputeF1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "PP_DGBMMMaxTransitionLatencyUvd" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "PP_DGBPMMaxTransitionLatencyGfx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "DalNBLatencyForUnderFlow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "DalDramClockChangeLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRNoSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRMaxSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRMaxNoSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LTRMaxNoSnoopLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "KMD_RpmComputeLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "DalUrgentLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "memClockSwitchLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "PP_RTPMComputeF1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "PP_DGBMMMaxTransitionLatencyUvd" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "PP_DGBPMMaxTransitionLatencyGfx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "DalNBLatencyForUnderFlow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "DalDramClockChangeLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRNoSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRMaxSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRMaxNoSnoopLatencyValue" -Type DWord -Value 1
		[void][System.Windows.Forms.MessageBox]::Show('Finished Appply AMD GPU Tweaks!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$EnableMSIMode_Click = {
		#TODO: Place custom script here
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Enum\$GPUID\Device Parameters\Interrupt Management\MessageSignaledInterruptProperties\" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Enum\$GPUID\Device Parameters\Interrupt Management\MessageSignaledInterruptProperties\" -Name "MSISupported" -Type DWord -Value 1
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling MSI Mode!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$WindowsUpdateReset_Click = {
		#TODO: Place custom script here
		
		Write-Host "1. Stopping Windows Update Services..."
		Stop-Service -Name BITS
		Stop-Service -Name wuauserv
		Stop-Service -Name appidsvc
		Stop-Service -Name cryptsvc
		
		Write-Host "2. Remove QMGR Data file..."
		Remove-Item "$env:allusersprofile\Application Data\Microsoft\Network\Downloader\qmgr*.dat" -ErrorAction SilentlyContinue
		
		Write-Host "3. Renaming the Software Distribution and CatRoot Folder..."
		Rename-Item $env:systemroot\SoftwareDistribution SoftwareDistribution.bak -ErrorAction SilentlyContinue
		Rename-Item $env:systemroot\System32\Catroot2 catroot2.bak -ErrorAction SilentlyContinue
		
		Write-Host "4. Removing old Windows Update log..."
		Remove-Item $env:systemroot\WindowsUpdate.log -ErrorAction SilentlyContinue
		
		Write-Host "5. Resetting the Windows Update Services to defualt settings..."
		"sc.exe sdset bits D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)"
		"sc.exe sdset wuauserv D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)"
		
		Set-Location $env:systemroot\system32
		
		Write-Host "6. Registering some DLLs..."
		regsvr32.exe /s atl.dll
		regsvr32.exe /s urlmon.dll
		regsvr32.exe /s mshtml.dll
		regsvr32.exe /s shdocvw.dll
		regsvr32.exe /s browseui.dll
		regsvr32.exe /s jscript.dll
		regsvr32.exe /s vbscript.dll
		regsvr32.exe /s scrrun.dll
		regsvr32.exe /s msxml.dll
		regsvr32.exe /s msxml3.dll
		regsvr32.exe /s msxml6.dll
		regsvr32.exe /s actxprxy.dll
		regsvr32.exe /s softpub.dll
		regsvr32.exe /s wintrust.dll
		regsvr32.exe /s dssenh.dll
		regsvr32.exe /s rsaenh.dll
		regsvr32.exe /s gpkcsp.dll
		regsvr32.exe /s sccbase.dll
		regsvr32.exe /s slbcsp.dll
		regsvr32.exe /s cryptdlg.dll
		regsvr32.exe /s oleaut32.dll
		regsvr32.exe /s ole32.dll
		regsvr32.exe /s shell32.dll
		regsvr32.exe /s initpki.dll
		regsvr32.exe /s wuapi.dll
		regsvr32.exe /s wuaueng.dll
		regsvr32.exe /s wuaueng1.dll
		regsvr32.exe /s wucltui.dll
		regsvr32.exe /s wups.dll
		regsvr32.exe /s wups2.dll
		regsvr32.exe /s wuweb.dll
		regsvr32.exe /s qmgr.dll
		regsvr32.exe /s qmgrprxy.dll
		regsvr32.exe /s wucltux.dll
		regsvr32.exe /s muweb.dll
		regsvr32.exe /s wuwebv.dll
		
		Write-Host "7) Removing WSUS client settings..."
		REG DELETE "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate" /v AccountDomainSid /f
		REG DELETE "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate" /v PingID /f
		REG DELETE "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate" /v SusClientId /f
		
		Write-Host "8) Resetting the WinSock..."
		netsh winsock reset
		netsh winhttp reset proxy
		
		Write-Host "9) Delete all BITS jobs..."
		Get-BitsTransfer | Remove-BitsTransfer
		
		Write-Host "10) Attempting to Installing the Windows Update Agent..."
		if ($arch -eq 64)
		{
			wusa Windows8-RT-KB2937636-x64 /quiet
		}
		else
		{
			wusa Windows8-RT-KB2937636-x86 /quiet
		}
		
		Write-Host "11) Starting Windows Update Services..."
		Start-Service -Name BITS
		Start-Service -Name wuauserv
		Start-Service -Name appidsvc
		Start-Service -Name cryptsvc
		
		Write-Host "12) Forcing discovery..."
		wuauclt /resetauthorization /detectnow
		
		Write-Host "Process complete. Please reboot your computer."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Resetting Windows Update!', 'Windows Optimization Toolbox',  0, 64)
		
		
		
	}
	
	$GoogleChrome_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Chrome"
		choco install googlechrome -y 
		Write-Host "Finished Installing Chrome"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Chrome!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Firefox_Click = {
		#TODO: Place custom script here
		Write-Host "Installing FireFox"
		choco install firefox -y
		Write-Host "Finished Installing FireFox"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing FireFox!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$VLC_Click = {
		#TODO: Place custom script here
		Write-Host "Installing VLC"
		choco install vlc -y
		Write-Host "Finished Installing VLC"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing VLC!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$7zip_Click = {
		#TODO: Place custom script here
		Write-Host "7-Zip"
		choco install 7zip -y
		Write-Host "Finished Installing 7-Zip"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing 7-Zip!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$PowerToys_Click = {
		#TODO: Place custom script here
		Write-Host "Installing PowerToys"
		choco install powertoys -y
		Write-Host "Finished Installing PowerToys"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing PowerToys!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$OBSStudio_Click = {
		#TODO: Place custom script here
		Write-Host "Installing OBS Studio"
		choco install obs-studio -y
		Write-Host "Finished Installing OBS Studio"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing OBS Studio!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Audacity_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Audacity"
		choco install audacity -y
		Write-Host "Finished Installing Audacity"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Audacity!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Discord_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Discord"
		choco install discord
		Write-Host "Finished Installing Discord"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Discord!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$MediaPlayerClassic_Click = {
		Write-Host "Installing Media Player Classic"
		#TODO: Place custom script here
		choco Install mpc-hc -y
		Write-Host "Finished Installing Media Player Classic"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Media Player Classic!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	
	$Rufus_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Rufus"
		choco install rufus -y 
		Write-Host "Finished Installing Rufus"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Rufus!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$WinRaR_Click = {
		#TODO: Place custom script here
		Write-Host "Installing WinRAR"
		choco install winrar -y 
		Write-Host "Finished Installing WinRAR"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing WinRAR!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$WindowsTerminal_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Windows Terminal"
		choco install microsoft-windows-terminal -y
		Write-Host "Finished Installing Windows Terminal"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Windows Terminal!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Brave_Click = {
		#TODO: Place custom script here
		Write-Host "Install Brave"
		choco install brave -y
		Write-Host "Finished Installing Brave"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Brave!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$RepairWindowsImage_Click = {
		#TODO: Place custom script here
		Start-Process -FilePath "${env:Windir}\System32\dism.exe" -ArgumentList '/online /cleanup-image /restorehealth' -Wait -Verb RunAs
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$SystemFileChecker_Click = {
		#TODO: Place custom script here
		Start-Process -FilePath "${env:Windir}\System32\sfc.exe" -ArgumentList '/scannow' -Wait -Verb RunAs
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$FixNetworkProblems_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		netsh winsock reset
		netsh winhttp reset proxy
		cmd /c 'netsh winsock reset'
		cmd /c 'netsh int ip reset'
		cmd /c 'ipconfig /release'
		cmd /c 'ipconfig /renew'
		cmd /c 'ipconfig /flushdns'
		Write-Host "Finished All Task!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	$XNAFramework40_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Microsoft XNA Framework Redistributable"
		choco Installing xna -y
		Write-Host "Finished Installing Microsoft XNA Framework Redistributable"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Microsoft XNA Framework Redistributable!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$DirectX_Click = {
		#TODO: Place custom script here
		Write-Host "Installing DirectX"
		choco Installing directx -y
		[System.Media.SystemSounds]::Asterisk.Play()
		Write-Host "Finished installing DirectX"
		[void][System.Windows.Forms.MessageBox]::Show('Finished installing DirectX!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$VisualC_Click = {
		#TODO: Place custom script here
		Write-Host "Install Visual C++"
		choco Installing vcredist-all -y
		[System.Media.SystemSounds]::Asterisk.Play()
		Write-Host "Finished Installing Visual C++"
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Visual C++!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	$OpenAL_Click = {
		#TODO: Place custom script here
		Write-Host "Install OpenAL"
		choco install openal -y
		[System.Media.SystemSounds]::Asterisk.Play()
		Write-Host "Finished Installing OpenAL"
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	
	$UnsintallOnedrive_Click = {
		#TODO: Place custom script here
		Write-Host "Unistalling OneDrive..."
		Write-Host  "Kill OneDrive process"
		taskkill.exe /F /IM "OneDrive.exe"
		taskkill.exe /F /IM "explorer.exe"
		Write-Host "Disable OneDrive via Group Policies"
		Mkdir -Force "HKLM:\Software\Wow6432Node\Policies\Microsoft\Windows\OneDrive"
		Set-ItemProperty "HKLM:\Software\Wow6432Node\Policies\Microsoft\Windows\OneDrive" "DisableFileSyncNGSC" 1
		
		Write-Host "Remove Onedrive from explorer sidebar"
		New-PSDrive -PSProvider "Registry" -Root "HKEY_CLASSES_ROOT" -Name "HKCR"
		mkdir -Force "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"
		Set-ItemProperty "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" "System.IsPinnedToNameSpaceTree" 0
		mkdir -Force "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"
		Set-ItemProperty "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" "System.IsPinnedToNameSpaceTree" 0
		Remove-PSDrive "HKCR"
		Write-Host "Removing run hook for new users"
		reg load "hku\Default" "C:\Users\Default\NTUSER.DAT"
		reg delete "HKEY_USERS\Default\Software\Microsoft\Windows\CurrentVersion\Run" /v "OneDriveSetup" /f
		reg unload "hku\Default"
		
		Write-Host "Removing startmenu entry"
		Remove-Item -Force -ErrorAction SilentlyContinue "$env:userprofile\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OneDrive.lnk"
		
		Write-Host "Removing scheduled task"
		Get-ScheduledTask -TaskPath '\' -TaskName 'OneDrive*' -ea SilentlyContinue | Unregister-ScheduledTask -Confirm:$false
		
		Write-Host "Restarting explorer"
		Start-Process "explorer.exe"
		
		Write-Host "Waiting for explorer to complete loading"
		Start-Sleep 10
		
		Write-Host "Removing additional OneDrive leftovers"
		foreach ($item in (Get-ChildItem "$env:WinDir\WinSxS\*onedrive*"))
		{
			Takeown-Folder $item.FullName
			Remove-Item -Recurse -Force $item.FullName
		}
		Write-Host  "Remove OneDrive"
		if (Test-Path "$env:systemroot\System32\OneDriveSetup.exe")
		{
			& "$env:systemroot\System32\OneDriveSetup.exe" /uninstall
		}
		if (Test-Path "$env:systemroot\SysWOW64\OneDriveSetup.exe")
		{
			& "$env:systemroot\SysWOW64\OneDriveSetup.exe" /uninstall
		}
		
		Write-Host  "Removing OneDrive leftovers"
		Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$env:localappdata\Microsoft\OneDrive"
		Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$env:programdata\Microsoft OneDrive"
		Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$env:systemdrive\OneDriveTemp"
		# check if directory is empty before removing:
		If ((Get-ChildItem "$env:userprofile\OneDrive" -Recurse | Measure-Object).Count -eq 0)
		{
			Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$env:userprofile\OneDrive"
		}
		
		Write-Host  "Disable OneDrive via Group Policies"
		force-mkdir "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\OneDrive"
		Set-ItemProperty "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\OneDrive" "DisableFileSyncNGSC" 1
		
		Write-Host  "Remove Onedrive from explorer sidebar"
		New-PSDrive -PSProvider "Registry" -Root "HKEY_CLASSES_ROOT" -Name "HKCR"
		mkdir -Force "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"
		Set-ItemProperty "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" "System.IsPinnedToNameSpaceTree" 0
		mkdir -Force "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"
		Set-ItemProperty "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" "System.IsPinnedToNameSpaceTree" 0
		Remove-PSDrive "HKCR"
		
		# Thank you Matthew Israelsson
		Write-Host  "Removing run hook for new users"
		reg load "hku\Default" "C:\Users\Default\NTUSER.DAT"
		reg delete "HKEY_USERS\Default\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v "OneDriveSetup" /f
		reg unload "hku\Default"
		
		Write-Host  "Removing startmenu entry"
		Remove-Item -Force -ErrorAction SilentlyContinue "$env:userprofile\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OneDrive.lnk"
		
		Write-Host  "Removing scheduled task"
		Get-ScheduledTask -TaskPath '\' -TaskName 'OneDrive*' -ea SilentlyContinue | Unregister-ScheduledTask -Confirm:$false
		
		Write-Host  "Restarting explorer"
		Start-Process "explorer.exe"
		
		Write-Host  "Waiting for explorer to complete loading"
		Start-Sleep 10
		
		Write-Host  "Removing additional OneDrive leftovers"
		foreach ($item in (Get-ChildItem "$env:WinDir\WinSxS\*onedrive*"))
		{
			Takeown-Folder $item.FullName
			Remove-Item -Recurse -Force $item.FullName
		}
		
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\OneDrive"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\OneDrive"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\OneDrive" -Name "DisableFileSyncNGSC" -Type DWord -Value 1
		%SystemRoot%\SysWOW64\OneDriveSetup.exe /uninstall
		cmd /c 'rd "%UserProfile%\OneDrive" /s /q'
		cmd /c 'rd "%LocalAppData%\Microsoft\OneDrive" /s /q'
		cmd /c 'rd "%ProgramData%\Microsoft OneDrive" /s /q'
		cmd /c 'rd "C:\OneDriveTemp" /s /q'
		cmd /c 'del "%USERPROFILE%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OneDrive.lnk" /s /f /q'
		Stop-Process -Name "OneDrive" -ErrorAction SilentlyContinue
		Start-Sleep -s 2
		$onedrive = "$env:SYSTEMROOT\SysWOW64\OneDriveSetup.exe"
		If (!(Test-Path $onedrive))
		{
			$onedrive = "$env:SYSTEMROOT\System32\OneDriveSetup.exe"
		}
		Start-Process $onedrive "/uninstall" -NoNewWindow -Wait
		Start-Sleep -s 2
		Stop-Process -Name "explorer" -ErrorAction SilentlyContinue
		Start-Sleep -s 2
		Remove-Item -Path "$env:USERPROFILE\OneDrive" -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path "$env:LOCALAPPDATA\Microsoft\OneDrive" -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path "$env:PROGRAMDATA\Microsoft OneDrive" -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path "$env:SYSTEMDRIVE\OneDriveTemp" -Force -Recurse -ErrorAction SilentlyContinue
		If (!(Test-Path "HKCR:"))
		{
			New-PSDrive -Name HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
		}
		Remove-Item -Path "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" -Recurse -ErrorAction SilentlyContinue
		Write-Host "Finished Unistalling OneDrive"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Uninstalling OneDrive!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$ReinstallAllBloatwar_Click = {
		#TODO: Place custom script here
		Start-Service "mpssvc" -StartupType Automatic
		Get-AppxPackage -AllUsers | ForEach-Object { Add-AppxPackage -Verbose -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" } $ErrorActionPreference = 'silentlycontinue'
		Write-Host "Re-enabling key to show advertisement information"
		$Advertising = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		If (Test-Path $Advertising)
		{
			Set-ItemProperty $Advertising  Enabled -Value 1
		}
		
		#Enables Cortana to be used as part of your Windows Search Function
		Write-Host "Re-enabling Cortana to be used in your Windows Search"
		$Search = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		If (Test-Path $Search)
		{
			Set-ItemProperty $Search  AllowCortana -Value 1
		}
		
		#Re-enables the Windows Feedback Experience for sending anonymous data
		Write-Host "Re-enabling Windows Feedback Experience"
		$Period = "HKCU:\Software\Microsoft\Siuf\Rules"
		If (!(Test-Path $Period))
		{
			New-Item $Period
		}
		Set-ItemProperty $Period PeriodInNanoSeconds -Value 1
		
		#Enables bloatware applications               
		Write-Host "Adding Registry key to allow bloatware apps to return"
		$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		If (!(Test-Path $registryPath))
		{
			New-Item $registryPath
		}
		Set-ItemProperty $registryPath  DisableWindowsConsumerFeatures -Value 0
		
		#Changes Mixed Reality Portal Key 'FirstRunSucceeded' to 1
		Write-Host "Setting Mixed Reality Portal value to 1"
		$Holo = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic"
		If (Test-Path $Holo)
		{
			Set-ItemProperty $Holo  FirstRunSucceeded -Value 1
		}
		
		#Re-enables live tiles
		Write-Host "Enabling live tiles"
		$Live = "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications"
		If (!(Test-Path $Live))
		{
			New-Item $Live
		}
		Set-ItemProperty $Live  NoTileApplicationNotification -Value 0
		
		#Re-enables data collection
		Write-Host "Re-enabling data collection"
		$DataCollection = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection"
		If (!(Test-Path $DataCollection))
		{
			New-Item $DataCollection
		}
		Set-ItemProperty $DataCollection  AllowTelemetry -Value 1
		
		#Re-enables People Icon on Taskbar
		Write-Host "Enabling People icon on Taskbar"
		$People = "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"
		If (!(Test-Path $People))
		{
			New-Item $People
		}
		Set-ItemProperty $People  PeopleBand -Value 1
		
		#Re-enables suggestions on start menu
		Write-Host "Enabling suggestions on the Start Menu"
		$Suggestions = "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager"
		If (!(Test-Path $Suggestions))
		{
			New-Item $Suggestions
		}
		Set-ItemProperty $Suggestions  SystemPaneSuggestionsEnabled -Value 1
		
		#Re-enables scheduled tasks that were disabled when running the Debloat switch
		Write-Host "Enabling scheduled tasks that were disabled"
		Get-ScheduledTask XblGameSaveTaskLogon | Enable-ScheduledTask
		Get-ScheduledTask  XblGameSaveTask | Enable-ScheduledTask
		Get-ScheduledTask  Consolidator | Enable-ScheduledTask
		Get-ScheduledTask  UsbCeip | Enable-ScheduledTask
		Get-ScheduledTask  DmClient | Enable-ScheduledTask
		Get-ScheduledTask  DmClientOnScenarioDownload | Enable-ScheduledTask
		
		Write-Host "Re-enabling and starting WAP Push Service"
		#Enable and start WAP Push Service
		Set-Service "dmwappushservice" -StartupType Automatic
		Start-Service "dmwappushservice"
		
		Write-Host "Re-enabling and starting the Diagnostics Tracking Service"
		#Enabling the Diagnostics Tracking Service
		Set-Service "DiagTrack" -StartupType Automatic
		Start-Service "DiagTrack"
		Get-AppxPackage -AllUsers | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		$errpref = $ErrorActionPreference #save actual preference
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -Name "DisableStoreApps" -ErrorAction SilentlyContinue
		Remove-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\AppXSvc" -Name "Start" -Type DWord -Value 3 -ErrorAction SilentlyContinue
		Get-AppxPackage -AllUsers "Microsoft.DesktopAppInstaller" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" } -ErrorAction SilentlyContinue
		Get-AppxPackage -AllUsers "Microsoft.WindowsStore" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" } -ErrorAction SilentlyContinue
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Installing default Microsoft applications..."
		Get-AppxPackage -AllUsers "Microsoft.3DBuilder" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.AppConnector" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingFinance" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingNews" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingSports" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingTranslator" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingWeather" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.CommsPhone" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.ConnectivityStore" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.GetHelp" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Getstarted" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Messaging" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Microsoft3DViewer" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MicrosoftPowerBIForWindows" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MicrosoftSolitaireCollection" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MicrosoftStickyNotes" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MinecraftUWP" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MSPaint" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.NetworkSpeedTest" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Office.Sway" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.OneConnect" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.People" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Print3D" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.RemoteDesktop" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.SkypeApp" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Wallet" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsAlarms" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsCamera" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.windowscommunicationsapps" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsFeedbackHub" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsMaps" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsPhone" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Windows.Photos" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsSoundRecorder" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.ZuneMusic" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.ZuneVideo" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Write-Host "Installing default third party applications..."
		Get-AppxPackage -AllUsers "2414FC7A.Viber" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "41038Axilesoft.ACGMediaPlayer" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "46928bounde.EclipseManager" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "4DF9E0F8.Netflix" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "64885BlueEdge.OneCalendar" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "7EE7776C.LinkedInforWindows" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "828B5831.HiddenCityMysteryofShadows" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "89006A2E.AutodeskSketchBook" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "9E2F88E3.Twitter" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "A278AB0D.DisneyMagicKingdoms" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "A278AB0D.MarchofEmpires" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "ActiproSoftwareLLC.562882FEEB491" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "AdobeSystemsIncorporated.AdobePhotoshopExpress" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "CAF9E577.Plex" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "D52A8D61.FarmVille2CountryEscape" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "D5EA27B7.Duolingo-LearnLanguagesforFree" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "DB6EA5DB.CyberLinkMediaSuiteEssentials" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "DolbyLaboratories.DolbyAccess" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Drawboard.DrawboardPDF" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Facebook.Facebook" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "flaregamesGmbH.RoyalRevolt2" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "GAMELOFTSA.Asphalt8Airborne" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "KeeperSecurityInc.Keeper" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "king.com.BubbleWitch3Saga" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "king.com.CandyCrushSodaSaga" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "PandoraMediaInc.29680B314EFC2" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "SpotifyAB.SpotifyMusic" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "WinZipComputing.WinZipUniversal" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Write-Host "Installing Windows Store..."
		Get-AppxPackage -AllUsers "Microsoft.DesktopAppInstaller" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsStore" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "XINGAG.XING" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Write-Host "Enabling Xbox features..."
		Get-AppxPackage -AllUsers "Microsoft.XboxApp" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.XboxIdentityProvider" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.XboxSpeechToTextOverlay" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.XboxGameOverlay" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Xbox.TCUI" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 1
		Write-Host "Enabling built-in Adobe Flash in IE and Edge..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer" -Name "DisableFlashInIE" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Addons" -Name "FlashPlayerEnabled" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -ErrorAction SilentlyContinue
		Write-Host "Installing Windows Media Player..."
		Enable-WindowsOptionalFeature -Online -FeatureName "WindowsMediaPlayer" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Internet Explorer..."
		Enable-WindowsOptionalFeature -Online -FeatureName "Internet-Explorer-Optional-$env:PROCESSOR_ARCHITECTURE" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Work Folders Client..."
		Enable-WindowsOptionalFeature -Online -FeatureName "WorkFolders-Client" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Linux Subsystem..."
		If ([System.Environment]::OSVersion.Version.Build -eq 14393)
		{
			# 1607 needs developer mode to be enabled
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name "AllowDevelopmentWithoutDevLicense" -Type DWord -Value 1
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name "AllowAllTrustedApps" -Type DWord -Value 1
		}
		Enable-WindowsOptionalFeature -Online -FeatureName "Microsoft-Windows-Subsystem-Linux" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Hyper-V..."
		If ((Get-WmiObject -Class "Win32_OperatingSystem").Caption -like "*Server*")
		{
			Install-WindowsFeature -Name "Hyper-V" -IncludeManagementTools -WarningAction SilentlyContinue
		}
		Else
		{
			Enable-WindowsOptionalFeature -Online -FeatureName "Microsoft-Hyper-V-All" -NoRestart -WarningAction SilentlyContinue
		}
		Write-Host "Installing Microsoft Print to PDF..."
		Enable-WindowsOptionalFeature -Online -FeatureName "Printing-PrintToPDFServices-Features" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Microsoft XPS Document Writer..."
		Enable-WindowsOptionalFeature -Online -FeatureName "Printing-XPSServices-Features" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Adding Default Fax Printer..."
		Add-Printer -Name "Fax" -DriverName "Microsoft Shared Fax Driver" -PortName "SHRFAX:" -ErrorAction SilentlyContinue
		Write-Host "Finished Reinstalling Windows Apps"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Reinstalling Windows Apps!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$UnpinTitilesFromStar_Click = {
		write-host "Cleaning up the StartMenu Tiles for"
		Set-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -Value '<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  <LayoutOptions StartTileGroupCellWidth="6" />'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  <DefaultLayoutOverride>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    <StartLayoutCollection>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      <defaultlayout:StartLayout GroupCellWidth="6" />'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    </StartLayoutCollection>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  </DefaultLayoutOverride>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    <CustomTaskbarLayoutCollection>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      <defaultlayout:TaskbarLayout>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '        <taskbar:TaskbarPinList>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '          <taskbar:UWA AppUserModelID="Microsoft.MicrosoftEdge_8wekyb3d8bbwe!MicrosoftEdge" />'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '          <taskbar:DesktopApp DesktopApplicationLinkPath="%APPDATA%\Microsoft\Windows\Start Menu\Programs\System Tools\File Explorer.lnk" />'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '        </taskbar:TaskbarPinList>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      </defaultlayout:TaskbarLayout>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    </CustomTaskbarLayoutCollection>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '</LayoutModificationTemplate>'
		$START_MENU_LAYOUT = @"
<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns:taskbar="http://schemas.microsoft.com/Start/2014/TaskbarLayout" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">
    <LayoutOptions StartTileGroupCellWidth="6" />
    <DefaultLayoutOverride>
        <StartLayoutCollection>
            <defaultlayout:StartLayout GroupCellWidth="6" />
        </StartLayoutCollection>
    </DefaultLayoutOverride>
</LayoutModificationTemplate>
"@
		$layoutFile = "C:\Windows\StartMenuLayout.xml"
		If (Test-Path $layoutFile)
		{
			Remove-Item $layoutFile
		}
		$START_MENU_LAYOUT | Out-File $layoutFile -Encoding ASCII
		$regAliases = @("HKLM", "HKCU")
		foreach ($regAlias in $regAliases)
		{
			$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
			$keyPath = $basePath + "\Explorer"
			IF (!(Test-Path -Path $keyPath))
			{
				New-Item -Path $basePath -Name "Explorer"
			}
			Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 1
			Set-ItemProperty -Path $keyPath -Name "StartLayoutFile" -Value $layoutFile
		}
		Write-Host "Restart Explorer, open the start menu (necessary to load the new layout), and give it a few seconds to process"
		Stop-Process -name explorer
		Start-Sleep -s 3
		$wshell = New-Object -ComObject wscript.shell; $wshell.SendKeys('^{ESCAPE}')
		Start-Sleep -s 3
		Write-Host "Enabling the ability to pin items again"
		foreach ($regAlias in $regAliases)
		{
			$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
			$keyPath = $basePath + "\Explorer"
			Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 0
		}
		Stop-Process -name explorer
		Import-StartLayout -LayoutPath $layoutFile -MountPath $env:SystemDrive\
		Remove-Item $layoutFile
			Write-Host "Finished Unpin Titles From Start Menu"
			[System.Media.SystemSounds]::Asterisk.Play()
			[void][System.Windows.Forms.MessageBox]::Show('Finished Unpin Titles From Start Menu!', 'Windows Optimization Toolbox',  0, 64)
		}
		
	
	
	
	$DisableEdgePDF_Click = {
		#TODO: Place custom script here
		
		Write-Host "Stopping Edge from taking over as the default .PDF viewer"
		$NoPDF = "HKCR:\.pdf"
		$NoProgids = "HKCR:\.pdf\OpenWithProgids"
		$NoWithList = "HKCR:\.pdf\OpenWithList"
		If (!(Get-ItemProperty $NoPDF  NoOpenWith))
		{
			New-ItemProperty $NoPDF NoOpenWith
		}
		If (!(Get-ItemProperty $NoPDF  NoStaticDefaultVerb))
		{
			New-ItemProperty $NoPDF  NoStaticDefaultVerb
		}
		If (!(Get-ItemProperty $NoProgids  NoOpenWith))
		{
			New-ItemProperty $NoProgids  NoOpenWith
		}
		If (!(Get-ItemProperty $NoProgids  NoStaticDefaultVerb))
		{
			New-ItemProperty $NoProgids  NoStaticDefaultVerb
		}
		If (!(Get-ItemProperty $NoWithList  NoOpenWith))
		{
			New-ItemProperty $NoWithList  NoOpenWith
		}
		If (!(Get-ItemProperty $NoWithList  NoStaticDefaultVerb))
		{
			New-ItemProperty $NoWithList  NoStaticDefaultVerb
		}
		$Edge = "HKCR:\AppXd4nrz8ff68srnhf9t5a8sbjyar1cr723_"
		If (Test-Path $Edge)
		{
			Set-Item $Edge AppXd4nrz8ff68srnhf9t5a8sbjyar1cr723_
		}
		Write-Host "Finished Disabling Edge From Taking Over The Default PDF Viewer"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$RemoveBloatwareRegKe_Click = {
		#TODO: Place custom script here
		
		$Keys = @(
			New-PSDrive  HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
			#Remove Background Tasks
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
			
			#Windows File
			"HKCR:\Extensions\ContractId\Windows.File\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			
			#Registry keys to delete if they aren't uninstalled by RemoveAppXPackage/RemoveAppXProvisionedPackage
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y"
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
			
			#Scheduled Tasks to delete
			"HKCR:\Extensions\ContractId\Windows.PreInstalledConfigTask\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe"
			
			#Windows Protocol Keys
			"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
			
			#Windows Share Target
			"HKCR:\Extensions\ContractId\Windows.ShareTarget\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
		)
		
		#This writes the output of each key it is removing and also removes the keys listed above.
		ForEach ($Key in $Keys)
		{
			Write-Host "Removing $Key from registry"
			Remove-Item $Key -Recurse
		}
		Write-Host "Finished Removing Bloatware Reg Keys"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Bloatware Reg Keys!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$RepairHardDrive_Click = {
		#TODO: Place custom script 
		Write-Host "Reparing Hard Drive"
		Start-Process -FilePath "${env:Windir}\System32\CHKDSK.exe" -ArgumentList '/r' -Wait -Verb RunAs
		Write-Host"Finished Reparing Hard Drive"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You Need To Restart To Repair Your Hard Drive!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$YourPhoneAppFIx_Click = {
		#TODO: Place custom script here
		Write-Host "Reinstalling Your Phone App"
		Add-AppxPackage -DisableDevelopmentMode -Register "$($(Get-AppxPackage -AllUsers "Microsoft.YourPhone").InstallLocation)\AppXManifest.xml"
		Write-Host "Enable needed data collection for Your Phone..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableMmx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableCdp" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Messaging" -Name "AllowMessageSync" -Type DWord -Value 1
		Write-Host "Allowing Background Apps..."
		Get-ChildItem -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" -Exclude "Microsoft.Windows.Cortana*" | ForEach-Object {
			Remove-ItemProperty -Path $_.PsPath -Name "Disabled" -ErrorAction SilentlyContinue
			Remove-ItemProperty -Path $_.PsPath -Name "DisabledByUser" -ErrorAction SilentlyContinue
		}
		Write-Host "You may need to Reboot and right-click Your Phone app and select repair"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You may need to Reboot and right-click Your Phone app and select repair!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$DisableMemoryCompres_Click = {
		#TODO: Place custom script 
		Disable-MMAgent -mc
		Write-Host "Finished Disabling Memory Compression"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Memory Compression!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$EnableMemoryCompress_Click = {
		#TODO: Place custom script here
		Enable-MMAgent -mc
		Write-Host "Finished Enabling Memory Compression"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Memory Compression!', 'Windows Optimization Toolbox',  0, 64)
	}
	$EnableNet35_Click = {
		#TODO: Place custom script 
		
		Write-Host "Installing Net 3.5"
		Enable-WindowsOptionalFeature -Online -FeatureName "NetFx3"
		Write-Host "Finished Installing Net 3.5"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Net 3.5!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Notepad_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Notepad++"
		winget install -e --id Notepad++.Notepad++
		Write-Host "Finished Installing Notepad++"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Notepad++!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$SetTimeToUTCDualBoot_Click = {
		#TODO: Place custom script here
		Write-Host "Setting BIOS time to UTC..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\TimeZoneInformation" -Name "RealTimeIsUniversal" -Type DWord -Value 1
		Write-Host "Finished Setting BIOS time to UTC..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$FixWhitelistedApps_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		Get-AppxPackage -allusers Microsoft.Paint3D | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -allusers Microsoft.WindowsCalculator | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -allusers Microsoft.WindowsStore | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -allusers Microsoft.Windows.Photos | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Write-Host "Operation Completed Sucessfully!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	
	$DefaultSetting_Click = {
		#TODO: Place custom script here
		Write-Host "Enabling driver offering through Windows Update..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DontPromptForWindowsUpdate" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DontSearchWindowsUpdate" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DriverUpdateWizardWuSearchEnabled" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ExcludeWUDriversInQualityUpdate" -ErrorAction SilentlyContinue
		Write-Host "Enabling Windows Update automatic restart..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "NoAutoRebootWithLoggedOnUsers" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "AUPowerManagement" -ErrorAction SilentlyContinue
		Write-Host "Enabled driver offering through Windows Update"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Setting Windows Update To Default Setting!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$UTorrent_Click = {
		#TODO: Place custom script here
		Write-Host "Installing UTorrent..."
		choco install utorrent -y
		Write-Host "Finished Installing UTorrent..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing UTorrent!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	
	
	$PerformanceVisualFX_Click = {
		#TODO: Place custom script here
		Write-Host "Adjusting visual effects for performance..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "DragFullWindows" -Type String -Value 0
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Type String -Value 200
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Type Binary -Value ([byte[]](144, 18, 3, 128, 16, 0, 0, 0))
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop\WindowMetrics" -Name "MinAnimate" -Type String -Value 0
		Set-ItemProperty -Path "HKCU:\Control Panel\Keyboard" -Name "KeyboardDelay" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewAlphaSelect" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewShadow" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "TaskbarAnimations" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" -Name "VisualFXSetting" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\DWM" -Name "EnableAeroPeek" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "EnableTransparency" -Type DWord -Value 0
		Write-Host "Adjusted visual effects for performance"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Adjusted visual effects for performance!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$AppearanceVisualFX_Click = {
		#TODO: Place custom script here
		Write-Host "Adjusting visual effects for appearance..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "EnableTransparency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "DragFullWindows" -Type String -Value 1
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Type String -Value 400
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Type Binary -Value ([byte[]](158, 30, 7, 128, 18, 0, 0, 0))
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop\WindowMetrics" -Name "MinAnimate" -Type String -Value 1
		Set-ItemProperty -Path "HKCU:\Control Panel\Keyboard" -Name "KeyboardDelay" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewAlphaSelect" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewShadow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "TaskbarAnimations" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" -Name "VisualFXSetting" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\DWM" -Name "EnableAeroPeek" -Type DWord -Value 1
		Write-Host "Adjusted visual effects for appearance..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Adjusted visual effects for appearance!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$CCleaner_Click = {
		#TODO: Place custom script here
		Write-Host "Installing CCleaner"
		choco install ccleaner -y
		Write-Host "Finished Installing CCleaner"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing CCleaner!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$MicrosoftSilverlight_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Microsoft Silverlight"
		choco install silverlight -y
		Write-Host "Finished Installing Microsoft Silverlight"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Microsoft Silverlight!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Opera_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Opera"
		choco install opera -y
		Write-Host "Finished Installing Opera"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Opera!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Edge_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Edge"
		choco install microsoft-edge -y
		Write-Host "Finished Installing Microsoft Edge"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Edge!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$Vivaldi_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Vivaldi"
		choco install vivaldi -y
		Write-Host "Finished Installing Vivaldi"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Vivaldi!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$BleachBit_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Bleachbit"
		choco install bleachbit -y
		Write-Host "Finished Installing Bleachbit"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Bleachbit!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$CPUZ_Click = {
		#TODO: Place custom script here
		Write-Host "Installing CPU-Z"
		choco install cpu-z -y
		Write-Host "Finished Installing CPU-Z"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing CPU-Z!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$GPUZ_Click = {
		#TODO: Place custom script here
		Write-Host "Installing GPU-Z"
		choco install gpu-z -y
		Write-Host "Finished Installing GPU-Z"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing GPU-Z!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$IDM_Click = {
		#TODO: Place custom script here
		Write-Host "Installing IDM"
		choco install internet-download-manager -y
		Write-Host "Finished Installing IDM"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing IDM!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Everything_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Everything Search"
		choco install everything -y
		Write-Host "Finished Installing Everything Search"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Everything Search!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Gimp_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Gimp"
		choco install gimp -y
		Write-Host "Finished Installing Gimp"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Gimp!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$ShareX_Click = {
		#TODO: Place custom script here
		Write-Host "Installing ShareX"
		choco install sharex -y
		Write-Host "Finished Installing ShareX"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing ShareX!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$PaintNet_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Paint.NET"
		choco install paint.net -y
		Write-Host "Finished Installing Paint.NET"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Paint.NET!', 'Windows Optimization Toolbox',  0, 64)
		
		
	}
	
	$ImageGlass_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Image Glass"
		choco install imageglass -y
		Write-Host "Finished installing Image Glass"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Image Glass!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$VSCodium_Click = {
		#TODO: Place custom script here
		Write-Host "Installing VSCodium"
		choco install vscodium -y
		Write-Host "Finished installing VSCodium"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing VSCodium!', 'Windows Optimization Toolbox',  0, 64)
		
		
	}
	
	$VSCode_Click = {
		#TODO: Place custom script here
		Write-Host "Installing VS Code"
		choco install vscode -y
		Write-Host "Finshed Installing VS Code"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing VS Code!', 'Windows Optimization Toolbox',  0, 64)
		
		
	}
	
	$SumatraPDF_Click = {
		#TODO: Place custom script here
		Write-Host "Installing SumatraPDF"
		choco install sumatrapdf -y
		Write-Host "Finished Installing SumatraPDF"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Sumatra PDF!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$AdobeReaderDC_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Adobe Reader DC"
		choco install adobereader -y
		Write-Host "Finished Installing Adobe Reader DC"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Adobe Reader DC!', 'Windows Optimization Toolbox',  0, 64)
		
		
	}
	
	$FoxitReader_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Foxit Reader"
		choco install foxitreader -y
		Write-Host "Finished installing Foxit Reader"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Foxit Reader!', 'Windows Optimization Toolbox',  0, 64)
		
		
	}
	
	
	
	
	$DisableWindowsUpdate_Click = {
		#TODO: Place custom script here
		# Source: https://github.com/rgl/windows-vagrant/blob/master/disable-windows-updates.ps1
		Set-StrictMode -Version Latest
		$ProgressPreference = 'SilentlyContinue'
		$ErrorActionPreference = 'SilentlyContinue'
		trap
		{
			Write-Host
			Write-Host "ERROR: $_"
			Write-Host (($_.ScriptStackTrace -split '\r?\n') -replace '^(.*)$', 'ERROR: $1')
			Write-Host (($_.Exception.ToString() -split '\r?\n') -replace '^(.*)$', 'ERROR EXCEPTION: $1')
			Write-Host
		
		}
	
	
	# disable automatic updates.
		# XXX this does not seem to work anymore.
		# see How to configure automatic updates by using Group Policy or registry settings
		#     at https://support.microsoft.com/en-us/help/328010
		
		{
			$p, $components = $path -split '[\\/]'
			$components | ForEach-Object {
				$p = "$p\$_"
				if (!(Test-Path $p))
				{
					New-Item -ItemType Directory $p
				}
			}
			$null
		}
		$auPath = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU'
		New-Directory $auPath
		# set NoAutoUpdate.
		# 0: Automatic Updates is enabled (default).
		# 1: Automatic Updates is disabled.
		New-ItemProperty `
						 -Path $auPath `
						 -Name NoAutoUpdate `
						 -Value 1 `
						 -PropertyType DWORD `
						 -Force `
		
		# set AUOptions.
		# 1: Keep my computer up to date has been disabled in Automatic Updates.
		# 2: Notify of download and installation.
		# 3: Automatically download and notify of installation.
		# 4: Automatically download and scheduled installation.
		New-ItemProperty `
						 -Path $auPath `
						 -Name AUOptions `
						 -Value 1 `
						 -PropertyType DWORD `
						 -Force `
		
		
		# disable Windows Update Delivery Optimization.
		# NB this applies to Windows 10.
		# 0: Disabled
		# 1: PCs on my local network
		# 3: PCs on my local network, and PCs on the Internet
		$deliveryOptimizationPath = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config'
		if (Test-Path $deliveryOptimizationPath)
		{
			New-ItemProperty `
							 -Path $deliveryOptimizationPath `
							 -Name DODownloadMode `
							 -Value 0 `
							 -PropertyType DWORD `
							 -Force `
			
		}
		# Service tweaks for Windows Update
		
		$services = @(
			"BITS"
			"wuauserv"
		)
		
		foreach ($service in $services)
		{
			# -ErrorAction SilentlyContinue is so it doesn't write an error to stdout if a service doesn't exist
			
			Write-Host "Setting $service StartupType to Disabled"
			Get-Service -Name $service -ErrorAction SilentlyContinue | Set-Service -StartupType Disabled
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Windows Updates!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$EnableWindowsUpdates_Click = {
		#TODO: Place custom script here
		# Source: https://github.com/rgl/windows-vagrant/blob/master/disable-windows-updates.ps1
		Set-StrictMode -Version Latest
		$ProgressPreference = 'SilentlyContinue'
		$ErrorActionPreference = 'Stop'
		trap
		{
			Write-Host
			Write-Host "ERROR: $_"
			Write-Host (($_.ScriptStackTrace -split '\r?\n') -replace '^(.*)$', 'ERROR: $1')
			Write-Host (($_.Exception.ToString() -split '\r?\n') -replace '^(.*)$', 'ERROR EXCEPTION: $1')
			Write-Host
			Write-Host 'Sleeping for 60m to give you time to look around the virtual machine before self-destruction...'
			Start-Sleep -Seconds (60 * 60)
			Exit 1
		}
		
		# disable automatic updates.
		# XXX this does not seem to work anymore.
		# see How to configure automatic updates by using Group Policy or registry settings
		#     at https://support.microsoft.com/en-us/help/328010
		function New-Directory($path)
		{
			$p, $components = $path -split '[\\/]'
			$components | ForEach-Object {
				$p = "$p\$_"
				if (!(Test-Path $p))
				{
					New-Item -ItemType Directory $p
				}
			}
			$null
		}
		$auPath = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU'
		New-Directory $auPath
		# set NoAutoUpdate.
		# 0: Automatic Updates is enabled (default).
		# 1: Automatic Updates is disabled.
		New-ItemProperty `
						 -Path $auPath `
						 -Name NoAutoUpdate `
						 -Value 0 `
						 -PropertyType DWORD `
						 -Force `
		
		# set AUOptions.
		# 1: Keep my computer up to date has been disabled in Automatic Updates.
		# 2: Notify of download and installation.
		# 3: Automatically download and notify of installation.
		# 4: Automatically download and scheduled installation.
		New-ItemProperty `
						 -Path $auPath `
						 -Name AUOptions `
						 -Value 3 `
						 -PropertyType DWORD `
						 -Force `
		
		
		# disable Windows Update Delivery Optimization.
		# NB this applies to Windows 10.
		# 0: Disabled
		# 1: PCs on my local network
		# 3: PCs on my local network, and PCs on the Internet
		$deliveryOptimizationPath = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config'
		if (Test-Path $deliveryOptimizationPath)
		{
			New-ItemProperty `
							 -Path $deliveryOptimizationPath `
							 -Name DODownloadMode `
							 -Value 0 `
							 -PropertyType DWORD `
							 -Force `
			
		}
		# Service tweaks for Windows Update
		
		$services = @(
			"BITS"
			"wuauserv"
		)
		
		foreach ($service in $services)
		{
			# -ErrorAction SilentlyContinue is so it doesn't write an error to stdout if a service doesn't exist
			
			Write-Host "Setting $service StartupType to Automatic"
			Get-Service -Name $service -ErrorAction SilentlyContinue | Set-Service -StartupType Automatic
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Windows Updates!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	
	$DarkMode_Click = {
		#TODO: Place custom script here
		Write-Host "Enabling Dark Mode"
		Write-Host "Enabling Dark Mode"
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Name "AppsUseLightTheme" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Name "SystemUsesLightTheme" -Type DWord -Value 0
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Force
		}
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "AppsUseLightTheme" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "SystemUsesLightTheme" -Type DWord -Value 0
		Stop-Process -name explorer -force
		Write-Host "Enabled Dark Mode"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Dark Mode!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$LightMode_Click = {
		#TODO: Place custom script here
		Write-Host "Switching Back to Light Mode"
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Name "AppsUseLightTheme" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Name "SystemUsesLightTheme" -Type DWord -Value 1
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Force
		}
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "AppsUseLightTheme" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "SystemUsesLightTheme" -Type DWord -Value 1
		Stop-Process -name explorer -force
		Write-Host "Switched Back to Light Mode"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Light Mode!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$ShowTrayIcons_Click = {
		#TODO: Place custom script here
		Write-Host "Showing tray icons..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "EnableAutoTray" -Type DWord -Value 0
		Stop-Process -name explorer -force
		Write-Host "Finished Showing All Tray Icons"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Showing Tray Icons!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$HideTraysIcons_Click = {
		#TODO: Place custom script here
		Write-Host "Hiding tray icons..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "EnableAutoTray" -Type DWord -Value 1
		Stop-Process -name explorer -force
		Write-Host "Done - Hid Tray Icons"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][void][System.Windows.Forms.MessageBox]::Show('Finished Hiding Tray Icons!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$DisableLocationTrack_Click = {
		#TODO: Place custom script here
		Write-Host "Disabling Location Tracking..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Type String -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Type DWord -Value 0
		Write-Host "Finished Disabling Location Tracking!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Location Tracking!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$EnableLocationTRacki_Click = {
		#TODO: Place custom script here
		Write-Host "Enabling Location Provider..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableWindowsLocationProvider" -ErrorAction SilentlyContinue
		Write-Host "Enabling Location Scripting..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocationScripting" -ErrorAction SilentlyContinue
		Write-Host "Enabling Location..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocation" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "Value" -Type String -Value "Allow"
		Write-Host "Allow access to Location..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Type String -Value "Allow"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Type DWord -Value "1"
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessLocation" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessLocation_UserInControlOfTheseApps" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessLocation_ForceAllowTheseApps" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessLocation_ForceDenyTheseApps" -ErrorAction SilentlyContinue
		Write-Host "Finished Enabling Location Tracking"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Location Tracking!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$DisableClipboardHist_Click = {
		#TODO: Place custom script here
		Write-Host "Disable Clipboard History..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Clipboard" -Name "EnableClipboardHistory" -Type DWord -Value "1"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "AllowClipboardHistory" -Type DWord -Value "1"
		Write-Host "Disabled Clipboard History"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Clipboard History!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$EnableClipboardHisto_Click = {
		#TODO: Place custom script here
		Write-Host "Enable Clipboard History..."
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Clipboard" -Name "EnableClipboardHistory" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "AllowClipboardHistory" -ErrorAction SilentlyContinue
		Write-Host "Enabled Clipboard History"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Clipboard History!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$PhysX_Click = {
		#TODO: Place custom script here
		Write-Host "Installing PhysX"
		choco install physx.legacy -y
		Write-Host "Finished Installing PhysX"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing PhysX!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	
	$Java_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Java"
		choco install javaruntime -y
		Write-Host "Finished Installing Java!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Java!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$Restore_Click = {
		#TODO: Place custom script here
		Start-Process rstrui.exe
	}
	
	$LaptopNumlockFix_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		Set-ItemProperty -Path "HKU:\.DEFAULT\Control Panel\Keyboard" -Name "InitialKeyboardIndicators" -Type DWord -Value 0
		Add-Type -AssemblyName System.Windows.Forms
		If (([System.Windows.Forms.Control]::IsKeyLocked('NumLock')))
		{
			$wsh = New-Object -ComObject WScript.Shell
			$wsh.SendKeys('{NUMLOCK}')
		}
		Write-Host "Operation Completed Sucessfully!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	
	$WindowsSearchAndTask_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		New-ItemProperty -Path HKCU:Software\Microsoft\Windows\CurrentVersion\Run -Name Ctfmon -Type String -Value C:\Windows\system32\ctfmon.exe -Force
		Write-Host "Enabling Windows Search.."
		Start-Service -Name TabletInputService
		Start-Service -Name WSearch
		Get-AppxPackage -AllUsers | Where-Object { $_.InstallLocation -like "*SystemApps*" } | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Stop-Process -name explorer -force
		Write-Host "Operation Completed Sucessfully!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$BalenaEtcher_Click = {
		#TODO: Place custom script here
		Write-Host "Dowloading balenaEtcher"
		choco install etcher -y
		Write-Host "Finished Dowloading balenaEtcher"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Dowloading balenaEtcher!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$GreenShot_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Greenshot"
		choco install greenshot -y
		Write-Host "Finsihed Installing Greenshot"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finsihed Installing Greenshot!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$CreateARestorePoint_Click = {
		#TODO: Place custom script here
		Write-Host "Creating A Restore Point"
		Enable-ComputerRestore -Drive "C:\"
		REG ADD "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore" /V "SystemRestorePointCreationFrequency" /T REG_DWORD /D 0 /F
		Checkpoint-Computer -Description "Windows Toolbox" -RestorePointType "MODIFY_SETTINGS"
		Write-Host "Finished Creating A Restore Point"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finsihed Creating A Restore Point!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$LibreOffice_Click = {
		#TODO: Place custom script here
		Write-Host "Installing LibreOffice"
		choco install libreoffice-fresh -y
		Write-Host "Finished Installing LibreOffice"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finsihed Installing LibreOffice!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$IrfanView_Click = {
		#TODO: Place custom script here
		Write-Host "Installing IfranView"
		choco install irfanview -y
		Write-Host "Finished Installing IfranView"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing IfranView!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$Cleanmgr_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Cleanmgr+"
		choco install cleanmgr-plus
		Write-Host "Finished Installing Cleanmgr+"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Cleanmgr+!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$RemoveStartupProgram_Click = {
		#TODO: Place custom script here
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run32"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\StartupFolder"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run32"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\StartupFolder"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\RunOnce"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$Startup = "$env:SystemDrive\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp"
		foreach ($Item in (Get-ChildItem -Path $Startup))
		{
			Remove-Item -Path (Join-Path -Path $Startup -ChildPath $Item)
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Startup Apps!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	
	$RemoveViruses_Click = {
		#TODO: Place custom script here
		Start-Process 'https://www.reddit.com/r/TronScript/'
	}
	
	$OldContextMenu_Click = {
		#TODO: Place custom script here
		New-Item -Path "HKCU:\SOFTWARE\Classes\CLSID" -Force
		New-Item -Path "HKCU:\SOFTWARE\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}" -Force
		New-Item -Path "HKCU:\SOFTWARE\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32" -Force -Value ""
		Stop-Process -name explorer -force
		Write-Host "You should now have old context menu"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You should now have old context menu!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$DefaultContextMenu_Click = {
		#TODO: Place custom script here
		Remove-Item -Path "HKCU:\SOFTWARE\CLASSES\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}" -Force -Recurse
		Stop-Process -name explorer -force
		Write-Host "You should now have new (default) context menu"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You should now have new (default) context menu!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$RemoveTakeOwnershipMenu_Click = {
		#TODO: Place custom script here
		Write-Host "Removing TakeOwnership Menu.."
		Start-Process -FilePath "CMD" -ArgumentList "/c REG DELETE `"HKEY_CLASSES_ROOT\*\shell\TakeOwnership`" /F" -Verb RunAs -WindowStyle Hidden -Wait
		Start-Process -FilePath "CMD" -ArgumentList "/c REG DELETE `"HKEY_CLASSES_ROOT\Directory\shell\TakeOwnership`" /F" -Verb RunAs -WindowStyle Hidden -Wait
		Write-Host "Take Ownership should be removed now!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Take Ownership should be removed now!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	$AddTakeOwnershipMenu_Click = {
		#TODO: Place custom script here
		if (!(Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership"))
		{
			Write-Host "Adding 'Take Ownership' to context menu!"
			if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership") -ne $true)
			{
				New-Item "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership" -force -ea SilentlyContinue
			}
			if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership\command") -ne $true)
			{
				New-Item "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership\command" -force -ea SilentlyContinue
			}
			if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership") -ne $true)
			{
				New-Item "HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership" -force -ea SilentlyContinue
			}
			if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership\command") -ne $true)
			{
				New-Item "HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership\command" -force -ea SilentlyContinue
			}
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership' -Name '(default)' -Value 'Take Ownership' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership' -Name 'HasLUAShield' -Value '' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership' -Name 'NoWorkingDirectory' -Value '' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership' -Name 'Position' -Value 'middle' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership\command' -Name '(default)' -Value 'powershell -windowstyle hidden -command "Start-Process cmd -ArgumentList ''/c takeown /f \"%1\" && icacls \"%1\" /grant *S-1-3-4:F /c /l'' -Verb runAs' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership\command' -Name 'IsolatedCommand' -Value 'powershell -windowstyle hidden -command "Start-Process cmd -ArgumentList ''/c takeown /f \"%1\" && icacls \"%1\" /grant *S-1-3-4:F /c /l'' -Verb runAs' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name '(default)' -Value 'Take Ownership' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name 'AppliesTo' -Value 'NOT (System.ItemPathDisplay:="C:\Users" OR System.ItemPathDisplay:="C:\ProgramData" OR System.ItemPathDisplay:="C:\Windows" OR System.ItemPathDisplay:="C:\Windows\System32" OR System.ItemPathDisplay:="C:\Program Files" OR System.ItemPathDisplay:="C:\Program Files (x86)")' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name 'HasLUAShield' -Value '' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name 'NoWorkingDirectory' -Value '' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name 'Position' -Value 'middle' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership\command' -Name '(default)' -Value 'powershell -windowstyle hidden -command "Start-Process cmd -ArgumentList ''/c takeown /f \"%1\" /r /d y && icacls \"%1\" /grant *S-1-3-4:F /c /l /q'' -Verb runAs' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership\command' -Name 'IsolatedCommand' -Value 'powershell -windowstyle hidden -command "Start-Process cmd -ArgumentList ''/c takeown /f \"%1\" /r /d y && icacls \"%1\" /grant *S-1-3-4:F /c /l /q'' -Verb runAs' -PropertyType String -Force -ea SilentlyContinue;
			Write-Host "'Take Ownership' is added into context menu!"
		}
		else
		{
			Clear-Host
			Write-Host "Added `"Take Onwership`" added into your context menu!" -ForegroundColor Yellow -BackgroundColor Black
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Added Take Onwership added into your context menu!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$DefaultTaskbar_Click = {
		#TODO: Place custom script here
		Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "TaskbarSi" -Force
		Stop-Process -name explorer -force
		Write-Host "Finished Setting Taskbar Size To It's Default Setting!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Setting Taskbar Size To Default Setting!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$SmallTaskbar_Click = {
		#TODO: Place custom script here
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name TaskbarSi -Value 0
		Stop-Process -name explorer -force
		Write-Host "You should have small taskbar now! It might be buggy but you can always revert"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You should have small taskbar now! It might be buggy but you can always revert.', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	
	$EnableNFS_Click = {
		#TODO: Place custom script here
		Enable-WindowsOptionalFeature -Online -FeatureName "ServicesForNFS-ClientOnly" -All
		Enable-WindowsOptionalFeature -Online -FeatureName "ClientForNFS-Infrastructure" -All
		Enable-WindowsOptionalFeature -Online -FeatureName "NFS-Administration" -All
		nfsadmin client stop
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\ClientForNFS\CurrentVersion\Default" -Name "AnonymousUID" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\ClientForNFS\CurrentVersion\Default" -Name "AnonymousGID" -Type DWord -Value 0
		nfsadmin client start
		nfsadmin client localhost config fileaccess=755 SecFlavors=+sys -krb5 -krb5i
		Write-Host "NFS is now setup for user based NFS mounts"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('NFS is now setup for user based NFS mounts!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$StarTisBack_Click = {
		#TODO: Place custom script here
		Write-Host "Installing StarTisBack"
		winget install -e --id StartIsBack.StartIsBack
		Write-Host "Finished Installing StarTisBack"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing StarTisBack!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	$Blender_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Blender"
		winget install -e --id BlenderFoundation.Blender
		Write-Host "Finsihed Installing Blender"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finsihed Installing Blender!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Openshell_Click = {
		#TODO: Place custom script here
		Write-Host "Installing OpenShell"
		choco install open-shell
		Write-Host "Finished Installing OpenShell"
	}
	
	
	$CompactOS_Click = {
		#TODO: Place custom script here
		Write-Host "Compressing Windows Files. This Might Take A While"
		Start-Process -FilePath "${env:Windir}\System32\compact.exe" -ArgumentList '/c c:\*.* /i /s /a /c /exe:lzx' -Wait -Verb RunAs
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	
	
	$RemoveMalware_Click = {
		#TODO: Place custom script here
		
		if (!(Test-Path "$PSScriptRoot\..\tmp"))
		{
			Write-Host "Folder $PSScriptRoot\..\tmp doesn't exist, creating one..."
			mkdir "$PSScriptRoot\..\tmp"
		}
		
		$AdwCleanerDl = "https://downloads.malwarebytes.com/file/adwcleaner"
		$AdwCleanerOutput = "$PSScriptRoot\..\tmp\adwcleaner.exe"
		
		Write-Host "Downloading and Running AdwCleaner from: $AdwCleanerDl"
		Invoke-WebRequest -Uri $AdwCleanerDl -OutFile $AdwCleanerOutput
		Start-Process -FilePath $AdwCleanerOutput -ArgumentList "/eula", "/clean", "/noreboot" -Wait
		Remove-Item $AdwCleanerOutput -Force
		Write-Host "Finished Removing Adware!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Adware!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Ventoy_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Ventoy"
		choco install ventoy
		Write-Host "Finished Installing Ventoy"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Ventoy!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$IntelDriverSupportAs_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Intel Driver Support Assistant"
		choco install intel-dsa
		Write-Host "Finished Installing Intel Driver Support Assistant"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Intel Driver Support Assistant!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$AMDRyzenChipsetDrive_Click = {
		#TODO: Place custom script here
		Write-Host "Installing AMD Ryzen Chipset Drivers"
		choco install amd-ryzen-chipset
		Write-Host "Finished Installing AMD Ryzen Chipset Drivers"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Finished Installing AMD Ryzen Chipset Drivers!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	
	$GeforceExperience_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Geforce Experience"
		choco install geforce-experience
		Write-Host "FinishedInstalling Geforce Experience"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Finished Installing Geforce Experience!', 'Windows Optimization Toolbox',  0, 64)
		
	}
	
	
	$BypassTPM20_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		New-ItemProperty -Path "HKLM:\System\Setup\LabConfig" -Name "BypassSecureBootCheck" -PropertyType DWord -Value 1 -Force
		New-ItemProperty -Path "HKLM:\System\Setup\LabConfig" -Name "BypassTPMCheck" -PropertyType DWord -Value 1 -Force
		Write-Host "Operation Completed Sucessfully"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$Windows10XBootAnimat_Click={
		#TODO: Place custom script here
		Write-Host "Adding Windows 10X Boot Animation..."
		cmd /c 'reg add "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\BootControl" /v "BootProgressAnimation" /t REG_DWORD /d 1 /f'
		New-ItemProperty -Path "HKLM:\System\ControlSet001\Control\BootControl" -Name "BootProgressAnimation" -PropertyType DWord -Value 1 -Force
		Write-Host "Finished Adding Windows 10X Boot Animation..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Adding Windows 10X Boot Animation!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	$RemoveWindows10XBoot_Click = {
		#TODO: Place custom script here
		Write-Host "Removing Windows 10X Boot Animation..."
		Remove-ItemProperty -Path "HKLM:\System\ControlSet001\Control\BootControl" -Name "BootProgressAnimation"
		cmd /c 'reg delete "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\BootControl" /f'
		Write-Host "Finished Removing Windows 10X Boot Animation..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Windows 10X Boot Animation!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$InstallOnedrive_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Onedrive. Please Wait..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\OneDrive" -Name "DisableFileSyncNGSC" -ErrorAction SilentlyContinue
		%systemroot%\SysWOW64\OneDriveSetup.exe
		Write-Host "Finished Installing OneDrive!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing OneDrive!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$DisableCortana_Click={
		#TODO: Place custom script here
		Write-Host "Disable Cortana Autostart ..."
		if (Get-AppxPackage -Name Microsoft.549981C3F5F10)
		{
			if (-not (Test-Path -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId"))
			{
				New-Item -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Force
			}
			New-ItemProperty -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Name State -PropertyType DWord -Value 1 -Force
		}
		Write-Host "Disabling Cortana..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -Type DWord -Value 0
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type DWord -Value 1
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Name "HarvestContacts" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -Type DWord -Value 0
		Write-Host "Enabling automatic Installingation of network devices..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\NcdAutoSetup\Private" -Name "AutoSetup" -ErrorAction SilentlyContinue
		Write-Host "Finished Disabling Cortana"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Cortana!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	$DebloatAll_Click={
		#TODO: Place custom script here
		Start-Process -FilePath "${env:Windir}\System32\dism.exe" -ArgumentList '/Online /Cleanup-Image /StartComponentCleanup /ResetBase' -Wait -Verb RunAs
		Write-Host "Removing Bloatware..."
		$cdm = @(
			"ContentDeliveryAllowed"
			"FeatureManagementEnabled"
			"OemPreInstalledAppsEnabled"
			"PreInstalledAppsEnabled"
			"PreInstalledAppsEverEnabled"
			"SilentInstalledAppsEnabled"
			"SubscribedContent-314559Enabled"
			"SubscribedContent-338387Enabled"
			"SubscribedContent-338388Enabled"
			"SubscribedContent-338389Enabled"
			"SubscribedContent-338393Enabled"
			"SubscribedContentEnabled"
			"SystemPaneSuggestionsEnabled"
		)
		
		New-FolderForced -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager"
		foreach ($key in $cdm)
		{
			Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" $key 0
		}
		
		New-FolderForced -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" "AutoDownload" 2
		
		# Prevents "Suggested Applications" returning
		New-FolderForced -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" "DisableWindowsConsumerFeatures" 1
		Get-AppxProvisionedPackage -online | Remove-AppxProvisionedPackage -online
		Get-AppxPackage -AllUsers | Remove-AppxPackage
		# Remove Microsoft App (Read Function name)
		Function MicrosoftEdge
		{
			winget uninstall "Microsoft Edge"
			Write-Host "Removing Microsoft Edge"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftEdgeUpdate
		{
			winget uninstall "Microsoft Edge Update"
			Write-Host "Removing Microsoft Edge Update"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftEdgeWebView2Runtime
		{
			winget uninstall "Microsoft Edge WebView2 Runtime"
			Write-Host "Removing Microsoft Edge WebView2 Runtime"
		}
		
		# Remove Microsoft App (Read Function name)
		Function Cortana
		{
			winget uninstall "Cortana"
			Write-Host "Removing Cortana"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftNews
		{
			winget uninstall "Microsoft News"
			Write-Host "Removing Microsoft News"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MSNWeather
		{
			winget uninstall "MSN Weather"
			Write-Host "Removing MSN Weather"
		}
		
		# Remove Microsoft App (Read Function name)
		Function Xbox
		{
			winget uninstall "Xbox"
			Write-Host "Removing Xbox"
		}
		
		# Remove Microsoft App (Read Function name)
		Function GetHelp
		{
			winget uninstall "Get Help"
			Write-Host "Removing Get Help"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftTips
		{
			winget uninstall "Microsoft Tips"
			Write-Host "Removing Microsoft Tips"
		}
		
		# Remove Microsoft App (Read Function name)
		Function HEIFImageExtensions
		{
			winget uninstall "HEIF Image Extensions"
			Write-Host "Removing HEIF Image Extensions"
		}
		
		# Remove Microsoft App (Read Function name)
		Function Office
		{
			winget uninstall "Office"
			Write-Host "Removing Office"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftSolitaireCollection
		{
			winget uninstall "Microsoft Solitaire Collection"
			Write-Host "Removing Microsoft Solitaire Collection"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftStickyNotes
		{
			winget uninstall "Microsoft Sticky Notes"
			Write-Host "Removing Microsoft Sticky Notes"
		}
		
		# Remove Microsoft App (Read Function name)
		Function Paint
		{
			winget uninstall "Paint"
			Write-Host "Removing Paint"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftPeople
		{
			winget uninstall "Microsoft People"
			Write-Host "Removing Microsoft People"
		}
		
		# Remove Microsoft App (Read Function name)
		Function PowerAutomate
		{
			winget uninstall "Power Automate"
			Write-Host "Removing Power Automate"
		}
		
		# Remove Microsoft App (Read Function name)
		Function SnippingTool
		{
			winget uninstall "Snipping Tool"
			Write-Host "Removing Snipping Tool"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsSecurity
		{
			winget uninstall "Windows Security"
			Write-Host "Removing Windows Security"
		}
		
		# Remove Microsoft App (Read Function name)
		Function StoreExperienceHost
		{
			winget uninstall "Store Experience Host"
			Write-Host "Removing Store Experience Host"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftToDo
		{
			winget uninstall "Microsoft To Do"
			Write-Host "Removing Microsoft To Do"
		}
		
		# Remove Microsoft App (Read Function name)
		Function VP9VideoExtensions
		{
			winget uninstall "VP9 Video Extensions"
			Write-Host "Removing VP9 Video Extensions"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WebMediaExtensions
		{
			winget uninstall "Web Media Extensions"
			Write-Host "Removing Web Media Extensions"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WebpImageExtensions
		{
			winget uninstall "Webp Image Extensions"
			Write-Host "Removing Webp Image Extensions"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftPhotos
		{
			winget uninstall "Microsoft Photos"
			Write-Host "Removing Microsoft Photos"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsAlarmsClock
		{
			winget uninstall "Windows Alarms & Clock"
			Write-Host "Removing Windows Alarms & Clock"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsCalculator
		{
			winget uninstall "Windows Calculator"
			Write-Host "Removing Windows Calculator"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsCamera
		{
			winget uninstall "Windows Camera"
			Write-Host "Removing Windows Camera"
		}
		
		# Remove Microsoft App (Read Function name)
		Function FeedbackHub
		{
			winget uninstall "Feedback Hub"
			Write-Host "Removing Feedback Hub"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsMaps
		{
			winget uninstall "Windows Maps"
			Write-Host "Removing Windows Maps"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsNotepad
		{
			winget uninstall "Windows Notepad"
			Write-Host "Removing Windows Notepad"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsVoiceRecorder
		{
			winget uninstall "Windows Voice Recorder"
			Write-Host "Removing Windows Voice Recorder"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxTCUI
		{
			winget uninstall "Xbox TCUI"
			Write-Host "Removing Xbox TCUI"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxGameBarPlugin
		{
			winget uninstall "Xbox Game Bar Plugin"
			Write-Host "Removing Xbox Game Bar Plugin"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxGameBar
		{
			winget uninstall "Xbox Game Bar"
			Write-Host "Removing Xbox Game Bar"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxIdentityProvider
		{
			winget uninstall "Xbox Identity Provider"
			Write-Host "Removing Xbox Identity Provider"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxGameSpeechWindow
		{
			winget uninstall "Xbox Game Speech Window"
			Write-Host "Removing Xbox Game Speech Window"
		}
		
		# Remove Microsoft App (Read Function name)
		Function YourPhone
		{
			winget uninstall "Your Phone"
			Write-Host "Removing Your Phone"
		}
		
		# Remove Microsoft App (Read Function name)
		Function GrooveMusic
		{
			winget uninstall "Groove Music"
			Write-Host "Removing Groove Music"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MoviesTV
		{
			winget uninstall "Movies & TV"
			Write-Host "Removing Movies & TV"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftTeams
		{
			winget uninstall "Microsoft Teams"
			Write-Host "Removing Microsoft Teams"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsWebExperiencePack
		{
			winget uninstall "Windows Web Experience Pack"
			Write-Host "Removing Windows Web Experience Pack"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MailCalendar
		{
			winget uninstall "Mail and Calendar"
			Write-Host "Removing Mail and Calendar"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftStore
		{
			winget uninstall "Microsoft Store"
			Write-Host "Removing Microsoft Store"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsTerminal
		{
			winget uninstall "Windows Terminal"
			Write-Host "Removing Windows Terminal"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftBingNews
		{
			Get-AppxPackage -Name Microsoft.BingNews | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.BingNews | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.BingNews."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftGetHelp
		{
			Get-AppxPackage -Name Microsoft.GetHelp | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.GetHelp | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.GetHelp."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftGetstarted
		{
			Get-AppxPackage -Name Microsoft.Getstarted | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Getstarted | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Getstarted."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMessaging
		{
			Get-AppxPackage -Name Microsoft.Messaging"| Remove-AppxPackage
    Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Messaging" | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Messaging."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMicrosoft3DViewer
		{
			Get-AppxPackage -Name Microsoft.Microsoft3DViewer | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Microsoft3DViewer | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Microsoft3DViewer."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMicrosoftSolitaireCollection
		{
			Get-AppxPackage -Name Microsoft.MicrosoftSolitaireCollection | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.MicrosoftSolitaireCollection | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.MicrosoftSolitaireCollection."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftNetworkSpeedTest
		{
			Get-AppxPackage -Name Microsoft.NetworkSpeedTest | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.NetworkSpeedTest | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.NetworkSpeedTest."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftNews
		{
			Get-AppxPackage -Name Microsoft.News | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.News | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.News."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftOfficeLens
		{
			Get-AppxPackage -Name Microsoft.Office.Lens | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Office.Lens | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Office.Lens."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftOfficeSway
		{
			Get-AppxPackage -Name Microsoft.Office.Sway | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Office.Sway | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Office.Sway."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftOneConnect
		{
			Get-AppxPackage -Name Microsoft.OneConnect | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.OneConnect | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.OneConnect."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftPrint3D
		{
			Get-AppxPackage -Name Microsoft.Print3D | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Print3D | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Print3D."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftSkypeApp
		{
			Get-AppxPackage -Name Microsoft.SkypeApp | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.SkypeApp | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.SkypeApp."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftStorePurchaseApp
		{
			Get-AppxPackage -Name Microsoft.StorePurchaseApp | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.StorePurchaseApp | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.StorePurchaseApp."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWhiteboard
		{
			Get-AppxPackage -Name Microsoft.Whiteboard | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Whiteboard | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Whiteboard."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsAlarms
		{
			Get-AppxPackage -Name Microsoft.WindowsAlarms | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsAlarms | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.WindowsAlarms."
		}
		
		# Remove Microsoft App (Read Function name)
		Function microsoftwindowscommunicationsapps
		{
			Get-AppxPackage -Name microsoft.windowscommunicationsapps | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like microsoft.windowscommunicationsapps | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing microsoft.windowscommunicationsapps."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsFeedbackHub
		{
			Get-AppxPackage -Name Microsoft.WindowsFeedbackHub | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsFeedbackHub | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.WindowsFeedbackHub."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsMaps
		{
			Get-AppxPackage -Name Microsoft.WindowsMaps | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsMaps | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.WindowsMaps."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsSoundRecorder
		{
			Get-AppxPackage -Name Microsoft.WindowsSoundRecorder | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsSoundRecorder | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.WindowsSoundRecorder."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftZuneMusic
		{
			Get-AppxPackage -Name Microsoft.ZuneMusic | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.ZuneMusic | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.ZuneMusic."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftZuneVideo
		{
			Get-AppxPackage -Name Microsoft.ZuneVideo | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.ZuneVideo | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.ZuneVideo."
		}
		
		# Remove Microsoft App (Read Function name)
		Function EclipseManager
		{
			Get-AppxPackage -Name *EclipseManager* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *EclipseManager* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *EclipseManager*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function ActiproSoftwareLLC
		{
			Get-AppxPackage -Name *ActiproSoftwareLLC* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *ActiproSoftwareLLC* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *ActiproSoftwareLLC*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function AdobeSystemsIncorporatedAdobePhotoshopExpress
		{
			Get-AppxPackage -Name *AdobeSystemsIncorporated.AdobePhotoshopExpress* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *AdobeSystemsIncorporated.AdobePhotoshopExpress* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *AdobeSystemsIncorporated.AdobePhotoshopExpress*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Duolingo_LearnLanguagesforFree
		{
			Get-AppxPackage -Name *Duolingo-LearnLanguagesforFree* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Duolingo-LearnLanguagesforFree* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Duolingo-LearnLanguagesforFree*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function PandoraMediaInc
		{
			Get-AppxPackage -Name *PandoraMediaInc* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *PandoraMediaInc* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *PandoraMediaInc*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function CandyCrush
		{
			Get-AppxPackage -Name *CandyCrush* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *CandyCrush* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *CandyCrush*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function BubbleWitch3Saga
		{
			Get-AppxPackage -Name *BubbleWitch3Saga* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *BubbleWitch3Saga* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *BubbleWitch3Saga*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Wunderlist
		{
			Get-AppxPackage -Name *Wunderlist* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Wunderlist* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Wunderlist*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Flipboard
		{
			Get-AppxPackage -Name *Flipboard* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Flipboard* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Flipboard*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Twitter
		{
			Get-AppxPackage -Name *Twitter* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Twitter* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Twitter*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Facebook
		{
			Get-AppxPackage -Name *Facebook* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Facebook* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Facebook*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Spotify
		{
			Get-AppxPackage -Name *Spotify* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Spotify* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Spotify*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function RoyalRevolt
		{
			Get-AppxPackage -Name *RoyalRevolt* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *RoyalRevolt* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *RoyalRevolt*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Sway
		{
			Get-AppxPackage -Name *Sway* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Sway* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Sway*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function SpeedTest
		{
			Get-AppxPackage -Name *SpeedTest* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *SpeedTest* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *SpeedTest*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Dolby
		{
			Get-AppxPackage -Name *Dolby* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Dolby* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Dolby*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftAdvertisingXaml_10171250_x64__8wekyb3d8bbwe
		{
			Get-AppxPackage -Name *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftAdvertisingXaml_10171250_x86__8wekyb3d8bbwe
		{
			Get-AppxPackage -Name *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftBingWeather
		{
			Get-AppxPackage -Name *Microsoft.BingWeather* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.BingWeather* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.BingWeather*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMSPaint
		{
			Get-AppxPackage -Name *Microsoft.MSPaint* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.MSPaint* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.MSPaint*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMicrosoftStickyNotes
		{
			Get-AppxPackage -Name *Microsoft.MicrosoftStickyNotes* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.MicrosoftStickyNotes* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.MicrosoftStickyNotes*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsPhotos
		{
			Get-AppxPackage -Name *Microsoft.Windows.Photos* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Windows.Photos* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.Windows.Photos*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsCalculator
		{
			Get-AppxPackage -Name *Microsoft.WindowsCalculator* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.WindowsCalculator* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.WindowsCalculator*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsStore
		{
			Get-AppxPackage -Name *Microsoft.WindowsStore* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.WindowsStore* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.WindowsStore*."
		}
		Write-Host "Unistalling Edge..."
		winget uninstall "Microsoft Edge"
		winget uninstall "Microsoft Edge Update"
		winget uninstall "Microsoft Edge WebView2 Runtime"
		winget uninstall "Xbox Game Bar"
		[String] $ProgramX86 = "$env:SystemDrive\Program Files (x86)"
		[String] $edgepath = "$ProgramX86\Microsoft\Edge\Application\*.*.*.*\Installer"
		[String] $arguments = "--uninstall --system-level --verbose-logging --force-uninstall"
		Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -Wait
		Disable-ScheduledTask -TaskName "\MicrosoftEdgeUpdateTaskMachineUA"
		Disable-ScheduledTask -TaskName "\MicrosoftEdgeUpdateTaskMachineCore"
		$Edgeservices = @("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService")
		$Edgeservices | ForEach-Object {
			Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue
			Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue
			if (Test-Path "$ProgramX86\Microsoft\Edge\Application")
			{
				Write-Host "Uninstalling " -NoNewline
				Write-Host "Microsoft Edge" -ForegroundColor Cyan
				Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -WindowStyle Hidden -Wait
				"\MicrosoftEdgeUpdateTaskMachineUA", "\MicrosoftEdgeUpdateTaskMachineCore" | ForEach-Object {
					Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue
				}
				@("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService") | ForEach-Object {
					Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue
					Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue
				}
				Write-Host "Clearing " -NoNewline
				Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
				Write-Host " registry keys!"
				[Array]$RegistryPaths = @(
					"HKCU:\SOFTWARE\Microsoft\Edge", "HKCU:\SOFTWARE\Microsoft\EdgeUpdate", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate"
				)
				Foreach ($Path in $RegistryPaths)
				{
					Remove-Item -Path $Path -Force -Recurse -ErrorAction SilentlyContinue
				}
				Write-Host "Removing " -NoNewline
				Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
				Write-Host " files!"
				
				Get-ChildItem -Path "$ProgramX86\Microsoft\Edge" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
				}
				Get-ChildItem -Path "$ProgramX86\Microsoft\EdgeUpdate" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
				}
				Get-ChildItem -Path "$ProgramX86\Microsoft\Temp" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
				}
			}
		}
		Write-Host "Clearing " -NoNewline
		Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
		Write-Host "registry keys!"
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft" -Name "DoNotUpdateToEdgeWithChromium" -Type DWord -Value 1
		if (Test-Path "HKCU:\SOFTWARE\Microsoft\Edge")
		{
			Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\Edge" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKCU:\SOFTWARE\Microsoft\EdgeUpdate")
		{
			Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\EdgeUpdate" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge")
		{
			Remove-Item -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate")
		{
			Remove-Item -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (!(Test-Path "HKCR:\"))
		{
			New-PSDrive -PSProvider Registry -Root HKEY_CLASSES_ROOT -Name HKCR
		}
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*MicrosoftEdge*" -Force
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*microsoft-edge*" -Force
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*edge*" -Force
		$edgechilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\Edge"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		$edgeupdatechilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\EdgeUpdate"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		$edgetempchilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\Temp"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
	    taskkill /F /IM browser_broker.exe
		taskkill /F /IM RuntimeBroker.exe
		taskkill /F /IM MicrosoftEdge.exe
		taskkill /F /IM MicrosoftEdgeCP.exe
		taskkill /F /IM MicrosoftEdgeSH.exe
		cmd /c 'reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\MicrosoftEdge.exe" /v Debugger /t REG_SZ /d "%windir%\System32\taskkill.exe" /f'
		Get-WindowsPackage -Online | Where-Object PackageName -like *InternetExplorer* | Remove-WindowsPackage -Online -NoRestart
		if (Test-Path "$ProgramX86\Microsoft\Edge\Application")
		{
	
			Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -WindowStyle Hidden -Wait
			"\MicrosoftEdgeUpdateTaskMachineUA", "\MicrosoftEdgeUpdateTaskMachineCore" | ForEach-Object {
				Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue
			}
			@("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService") | ForEach-Object {
				Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue
				Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue
			}
	        Get-ChildItem -Path "$ProgramX86\Microsoft\Edge" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			Get-ChildItem -Path "$ProgramX86\Microsoft\EdgeUpdate" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			Get-ChildItem -Path "$ProgramX86\Microsoft\Temp" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			
			#Remove Edge Services
			if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
			{
				Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -ErrorAction SilentlyContinue -Force
			}
			if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
			{
				Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -ErrorAction SilentlyContinue -Force
			}
			New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
			Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
			Write-Host "has been removed"
		}
		else
		{
			Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
			Write-Host "is not even installed?"
			
		}
		
		$Bloatware = @(
			#Unnecessary Windows 10 AppX Apps
			"Microsoft.3DBuilder"
			"Microsoft.Microsoft3DViewer"
			"Microsoft.AppConnector"
			"Microsoft.BingFinance"
			"Microsoft.BingNews"
			"Microsoft.BingSports"
			"Microsoft.BingTranslator"
			"Microsoft.3DBuilder" # 3D Builder
			"Microsoft.Appconnector"
			"Microsoft.BingFinance" # Finance
			"Microsoft.BingFoodAndDrink" # Food And Drink
			"Microsoft.BingHealthAndFitness" # Health And Fitness
			"Microsoft.BingNews" # News
			"2FE3CB00.PicsArt-PhotoStudio"
			"46928bounde.EclipseManager"
			"Microsoft.BingFoodAndDrink"
			"Microsoft.BingHealthAndFitness"
			"Microsoft.BingTravel"
			"Microsoft.WindowsReadingList"
			
			# Redstone 5 apps
			"Microsoft.MixedReality.Portal"
			"Microsoft.ScreenSketch"
			"Microsoft.XboxGamingOverlay"
			"Microsoft.YourPhone"
			
			# non-Microsoft
			"2FE3CB00.PicsArt-PhotoStudio"
			"46928bounde.EclipseManager"
			"4DF9E0F8.Netflix"
			"613EBCEA.PolarrPhotoEditorAcademicEdition"
			"6Wunderkinder.Wunderlist"
			"7EE7776C.LinkedInforWindows"
			"89006A2E.AutodeskSketchBook"
			"9E2F88E3.Twitter"
			"A278AB0D.DisneyMagicKingdoms"
			"A278AB0D.MarchofEmpires"
			"ActiproSoftwareLLC.562882FEEB491" # next one is for the Code Writer from Actipro Software LLC
			"CAF9E577.Plex"
			"ClearChannelRadioDigital.iHeartRadio"
			"D52A8D61.FarmVille2CountryEscape"
			"D5EA27B7.Duolingo-LearnLanguagesforFree"
			"DB6EA5DB.CyberLinkMediaSuiteEssentials"
			"DolbyLaboratories.DolbyAccess"
			"DolbyLaboratories.DolbyAccess"
			"Drawboard.DrawboardPDF"
			"Facebook.Facebook"
			"Fitbit.FitbitCoach"
			"Flipboard.Flipboard"
			"GAMELOFTSA.Asphalt8Airborne"
			"KeeperSecurityInc.Keeper"
			"NORDCURRENT.COOKINGFEVER"
			"PandoraMediaInc.29680B314EFC2"
			"Playtika.CaesarsSlotsFreeCasino"
			"ShazamEntertainmentLtd.Shazam"
			"SlingTVLLC.SlingTV"
			"SpotifyAB.SpotifyMusic"
			"TheNewYorkTimes.NYTCrossword"
			"ThumbmunkeysLtd.PhototasticCollage"
			"TuneIn.TuneInRadio"
			"WinZipComputing.WinZipUniversal"
			"XINGAG.XING"
			"flaregamesGmbH.RoyalRevolt2"
			"king.com.*"
			"king.com.BubbleWitch3Saga"
			"king.com.CandyCrushSaga"
			"king.com.CandyCrushSodaSaga"
			"4DF9E0F8.Netflix"
			"613EBCEA.PolarrPhotoEditorAcademicEdition"
			"6Wunderkinder.Wunderlist"
			"7EE7776C.LinkedInforWindows"
			"89006A2E.AutodeskSketchBook"
			"9E2F88E3.Twitter"
			"A278AB0D.DisneyMagicKingdoms"
			"A278AB0D.MarchofEmpires"
			"ActiproSoftwareLLC.562882FEEB491" # next one is for the Code Writer from Actipro Software LLC
			"CAF9E577.Plex"
			"ClearChannelRadioDigital.iHeartRadio"
			"D52A8D61.FarmVille2CountryEscape"
			"D5EA27B7.Duolingo-LearnLanguagesforFree"
			"DB6EA5DB.CyberLinkMediaSuiteEssentials"
			"DolbyLaboratories.DolbyAccess"
			"DolbyLaboratories.DolbyAccess"
			"Drawboard.DrawboardPDF"
			"Facebook.Facebook"
			"Fitbit.FitbitCoach"
			"Flipboard.Flipboard"
			"GAMELOFTSA.Asphalt8Airborne"
			"KeeperSecurityInc.Keeper"
			"NORDCURRENT.COOKINGFEVER"
			"PandoraMediaInc.29680B314EFC2"
			"Playtika.CaesarsSlotsFreeCasino"
			"ShazamEntertainmentLtd.Shazam"
			"SlingTVLLC.SlingTV"
			"SpotifyAB.SpotifyMusic"
			"TheNewYorkTimes.NYTCrossword"
			"ThumbmunkeysLtd.PhototasticCollage"
			"TuneIn.TuneInRadio"
			"WinZipComputing.WinZipUniversal"
			"XINGAG.XING"
			"flaregamesGmbH.RoyalRevolt2"
			"king.com.*"
			"king.com.BubbleWitch3Saga"
			"king.com.CandyCrushSaga"
			"king.com.CandyCrushSodaSaga"
			"Microsoft.BingSports" # Sports
			"Microsoft.BingTranslator" # Translator
			"Microsoft.BingTravel" # Travel
			"Microsoft.BingWeather" # Weather
			"Microsoft.CommsPhone"
			"Microsoft.ConnectivityStore"
			"Microsoft.GamingServices"
			"Microsoft.GetHelp"
			"Microsoft.Getstarted"
			"Microsoft.Messaging"
			"Microsoft.Microsoft3DViewer"
			"Microsoft.MicrosoftOfficeHub"
			"Microsoft.MicrosoftPowerBIForWindows"
			"Microsoft.MicrosoftSolitaireCollection" # MS Solitaire
			"Microsoft.MixedReality.Portal"
			"Microsoft.NetworkSpeedTest"
			"Microsoft.Office.OneNote" # MS Office One Note
			"Microsoft.Office.Sway"
			"Microsoft.OneConnect"
			"Microsoft.People" # People
			"Microsoft.MSPaint" # Paint 3D (Where every artist truly start as a kid, i mean, on original Paint, not this 3D)
			"Microsoft.Print3D" # Print 3D
			"Microsoft.SkypeApp" # Skype (Who still uses Skype? Use Discord)
			"Microsoft.Todos" # Microsoft To Do
			"Microsoft.Wallet"
			"Microsoft.Whiteboard" # Microsoft Whiteboard
			"Microsoft.WindowsAlarms" # Alarms
			"microsoft.windowscommunicationsapps"
			"Microsoft.WindowsMaps" # Maps
			"Microsoft.WindowsPhone"
			"Microsoft.WindowsReadingList"
			"Microsoft.WindowsSoundRecorder"
			"Microsoft.XboxApp" # Xbox Console Companion (Replaced by new App)
			"Microsoft.XboxGameCallableUI"
			"Microsoft.XboxGameOverlay"
			"Microsoft.XboxSpeechToTextOverlay"
			"Microsoft.YourPhone" # Your Phone
			"Microsoft.ZuneMusic"
			"Microsoft.ZuneVideo" # Movies & TV
			
			# Default Windows 11 apps
			"MicrosoftWindows.Client.WebExperience" # Taskbar Widgets
			"MicrosoftTeams" # Microsoft Teams / Preview
			
			# 3rd party Apps
			"*ACGMediaPlayer*"
			"*ActiproSoftwareLLC*"
			"*AdobePhotoshopExpress*" # Adobe Photoshop Express
			"*Asphalt8Airborne*" # Asphalt 8 Airbone
			"*AutodeskSketchBook*"
			"*BubbleWitch3Saga*" # Bubble Witch 3 Saga
			"*CaesarsSlotsFreeCasino*"
			"*CandyCrush*" # Candy Crush
			"*COOKINGFEVER*"
			"*CyberLinkMediaSuiteEssentials*"
			"*DisneyMagicKingdoms*"
			"*Dolby*" # Dolby Products (Like Atmos)
			"*DrawboardPDF*"
			"*Duolingo-LearnLanguagesforFree*" # Duolingo
			"*EclipseManager*"
			"*Facebook*" # Facebook
			"*FarmVille2CountryEscape*"
			"*FitbitCoach*"
			"*Flipboard*" # Flipboard
			"*HiddenCity*"
			"*Hulu*"
			"*iHeartRadio*"
			"*Keeper*"
			"*LinkedInforWindows*"
			"*MarchofEmpires*"
			"*NYTCrossword*"
			"*OneCalendar*"
			"*PandoraMediaInc*"
			"*PhototasticCollage*"
			"*PicsArt-PhotoStudio*"
			"*Plex*" # Plex
			"*PolarrPhotoEditorAcademicEdition*"
			"*RoyalRevolt*" # Royal Revolt
			"*Shazam*"
			"*SlingTV*"
			"*Speed Test*"
			"*Sway*"
			"*TuneInRadio*"
			"*Twitter*" # Twitter
			"*Viber*"
			"*WinZipUniversal*"
			"*Wunderlist*"
			"*XING*"
			"Microsoft.BingWeather"
			"Microsoft.BingFoodAndDrink"
			"Microsoft.BingHealthAndFitness"
			"Microsoft.BingTravel"
			"Microsoft.MinecraftUWP"
			"Microsoft.GamingServices"
			# "Microsoft.WindowsReadingList"
			"Microsoft.GetHelp"
			"Microsoft.Getstarted"
			"Microsoft.Messaging"
			"Microsoft.Advertising.Xaml"
			"Microsoft.FreshPaint" # Paint
			"Microsoft.MicrosoftEdge" # Microsoft Edge
			"Microsoft.MicrosoftStickyNotes" # Sticky Notes
			"Microsoft.WindowsCalculator" # Calculator
			"Microsoft.WindowsCamera" # Camera
			"Microsoft.ScreenSketch" # Snip and Sketch (now called Snipping tool, replaces the Win32 version in clean installs)
			"Microsoft.WindowsFeedbackHub" # Feedback Hub
			"Microsoft.Windows.Photos" # Ph
			"Microsoft.XboxGamingOverlay" # Xbox Game Bar
			"Microsoft.XboxIdentityProvider" # Xbox Identity Provider (Xbox Dependency)
			"Microsoft.Xbox.TCUI" # Xbox Live API communication (Xbox Dependency)
			"*Netflix*" # Netflix
			"*SpotifyMusic*" # Spotify
			"Microsoft.WindowsStore" # Windows Store
			# Apps which cannot be removed using Remove-AppxPackage
			"Microsoft.BioEnrollment"
			"Microsoft.Windows.Cortana" # Cortana
			"Microsoft.WindowsFeedback" # Feedback Module
			"Windows.ContactSupport"
			"Microsoft.Microsoft3DViewer"
			"Microsoft.MicrosoftSolitaireCollection"
			"Microsoft.NetworkSpeedTest"
			"Microsoft.News"
			"Microsoft.Office.Lens"
			"Microsoft.Office.Sway"
			"Microsoft.Office.OneNote"
			"Microsoft.OneConnect"
			"Microsoft.People"
			"Microsoft.BingNews"
			"Microsoft.BingWeather"
			"Microsoft.GetHelp"
			"Microsoft.Getstarted"
			"Microsoft.MicrosoftOfficeHub"
			"Microsoft.MicrosoftSolitaireCollection"
			"Microsoft.MicrosoftStickyNotes"
			"Microsoft.People"
			"Microsoft.Todos"
			"Microsoft.Windows.Photos"
			"Microsoft.WindowsAlarms"
			"Microsoft.WindowsCamera"
			"microsoft.windowscommunicationsapps"
			"Microsoft.WindowsFeedbackHub"
			"Microsoft.WindowsMaps"
			"Microsoft.WindowsSoundRecorder"
			"Microsoft.YourPhone"
			"Microsoft.ZuneMusic"
			"Microsoft.ZuneVideo"
			"MicrosoftTeams"
			"Microsoft.Print3D"
			"Microsoft.SkypeApp"
			"Microsoft.Wallet"
			"Microsoft.Whiteboard"
			"Microsoft.WindowsAlarms"
			"microsoft.windowscommunicationsapps"
			"Microsoft.WindowsFeedbackHub"
			"Microsoft.WindowsMaps"
			"Microsoft.WindowsPhone"
			"Microsoft.WindowsSoundRecorder"
			"Microsoft.XboxApp"
			"Microsoft.ConnectivityStore"
			"Microsoft.CommsPhone"
			"Microsoft.ScreenSketch"
			"Microsoft.Xbox.TCUI"
			"Microsoft.XboxGameOverlay"
			"Microsoft.XboxGameCallableUI"
			"Microsoft.XboxSpeechToTextOverlay"
			"Microsoft.MixedReality.Portal"
			"Microsoft.XboxIdentityProvider"
			"Microsoft.ZuneMusic"
			"Microsoft.ZuneVideo"
			"Microsoft.YourPhone"
			"Microsoft.Getstarted"
			"Microsoft.MicrosoftOfficeHub"
			"Microsoft.XboxGameCallableUI"
			"Microsoft.Windows.PeopleExperienceHost"
			"Microsoft.Windows.ParentalControls"
			"Microsoft.Windows.NarratorQuickStart"
			"Microsoft.MicrosoftEdgeDevToolsClient"
			#Sponsored Windows 10 AppX Apps
			#Add sponsored/featured apps to remove in the "*AppName*" format
			"*EclipseManager*"
			"*ActiproSoftwareLLC*"
			"*AdobeSystemsIncorporated.AdobePhotoshopExpress*"
			"*Duolingo-LearnLanguagesforFree*"
			"*PandoraMediaInc*"
			"*CandyCrush*"
			"*BubbleWitch3Saga*"
			"*Wunderlist*"
			"*Flipboard*"
			"*Twitter*"
			"*edge*"
			"*Facebook*"
			"*Royal Revolt*"
			"*Sway*"
			"*Speed Test*"
			"*Dolby*"
			"*Viber*"
			"*ACGMediaPlayer*"
			"*Netflix*"
			"*OneCalendar*"
			"*LinkedInforWindows*"
			"*HiddenCityMysteryofShadows*"
			"*Hulu*"
			"*HiddenCity*"
			"*AdobePhotoshopExpress*"
			"*HotspotShieldFreeVPN*"
			"*Microsoft.Advertising.Xaml*"
			"*Microsoft.MSPaint*"
			"*Microsoft.MicrosoftStickyNotes*"
			"*Microsoft.Windows.Photos*"
			"*Microsoft.WindowsCalculator*"
			"*Microsoft.WindowsStore*"
		)
		Write-Host "Removing Bloatware"
		foreach ($Bloat in $Bloatware)
		{
			Get-AppxPackage -allusers -Name $Bloat | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like $Bloat | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing $Bloat..."
		}
		Get-AppxPackage -AllUsers *maps* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *xbox* | Remove-AppxPackage
		Get-WindowsPackage -Online | Where-Object PackageName -like *Hello-Face* | Remove-WindowsPackage -Online -NoRestart
		Get-AppxPackage -AllUsers *store* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *alarms* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *people* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *calc* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *comm* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *mess* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *camera* | Remove-AppxPackage
		Get-AppxPackage -allusers Microsoft.549981C3F5F10 | Remove-AppxPackage
		Get-AppxPackage -AllUsers *zune* | Remove-AppxPackage
		Get-WindowsPackage -Online | Where-Object PackageName -like *MediaPlayer* | Remove-WindowsPackage -Online -NoRestart
		Get-AppxPackage -AllUsers *zune* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.MicrosoftSolitaireCollection* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.MicrosoftOfficeHub* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.Office.Sway* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.Office.Desktop* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *GetHelp* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.WindowsFeedbackHub* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *sticky* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *maps* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *onenote* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *photo* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *bing* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *soundrec* | Remove-AppxPackage
		Get-WindowsPackage -Online | Where-Object PackageName -like *QuickAssist* | Remove-WindowsPackage -Online -NoRestart
		Get-AppxPackage -AllUsers *phone* | Remove-AppxPackage
		#This function finds any AppX/AppXProvisioned package and uninstalls it, except for Freshpaint, Windows Calculator, Windows Store, and Windows Photos.
		#Also, to note - This does NOT remove essential system services/software/etc such as .NET framework installations, Cortana, Edge, etc.
		
		#This is the switch parameter for running this script as a 'silent' script, for use in MDT images or any type of mass deployment without user interaction.
		
		Function Begin-SysPrep
		{
			
			Write-Host "Starting Sysprep Fixes"
			
			# Disable Windows Store Automatic Updates
			Write-Host "Adding Registry key to Disable Windows Store Automatic Updates"
			$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore"
			If (!(Test-Path $registryPath))
			{
				mkdir $registryPath
				New-ItemProperty $registryPath AutoDownload -Value 2
			}
			Set-ItemProperty $registryPath AutoDownload -Value 2
			
			#Stop WindowsStore Installer Service and set to Disabled
			Write-Host "Stopping InstallService"
			Stop-Service InstallService
			Write-Host "Setting InstallService Startup to Disabled"
			Set-Service InstallService -StartupType Disabled
		}
		
		Function CheckDMWService
		{
			
			Param ([switch]$Debloat)
			
			If (Get-Service dmwappushservice | Where-Object { $_.StartType -eq "Disabled" })
			{
				Set-Service dmwappushservice -StartupType Automatic
			}
			
			If (Get-Service dmwappushservice | Where-Object { $_.Status -eq "Stopped" })
			{
				Start-Service dmwappushservice
			}
		}
		
		Function DebloatAll
		{
			#Removes AppxPackages
			Get-AppxPackage | Where-Object { !($_.Name -cmatch $global:WhiteListedAppsRegex) -and !($NonRemovables -cmatch $_.Name) } | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object { !($_.DisplayName -cmatch $global:WhiteListedAppsRegex) -and !($NonRemovables -cmatch $_.DisplayName) } | Remove-AppxProvisionedPackage -Online
			Get-AppxPackage -AllUsers | Where-Object { !($_.Name -cmatch $global:WhiteListedAppsRegex) -and !($NonRemovables -cmatch $_.Name) } | Remove-AppxPackage
		}
		#Creates a PSDrive to be able to access the 'HKCR' tree
		New-PSDrive -Name HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
		
		Function Remove-Keys
		{
			#These are the registry keys that it will delete.
			
			$Keys = @(
				
				#Remove Background Tasks
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
				
				#Windows File
				"HKCR:\Extensions\ContractId\Windows.File\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
				
				#Registry keys to delete if they aren't uninstalled by RemoveAppXPackage/RemoveAppXProvisionedPackage
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y"
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
				
				#Scheduled Tasks to delete
				"HKCR:\Extensions\ContractId\Windows.PreInstalledConfigTask\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe"
				
				#Windows Protocol Keys
				"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
				"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
				
				#Windows Share Target
				"HKCR:\Extensions\ContractId\Windows.ShareTarget\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			)
			
			#This writes the output of each key it is removing and also removes the keys listed above.
			ForEach ($Key in $Keys)
			{
				Write-Host "Removing $Key from registry"
				Remove-Item $Key -Recurse
			}
		}
		
		Function Protect-Privacy
		{
			
			#Creates a PSDrive to be able to access the 'HKCR' tree
			New-PSDrive -Name HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
			
			#Disables Windows Feedback Experience
			Write-Host "Disabling Windows Feedback Experience program"
			$Advertising = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo'
			If (Test-Path $Advertising)
			{
				Set-ItemProperty $Advertising Enabled -Value 0
			}
			
			#Stops Cortana from being used as part of your Windows Search Function
			Write-Host "Stopping Cortana from being used as part of your Windows Search Function"
			$Search = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search'
			If (Test-Path $Search)
			{
				Set-ItemProperty $Search AllowCortana -Value 0
			}
			
			#Stops the Windows Feedback Experience from sending anonymous data
			Write-Host "Stopping the Windows Feedback Experience program"
			$Period1 = 'HKCU:\Software\Microsoft\Siuf'
			$Period2 = 'HKCU:\Software\Microsoft\Siuf\Rules'
			$Period3 = 'HKCU:\Software\Microsoft\Siuf\Rules\PeriodInNanoSeconds'
			If (!(Test-Path $Period3))
			{
				mkdir $Period1
				mkdir $Period2
				mkdir $Period3
				New-ItemProperty $Period3 PeriodInNanoSeconds -Value 0
			}
			
			Write-Host "Adding Registry key to prevent bloatware apps from returning"
			#Prevents bloatware applications from returning
			$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
			If (!(Test-Path $registryPath))
			{
				mkdir $registryPath
				New-ItemProperty $registryPath DisableWindowsConsumerFeatures -Value 1
			}
			
			Write-Host "Setting Mixed Reality Portal value to 0 so that you can uninstall it in Settings"
			$Holo = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic'
			If (Test-Path $Holo)
			{
				Set-ItemProperty $Holo FirstRunSucceeded -Value 0
			}
			
			#Disables live tiles
			Write-Host "Disabling live tiles"
			$Live = 'HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications'
			If (!(Test-Path $Live))
			{
				mkdir $Live
				New-ItemProperty $Live NoTileApplicationNotification -Value 1
			}
			
			#Turns off Data Collection via the AllowTelemtry key by changing it to 0
			Write-Host "Turning off Data Collection"
			$DataCollection = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection'
			If (Test-Path $DataCollection)
			{
				Set-ItemProperty $DataCollection AllowTelemetry -Value 0
			}
			
			#Disables People icon on Taskbar
			Write-Host "Disabling People icon on Taskbar"
			$People = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People'
			If (Test-Path $People)
			{
				Set-ItemProperty $People PeopleBand -Value 0
			}
			
			#Disables suggestions on start menu
			Write-Host "Disabling suggestions on the Start Menu"
			$Suggestions = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager'
			If (Test-Path $Suggestions)
			{
				Set-ItemProperty $Suggestions SystemPaneSuggestionsEnabled -Value 0
			}
			
			Write-Host "Disabling Bing Search when using Search via the Start Menu"
			$BingSearch = 'HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer'
			If (Test-Path $BingSearch)
			{
				Set-ItemProperty $BingSearch DisableSearchBoxSuggestions -Value 1
			}
			
			Write-Host "Removing CloudStore from registry if it exists"
			$CloudStore = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\CloudStore'
			If (Test-Path $CloudStore)
			{
				Stop-Process Explorer.exe -Force
				Remove-Item $CloudStore -Recurse -Force
				Start-Process Explorer.exe -Wait
			}
			
			
			#Loads the registry keys/values below into the NTUSER.DAT file which prevents the apps from redownloading. Credit to a60wattfish
			reg load HKU\Default_User C:\Users\Default\NTUSER.DAT
			Set-ItemProperty -Path Registry::HKU\Default_User\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name SystemPaneSuggestionsEnabled -Value 0
			Set-ItemProperty -Path Registry::HKU\Default_User\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name PreInstalledAppsEnabled -Value 0
			Set-ItemProperty -Path Registry::HKU\Default_User\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name OemPreInstalledAppsEnabled -Value 0
			reg unload HKU\Default_User
			
			#Disables scheduled tasks that are considered unnecessary 
			Write-Host "Disabling scheduled tasks"
			#Get-ScheduledTask -TaskName XblGameSaveTaskLogon | Disable-ScheduledTask
			Get-ScheduledTask -TaskName XblGameSaveTask | Disable-ScheduledTask
			Get-ScheduledTask -TaskName Consolidator | Disable-ScheduledTask
			Get-ScheduledTask -TaskName UsbCeip | Disable-ScheduledTask
			Get-ScheduledTask -TaskName DmClient | Disable-ScheduledTask
			Get-ScheduledTask -TaskName DmClientOnScenarioDownload | Disable-ScheduledTask
		}
		
		Function UnpinStart
		{
			Write-Host "`nCleaning up the StartMenu Tiles for the default user"
			Set-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -Value '<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  <LayoutOptions StartTileGroupCellWidth="6" />'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  <DefaultLayoutOverride>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    <StartLayoutCollection>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      <defaultlayout:StartLayout GroupCellWidth="6" />'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    </StartLayoutCollection>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  </DefaultLayoutOverride>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    <CustomTaskbarLayoutCollection>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      <defaultlayout:TaskbarLayout>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '        <taskbar:TaskbarPinList>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '          <taskbar:UWA AppUserModelID="Microsoft.MicrosoftEdge_8wekyb3d8bbwe!MicrosoftEdge" />'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '          <taskbar:DesktopApp DesktopApplicationLinkPath="%APPDATA%\Microsoft\Windows\Start Menu\Programs\System Tools\File Explorer.lnk" />'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '        </taskbar:TaskbarPinList>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      </defaultlayout:TaskbarLayout>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    </CustomTaskbarLayoutCollection>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '</LayoutModificationTemplate>'
			$START_MENU_LAYOUT = @"
<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns:taskbar="http://schemas.microsoft.com/Start/2014/TaskbarLayout" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">
    <LayoutOptions StartTileGroupCellWidth="6" />
    <DefaultLayoutOverride>
        <StartLayoutCollection>
            <defaultlayout:StartLayout GroupCellWidth="6" />
        </StartLayoutCollection>
    </DefaultLayoutOverride>
</LayoutModificationTemplate>
"@
			$layoutFile = "C:\Windows\StartMenuLayout.xml"
			If (Test-Path $layoutFile)
			{
				Remove-Item $layoutFile
			}
			$START_MENU_LAYOUT | Out-File $layoutFile -Encoding ASCII
			$regAliases = @("HKLM", "HKCU")
			foreach ($regAlias in $regAliases)
			{
				$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
				$keyPath = $basePath + "\Explorer"
				IF (!(Test-Path -Path $keyPath))
				{
					New-Item -Path $basePath -Name "Explorer"
				}
				Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 1
				Set-ItemProperty -Path $keyPath -Name "StartLayoutFile" -Value $layoutFile
			}
			Write-Host "Restart Explorer, open the start menu (necessary to load the new layout), and give it a few seconds to process"
			Stop-Process -name explorer
			Start-Sleep -s 3
			$wshell = New-Object -ComObject wscript.shell; $wshell.SendKeys('^{ESCAPE}')
			Start-Sleep -s 3
			Write-Host "Enabling the ability to pin items again"
			foreach ($regAlias in $regAliases)
			{
				$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
				$keyPath = $basePath + "\Explorer"
				Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 0
			}
			Stop-Process -name explorer
			Import-StartLayout -LayoutPath $layoutFile -MountPath $env:SystemDrive\
			Remove-Item $layoutFile
			# https://superuser.com/a/1442733
			# Requires -RunAsAdministrator
			
			$START_MENU_LAYOUT = @"
<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns:taskbar="http://schemas.microsoft.com/Start/2014/TaskbarLayout" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">
    <LayoutOptions StartTileGroupCellWidth="6" />
    <DefaultLayoutOverride>
        <StartLayoutCollection>
            <defaultlayout:StartLayout GroupCellWidth="6" />
        </StartLayoutCollection>
    </DefaultLayoutOverride>
</LayoutModificationTemplate>
"@
			
			$layoutFile = "C:\Windows\StartMenuLayout.xml"
			
			#Delete layout file if it already exists
			If (Test-Path $layoutFile)
			{
				Remove-Item $layoutFile
			}
			
			#Creates the blank layout file
			$START_MENU_LAYOUT | Out-File $layoutFile -Encoding ASCII
			
			$regAliases = @("HKLM", "HKCU")
			
			#Assign the start layout and force it to apply with "LockedStartLayout" at both the machine and user level
			foreach ($regAlias in $regAliases)
			{
				$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
				$keyPath = $basePath + "\Explorer"
				IF (!(Test-Path -Path $keyPath))
				{
					New-Item -Path $basePath -Name "Explorer"
				}
				Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 1
				Set-ItemProperty -Path $keyPath -Name "StartLayoutFile" -Value $layoutFile
			}
			
			#Restart Explorer, open the start menu (necessary to load the new layout), and give it a few seconds to process
			Stop-Process -name explorer
			Start-Sleep -s 5
			$wshell = New-Object -ComObject wscript.shell; $wshell.SendKeys('^{ESCAPE}')
			Start-Sleep -s 5
			
			#Enable the ability to pin items again by disabling "LockedStartLayout"
			foreach ($regAlias in $regAliases)
			{
				$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
				$keyPath = $basePath + "\Explorer"
				Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 0
			}
			
			#Restart Explorer and delete the layout file
			Stop-Process -name explorer
			
			# Uncomment the next line to make clean start menu default for all new users
			#Import-StartLayout -LayoutPath $layoutFile -MountPath $env:SystemDrive\
			
			Remove-Item $layoutFile
		}
		
		Function CheckInstallService
		{
			
			If (Get-Service InstallService | Where-Object { $_.Status -eq "Stopped" })
			{
				Start-Service InstallService
				Set-Service InstallService -StartupType Automatic
			}
		}
		
		Write-Host "Initiating Sysprep"
		Begin-SysPrep
		Write-Host "Removing bloatware apps."
		DebloatAll
		Write-Host "Removing leftover bloatware registry keys."
		Remove-Keys
		Write-Host "Checking to see if any Allowlisted Apps were removed, and if so re-adding them."
		FixWhitelistedApps
		Write-Host "Stopping telemetry, disabling unneccessary scheduled tasks, and preventing bloatware from returning."
		Protect-Privacy
		Write-Host "Unpinning tiles from the Start Menu."
		UnpinStart
		Write-Host "Setting the 'InstallService' Windows service back to 'Started' and the Startup Type 'Automatic'."
		CheckDMWService
		CheckInstallService
		Write-Host "Finished all tasks."
		Get-AppxPackage -Name $Bloat | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like $Bloat | Remove-AppxProvisionedPackage -Online
		Write-Host "Disabling Microsoft Store and WSAPPX Service..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Get-AppxPackage "Microsoft.DesktopAppInstallinger" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.WindowsStore" | Remove-AppxPackage -ErrorAction SilentlyContinue
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -Name "DisableStoreApps" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\AppXSvc" -Name "Start" -Type DWord -Value 4 -ErrorAction SilentlyContinue
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Uninstalling default Microsoft applications..."
		Get-AppxPackage -allusers | Remove-AppxPackage
		Get-AppxPackage "Microsoft.3DBuilder" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.AppConnector" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingFinance" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingNews" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingSports" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingTranslator" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingWeather" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.CommsPhone" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.ConnectivityStore" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.GetHelp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Getstarted" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Messaging" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Microsoft3DViewer" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.MicrosoftPowerBIForWindows" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.MicrosoftSolitaireCollection" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.MicrosoftStickyNotes" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.NetworkSpeedTest" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Office.OneNote" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Office.Sway" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.OneConnect" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.People" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Print3D" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.RemoteDesktop" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Wallet" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsAlarms" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsCamera" | Remove-AppxPackage
		Get-AppxPackage "microsoft.windowscommunicationsapps" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsFeedbackHub" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsMaps" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsPhone" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Windows.Photos" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsSoundRecorder" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.ZuneMusic" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.ZuneVideo" | Remove-AppxPackage
		Write-Host "Uninstalling default third party applications..."
		Get-AppxPackage "2414FC7A.Viber" | Remove-AppxPackage
		Get-AppxPackage "41038Axilesoft.ACGMediaPlayer" | Remove-AppxPackage
		Get-AppxPackage "46928bounde.EclipseManager" | Remove-AppxPackage
		Get-AppxPackage "4DF9E0F8.Netflix" | Remove-AppxPackage
		Get-AppxPackage "64885BlueEdge.OneCalendar" | Remove-AppxPackage
		Get-AppxPackage "7EE7776C.LinkedInforWindows" | Remove-AppxPackage
		Get-AppxPackage "828B5831.HiddenCityMysteryofShadows" | Remove-AppxPackage
		Get-AppxPackage "89006A2E.AutodeskSketchBook" | Remove-AppxPackage
		Get-AppxPackage "9E2F88E3.Twitter" | Remove-AppxPackage
		Get-AppxPackage "A278AB0D.DisneyMagicKingdoms" | Remove-AppxPackage
		Get-AppxPackage "A278AB0D.MarchofEmpires" | Remove-AppxPackage
		Get-AppxPackage "ActiproSoftwareLLC.562882FEEB491" | Remove-AppxPackage
		Get-AppxPackage "AdobeSystemsIncorporated.AdobePhotoshopExpress" | Remove-AppxPackage
		Get-AppxPackage "CAF9E577.Plex" | Remove-AppxPackage
		Get-AppxPackage "D52A8D61.FarmVille2CountryEscape" | Remove-AppxPackage
		Get-AppxPackage "D5EA27B7.Duolingo-LearnLanguagesforFree" | Remove-AppxPackage
		Get-AppxPackage "DB6EA5DB.CyberLinkMediaSuiteEssentials" | Remove-AppxPackage
		Get-AppxPackage "DolbyLaboratories.DolbyAccess" | Remove-AppxPackage
		Get-AppxPackage "Drawboard.DrawboardPDF" | Remove-AppxPackage
		Get-AppxPackage "Facebook.Facebook" | Remove-AppxPackage
		Get-AppxPackage "flaregamesGmbH.RoyalRevolt2" | Remove-AppxPackage
		Get-AppxPackage "GAMELOFTSA.Asphalt8Airborne" | Remove-AppxPackage
		Get-AppxPackage "KeeperSecurityInc.Keeper" | Remove-AppxPackage
		Get-AppxPackage "king.com.BubbleWitch3Saga" | Remove-AppxPackage
		Get-AppxPackage "king.com.CandyCrushSodaSaga" | Remove-AppxPackage
		Get-AppxPackage "PandoraMediaInc.29680B314EFC2" | Remove-AppxPackage
		Get-AppxPackage "SpotifyAB.SpotifyMusic" | Remove-AppxPackage
		Get-AppxPackage "WinZipComputing.WinZipUniversal" | Remove-AppxPackage
		Get-AppxPackage "XINGAG.XING" | Remove-AppxPackage
		Write-Host "Uninstalling Windows Store..."
		Get-AppxPackage "Microsoft.DesktopAppInstaller" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsStore" | Remove-AppxPackage
		Write-Host "Disabling built-in Adobe Flash in IE and Edge..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer" -Name "DisableFlashInIE" -Type DWord -Value 1
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Addons"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Addons" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Addons" -Name "FlashPlayerEnabled" -Type DWord -Value 0
		Write-Host "Uninstalling Windows Media Player..."
		Disable-WindowsOptionalFeature -Online -FeatureName "WindowsMediaPlayer" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Uninstalling Internet Explorer..."
		Disable-WindowsOptionalFeature -Online -FeatureName "Internet-Explorer-Optional-$env:PROCESSOR_ARCHITECTURE" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Uninstalling Work Folders Client..."
		Disable-WindowsOptionalFeature -Online -FeatureName "WorkFolders-Client" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Uninstalling Linux Subsystem..."
		If ([System.Environment]::OSVersion.Version.Build -eq 14393)
		{
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name "AllowDevelopmentWithoutDevLicense" -Type DWord -Value 0
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name "AllowAllTrustedApps" -Type DWord -Value 0
		}
		Disable-WindowsOptionalFeature -Online -FeatureName "Microsoft-Windows-Subsystem-Linux" -NoRestart -WarningAction SilentlyContinue
		Write-Host "UnInstalling Hyper-V..."
		If ((Get-WmiObject -Class "Win32_OperatingSystem").Caption -like "*Server*")
		{
			Disable-WindowsOptionalFeature -Name "Hyper-V" -IncludeManagementTools -WarningAction SilentlyContinue
		}
		Else
		{
			Disable-WindowsOptionalFeature -Online -FeatureName "Microsoft-Hyper-V-All" -NoRestart -WarningAction SilentlyContinue
		}
		$WhitelistedApps = 'Microsoft.ScreenSketch|Microsoft.Paint3D|Microsoft.WindowsCalculator|Microsoft.WindowsStore|Microsoft.Windows.Photos|CanonicalGroupLimited.UbuntuonWindows|`
    Microsoft.XboxGameCallableUI|Microsoft.XboxGamingOverlay|Microsoft.Xbox.TCUI|Microsoft.XboxGamingOverlay|Microsoft.XboxIdentityProvider|Microsoft.MicrosoftStickyNotes|Microsoft.MSPaint|Microsoft.WindowsCamera|.NET|Framework|`
    Microsoft.HEIFImageExtension|Microsoft.ScreenSketch|Microsoft.StorePurchaseApp|Microsoft.VP9VideoExtensions|Microsoft.WebMediaExtensions|Microsoft.WebpImageExtension|Microsoft.DesktopAppInstaller|WindSynthBerry|MIDIBerry|Slack'
		#NonRemovable Apps that where getting attempted and the system would reject the uninstall, speeds up debloat and prevents 'initalizing' overlay when removing apps
		$NonRemovable = '1527c705-839a-4832-9118-54d4Bd6a0c89|c5e2524a-ea46-4f67-841f-6a9465d9d515|E2A4F912-2574-4A75-9BB0-0D023378592B|F46D4000-FD22-4DB4-AC8E-4E1DDDE828FE|InputApp|Microsoft.AAD.BrokerPlugin|Microsoft.AccountsControl|`
    Microsoft.BioEnrollment|Microsoft.CredDialogHost|Microsoft.ECApp|Microsoft.LockApp|Microsoft.MicrosoftEdgeDevToolsClient|Microsoft.MicrosoftEdge|Microsoft.PPIProjection|Microsoft.Win32WebViewHost|Microsoft.Windows.Apprep.ChxApp|`
    Microsoft.Windows.AssignedAccessLockApp|Microsoft.Windows.CapturePicker|Microsoft.Windows.CloudExperienceHost|Microsoft.Windows.ContentDeliveryManager|Microsoft.Windows.Cortana|Microsoft.Windows.NarratorQuickStart|`
    Microsoft.Windows.ParentalControls|Microsoft.Windows.PeopleExperienceHost|Microsoft.Windows.PinningConfirmationDialog|Microsoft.Windows.SecHealthUI|Microsoft.Windows.SecureAssessmentBrowser|Microsoft.Windows.ShellExperienceHost|`
    Microsoft.Windows.XGpuEjectDialog|Microsoft.XboxGameCallableUI|Windows.CBSPreview|windows.immersivecontrolpanel|Windows.PrintDialog|Microsoft.VCLibs.140.00|Microsoft.Services.Store.Engagement|Microsoft.UI.Xaml.2.0|*Nvidia*'
		Get-AppxPackage -AllUsers | Where-Object { $_.Name -NotMatch $WhitelistedApps -and $_.Name -NotMatch $NonRemovable } | Remove-AppxPackage
		Get-AppxPackage | Where-Object { $_.Name -NotMatch $WhitelistedApps -and $_.Name -NotMatch $NonRemovable } | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object { $_.PackageName -NotMatch $WhitelistedApps -and $_.PackageName -NotMatch $NonRemovable } | Remove-AppxProvisionedPackage -Online
		Write-Host "Disable Windows Sandbox ..."
		if (Get-WindowsEdition -Online | Where-Object -FilterScript { $_.Edition -eq "Professional" -or $_.Edition -like "Enterprise*" })
		{
			# Checking whether x86 virtualization is enabled in the firmware
			if ((Get-CimInstance -ClassName CIM_Processor).VirtualizationFirmwareEnabled -eq $true)
			{
				Disable-WindowsOptionalFeature -FeatureName Containers-DisposableClientVM -Online -NoRestart
			}
			else
			{
				try
				{
					# Determining whether Hyper-V is enabled
					if ((Get-CimInstance -ClassName CIM_ComputerSystem).HypervisorPresent -eq $true)
					{
						Disable-WindowsOptionalFeature -FeatureName Containers-DisposableClientVM -Online -NoRestart
					}
				}
				catch [System.Exception]
				{
					Write-Error -Message $Localization.EnableHardwareVT -ErrorAction SilentlyContinue
				}
			}
		}
		Write-Host "Disable Teams Autostart ..."
		if (Get-AppxPackage -Name MicrosoftTeams)
		{
			if (-not (Test-Path -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask"))
			{
				New-Item -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask" -Force
			}
			New-ItemProperty -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask" -Name State -PropertyType DWord -Value 1 -Force
		}
		Get-AppxPackage -Name *Microsoft.WindowsStore* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.WindowsStore* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.WindowsStore*."
		Get-AppxPackage -Name *Microsoft.WindowsCalculator* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.WindowsCalculator* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.WindowsCalculator*."
		Get-AppxPackage -Name *Microsoft.Windows.Photos* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Windows.Photos* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.Windows.Photos*."
		Get-AppxPackage -Name *Microsoft.MicrosoftStickyNotes* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.MicrosoftStickyNotes* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.MicrosoftStickyNotes*."
		Get-AppxPackage -Name *Microsoft.MSPaint* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.MSPaint* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.MSPaint*."
		Get-AppxPackage -Name *Microsoft.BingWeather* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.BingWeather* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.BingWeather*."
		Get-AppxPackage -Name *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe*."
		Get-AppxPackage -Name *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe*."
		Get-AppxPackage -Name *Dolby* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Dolby* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Dolby*."
		Get-AppxPackage -Name *SpeedTest* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *SpeedTest* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *SpeedTest*."
		Get-AppxPackage -Name *Sway* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Sway* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Sway*."
		Get-AppxPackage -Name *RoyalRevolt* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *RoyalRevolt* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *RoyalRevolt*."
		Get-AppxPackage -Name *Spotify* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Spotify* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Spotify*."
		Get-AppxPackage -Name *Facebook* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Facebook* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Facebook*."
		Get-AppxPackage -Name *Twitter* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Twitter* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Twitter*."
		Get-AppxPackage -Name *Flipboard* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Flipboard* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Flipboard*."
		Get-AppxPackage -Name *Wunderlist* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Wunderlist* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Wunderlist*."
		Get-AppxPackage -Name *BubbleWitch3Saga* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *BubbleWitch3Saga* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *BubbleWitch3Saga*."
		Get-AppxPackage -Name *CandyCrush* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *CandyCrush* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *CandyCrush*."
		Get-AppxPackage -Name *PandoraMediaInc* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *PandoraMediaInc* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *PandoraMediaInc*."
		Get-AppxPackage -Name *Duolingo-LearnLanguagesforFree* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Duolingo-LearnLanguagesforFree* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Duolingo-LearnLanguagesforFree*."
		Get-AppxPackage -Name *AdobeSystemsIncorporated.AdobePhotoshopExpress* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *AdobeSystemsIncorporated.AdobePhotoshopExpress* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *AdobeSystemsIncorporated.AdobePhotoshopExpress*."
		Get-AppxPackage -Name *ActiproSoftwareLLC* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *ActiproSoftwareLLC* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *ActiproSoftwareLLC*."
		Get-AppxPackage -Name *EclipseManager* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *EclipseManager* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *EclipseManager*."
		Get-AppxPackage -Name Microsoft.ZuneVideo | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.ZuneVideo | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.ZuneVideo."
		Get-AppxPackage -Name Microsoft.ZuneMusic | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.ZuneMusic | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.ZuneMusic."
		Get-AppxPackage -Name Microsoft.WindowsSoundRecorder | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsSoundRecorder | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.WindowsSoundRecorder."
		Get-AppxPackage -Name Microsoft.WindowsMaps | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsMaps | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.WindowsMaps."
		Get-AppxPackage -Name Microsoft.WindowsFeedbackHub | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsFeedbackHub | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.WindowsFeedbackHub."
		Get-AppxPackage -Name microsoft.windowscommunicationsapps | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like microsoft.windowscommunicationsapps | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing microsoft.windowscommunicationsapps."
		Get-AppxPackage -Name Microsoft.WindowsAlarms | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsAlarms | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.WindowsAlarms."
		Get-AppxPackage -Name Microsoft.Whiteboard | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Whiteboard | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Whiteboard."
		Get-AppxPackage -Name Microsoft.StorePurchaseApp | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.StorePurchaseApp | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.StorePurchaseApp."
		Get-AppxPackage -Name Microsoft.SkypeApp | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.SkypeApp | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.SkypeApp."
		Get-AppxPackage -Name Microsoft.Print3D | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Print3D | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Print3D."
		Get-AppxPackage -Name Microsoft.OneConnect | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.OneConnect | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.OneConnect."
		Get-AppxPackage -Name Microsoft.Office.Sway | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Office.Sway | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Office.Sway."
		Get-AppxPackage -Name Microsoft.Office.Lens | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Office.Lens | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Office.Lens."
		Get-AppxPackage -Name Microsoft.News | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.News | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.News."
		Get-AppxPackage -Name Microsoft.NetworkSpeedTest | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.NetworkSpeedTest | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.NetworkSpeedTest."
		Get-AppxPackage -Name Microsoft.MicrosoftSolitaireCollection | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.MicrosoftSolitaireCollection | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.MicrosoftSolitaireCollection."
		Get-AppxPackage -Name Microsoft.Microsoft3DViewer | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Microsoft3DViewer | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Microsoft3DViewer."
		Get-AppxPackage -Name Microsoft.Messaging"| Remove-AppxPackage
    Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Messaging" | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Messaging."
		Get-AppxPackage -Name Microsoft.Getstarted | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Getstarted | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Getstarted."
		Get-AppxPackage -Name Microsoft.GetHelp | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.GetHelp | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.GetHelp."
		Get-AppxPackage -Name Microsoft.BingNews | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.BingNews | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.BingNews."
		Write-Host "Finished Removing Bloatware"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Bloatware!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$buttonRevertRegistryChange_Click={
		#TODO: Place custom script here
		#Tells Windows to enable your advertising information.    
		Write-Host "Re-enabling key to show advertisement information"
		$Advertising = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		If (Test-Path $Advertising)
		{
			Set-ItemProperty $Advertising  Enabled -Value 1
		}
		
		#Enables Cortana to be used as part of your Windows Search Function
		Write-Host "Re-enabling Cortana to be used in your Windows Search"
		$Search = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		If (Test-Path $Search)
		{
			Set-ItemProperty $Search  AllowCortana -Value 1
		}
		
		#Re-enables the Windows Feedback Experience for sending anonymous data
		Write-Host "Re-enabling Windows Feedback Experience"
		$Period = "HKCU:\Software\Microsoft\Siuf\Rules"
		If (!(Test-Path $Period))
		{
			New-Item $Period
		}
		Set-ItemProperty $Period PeriodInNanoSeconds -Value 1
		
		#Enables bloatware applications               
		Write-Host "Adding Registry key to allow bloatware apps to return"
		$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		If (!(Test-Path $registryPath))
		{
			New-Item $registryPath
		}
		Set-ItemProperty $registryPath  DisableWindowsConsumerFeatures -Value 0
		
		#Changes Mixed Reality Portal Key 'FirstRunSucceeded' to 1
		Write-Host "Setting Mixed Reality Portal value to 1"
		$Holo = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic"
		If (Test-Path $Holo)
		{
			Set-ItemProperty $Holo  FirstRunSucceeded -Value 1
		}
		
		#Re-enables live tiles
		Write-Host "Enabling live tiles"
		$Live = "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications"
		If (!(Test-Path $Live))
		{
			New-Item $Live
		}
		Set-ItemProperty $Live  NoTileApplicationNotification -Value 0
		
		#Re-enables data collection
		Write-Host "Re-enabling data collection"
		$DataCollection = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection"
		If (!(Test-Path $DataCollection))
		{
			New-Item $DataCollection
		}
		Set-ItemProperty $DataCollection  AllowTelemetry -Value 1
		
		#Re-enables People Icon on Taskbar
		Write-Host "Enabling People Icon on Taskbar"
		$People = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People'
		If (Test-Path $People)
		{
			Set-ItemProperty $People -Name PeopleBand -Value 1 -Verbose
		}
		
		#Re-enables suggestions on start menu
		Write-Host "Enabling suggestions on the Start Menu"
		$Suggestions = "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager"
		If (!(Test-Path $Suggestions))
		{
			New-Item $Suggestions
		}
		Set-ItemProperty $Suggestions  SystemPaneSuggestionsEnabled -Value 1
		
		#Re-enables scheduled tasks that were disabled when running the Debloat switch
		Write-Host "Enabling scheduled tasks that were disabled"
		Get-ScheduledTask XblGameSaveTaskLogon | Enable-ScheduledTask
		Get-ScheduledTask  XblGameSaveTask | Enable-ScheduledTask
		Get-ScheduledTask  Consolidator | Enable-ScheduledTask
		Get-ScheduledTask  UsbCeip | Enable-ScheduledTask
		Get-ScheduledTask  DmClient | Enable-ScheduledTask
		Get-ScheduledTask  DmClientOnScenarioDownload | Enable-ScheduledTask
		
		Write-Host "Re-enabling and starting WAP Push Service"
		#Enable and start WAP Push Service
		Set-Service "dmwappushservice" -StartupType Automatic
		Start-Service "dmwappushservice"
		
		Write-Host "Re-enabling and starting the Diagnostics Tracking Service"
		#Enabling the Diagnostics Tracking Service
		Set-Service "DiagTrack" -StartupType Automatic
		Start-Service "DiagTrack"
		Write-Host "Done reverting changes!"
		
		#
		Write-Host "Restoring 3D Objects from Explorer 'My Computer' submenu"
		$Objects32 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}"
		$Objects64 = "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}"
		If (!(Test-Path $Objects32))
		{
			New-Item $Objects32
		}
		If (!(Test-Path $Objects64))
		{
			New-Item $Objects64
		}
		Write-Host "Finished All Tasks!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished All Tasks!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$buttonDebloatWithBlocklist_Click={
		#TODO: Place custom script here
		Get-AppxProvisionedPackage -online | Out-GridView -PassThru | Remove-AppxProvisionedPackage -online
	}
	
	$buttonUnistallEdge_Click={
		#TODO: Place custom script here
		Write-Host "Unistalling Edge..."
		winget uninstall "Microsoft Edge"
		winget uninstall "Microsoft Edge Update"
		winget uninstall "Microsoft Edge WebView2 Runtime"
		winget uninstall "Xbox Game Bar"
		[String]$ProgramX86 = "$env:SystemDrive\Program Files (x86)"
		[String]$edgepath = "$ProgramX86\Microsoft\Edge\Application\*.*.*.*\Installer"
		[String]$arguments = "--uninstall --system-level --verbose-logging --force-uninstall"
		Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -Wait
		Disable-ScheduledTask -TaskName "\MicrosoftEdgeUpdateTaskMachineUA"
		Disable-ScheduledTask -TaskName "\MicrosoftEdgeUpdateTaskMachineCore"
		$Edgeservices = @("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService")
		$Edgeservices | ForEach-Object {
			Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue
			Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue
			if (Test-Path "$ProgramX86\Microsoft\Edge\Application")
			{
				Write-Host "Uninstalling " -NoNewline
				Write-Host "Microsoft Edge" -ForegroundColor Cyan
				Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -WindowStyle Hidden -Wait
				"\MicrosoftEdgeUpdateTaskMachineUA", "\MicrosoftEdgeUpdateTaskMachineCore" | ForEach-Object {
					Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue 
				}
				@("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService") | ForEach-Object {
					Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue 
					Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue 
				}
				Write-Host "Clearing " -NoNewline
				Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
				Write-Host " registry keys!"
				[Array]$RegistryPaths = @(
					"HKCU:\SOFTWARE\Microsoft\Edge", "HKCU:\SOFTWARE\Microsoft\EdgeUpdate", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate"
				)
				Foreach ($Path in $RegistryPaths)
				{
					Remove-Item -Path $Path -Force -Recurse -ErrorAction SilentlyContinue 
				}
				Write-Host "Removing " -NoNewline
				Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
				Write-Host " files!"
				
				Get-ChildItem -Path "$ProgramX86\Microsoft\Edge" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue 
				}
				Get-ChildItem -Path "$ProgramX86\Microsoft\EdgeUpdate" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue 
				}
				Get-ChildItem -Path "$ProgramX86\Microsoft\Temp" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue 
				}
				
				#Remove Edge Services
				if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
				{
					Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -ErrorAction SilentlyContinue -Force 
				}
				if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
				{
					Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -ErrorAction SilentlyContinue -Force 
				}
				New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
				Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
				Write-Host "has been removed"
			}
		}
		Write-Host "Clearing " -NoNewline
		Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
		Write-Host " registry keys!"
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft" -Name "DoNotUpdateToEdgeWithChromium" -Type DWord -Value 1
		if (Test-Path "HKCU:\SOFTWARE\Microsoft\Edge")
		{
			Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\Edge" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKCU:\SOFTWARE\Microsoft\EdgeUpdate")
		{
			Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\EdgeUpdate" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge")
		{
			Remove-Item -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate")
		{
			Remove-Item -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (!(Test-Path "HKCR:\"))
		{
			New-PSDrive -PSProvider Registry -Root HKEY_CLASSES_ROOT -Name HKCR
		}
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*MicrosoftEdge*" -Force
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*microsoft-edge*" -Force
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*edge*" -Force
		$edgechilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\Edge"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		$edgeupdatechilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\EdgeUpdate"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		$edgetempchilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\Temp"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		#Remove Edge Services
		if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
		{
			Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -Force
		}
		if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
		{
			Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -Force
		}
		New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
		
		
		taskkill /F /IM browser_broker.exe
		taskkill /F /IM RuntimeBroker.exe
		taskkill /F /IM MicrosoftEdge.exe
		taskkill /F /IM MicrosoftEdgeCP.exe
		taskkill /F /IM MicrosoftEdgeSH.exe
		
		cmd /c 'reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\MicrosoftEdge.exe" /v Debugger /t REG_SZ /d "%windir%\System32\taskkill.exe" /f'
		Get-WindowsPackage -Online | Where-Object PackageName -like *InternetExplorer* | Remove-WindowsPackage -Online -NoRestart
		if (Test-Path "$ProgramX86\Microsoft\Edge\Application")
		{
			
			Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -WindowStyle Hidden -Wait
			"\MicrosoftEdgeUpdateTaskMachineUA", "\MicrosoftEdgeUpdateTaskMachineCore" | ForEach-Object {
				Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue
			}
			@("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService") | ForEach-Object {
				Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue
				Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue
			}
			Write-Host "Clearing " -NoNewline
			Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
			Write-Host " registry keys!"
			[Array]$RegistryPaths = @(
				"HKCU:\SOFTWARE\Microsoft\Edge", "HKCU:\SOFTWARE\Microsoft\EdgeUpdate", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate"
			)
			Foreach ($Path in $RegistryPaths)
			{
				Remove-Item -Path $Path -Force -Recurse -ErrorAction SilentlyContinue
			}
			Write-Host "Removing " -NoNewline
			Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
			Write-Host " files!"
			
			Get-ChildItem -Path "$ProgramX86\Microsoft\Edge" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			Get-ChildItem -Path "$ProgramX86\Microsoft\EdgeUpdate" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			Get-ChildItem -Path "$ProgramX86\Microsoft\Temp" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			
			#Remove Edge Services
			if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
			{
				Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -ErrorAction SilentlyContinue -Force
			}
			if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
			{
				Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -ErrorAction SilentlyContinue -Force
			}
			New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
			Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
			Write-Host "has been removed"
			[System.Media.SystemSounds]::Asterisk.Play()
			[void][System.Windows.Forms.MessageBox]::Show('Finished Unistalling Edge!', 'Windows Optimization Toolbox',  0, 64)
		}
		else
		{
			[System.Media.SystemSounds]::Asterisk.Play()
			[void][System.Windows.Forms.MessageBox]::Show('Edge Not Detected!', 'Windows Optimization Toolbox',  0, 64)
			Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
			Write-Host "is not even installed?"
		
		}
	
	}
	
	$buttonGithub_Click={
		#TODO: Place custom script here
		Write-Host "Installing GitHub Desktop"
		choco install github-desktop -y
		Write-Host "Finished Installing GitHub Desktop"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing GitHub Desktop!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$buttonEnableWindows10Explo_Click={
		#TODO: Place custom script here
		Write-Host "Enable Windows 10 File Explorer ..."
		if (-not (Test-Path -Path "HKCU:\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}\InprocServer32"))
		{
			New-Item -Path "HKCU:\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}\InprocServer32" -Force
		}
		New-ItemProperty -Path "HKCU:\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}\InprocServer32" -Name "(default)" -PropertyType String -Value "" -Force
		stop-process -name explorer -force
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Windows 10 File Explorer!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$buttonDisableWindows10Expl_Click={
		#TODO: Place custom script here
		Write-Host "Disable Windows 10 File Explorer ..."
		Remove-Item -Path "HKCU:\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}" -Recurse -Force -ErrorAction Ignore
		stop-process -name explorer -force
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Windows 10 File Explorer!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	
	$EnableWin10Ribbon_Click={
		#TODO: Place custom script here
		Write-Host "Setting Expanded Windows 10 File Explorer Ribbon ..."
		if (Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Shell Extensions\Blocked" -Name "{e2bf9676-5f8f-435c-97eb-11607a5bedf7}" -ErrorAction Ignore)
		{
			if (-not (Test-Path -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon))
			{
				New-Item -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon -Force
			}
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon -Name MinimizedStateTabletModeOff -PropertyType DWord -Value 0 -Force
			stop-process -name explorer -force
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Setting Expanded Windows 10 File Explorer Ribbon!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	$DisableWin10Explorer_Click={
		#TODO: Place custom script here
		Write-Host "Setting Minimized Windows 10 File Explorer Ribbon ..."
		if (Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Shell Extensions\Blocked" -Name "{e2bf9676-5f8f-435c-97eb-11607a5bedf7}" -ErrorAction Ignore)
		{
			if (-not (Test-Path -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon))
			{
				New-Item -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon -Force
			}
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon -Name MinimizedStateTabletModeOff -PropertyType DWord -Value 1 -Force
			stop-process -name explorer -force
		}
		
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Setting Minimized Windows 10 File Explorer Ribbon!', 'Windows Optimization Toolbox',  0, 64)
	}
	
	
	
	$buttonActivateWindows_Click={
		$Sysdir = [System.Environment]::SystemDirectory
		$hiden = Set-Location -Path $Sysdir -PassThru
		
		Write-Host @"

>> Please wait...

"@
		
		
		$initreturn = cscript //nologo slmgr.vbs /cServer
		$initreturn = cscript //nologo slmgr.vbs /upk
		$initreturn = cscript //nologo slmgr.vbs /cpky
		
		$initreturn = ""
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk NPEG9-FWDCX-D2G8J-H872K-2YRE4 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk DPEGV-TTNVB-4XEQ3-TJR4H-KHJWH }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk WNEJR-4C88C-JKEGV-HQ7T2-76DF9 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 2FRHB-TNFGY-69EGE-B8YKP-D69TJ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk DCJRK-NFMTC-H8adJ-PFHPY-QJ4BJ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk QFRJN-GRT3P-VKERX-X7T3R-8B639 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk TXWTD-98N7V-6WHF6-BX7FG-H8Q99 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 3KWR7-WNT83-DSDGR-F7HPR-844BM }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 7HWTX-D7EGG-3QEGQ-4WPJ4-YTDFH }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk PVWRN-6DFY6-9EG36-7BKTT-D3WVR }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk NWSGS-QMPVW-DHEEK-3GKT6-VCFB2 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 2WHSG-8QGBV-HEGDP-CT43Q-MDWWJ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk W26SD-WFGGX-YETDB-4J6C9-T83GX }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk MH3SD-N47XK-VETQ9-C7227-GCQG9 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk MHSDN-XY6XB-WWTDC-BTDCT-MKKG7 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk TT4SH-HN7YT-6TEA7-RGRQJ-JFFXW }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 32SFW-9KQ84-PHEW8-D8GGY-CWCK7 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk JMSFF-RHW7P-DEGAX-RF3DR-X2BQT }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk GCFHD-8NW9H-FWAFX-CCM8D-9D6T9 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk HMRHV-VVBFX-7ETAH-CTY9B-B4FXY }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk NG4EV-VH26C-7GEAW-K6F98-J8CK4 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk XCWDF-2NXM9-7EQAB-MHCB7-2RYQQ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk BNHFB-R7TKB-3HRED-8DRP2-27GG4 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 2SDGH-YGCQR-KWGDK-CD6TF-84YXQ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk GNHHE-YVD74-QEGD6-27H4K-8QHDG }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk MEGDP-WNJJT-6EAQY-DWX8H-6XWKK }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 7DGN3-D94CG-YHRYR-QBPX3-RJP64 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk BEGDG-PQ82V-VQDHW-8XVD2-V8P66 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 78EGJ-TQK6T-6TEW8-J39CJ-J8D3P }
		
		
		Write-Host @"
>> Activating Windows

"@
		
		For ()
		{
			
			$initreturn = cscript //nologo slmgr.vbs /sServer Server8.microsoft.com
			if ($initreturn -match "successfully") { $initreturn = cscript //nologo slmgr.vbs /ato; if ($initreturn -match "successfully") { write-host $initreturn[0] -ForegroundColor green; write-host $initreturn[1] -ForegroundColor green; Break } }
			
			$initreturn = cscript //nologo slmgr.vbs /sServer Server9.microsoft.com
			if ($initreturn -match "successfully") { $initreturn = cscript //nologo slmgr.vbs /ato; if ($initreturn -match "successfully") { write-host $initreturn[0] -ForegroundColor green; write-host $initreturn[1] -ForegroundColor green; Break } }
			
			$initreturn = cscript //nologo slmgr.vbs /sServer Server7.microsoft.com
			if ($initreturn -match "successfully") { $initreturn = cscript //nologo slmgr.vbs /ato; if ($initreturn -match "successfully") { write-host $initreturn[0] -ForegroundColor green; write-host $initreturn[1] -ForegroundColor green; Break } }
			[System.Media.SystemSounds]::Asterisk.Play()
			[System.Windows.Forms.MessageBox]::Show("Can't Activate Your Windows. Please Try Again.", 'Windows Optimization Toolbox', 0, 48)
			Write-Host @"
Microsoft Key Management Service(Server) didn't able to activate your window.
- Run Windows Optimization Toolbox with Administrative rights
- Make sure that you're connected to the internet
- Make sure that Window Script Host(WSH) is enabled
- Try again later "Microsoft(Server) can be busy"
"@ -ForegroundColor red
			Break
		}
		else
		{
			[System.Media.SystemSounds]::Asterisk.Play()
			[void][System.Windows.Forms.MessageBox]::Show('Product Activated Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
		}
		
	}
	
	$buttonActivateMSOffice_Click= {
		#TODO: Place custom script here
		For ()
		{
			
			
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\proplusvl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\proplusvl_mak*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			
			Write-Host ">> Activating Office"
			
			$hiden = ""
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:WFG99
			$hiden = cscript //nologo ospp.vbs /unpkey:DRTFM
			$hiden = cscript //nologo ospp.vbs /unpkey:BTDRB
			$hiden = cscript //nologo ospp.vbs /unpkey:CPQVG
			$hiden = cscript //nologo ospp.vbs /inpkey:XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Office has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			
			
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			
			
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\ProPlus2019VL*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			
			Write-Host ">> Activating Office"
			
			$hiden = ""
			$hiden = cscript //nologo slmgr.vbs /cServer
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:6MWKP
			$hiden = cscript //nologo ospp.vbs /inpkey:NMMKJ-6RK4F-KMJVX-8D9MJ-6MWKP
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Office has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			
			
			
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\proplusvl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\proplusvl_mak*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			
			Write-Host ">> Activating Office"
			
			$hiden = ""
			$hiden = cscript //nologo slmgr.vbs /cServer
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:WFG99
			$hiden = cscript //nologo ospp.vbs /unpkey:DRTFM
			$hiden = cscript //nologo ospp.vbs /unpkey:BTDRB
			$hiden = cscript //nologo ospp.vbs /inpkey:XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Office has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			
			
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			
			$hiden = ""
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ppd.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ul-oob.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ul.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-bridge-office.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-root.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-root-bridge-test.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-stil.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-ul.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-ul-oob.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\pkeyconfig-office.xrm-ms"
			
			Write-Host ">> Activating MS Visio"
			
			$hiden = cscript //nologo slmgr.vbs /cServer
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:KQBVC
			$hiden = cscript //nologo ospp.vbs /unpkey:G83KT
			$hiden = cscript //nologo ospp.vbs /inpkey:YG9NW-3K39V-2T3HJ-93F3Q-G83KT
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Visio has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			else
			{
				Write-Host @"

>> Fail...! trying different Server...
"@
				
				Set-Location C:\Windows\system32
				if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
				if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
				
				
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\client-issuance*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\projectprovl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\projectpro2019vl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				
				Write-Host ">> Activating MS Visio"
				
				$hiden = ""
				$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\pkeyconfig-office.xrm-ms"
				$hiden = cscript //nologo slmgr.vbs /cServer
				$hiden = cscript //nologo ospp.vbs /setprt:1688
				$hiden = cscript //nologo ospp.vbs /unpkey:PKD2B
				$hiden = cscript //nologo ospp.vbs /inpkey:B4NPR-3FKK7-T2MBV-FRQ4W-PKD2B
				$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
				$hiden = cscript //nologo ospp.vbs /act
				
				
				
				if ($hiden -match "successful")
				{
					Write-Host @" 

Microsoft Visio has been Activated successfully 
"@ -ForegroundColor green; Break
					
				}
			}
			
			
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			
			$hiden = ""
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ppd.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ul-oob.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ul.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-bridge-office.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-root.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-root-bridge-test.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-stil.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-ul.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-ul-oob.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\pkeyconfig-office.xrm-ms"
			
			Write-Host ">> Activating MS Project"
			
			$hiden = ""
			$hiden = cscript //nologo slmgr.vbs /cServer
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:KQBVC
			$hiden = cscript //nologo ospp.vbs /unpkey:G83KT
			$hiden = cscript //nologo ospp.vbs /inpkey:YG9NW-3K39V-2T3HJ-93F3Q-G83KT
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Project has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			else
			{
				Write-Host @"

>> Fail...! trying different Server...
"@
				
				Set-Location C:\Windows\system32
				if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
				if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
				
				
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\client-issuance*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\projectprovl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\projectpro2019vl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				
				Write-Host ">> Activating MS Project"
				
				$hiden = ""
				$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\pkeyconfig-office.xrm-ms"
				$hiden = cscript //nologo slmgr.vbs /cServer
				$hiden = cscript //nologo ospp.vbs /setprt:1688
				$hiden = cscript //nologo ospp.vbs /unpkey:PKD2B
				$hiden = cscript //nologo ospp.vbs /inpkey:B4NPR-3FKK7-T2MBV-FRQ4W-PKD2B
				$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
				$hiden = cscript //nologo ospp.vbs /act
				
				
				
				if ($hiden -match "successful")
				{
					Write-Host @" 

Microsoft Project has been Activated successfully 
"@ -ForegroundColor green; Break
					
				}
			}
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office15\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office15" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office15\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office15" }
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office14\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office14" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office14\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office14" }
			
			Write-Host @"

>> Please wait...
"@
			
			Import-Module BitsTransfer
			$ProgressPreference = "SilentlyContinue"
			$ProgressPreference = "SilentlyContinue"
			$ProgressPreference = "SilentlyContinue"
			
			Start-BitsTransfer -Source "https://get.microsoft.com/office2010/Office_2010_Library.zip" -Destination "$env:TEMP"
			Start-BitsTransfer -Source "https://get.microsoft.com/office2013/Office_2013_Library.zip" -Destination "$env:TEMP"
			Expand-Archive "$env:TEMP\Office_2010_Library.zip" -DestinationPath "C:\" -Force
			Expand-Archive "$env:TEMP\Office_2013_Library.zip" -DestinationPath "C:\" -Force
			
			
			cmd /c 'del "$env:TEMP\Office_2010_Library.zip"'
			cmd /c 'del "$env:TEMP\Office_2013_Library.zip"'
			
			
			$files = Get-ChildItem -Path C:\library -name
			foreach ($i in 1 .. 7)
			{
				$hiden = cscript //b ospp.vbs /inslic:$files[$i]
			}
			Remove-Item C:\library -Recurse -Force
			
			$ProgressPreference = "Continue"
			
			Write-Host ">> Activating Office"
			
			$hiden = ""
			$hiden = cscript //nologo ospp.vbs /inpkey:VYBBJ-TRJPB-QFQRF-QFT4D-H3GVB
			$hiden = cscript //nologo ospp.vbs /inpkey:YC7DK-G2NP3-2QQC3-J6H88-GVGXT
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /act
			if ($hiden -match "successful")
			{
				[System.Media.SystemSounds]::Asterisk.Play()
				[void][System.Windows.Forms.MessageBox]::Show('Product Activated Sucessfully!', 'Windows Optimization Toolbox',  0, 64)
				Write-Host @" 

Microsoft Office has been Activated successfully 
"@ -ForegroundColor green; Break
			}
			Else
			{
				
				[System.Media.SystemSounds]::Asterisk.Play()
				[System.Windows.Forms.MessageBox]::Show("Can't Activate Your Office. Please Try Again..", 'Windows Optimization Toolbox', 0, 48)
				
				Write-Host @"
Microsoft Office/visio/Project didn't Activate
- Make sure that office is installed in "C" drive
- Run Windows Toolbox with Administrative rights
- Make sure that you're connected to the internet
- Make sure that Window Script Host(WSH) is enabled
- Try again later "Microsoft(Server) can be busy"
"@ -ForegroundColor red
				Break
				
			}
		}
	}
	
	
	$buttonEnableGodMode_Click={
		#TODO: Place custom script here
		$DesktopPath = [Environment]::GetFolderPath("Desktop");
		mkdir "$DesktopPath\GodMode.{ED7BA470-8E54-465E-825C-99712043E01C}"
		Write-Host "Done!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling God Mode!', 'Windows Optimization Toolbox', 0, 64)
	}
	
	$buttonInstallGooglePlaySto_Click={
		#TODO: Place custom script here
		Write-Host "Enabling Developer Mode"
		New-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name 'AllowDevelopmentWithoutDevLicense' -Value 1 -PropertyType DWord -Force 
	    Write-Host "Installing Google Play Store..."
		Import-Module BitsTransfer
		Start-BitsTransfer -Source "https://download1493.mediafire.com/dr6fd6qyalfg/dh27m0zmy9rc0wd/WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly.zip" -Destination "$env:USERPROFILE\Downloads\WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly.zip"
		Expand-Archive "$env:USERPROFILE\Downloads\WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly.zip" -DestinationPath "$env:USERPROFILE\Downloads\WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly"
		powershell -executionpolicy bypass "$env:USERPROFILE\Downloads\WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly\Install.ps1"
		Write-Host "Finished Installing Google Play Store"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Google Play Store!', 'Windows Optimization Toolbox', 0, 64)
	}
	
	$buttonUnistallGooglePlaySt_Click={
		#TODO: Place custom script here
		
	}
	
	$buttonFixWindows11PlayStor_Click={
		#TODO: Place custom script here
		Import-Module BitsTransfer
		Start-BitsTransfer -Source "https://dl.google.com/android/repository/platform-tools_r33.0.0-windows.zip" -Destination "$env:USERPROFILE\Downloads\platform-tools_r33.0.0-windows.zip"
		Expand-Archive "$env:USERPROFILE\Downloads\platform-tools_r33.0.0-windows.zip" -DestinationPath "$env:USERPROFILE\Downloads\platform-tools_r33.0.0-windows"
		Set-Location "$env:USERPROFILE\Downloads\platform-tools_r33.0.0-windows\platform-tools"
		./adb connect $env:HostIP
		./adb shell
		su
		setenforce 0
	}
	
	$buttonDiskDefragUtility_Click={
		#TODO: Place custom script here
		dfrgui
	}
	
	$buttonRestore_Click={
		#TODO: Place custom script here
		rstrui.exe
	}
	
	$buttonCreateARestorePoint_Click={
		#TODO: Place custom script here
		Write-Host "Creating Restore Point In Case Something Bad Happens..."
		Enable-ComputerRestore -Drive "C:\"
		REG ADD "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore" /V "SystemRestorePointCreationFrequency" /T REG_DWORD /D 0 /F
		Checkpoint-Computer -Description "WinToolbox" -RestorePointType "MODIFY_SETTINGS"
		Write-Host 'Restore Point has been Created' -ForegroundColor green
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Restore Point has been Created!', 'Windows Optimization Toolbox', 0, 64)
		
	}
	
	$buttonSteam_Click={
		#TODO: Place custom script here
		Write-Host "Installing Steam..."
		choco install steam-client
		Write-Host "Finished Installing Steam."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Steam!', 'Windows Optimization Toolbox', 0, 64)
	}
	
	$buttonEpicGames_Click={
		#TODO: Place custom script here
		Write-Host "Installing Epic Games Launcher..."
		choco install epicgameslauncher
		Write-Host "Finished Installing Epic Games Launcher!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Epic Games Launcher!', 'Windows Optimization Toolbox', 0, 64)
	}
	
	
	
	$tabcontrol1_SelectedIndexChanged={
		#TODO: Place custom script here
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formWindowsOptimizationT.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonDiskDefragUtility.remove_Click($buttonDiskDefragUtility_Click)
			$buttonFixWindows11PlayStor.remove_Click($buttonFixWindows11PlayStor_Click)
			$buttonEnableGodMode.remove_Click($buttonEnableGodMode_Click)
			$AddTakeOwnershipMenu.remove_Click($AddTakeOwnershipMenu_Click)
			$RemoveTakeOwnershipMenu.remove_Click($RemoveTakeOwnershipMenu_Click)
			$DisableWin10Explorer.remove_Click($DisableWin10Explorer_Click)
			$EnableWin10Ribbon.remove_Click($EnableWin10Ribbon_Click)
			$buttonDisableWindows10Expl.remove_Click($buttonDisableWindows10Expl_Click)
			$buttonEnableWindows10Explo.remove_Click($buttonEnableWindows10Explo_Click)
			$DisableBackgroundApps.remove_Click($DisableBackgroundApps_Click)
			$RemoveWindows10XBoot.remove_Click($RemoveWindows10XBoot_Click)
			$CompactOS.remove_Click($CompactOS_Click)
			$Windows10XBootAnimat.remove_Click($Windows10XBootAnimat_Click)
			$EnableMSIMode.remove_Click($EnableMSIMode_Click)
			$BypassTPM20.remove_Click($BypassTPM20_Click)
			$AMDGpuTweaks.remove_Click($AMDGpuTweaks_Click)
			$DefaultTaskbar.remove_Click($DefaultTaskbar_Click)
			$NVIDIAGpuTweaks.remove_Click($NVIDIAGpuTweaks_Click)
			$SmallTaskbar.remove_Click($SmallTaskbar_Click)
			$NetworkTweaks.remove_Click($NetworkTweaks_Click)
			$DefaultContextMenu.remove_Click($DefaultContextMenu_Click)
			$EnableNet35.remove_Click($EnableNet35_Click)
			$OldContextMenu.remove_Click($OldContextMenu_Click)
			$EnableNFS.remove_Click($EnableNFS_Click)
			$RemoveStartupProgram.remove_Click($RemoveStartupProgram_Click)
			$WindowsSearchAndTask.remove_Click($WindowsSearchAndTask_Click)
			$LaptopNumlockFix.remove_Click($LaptopNumlockFix_Click)
			$FixWhitelistedApps.remove_Click($FixWhitelistedApps_Click)
			$YourPhoneAppFIx.remove_Click($YourPhoneAppFIx_Click)
			$RepairHardDrive.remove_Click($RepairHardDrive_Click)
			$FixNetworkProblems.remove_Click($FixNetworkProblems_Click)
			$SystemFileChecker.remove_Click($SystemFileChecker_Click)
			$RepairWindowsImage.remove_Click($RepairWindowsImage_Click)
			$ApplyTweaks.remove_Click($ApplyTweaks_Click)
			$EnableClipboardHisto.remove_Click($EnableClipboardHisto_Click)
			$DisableClipboardHist.remove_Click($DisableClipboardHist_Click)
			$DisableLocationTrack.remove_Click($DisableLocationTrack_Click)
			$DisableCortana.remove_Click($DisableCortana_Click)
			$EnableLocationTRacki.remove_Click($EnableLocationTRacki_Click)
			$DisableActionCenter.remove_Click($DisableActionCenter_Click)
			$EnableCortanaSearch.remove_Click($EnableCortanaSearch_Click)
			$EnableBackgroundApps.remove_Click($EnableBackgroundApps_Click)
			$LightMode.remove_Click($LightMode_Click)
			$DisableHibernation.remove_Click($DisableHibernation_Click)
			$DarkMode.remove_Click($DarkMode_Click)
			$EnableHibernation.remove_Click($EnableHibernation_Click)
			$SetTimeToUTCDualBoot.remove_Click($SetTimeToUTCDualBoot_Click)
			$CleanTempFilesAndLog.remove_Click($CleanTempFilesAndLog_Click)
			$AppearanceVisualFX.remove_Click($AppearanceVisualFX_Click)
			$EnableActionCenter.remove_Click($EnableActionCenter_Click)
			$PerformanceVisualFX.remove_Click($PerformanceVisualFX_Click)
			$DisableMemoryCompres.remove_Click($DisableMemoryCompres_Click)
			$EnableMemoryCompress.remove_Click($EnableMemoryCompress_Click)
			$buttonUnistallEdge.remove_Click($buttonUnistallEdge_Click)
			$buttonRevertRegistryChange.remove_Click($buttonRevertRegistryChange_Click)
			$InstallOnedrive.remove_Click($InstallOnedrive_Click)
			$buttonDebloatWithBlocklist.remove_Click($buttonDebloatWithBlocklist_Click)
			$DebloatAll.remove_Click($DebloatAll_Click)
			$ReinstallAllBloatwar.remove_Click($ReinstallAllBloatwar_Click)
			$UnsintallOnedrive.remove_Click($UnsintallOnedrive_Click)
			$DisableEdgePDF.remove_Click($DisableEdgePDF_Click)
			$UnpinTitilesFromStar.remove_Click($UnpinTitilesFromStar_Click)
			$RemoveBloatwareRegKe.remove_Click($RemoveBloatwareRegKe_Click)
			$buttonRestore.remove_Click($buttonRestore_Click)
			$buttonCreateARestorePoint.remove_Click($buttonCreateARestorePoint_Click)
			$buttonActivateMSOffice.remove_Click($buttonActivateMSOffice_Click)
			$buttonActivateWindows.remove_Click($buttonActivateWindows_Click)
			$WindowsUpdateReset.remove_Click($WindowsUpdateReset_Click)
			$Low.remove_Click($Low_Click)
			$EnableWindowsUpdates.remove_Click($EnableWindowsUpdates_Click)
			$DisableWindowsUpdate.remove_Click($DisableWindowsUpdate_Click)
			$DefaultSetting.remove_Click($DefaultSetting_Click)
			$SecurityUpdatesOnly.remove_Click($SecurityUpdatesOnly_Click)
			$RemoveMalware.remove_Click($RemoveMalware_Click)
			$RemoveViruses.remove_Click($RemoveViruses_Click)
			$High.remove_Click($High_Click)
			$buttonEpicGames.remove_Click($buttonEpicGames_Click)
			$buttonSteam.remove_Click($buttonSteam_Click)
			$buttonInstallGooglePlaySto.remove_Click($buttonInstallGooglePlaySto_Click)
			$buttonGithub.remove_Click($buttonGithub_Click)
			$GeforceExperience.remove_Click($GeforceExperience_Click)
			$IntelDriverSupportAs.remove_Click($IntelDriverSupportAs_Click)
			$GoogleChrome.remove_Click($GoogleChrome_Click)
			$FireFox.remove_Click($FireFox_Click)
			$Ventoy.remove_Click($Ventoy_Click)
			$7zip.remove_Click($7zip_Click)
			$StartIsBack.remove_Click($StartIsBack_Click)
			$VLC.remove_Click($VLC_Click)
			$Blender.remove_Click($Blender_Click)
			$PaintNET.remove_Click($PaintNET_Click)
			$OpenShell.remove_Click($OpenShell_Click)
			$DirectX.remove_Click($DirectX_Click)
			$Cleanmgr.remove_Click($Cleanmgr_Click)
			$VisualC.remove_Click($VisualC_Click)
			$LibreOffice.remove_Click($LibreOffice_Click)
			$XNAFramework40.remove_Click($XNAFramework40_Click)
			$GreenShot.remove_Click($GreenShot_Click)
			$OpenAl.remove_Click($OpenAl_Click)
			$balenaEtcher.remove_Click($balenaEtcher_Click)
			$Audacity.remove_Click($Audacity_Click)
			$Java.remove_Click($Java_Click)
			$Discord.remove_Click($Discord_Click)
			$PhysX.remove_Click($PhysX_Click)
			$OBSStudio.remove_Click($OBSStudio_Click)
			$Everything.remove_Click($Everything_Click)
			$AMDRyzenChipsetDrive.remove_Click($AMDRyzenChipsetDrive_Click)
			$SumatraPDF.remove_Click($SumatraPDF_Click)
			$Rufus.remove_Click($Rufus_Click)
			$FoxitReader.remove_Click($FoxitReader_Click)
			$WinRAR.remove_Click($WinRAR_Click)
			$IDM.remove_Click($IDM_Click)
			$MediaPlayerClassic.remove_Click($MediaPlayerClassic_Click)
			$GPUZ.remove_Click($GPUZ_Click)
			$PowerToys.remove_Click($PowerToys_Click)
			$CPUZ.remove_Click($CPUZ_Click)
			$WindowsTerminal.remove_Click($WindowsTerminal_Click)
			$Vivaldi.remove_Click($Vivaldi_Click)
			$Brave.remove_Click($Brave_Click)
			$Edge.remove_Click($Edge_Click)
			$BleachBit.remove_Click($BleachBit_Click)
			$Notepad.remove_Click($Notepad_Click)
			$MicrosoftSilverLight.remove_Click($MicrosoftSilverLight_Click)
			$UTorrent.remove_Click($UTorrent_Click)
			$ImageGlass.remove_Click($ImageGlass_Click)
			$CCleaner.remove_Click($CCleaner_Click)
			$VSCode.remove_Click($VSCode_Click)
			$Gimp.remove_Click($Gimp_Click)
			$VSCodium.remove_Click($VSCodium_Click)
			$ShareX.remove_Click($ShareX_Click)
			$AdobeReaderDC.remove_Click($AdobeReaderDC_Click)
			$Opera.remove_Click($Opera_Click)
			$IrfanView.remove_Click($IrfanView_Click)
			$tabcontrol1.remove_SelectedIndexChanged($tabcontrol1_SelectedIndexChanged)
			$formWindowsOptimizationT.remove_Load($formWindowsOptimizationT_Load)
			$formWindowsOptimizationT.remove_Load($Form_StateCorrection_Load)
			$formWindowsOptimizationT.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formWindowsOptimizationT.SuspendLayout()
	$tabcontrol1.SuspendLayout()
	$tabpage1.SuspendLayout()
	$tabpage6.SuspendLayout()
	$tabpage3.SuspendLayout()
	$tabpage8.SuspendLayout()
	#
	# formWindowsOptimizationT
	#
	$formWindowsOptimizationT.Controls.Add($tabcontrol1)
	$formWindowsOptimizationT.AutoScaleDimensions = '6, 13'
	$formWindowsOptimizationT.AutoScaleMode = 'Font'
	$formWindowsOptimizationT.AutoScroll = $True
	$formWindowsOptimizationT.BackColor = 'Control'
	$formWindowsOptimizationT.ClientSize = '964, 654'
	$formWindowsOptimizationT.FormBorderStyle = 'FixedSingle'
	#region Binary Data
	$formWindowsOptimizationT.Icon = [System.Convert]::FromBase64String('
AAABAAEAp6gAAAEAIABIxgEAFgAAACgAAACnAAAAUAEAAAEAIAAAAAAAYLYBABMLAAATCwAAAAAA
AAAAAAD318b/9Miy//XMt//0y7b/9Mu2//TLtv/0y7b/9Mu2//TLtv/0yrb/9Mq2//TKtv/0yrb/
9Mq2//PKtv/0yrb/9Mm2//TJtv/0ybb/9Mm2//TJtv/zybb/88m2//PJtv/zybb/88m2//PJtv/z
yLb/88i2//PItv/zyLb/88i2//PItv/zyLb/88i2//PHtv/yx7b/8se2//LHtv/yx7b/8se2//LH
tv/yxrb/8sa2//LGtv/yxrb/8sa2//LGtv/yxrb/8sa2//LGtv/yxrb/8sW2//HFtv/xxbb/8cW2
//HFtv/xxbb/8cW2//HFtv/wwbP/8MKz//DBs//uu63/7rut/+67rf/tu63/7but/+27rf/tu63/
7bqt/+26rf/st6r/7Leq/+y3qv/st6r/7Leq/+y3qv/suKv/78O5/fnp59766eUh+ujkAgAAAAAA
AAAA//njDPzruCv97brp/Omr/vzpq//86ar//Omq//zpqv/86ar//Omq//zqrf/86q3//Oqt//zp
rf/86a3//Omt//zprf/86a3//Omt//zrs//867P//Ouz//vttv/87bb//O22//zstv/87Lb//Oy2
//zstv/87Lb//Oy2//zstv/87Lb//Oy2//zstv/87Lb//Ou2//zrtv/867b/++u2//vrtv/767b/
++u2//vrtv/767b/++u2//vqtv/76rb/++q2//vqtv/76rb/++q2//vqtv/76rb/++q2//vptv/7
6rb/++m2//vptv/76bb/++m2//vptv/76bb/++m2//vptv/76bb/++m2//vptv/76bb/++i2//vo
tv/76Lb/++i2//votv/76Lb/++i2//votv/757b/++e2//vot//65rL/++3H/+BoOP/VMwD/2D8D
/9c8AP/XPAD/1zwA/9Y7AP/WOwD/1jsA/9Y7AP/VOgD/1ToA/9U5AP/VOQD/1TgA/9Q4AP/UNwD/
1DcA/9Q2AP/UNgD/1DUA/9M1AP/TNQD/0zUA/9M0AP/TNAD/0jMA/9IzAP/SMwD/0jIA/9IyAP/S
MQD/0TEA/9EwAP/RMAD/0S8A/9EuAP/QLgD/0C4A/88tAP/PLQD/zy0A/88sAP/PLQD/zywA/88r
AP/OKgD/zioA/84qAP/OKQD/zSkA/80pAP/NKAD/zCgA/8snAP/MJwD/zCYA/8wmAP/MJQD/yyUA
/8w3JP/MNyT/yzck/85MPf/OTD3/zkw9/85MPf/NTD3/zUs9/81LPf/OUkX/zlJF/85SRf/OUUX/
zlFF/81RRf/OUUX/zlFF/85TSP/Xb2X99NPL3vjh2yH54t0CAAAAAP/66gH/+egW//jh1PfTY/Pz
xkn/8sdF//LHRf/zx0X/9MdF//THRf/0x0X/9MdF//PHRf/zxD3/88Q9//PDPf/zwz3/88M9//PC
Pf/zwj3/870k//O9JP/zvST/8roA//K6AP/yugD/8roA//K5AP/yuQD/8rkA//K4AP/yuAD/8rgA
//K3AP/ytwD/8rcA//K2AP/ytgD/8rUA//K1AP/ytQD/8bQA//G0AP/xtAD/8bMA//GzAP/xswD/
8bIA//GyAP/xsgD/8bIA//GyAP/xsQD/8LAA//CwAP/wrwD/8K8A//CvAP/wrgD/8K4A//CuAP/w
rQD/8K0A//CsAP/wrAD/8K0A//CsAP/vqwD/76sA/++rAP/vqwD/76oA/++qAP/vqQD/76gA/++o
AP/vqAD/76gA/++oAP/vpwD/76gD/+2iAP/yuzv/43U7/9lFAP/bTwf/200E/9tNBP/aTAT/2kwE
/9pLBP/aSwT/2ksE/9lLBP/ZSgT/2UoE/9lKBP/ZSQT/2EkE/9hIBP/YSAT/2EcE/9hHBP/YRwT/
10YE/9dGBP/XRgT/10YE/9dFBP/WRQT/1kQE/9ZEBP/WQwT/1kME/9ZDBP/VQgT/1UIE/9VBBP/V
QQT/1UEE/9RABP/UPwT/1D8E/9M/BP/TPwT/0z8E/9M/BP/TPQT/0z0E/9I9BP/SPAT/0jsE/9I7
BP/SOgT/0ToE/9E6BP/QOQT/0DkE/9A5BP/QOQT/0DgE/9A4BP/POAT/zzYE/882BP/ONgT/zjUF
/841Cv/ONQr/zjUK/801Cv/NNAr/zTQL/800DP/NNA7/zTQO/80zDv/MMw7/zDIO/8wyDv/MMw//
yzYY/9ZkVP310Mne99jRIfjd1gIAAAAA//vsAv/66SD/9+Dd99Rj/fPFHP/zxRH/88UQ//TFD//1
xQ//9cUP//XFD//1xA//9MQN//TDC//0wwv/9MML//TDC//0wgv/9MIL//TCBv/0wQX/9MEF//TB
Bf/0wAX/9MAF//TABf/zwAX/88AF//O/Bf/zvwX/878F//O+Bf/zvgX/874F//O+Bf/zvQX/87wF
//O8Bf/zuwX/87sF//O7Bf/yuwX/8roF//K6Bf/yugX/8roF//K5Bf/yuQX/8rkF//K4Bf/yuAX/
8rgF//K4Bf/ytwX/8rcF//K2Bf/xtgX/8bUF//G1Bf/xtQX/8bQF//G0Bf/xtAX/8bQF//GzBf/x
swX/8bMF//GzBf/xswX/8bIF//GyBf/wsgX/8LEF//CwBf/wsAX/8K8F//CvBf/wrwX/8K8F//Cv
Bf/wrwj/8KoA//TBP//jczj/2UIA/9tNA//aSgD/2koA/9pKAP/aSQD/2kkA/9lIAP/ZSAD/2UgA
/9lIAP/ZRwD/2EcA/9hGAP/YRgD/2EUA/9hFAP/YRQD/10QA/9dEAP/XRAD/10MA/9dDAP/WQwD/
1kIA/9ZCAP/WQgD/1kEA/9ZBAP/VQAD/1UAA/9U/AP/VPwD/1T8A/9Q+AP/UPgD/1D0A/9M9AP/T
PAD/0zwA/9M8AP/SPAD/0jsA/9I7AP/SOgD/0joA/9I5AP/ROAD/0TgA/9E3AP/QNwD/0DcA/9A2
AP/QNgD/0DYA/882AP/PNQD/zzUA/881AP/ONAD/zjQA/84zAP/OMwD/zTMA/80yAP/NMgD/zTIA
/80xAP/MMQD/zDEA/8wwAP/MMAD/zC8A/8wvAP/LLwD/yy4A/8svAv/KMxH/1WJS/fTQyN732NAh
+NvTAgAAAAD/+u0C//nqIf/34N731GL988YZ//PEBf/zxAL/88QC//XFAf/1xAH/9cQB//TDAf/0
wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//O/
Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zuwH/87sB//O7Af/zugH/87oB
//K6Af/yugH/8roB//K5Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3Af/ytwH/8rcB//K3Af/ytgH/
8bUB//G1Af/xtQH/8bQB//G0Af/xtAH/8bMB//GzAf/xswH/8bMB//GyAf/xsgH/8bIB//GyAf/x
sgH/8LEB//CxAf/wsAH/8K8B//CvAf/wrwH/8K4B//CuAf/wrgH/8K4B//CvBP/vqQD/88A7/+Nz
OP/ZQgD/200D/9pLAP/aSgD/2koA/9pKAP/aSQD/2UkA/9lJAP/ZSAD/2UgA/9lIAP/YRwD/2EcA
/9hHAP/YRgD/2EYA/9hFAP/XRQD/10QA/9dEAP/XRAD/10MA/9ZDAP/WQwD/1kIA/9ZCAP/WQgD/
1kEA/9VBAP/VQQD/1UAA/9VAAP/VPwD/1D8A/9Q+AP/UPgD/1D0A/9M9AP/TPQD/0zwA/9I8AP/S
PAD/0jsA/9I7AP/SOwD/0joA/9E5AP/ROQD/0TgA/9A4AP/QNwD/0DcA/9A2AP/QNgD/zzYA/882
AP/PNQD/zzUA/881AP/ONAD/zjQA/840AP/OMwD/zTMA/80yAP/NMgD/zTEA/80xAP/MMQD/zDEA
/8wwAP/MMAD/zC8A/8wvAP/LLwD/yy8B/8oyEf/WYlL99dDH3vfY0CH429MCAAAAAP/67QL/+eoh
//fg3vfUYf3zxhj/88UE//PEAv/zxQL/9cUB//XFAf/1xAH/9MMB//TDAf/0wwH/9MMB//TCAf/0
wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/0vwH/878B//O/
Af/zvgH/874B//O+Af/zvQH/870B//O8Af/zuwH/87sB//O7Af/zuwH/87sB//O6Af/yugH/8roB
//K5Af/yuQH/8rkB//K4Af/yuAH/8rgB//K4Af/ytwH/8rcB//K2Af/ytgH/8rYB//K1Af/xtQH/
8bUB//G0Af/xtAH/8bQB//GzAf/xswH/8bMB//GzAf/xswH/8bIB//GyAf/xsgH/8bEB//GxAf/x
sAH/8K8B//CvAf/wrwH/8K8B//CuAf/wrgH/8K8E/++pAP/zwDv/5HQ4/9lDAP/bTgP/20sA/9tL
AP/bSgD/2koA/9pKAP/aSQD/2kkA/9lIAP/ZSAD/2UgA/9lHAP/ZRwD/2UcA/9hHAP/YRgD/2EYA
/9dFAP/XRQD/10QA/9dEAP/XRAD/10MA/9dDAP/WQgD/1kIA/9ZCAP/WQgD/1kEA/9ZBAP/VQAD/
1UAA/9VAAP/VPwD/1T8A/9Q+AP/UPgD/0z0A/9M9AP/TPQD/0zwA/9M8AP/TPAD/0zwA/9I7AP/S
OgD/0TkA/9E5AP/ROAD/0TgA/9E3AP/QNwD/0DcA/9A3AP/QNgD/0DYA/9A2AP/QNgD/zzUA/881
AP/ONAD/zjQA/84zAP/OMwD/zTIA/80yAP/NMgD/zTEA/80xAP/NMQD/zTEA/8wwAP/MMAD/zC8A
/8wvAP/MMAH/yzMR/9ZjUv300Mfe99jQIffb0wIAAAAA//rtAv/66iH/9+De99Rh/fPGGP/zxQX/
88UC//PFAv/1xQH/9cUB//XEAf/0wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0
wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/zvwH/878B//O/Af/zvgH/874B//O+
Af/zvQH/87wB//O7Af/zuwH/87sB//O7Af/zuwH/87sB//O6Af/yuwH/8roB//K6Af/yuQH/8rkB
//K4Af/yuAH/8rgB//K4Af/ytwH/8rcB//K2Af/ytgH/8rYB//G1Af/xtQH/8bUB//G0Af/xtAH/
8bQB//GzAf/xswH/8bMB//GzAf/xswH/8bIB//GyAf/xsQH/8bEB//GwAf/wrwH/8K8B//CvAf/w
rwH/8K8B//CuAf/wrwT/76kA//PAO//jdDj/2UMA/9tOA//bTAD/20sA/9tLAP/aSgD/2koA/9pK
AP/aSQD/2UkA/9lIAP/ZSAD/2UgA/9lHAP/ZRwD/2EcA/9hHAP/YRgD/2EYA/9dFAP/XRQD/10QA
/9dEAP/XRAD/10MA/9ZCAP/WQgD/1kIA/9ZCAP/WQQD/1kEA/9VAAP/VQAD/1UAA/9U/AP/VPwD/
1D4A/9Q+AP/TPQD/0z0A/9M9AP/TPAD/0zwA/9M8AP/TPAD/0jsA/9I6AP/ROgD/0ToA/9E4AP/R
OAD/0TcA/9A3AP/QNwD/0DcA/9A3AP/QNgD/0DYA/9A2AP/PNQD/zzUA/840AP/ONAD/zjMA/84z
AP/NMgD/zTIA/80yAP/NMgD/zTEA/80xAP/NMQD/zDEA/8wwAP/MMAD/zC8A/8wwAf/LNBL/1mNR
/fTQx972188h99rSAgAAAAD/++wC//rpIf/44N731WH988ca//PFBf/zxQL/88UC//XGAf/1xQH/
9cQB//XEAf/0xAH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0
wAH/9MAB//TAAf/0wAH/9L8B//O/Af/zvwH/878B//O/Af/zvgH/874B//O9Af/zvQH/87wB//O8
Af/zuwH/87sB//O7Af/zuwH/87sB//K7Af/yugH/8roB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB
//K4Af/ytwH/8rYB//K2Af/ytgH/8rYB//G1Af/xtQH/8bUB//G0Af/xtAH/8bQB//GzAf/xswH/
8bMB//GzAf/xswH/8bIB//GxAf/xsQH/8bEB//GwAf/wsAH/8K8B//CvAf/wrwH/8K4B//CvBP/v
qgD/88E7/+R0OP/aQwD/204D/9tMAP/bTAD/2ksA/9pLAP/aSgD/2koA/9pKAP/ZSQD/2UkA/9lI
AP/ZSAD/2UgA/9lHAP/YRwD/2EcA/9hHAP/YRgD/2EYA/9dFAP/XRQD/10UA/9dEAP/XRAD/1kMA
/9ZCAP/WQgD/1kIA/9ZCAP/WQQD/1UEA/9VAAP/VQAD/1T8A/9U/AP/UPgD/1D4A/9Q+AP/TPQD/
0z0A/9M8AP/TPAD/0zwA/9M8AP/SOwD/0jsA/9E6AP/ROgD/0TgA/9E4AP/ROAD/0DcA/9A3AP/Q
NwD/0DcA/9A3AP/QNgD/0DYA/881AP/PNQD/zjQA/840AP/OMwD/zjMA/80yAP/NMgD/zTIA/80y
AP/NMgD/zTIA/80xAP/MMQD/zDAA/8wwAP/MMAD/zDAC/8s1Ff/XaFj8883E2PbXzyf329MDAAAA
AP/77QP/+ukn//fc2PfXaPzzxxz/88UF//PFAv/zxQL/9cYB//XGAf/1xQH/9cQB//XEAf/1xAH/
9cQB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0
wAH/9L8B//S/Af/0vwH/9L8B//O/Af/zvwH/874B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O8
Af/zuwH/87sB//O7Af/zuwH/87oB//O6Af/yuQH/8rkB//K5Af/yuAH/8rgB//K3Af/ytgH/8rYB
//K2Af/ytgH/8rYB//K1Af/ytQH/8rUB//G0Af/xtAH/8bQB//G0Af/xswH/8bMB//GzAf/xsgH/
8bIB//GyAf/xsQH/8bEB//GwAf/xsAH/8a8B//CvAf/wrwH/8LAE/++qAP/zwTv/5HU4/9pEAP/c
TgP/20wA/9tMAP/bTAD/20sA/9tLAP/aSwD/2koA/9pKAP/aSQD/2UkA/9lIAP/ZSAD/2UgA/9lH
AP/ZRwD/2EYA/9hGAP/YRgD/2EYA/9hFAP/YRQD/10UA/9dEAP/XQwD/10MA/9dCAP/XQgD/1kIA
/9ZBAP/WQQD/1kEA/9VAAP/VQAD/1T8A/9U/AP/UPgD/1D4A/9Q9AP/UPQD/1D0A/9M8AP/TPAD/
0zwA/9I7AP/SOwD/0joA/9I6AP/ROQD/0TgA/9E4AP/ROAD/0TgA/9A3AP/QNwD/0DcA/9A3AP/Q
NgD/zzUA/881AP/PNAD/zzQA/840AP/OMwD/zjMA/84zAP/OMwD/zTMA/80yAP/NMgD/zTIA/80x
AP/NMQD/zDAA/8wwAP/MMQL/yzcX/9doWPzzzcTY9tbOJ/fa0gMAAAAA//vsA//66Cf/99zY99dn
/PPIHv/zxgX/88UC//PGAv/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB//TDAf/0wwH/
9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/0
vwH/878B//O/Af/zvgH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O8Af/zvAH/87sB//O7
Af/zugH/87oB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB//K3Af/ytwH/8rYB//K2Af/ytgH/8rYB
//K1Af/ytQH/8bUB//G0Af/xtAH/8bQB//GzAf/xswH/8bMB//GzAf/xsgH/8bIB//GxAf/xsQH/
8bEB//GwAf/xsAH/8LAB//CvAf/wsAT/76oA//PBO//kdTj/2kQA/9xPA//cTQD/20wA/9tMAP/b
TAD/20wA/9pLAP/aSwD/2koA/9pKAP/aSgD/2UkA/9lJAP/ZSAD/2UgA/9lHAP/ZRwD/2EcA/9hG
AP/YRgD/2EYA/9hGAP/XRQD/10QA/9dEAP/XRAD/10QA/9dDAP/WQwD/1kIA/9ZCAP/WQgD/1kEA
/9VBAP/VQAD/1T8A/9U/AP/UPgD/1D4A/9Q+AP/UPgD/1D0A/9M8AP/TPAD/0zwA/9I7AP/SOgD/
0joA/9I5AP/ROQD/0TkA/9E4AP/ROAD/0TgA/9A3AP/QNwD/0DcA/9A3AP/PNQD/zzUA/881AP/P
NAD/zzQA/840AP/OMwD/zjMA/84zAP/NMwD/zTMA/80zAP/NMgD/zTIA/80xAP/MMQD/zDAA/8wx
Av/LNxf/12lY/PPNxNj21s4n99rSAwAAAAD/++wD//roJ//33Nj312f888ge//PGBf/zxgL/9MYC
//XHAf/1xgH/9cYB//XFAf/1xQH/9cQB//XEAf/0xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wgH/
9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/zvwH/878B//O+Af/z
vgH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O8Af/zvAH/87sB//O6Af/zugH/8roB//K6
Af/yuQH/8rkB//K5Af/yuAH/8rcB//K3Af/ytgH/8rYB//K2Af/ytgH/8rYB//K1Af/xtQH/8bUB
//G0Af/xtAH/8bQB//GzAf/xswH/8bMB//GyAf/xsgH/8bEB//GxAf/xsQH/8bEB//GwAf/wsAH/
8LAB//CwBP/vqwD/88I7/+R1OP/aRAD/3E8D/9xNAP/bTAD/20wA/9tMAP/bTAD/2ksA/9pLAP/a
SgD/2koA/9pKAP/ZSQD/2UkA/9lIAP/ZSAD/2UcA/9lHAP/YRwD/2EYA/9hGAP/YRgD/2EYA/9dF
AP/XRAD/10QA/9dEAP/XRAD/10MA/9ZDAP/WQgD/1kIA/9ZBAP/WQQD/1UEA/9VAAP/VPwD/1T8A
/9Q+AP/UPgD/1D4A/9Q+AP/UPgD/1D0A/9M8AP/TPAD/0jsA/9I6AP/SOgD/0joA/9E5AP/ROQD/
0TgA/9E4AP/QNwD/0DcA/9A3AP/QNwD/0DcA/881AP/PNQD/zzUA/880AP/ONAD/zjQA/84zAP/O
MwD/zjMA/80zAP/NMwD/zTMA/80yAP/NMgD/zTEA/8wxAP/MMAD/zDEC/8s3F//XaVj8883E2PbW
zif32tIDAAAAAP/77AP/+ugn//fc2PfXZ/zzyR7/88cF//PGAv/0xgL/9ccB//XHAf/1xgH/9cUB
//XFAf/1xQH/9cUB//TEAf/0xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/
9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9MAB//O/Af/zvwH/878B//O+Af/zvgH/870B//O9Af/z
vQH/87wB//O8Af/zvAH/87wB//O8Af/zuwH/87sB//O6Af/yugH/8roB//K6Af/yuQH/8rkB//K4
Af/yuAH/8rcB//K3Af/ytwH/8rYB//K2Af/ytgH/8rYB//G1Af/xtQH/8bUB//G1Af/xtAH/8bQB
//G0Af/xswH/8bMB//GyAf/xsgH/8bEB//GxAf/xsQH/8bEB//CwAf/wsAH/8LEE/++rAP/zwTv/
5HU4/9tFAP/cTwP/3E0A/9tMAP/bTAD/20wA/9tMAP/bSwD/2ksA/9pLAP/aSgD/2koA/9lJAP/a
SQD/2kkA/9lIAP/ZSAD/2UcA/9hHAP/ZRgD/2EYA/9hGAP/YRgD/2EYA/9hFAP/XRAD/10QA/9dE
AP/XQwD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/WQQD/1kAA/9U/AP/VPwD/1T8A/9Q+AP/UPgD/1D4A
/9Q+AP/UPQD/0zwA/9M8AP/TOwD/0joA/9I6AP/SOgD/0TkA/9I5AP/ROQD/0TgA/9E4AP/QNwD/
0DcA/9A3AP/QNwD/0DYA/881AP/PNQD/zzQA/880AP/PNAD/zjQA/84zAP/ONAD/zjQA/84zAP/O
MwD/zTIA/80yAP/NMQD/zDEA/8wxAP/NMQL/zDcX/9dpWPz0zcTY99bOJ/ja0gMAAAAA//vsA//6
6Cf/99zY+Nhn/PTJHv/0xwX/9cgB//XIAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB
//XEAf/1xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/
9MEB//TAAf/0wAH/9L8B//S/Af/0vwH/9L4B//O+Af/zvQH/870B//O9Af/zvQH/870B//O9Af/z
vQH/87wB//O8Af/zvAH/87sB//O7Af/zuwH/87oB//K5Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3
Af/ytwH/8rcB//K2Af/ytgH/8bYB//G1Af/xtQH/8bUB//G1Af/xtAH/8bQB//G0Af/xswH/8bMB
//GyAf/xsgH/8bIB//GxAf/xsQH/8bEB//GwAf/xsQT/76wA//PCO//ldTj/20UA/91PA//cTQD/
3E0A/9xNAP/bTAD/20wA/9tMAP/bSwD/2ksA/9pLAP/aSgD/2koA/9pJAP/aSQD/2UkA/9lIAP/Z
RwD/2UcA/9lHAP/YRgD/2EYA/9hGAP/YRgD/2EYA/9dFAP/XRAD/10QA/9dDAP/XQwD/10MA/9ZC
AP/WQgD/1kIA/9ZBAP/WQQD/1UAA/9VAAP/VPwD/1T8A/9U/AP/UPgD/1D4A/9Q+AP/UPQD/0zwA
/9M7AP/SOgD/0joA/9I6AP/SOQD/0jkA/9E5AP/ROQD/0TgA/9E3AP/QNwD/0DcA/9A3AP/QNgD/
0DYA/881AP/PNQD/zzQA/880AP/ONAD/zjQA/840AP/ONAD/zjQA/84zAP/OMwD/zTIA/80yAP/N
MQD/zTEA/80yAv/MNxf/2GlY/PTNxNj31s4n+NrSAwAAAAD//OwD//voJ//43Nj42Gf89Moe//XI
Bf/2yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/0xAH/9MQB
//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//S/Af/0vwH/
9L8B//S/Af/0vgH/9L4B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8Af/z
vAH/87sB//O7Af/zuwH/8roB//K6Af/yuQH/8rgB//K4Af/yuAH/8rgB//K3Af/ytwH/8rcB//K2
Af/xtgH/8bYB//G1Af/xtQH/8bUB//G1Af/xtAH/8bQB//G0Af/xswH/8bIB//GyAf/xsgH/8bIB
//GxAf/xsQH/8bEB//GxBP/vrAD/88I7/+R2OP/bRQD/3VAD/9xOAP/cTgD/3E4A/9tNAP/bTAD/
20wA/9tLAP/aSwD/2ksA/9pLAP/aSgD/2koA/9pJAP/ZSQD/2UgA/9lIAP/ZSAD/2UcA/9hHAP/Y
RgD/2EYA/9hGAP/YRgD/10UA/9dFAP/XRQD/10QA/9dEAP/XQwD/1kMA/9ZCAP/WQgD/1kEA/9ZB
AP/VQQD/1UAA/9U/AP/VPwD/1T8A/9Q+AP/UPgD/1D0A/9Q9AP/TPQD/0zwA/9I7AP/SOgD/0joA
/9I6AP/SOQD/0TkA/9E5AP/ROQD/0TgA/9E3AP/QNwD/0DcA/9A2AP/QNgD/zzYA/881AP/PNQD/
zzQA/880AP/ONAD/zjQA/840AP/ONAD/zjQA/84zAP/NMwD/zTIA/80yAP/NMQD/zTIC/8w4F//Y
aVj89M3E2PfWzif42tIDAAAAAP/87AP/++gn//jc2PnYZ/z2yh7/9soF//bJAf/1yAH/9cgB//XH
Af/1xwH/9cYB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//TEAf/0xAH/9MQB//TEAf/0wwH/9MMB
//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/9L8B//S+Af/0vgH/
874B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87sB//O7Af/z
uwH/8roB//K5Af/yuAH/8rgB//K4Af/yuAH/8rgB//K4Af/ytwH/8rcB//G2Af/xtgH/8bYB//G2
Af/xtQH/8bUB//G1Af/xtAH/8bQB//G0Af/xswH/8bIB//GyAf/xsgH/8bIB//GxAf/xsQH/8bIE
/++sAP/zwjv/5HY4/9tGAP/dUQP/3U8A/91PAP/cTgD/3E4A/9xNAP/bTAD/20sA/9tLAP/bSwD/
2ksA/9pLAP/aSgD/2koA/9pJAP/aSQD/2UgA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/Y
RQD/2EUA/9hFAP/YRQD/10QA/9dEAP/XQwD/10MA/9ZCAP/WQgD/1kIA/9ZBAP/WQQD/1UAA/9U/
AP/VPwD/1D8A/9Q+AP/UPgD/1D0A/9M9AP/TPAD/0zwA/9M7AP/SOgD/0joA/9I6AP/SOQD/0jkA
/9E5AP/ROAD/0TgA/9E4AP/QNwD/0DcA/9A3AP/QNgD/0DYA/881AP/PNQD/zzUA/881AP/PNQD/
zjQA/840AP/ONAD/zjQA/84zAP/OMwD/zTIA/80yAP/NMgH/zDkY/9hpV/z0zcTY99XNJ/jZ0QMA
AAAA//zrA//75yf/+NzY+dln/PbLIP/2yQT/9skB//XIAf/1yAH/9cgB//XHAf/1xgH/9cYB//XG
Af/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/9MMB//TDAf/0wwH/9MIB
//TCAf/0wgH/9MIB//TBAf/0wQH/9MAB//S/Af/0vwH/9L8B//S/Af/zvgH/874B//O+Af/zvgH/
874B//O+Af/zvQH/870B//O9Af/zvQH/870B//O8Af/zvAH/87sB//O6Af/zugH/87kB//K5Af/y
uQH/8rkB//K5Af/yuQH/8rgB//K3Af/ytwH/8rYB//K2Af/ytgH/8rYB//G2Af/xtgH/8bUB//G1
Af/xtAH/8bQB//GzAf/xsgH/8bIB//GyAf/xsgH/8bIB//GxAf/xsgT/760A//PDO//kdjj/20YA
/91RA//dTwD/3U8A/91PAP/cTgD/3E4A/9xNAP/bTAD/20wA/9tLAP/bSwD/2ksA/9pKAP/aSgD/
2koA/9pJAP/aSQD/2UkA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRQD/2EUA/9hFAP/Y
RQD/10QA/9dEAP/XQwD/10MA/9ZDAP/WQgD/1kIA/9ZBAP/WQAD/1UAA/9U/AP/UPwD/1D8A/9Q/
AP/UPgD/1D0A/9M9AP/TPQD/0zwA/9M7AP/SOgD/0joA/9I6AP/SOgD/0joA/9E5AP/ROQD/0TgA
/9E4AP/QNwD/0DcA/9A3AP/QNgD/0DYA/881AP/PNQD/zzUA/881AP/ONQD/zjQA/840AP/ONAD/
zjQA/84zAP/NMwD/zTMA/80zAv/MNxX/2GpY/PTNxNj3188n+NvTAwAAAAD//O0D//vpJ//43Nj5
2Wj89soc//bJBP/2yQH/9cgB//XIAf/1yAH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cYB//XG
Af/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MEB
//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//O/Af/zvgH/874B//O+Af/zvgH/870B//O9Af/zvQH/
870B//O9Af/zvQH/87wB//O8Af/zuwH/87sB//O7Af/zugH/8rkB//K5Af/yuQH/8rkB//K5Af/y
uAH/8rgB//K3Af/ytgH/8rcB//K3Af/ytwH/8bYB//G2Af/xtgH/8bUB//G1Af/xtAH/8bMB//Gz
Af/xsgH/8bIB//GyAf/xsgH/8bIB//GyBP/vrQD/88M7/+R3OP/bRwD/3VED/91PAP/dTwD/3U8A
/9xPAP/cTgD/3E4A/9xNAP/bTAD/20wA/9tLAP/aSwD/2ksA/9pKAP/aSgD/2koA/9pJAP/ZSQD/
2UgA/9lIAP/ZSAD/2UcA/9lHAP/ZRgD/2EYA/9hGAP/YRQD/2EUA/9hFAP/YRQD/10QA/9dEAP/X
RAD/1kMA/9ZDAP/WQgD/1kEA/9VBAP/VQAD/1UAA/9Q/AP/UPwD/1D4A/9Q+AP/UPQD/1D4A/9M9
AP/TPAD/0zwA/9I7AP/SOgD/0joA/9I6AP/SOgD/0TkA/9E5AP/ROAD/0TgA/9A4AP/QNwD/0DcA
/9A2AP/PNgD/zzYA/881AP/PNQD/zzUA/841AP/ONQD/zjQA/840AP/ONAD/zjQA/80zAP/NMwD/
zTMC/8w4F//YaVj89M3E2PfWzif42tIDAAAAAP/87AP/++gn//jc2PnZZ/z2yx7/9skE//bJAf/1
yAH/9cgB//XIAf/1xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XF
Af/1xAH/9MQB//TEAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB
//S/Af/0vwH/878B//O+Af/zvgH/874B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvAH/
87wB//O7Af/zuwH/87sB//O6Af/zuQH/8rkB//K5Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3Af/y
twH/8rcB//K3Af/xtgH/8bYB//G2Af/xtQH/8bUB//G1Af/xtAH/8bMB//GzAf/xsgH/8bIB//Gy
Af/xsgH/8bME//CtAP/0wzv/5Xc4/9xHAP/eUgP/3VAA/91QAP/dTwD/3U8A/91PAP/cTgD/3E0A
/9xMAP/bTAD/20wA/9pLAP/bSwD/20sA/9pKAP/aSgD/2koA/9pJAP/aSQD/2kgA/9pIAP/aSAD/
2UcA/9lHAP/ZRgD/2UYA/9lGAP/YRQD/2EUA/9hFAP/XRAD/10QA/9dEAP/XRAD/1kMA/9ZDAP/W
QgD/1UEA/9VAAP/VQAD/1T8A/9U/AP/VPwD/1T4A/9Q+AP/UPgD/1D0A/9M9AP/TPAD/0jwA/9M7
AP/SOwD/0jsA/9I7AP/ROwD/0ToA/9E5AP/ROAD/0TgA/9E4AP/QNwD/0DcA/9A2AP/QNgD/zzYA
/882AP/PNgD/zzYA/881AP/PNQD/zjQA/840AP/ONAD/zjMA/84zAP/ONAL/zTgX/9lpWPz0zcTY
99bOJ/ja0gMAAAAA//zsA//76Cf/+NzY+dln/PbLHv/2ygX/9skB//XJAf/1yAH/9cgB//XHAf/1
xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//XE
Af/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TAAf/0wAH/9MAB//TAAf/0vwH/9L8B
//S/Af/zvwH/874B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/
87sB//O6Af/zugH/87oB//K5Af/yuQH/8rkB//K4Af/yuAH/8rcB//K3Af/ytwH/8rcB//K3Af/y
tgH/8rYB//G2Af/xtQH/8bUB//G0Af/xswH/8bMB//GzAf/xswH/8bIB//GyAf/xswT/8K4A//TE
O//ldzj/3EcA/95SA//dUAD/3VAA/91PAP/dTwD/3U4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/20wA
/9tLAP/bSwD/2ksA/9pKAP/aSgD/2koA/9pJAP/aSQD/2kkA/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/
2UYA/9lGAP/YRQD/2EUA/9hFAP/XRAD/10QA/9dEAP/WQwD/1kMA/9ZCAP/VQQD/1UEA/9VAAP/V
QAD/1T8A/9U/AP/VPwD/1D4A/9Q+AP/UPgD/1D0A/9M9AP/TPAD/0zwA/9I7AP/SOwD/0jsA/9E7
AP/ROgD/0ToA/9E5AP/ROQD/0TgA/9A4AP/QNwD/0DcA/9A2AP/PNgD/zzYA/882AP/PNgD/zzYA
/881AP/PNQD/zjQA/840AP/OMwD/zjMA/840Av/NORf/2WpY/PTOxNj31s4n+NrSAwAAAAD//OwD
//voJ//43Nj52Wf89sse//bKBf/2yQH/9ckB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1
xgH/9cYB//XGAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TD
Af/0wgH/9MIB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/9L8B//O/Af/zvwH/874B
//O+Af/zvgH/870B//O9Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/87oB//O6Af/zugH/
8rkB//K5Af/yuQH/8rgB//K4Af/yuAH/8rcB//K3Af/ytwH/8rcB//K3Af/ytgH/8bYB//G1Af/x
tQH/8bQB//G0Af/xswH/8bMB//GzAf/xswH/8bIB//GzBP/wrgD/9MQ7/+V3OP/cRwD/3lID/91Q
AP/dUAD/3VAA/91PAP/dTwD/3E4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/20wA/9tLAP/aSwD/2ksA
/9pKAP/aSgD/2koA/9pJAP/aSQD/2kkA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2UYA/9hGAP/YRQD/
2EUA/9hFAP/XRAD/10QA/9dEAP/WQwD/1kIA/9ZCAP/VQQD/1UEA/9VAAP/VQAD/1T8A/9U/AP/U
PwD/1D4A/9Q+AP/UPgD/1D0A/9M9AP/TPAD/0jsA/9I7AP/SOwD/0TsA/9E7AP/ROgD/0ToA/9E5
AP/ROQD/0DgA/9A4AP/QNwD/0DcA/9A3AP/PNgD/zzYA/882AP/PNgD/zzYA/881AP/ONQD/zjQA
/840AP/OMwD/zjQC/805F//Zalj89M7E2PfXzif429IDAAAAAP/87AP/++gn//jc2PnZZ/z2yx7/
9ssF//bKAf/1yQH/9ckB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1
xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TDAf/0wgH/9MEB//TB
Af/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/878B//O/Af/zvwH/878B//O+Af/zvgH/870B
//O9Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/87oB//O6Af/zugH/8rkB//K5Af/yuQH/
8rgB//K4Af/yuAH/8rcB//K3Af/ytwH/8rcB//K3Af/xtgH/8bYB//G1Af/xtQH/8bQB//G0Af/x
tAH/8bMB//GzAf/xswH/8bME//CuAP/0xDv/5Xg4/9xIAP/eUwP/3lEA/95RAP/eUQD/3VAA/91P
AP/dTwD/3U4A/9xOAP/cTgD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSwD/20sA/9pKAP/aSgD/2kkA
/9pJAP/aSQD/2kkA/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/2UYA/9lGAP/YRQD/2EUA/9hFAP/XRAD/
10QA/9ZDAP/WQwD/1kIA/9ZCAP/WQQD/1UEA/9VAAP/VQAD/1UAA/9U/AP/VPwD/1D4A/9Q+AP/U
PgD/1D0A/9M9AP/TPAD/0jwA/9I8AP/SOwD/0jsA/9I7AP/SOwD/0TkA/9E5AP/ROAD/0TgA/9A3
AP/QNwD/0DcA/9A3AP/QNwD/zzYA/882AP/PNgD/zzYA/881AP/PNQD/zjQA/840AP/ONQL/zTkX
/9lrWPz0zsTY99fOJ/jb0gMAAAAA//zsA//76Cf/+NzY+dln/PbMHv/2ygX/9soB//bJAf/2yQH/
9skB//bIAf/1yAH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1
xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0xAH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TB
Af/0wAH/9MAB//TAAf/0vwH/9L8B//S/Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B
//O9Af/zvAH/87wB//O7Af/zugH/87oB//O6Af/zugH/87oB//O5Af/zuQH/8rgB//K4Af/yuAH/
8rgB//K3Af/ytwH/8rcB//K2Af/ytgH/8rYB//K1Af/xtQH/8bQB//G0Af/xtAH/8bMB//GzAf/x
tAT/8K4A//TEO//leDj/3EgA/95TA//eUQD/3lEA/91RAP/dUAD/3U8A/91PAP/dTgD/3E4A/9xO
AP/cTgD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSwD/2koA/9pKAP/aSgD/2kkA/9pJAP/aSQD/2kkA
/9lIAP/ZSAD/2UgA/9lHAP/ZRwD/2UYA/9hGAP/YRQD/2EUA/9dEAP/XRAD/1kMA/9ZDAP/WQgD/
1kIA/9ZCAP/VQQD/1UEA/9VAAP/VQAD/1UAA/9U/AP/UPwD/1D4A/9Q+AP/UPgD/0z0A/9M8AP/T
PAD/0zwA/9I7AP/SOwD/0jsA/9I7AP/ROQD/0TkA/9E5AP/ROAD/0DgA/9A3AP/QNwD/0DcA/9A3
AP/PNgD/zzYA/882AP/PNgD/zzUA/881AP/ONAD/zjQA/841Av/NOhf/2WtY/PTOxNj3184n+NvS
AwAAAAD//OwD//voJ//43Nj52mf89swe//bLBf/2ygH/9skB//bJAf/2yQH/9sgB//XIAf/1yAH/
9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1
xQH/9cQB//TEAf/0xAH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB//TA
Af/0vwH/878B//O/Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O9Af/zvAH/87sB
//O7Af/zuwH/87sB//O7Af/zugH/87oB//O6Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3Af/ytwH/
8rcB//K2Af/ytgH/8rUB//G1Af/xtQH/8bQB//G0Af/xtAH/8bMB//G0BP/wrwD/9MQ7/+Z5OP/d
SQD/31QD/95RAP/eUQD/3lAA/95QAP/eTwD/3U8A/91PAP/dTgD/3U4A/91OAP/cTgD/3E0A/9xN
AP/bTAD/20wA/9tLAP/bSwD/20sA/9pKAP/aSgD/2koA/9pJAP/aSQD/2UgA/9lIAP/ZSAD/2UgA
/9lHAP/ZRwD/2EYA/9hGAP/YRQD/10QA/9dEAP/XQwD/10MA/9ZDAP/WQgD/1kIA/9ZCAP/WQgD/
1kEA/9ZBAP/VQAD/1UAA/9U/AP/VPwD/1T4A/9Q+AP/UPQD/0zwA/9M8AP/TPAD/0zwA/9I7AP/S
OwD/0jsA/9I6AP/SOgD/0TkA/9E5AP/ROAD/0TgA/9A3AP/QNwD/0DcA/9A3AP/QNgD/0DYA/9A2
AP/PNQD/zzUA/880AP/PNAD/zzUC/847GP/aa1f89M7E2PfWzSf42tEDAAAAAP/86wP/++cn//jc
2PnaZ/z2zCD/9ssF//bKAf/2yQH/9skB//bJAf/2yQH/9cgB//XIAf/1yAH/9cgB//XIAf/1yAH/
9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9MQB//TEAf/0
xAH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/878B//O/
Af/zvwH/878B//O/Af/zvgH/874B//O+Af/zvQH/870B//O8Af/zvAH/87sB//O7Af/zuwH/87sB
//O7Af/zugH/87oB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB//K4Af/ytwH/8rcB//K2Af/ytgH/
8rYB//G1Af/xtQH/8bQB//G0Af/xtAH/8bUE//CvAP/0xDv/5nk4/91JAP/fVAP/3lEA/95RAP/e
UQD/3lAA/95QAP/dUAD/3U8A/91PAP/dTgD/3U4A/9xOAP/cTgD/3E0A/9xNAP/bTAD/20wA/9tL
AP/bSwD/2koA/9pKAP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZSAD/2UcA/9lHAP/YRgD/2EUA
/9hFAP/XRAD/10QA/9dEAP/XQwD/1kMA/9ZDAP/WQgD/1kIA/9ZCAP/WQgD/1kEA/9VBAP/VQAD/
1UAA/9U/AP/VPgD/1D4A/9Q+AP/TPQD/0z0A/9M8AP/TPAD/0zsA/9I7AP/SOwD/0joA/9I6AP/R
OQD/0TkA/9E5AP/ROAD/0DgA/9A4AP/QNwD/0DcA/9A2AP/QNgD/0DYA/882AP/PNQD/zzUA/880
AP/PNQP/zjwZ/9pvXfvzy8HT99bNLPjb0gQAAAAA//zsBP/75yz/99nT+dtt+/bNIf/2ywX/9soB
//bKAf/2yQH/9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/
9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cUB//XEAf/0wwH/9MMB//TCAf/0
wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/0vwH/9L8B//O/
Af/zvgH/874B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O8Af/zuwH/87sB//O7Af/zuwH/8roB
//K6Af/yuQH/8rkB//K4Af/yuAH/8rgB//K4Af/ytwH/8rcB//K2Af/ytgH/8rYB//K1Af/ytQH/
8bUB//G0Af/xtQT/8LAA//TFO//meTj/3UoA/99UA//eUgD/3lEA/95RAP/eUQD/3lAA/91QAP/d
TwD/3U8A/91PAP/dTgD/3E4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/20wA/9tLAP/aSgD/2koA/9pK
AP/aSQD/2kkA/9lIAP/ZSAD/2UgA/9lIAP/ZRwD/2UcA/9hGAP/YRgD/2EUA/9dFAP/XRAD/10QA
/9dEAP/WQwD/1kMA/9ZCAP/WQgD/1kIA/9ZCAP/WQQD/1UEA/9VAAP/VQAD/1UAA/9U/AP/UPgD/
1D4A/9M9AP/TPQD/0z0A/9M8AP/TPAD/0jsA/9I7AP/SOwD/0joA/9E6AP/ROgD/0TkA/9E5AP/Q
OAD/0DgA/9A3AP/QNwD/0DcA/9A2AP/QNgD/zzYA/882AP/PNQD/zzUA/881A//OPRz/2m9d+/PL
wdP21cws+NrRBAAAAAD//OsE//rmLP/32dP53Gz79s0j//bMBf/2ywH/9soB//bJAf/2yQH/9skB
//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xgH/
9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XDAf/0wwH/9MIB//TCAf/0wgH/9MIB//TCAf/0
wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0wAH/9L8B//S/Af/0vwH/878B//O/Af/zvgH/874B//O9
Af/zvQH/87wB//O8Af/zvAH/87wB//O8Af/zuwH/87sB//O7Af/yugH/8roB//K6Af/yuQH/8rkB
//K4Af/yuAH/8rgB//K4Af/ytwH/8rYB//K2Af/ytgH/8rYB//K1Af/xtQH/8bUB//G1BP/wsAD/
9MU7/+Z5OP/dSgD/31UD/95SAP/eUgD/3lIA/95RAP/eUQD/3VAA/91QAP/dTwD/3U8A/91PAP/c
TgD/3E4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/20sA/9tLAP/aSgD/2koA/9pJAP/aSQD/2kgA/9lI
AP/ZSAD/2UgA/9lHAP/ZRwD/2UcA/9hGAP/YRgD/10UA/9dFAP/XRQD/10QA/9dEAP/WQwD/1kMA
/9ZCAP/WQgD/1kIA/9ZCAP/VQQD/1UEA/9VAAP/VQAD/1T8A/9Q/AP/UPgD/0z0A/9M9AP/TPQD/
0z0A/9M8AP/TPAD/0jwA/9I7AP/SOwD/0ToA/9E6AP/ROQD/0TkA/9E5AP/QOAD/0DgA/9A3AP/Q
NwD/0DcA/9A2AP/PNgD/zzYA/881AP/PNQD/zzYC/846F//aa1j89M7E2PbVzCz42tEEAAAAAP/8
6wT/+uYs//jc2PncZ/z2zR7/9swF//bLAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9skB
//XIAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/
9cUB//XFAf/1xQH/9cQB//TDAf/0wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0
wQH/9MAB//TAAf/0wAH/9L8B//S/Af/zvwH/878B//O/Af/zvwH/874B//O9Af/zvAH/87wB//O8
Af/zvAH/87wB//O8Af/zuwH/87sB//K7Af/yuwH/8roB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB
//K3Af/ytwH/8rYB//K2Af/ytgH/8rYB//G1Af/xtQH/8bYE//CwAP/0xTv/5nk4/91KAP/fVQP/
31MA/99SAP/fUgD/3lIA/95RAP/eUQD/3lAA/91QAP/dUAD/3U8A/91OAP/dTgD/3U4A/9xOAP/c
TQD/3E0A/9tMAP/bTAD/20sA/9tLAP/bSgD/2koA/9pJAP/aSQD/2kgA/9pIAP/aSAD/2UcA/9lH
AP/ZRwD/2UcA/9hGAP/YRgD/2EUA/9dFAP/XRQD/10QA/9dEAP/XQwD/1kMA/9ZCAP/WQgD/1kIA
/9ZCAP/WQQD/1UAA/9VAAP/VQAD/1T8A/9Q/AP/UPgD/1D4A/9Q+AP/TPgD/0z0A/9M8AP/TOwD/
0jsA/9I7AP/SOwD/0joA/9E6AP/ROQD/0TkA/9E5AP/ROAD/0DgA/9A3AP/QNwD/0DcA/9A2AP/Q
NgD/zzUA/881AP/PNgL/zjoX/9prWPz0zsTY99fOJ/jb0gMAAAAA//zsA//76Cf/+NzY+txn/PbO
Hv/2zAX/9swB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bJAf/2yQH/9cgB
//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cYB//XFAf/1xAH/
9cQB//XDAf/1wwH/9cMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0
wAH/9MAB//S/Af/0vwH/9L8B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8
Af/zvAH/87sB//O7Af/zugH/8rkB//K5Af/yuQH/8rkB//K5Af/yuAH/8rgB//K3Af/ytwH/8rYB
//K2Af/ytgH/8rYB//K2Af/ytgT/8LEA//TGO//mejj/3UsA/99VA//fUwD/31IA/95SAP/eUgD/
3lIA/95RAP/eUQD/3VAA/91QAP/dTwD/3U8A/91OAP/dTgD/3E4A/9xNAP/cTQD/200A/9tMAP/b
SwD/20sA/9tKAP/aSgD/2koA/9pJAP/aSQD/2kgA/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/2UcA/9hG
AP/YRgD/10UA/9dFAP/XRAD/10QA/9dEAP/WQwD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/VQQD/1UAA
/9VAAP/VQAD/1T8A/9Q/AP/UPgD/1D4A/9M+AP/TPgD/0z0A/9M8AP/SOwD/0jsA/9I7AP/SOwD/
0ToA/9E6AP/ROQD/0TkA/9E5AP/QOAD/0DgA/9A4AP/QNwD/0DcA/9A2AP/PNgD/zzUA/882Av/O
Oxf/2mtY/PTOxNj3184n+NvSAwAAAAD//OwD//voJ//43Nj63Gf89s4e//bMBf/2zAH/9ssB//bL
Af/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB
//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cUB//XFAf/1xAH/9cQB//XDAf/1wwH/
9cMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/0
vwH/878B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87sB//O7
Af/zugH/8roB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB//K4Af/ytwH/8rYB//K2Af/ytgH/8rYB
//K2BP/wsQD/9MY7/+d6OP/eSwD/4FUD/99TAP/fUwD/31IA/99SAP/fUgD/3lIA/95RAP/eUQD/
3lEA/95QAP/dTwD/3U8A/91PAP/cTgD/3E4A/9xOAP/bTQD/200A/9tMAP/bSwD/20sA/9tLAP/b
SgD/2koA/9pJAP/aSQD/2kgA/9pIAP/aSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9dF
AP/XRQD/10QA/9dEAP/XQwD/10MA/9dCAP/WQgD/1kIA/9ZBAP/WQQD/1kAA/9VAAP/VQAD/1D8A
/9Q/AP/UPwD/1D8A/9Q+AP/UPgD/0z0A/9M8AP/TPAD/0jsA/9I7AP/SOwD/0jsA/9E6AP/ROgD/
0TkA/9E5AP/ROAD/0TgA/9E4AP/QNwD/0DYA/9A2AP/QNgD/0DcC/887F//bbFj89M/E2PfXzif4
29IDAAAAAP/87AP/++gn//jc2PrdZ/z2zh7/9swF//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bK
Af/2ygH/9soB//bJAf/2yQH/9skB//XIAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB
//XHAf/1xwH/9cYB//XGAf/1xQH/9cUB//XEAf/1xAH/9cQB//XDAf/1wwH/9MMB//TDAf/0wwH/
9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9MAB//S/Af/zvwH/878B//O+Af/z
vQH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87sB//O7Af/yugH/8roB//K6
Af/yuQH/8rkB//K5Af/yuAH/8rgB//K3Af/ytwH/8rcB//K2Af/ytgH/8rcE//CxAP/0xjv/53o4
/95LAP/gVgP/31MA/99TAP/fUwD/31IA/99SAP/eUgD/3lIA/95RAP/eUAD/3lAA/91QAP/dTwD/
3U8A/9xOAP/cTgD/3E4A/9tNAP/bTQD/200A/9tMAP/bTAD/20sA/9tLAP/aSgD/2koA/9pKAP/a
SQD/2kkA/9pIAP/ZSAD/2UcA/9lHAP/YRgD/2EYA/9hGAP/YRgD/2EUA/9dFAP/XRAD/10QA/9dE
AP/XQwD/10MA/9ZDAP/WQgD/1kIA/9ZBAP/WQQD/1UAA/9VAAP/UQAD/1D8A/9Q/AP/UPwD/1D8A
/9Q+AP/UPgD/0z0A/9M8AP/SPAD/0jsA/9I7AP/SOgD/0ToA/9E6AP/ROgD/0TkA/9E5AP/ROAD/
0TgA/9A4AP/QNgD/0DYA/9A2AP/QNwL/zzsX/9tsWPz1z8TY+NjOJ/nb0gMAAAAA//zsA//76Cf/
+NzY+t1n/PbOHv/2zAX/9swB//bLAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bK
Af/2yQH/9skB//bJAf/2yQH/9skB//bIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xgH/9cYB
//XFAf/1xQH/9cUB//XEAf/1xAH/9cQB//XDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/
9MEB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/9L4B//O+Af/zvgH/874B//O+Af/z
vgH/870B//O9Af/zvQH/87wB//O8Af/zuwH/87sB//O7Af/zugH/87oB//K6Af/yuQH/8rkB//K5
Af/yuAH/8rgB//K3Af/ytwH/8rYB//K2Af/ytwT/8LIA//THO//nezj/3kwA/+BWA//gVAD/4FMA
/99TAP/fUwD/31IA/99SAP/fUgD/3lEA/95RAP/eUAD/3VEA/91QAP/dTwD/3U8A/91PAP/cTgD/
3E4A/9xOAP/bTQD/200A/9tMAP/bSwD/20sA/9tLAP/aSgD/20oA/9pJAP/aSQD/2kkA/9pIAP/a
SAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9dFAP/YRQD/10QA/9dEAP/XQwD/10MA/9dD
AP/WQgD/1kIA/9ZBAP/VQQD/1UEA/9VAAP/VQAD/1EAA/9Q/AP/UPwD/1D8A/9Q+AP/TPQD/1D0A
/9M8AP/TPAD/0jsA/9I7AP/SOgD/0ToA/9I6AP/ROgD/0TkA/9E5AP/ROQD/0TgA/9E3AP/QNwD/
0DYA/9A3Av/PPBf/22xY/PXPxNj42M4n+dvSAwAAAAD//OwD//voJ//43Nj63Wf89s4e//bMBf/2
zAH/9ssB//bLAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bJ
Af/2yQH/9skB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB
//XEAf/1xAH/9cQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MIB//TBAf/0wQH/
9MAB//TAAf/0wAH/9MAB//S/Af/0vwH/874B//O+Af/zvgH/874B//O+Af/zvQH/870B//O9Af/z
vAH/87wB//O7Af/zuwH/87sB//O7Af/zugH/8roB//K6Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3
Af/ytwH/8rYB//K3BP/wsgD/9Mc7/+d7OP/eTAD/4FcD/+BUAP/gVAD/4FQA/99TAP/fUwD/31IA
/99SAP/eUQD/3lEA/95RAP/dUQD/3VAA/91PAP/dTwD/3U8A/91PAP/cTgD/3E4A/9xOAP/bTQD/
200A/9tMAP/bSwD/20sA/9tLAP/bSgD/20oA/9pKAP/aSQD/2kgA/9pIAP/aSAD/2UcA/9lHAP/Z
RwD/2EYA/9hGAP/YRgD/2EUA/9hFAP/YRQD/10QA/9dEAP/XQwD/10MA/9ZDAP/WQgD/1kIA/9VB
AP/VQQD/1UEA/9VAAP/VQAD/1EAA/9Q/AP/UPwD/1D8A/9Q+AP/UPQD/0z0A/9M8AP/TPAD/0jsA
/9I7AP/SOgD/0joA/9E6AP/ROgD/0TkA/9E5AP/ROAD/0TcA/9A3AP/QNwD/0DgC/888F//bbFj8
9c/E2PjYzif529IDAAAAAP/87AP/++gn//jc2PrdZ/z2zh7/9swF//bMAf/2ywH/9ssB//bLAf/2
ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bJAf/2yQH/9cgB//XI
Af/1yAH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB
//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MEB//TAAf/0wAH/
9MAB//S/Af/zvgH/874B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zvAH/87sB//O7Af/z
uwH/87sB//O7Af/yugH/8roB//K6Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3Af/ytgH/8rcE//Cy
AP/0xzv/53s4/95NAP/gVwP/4FUA/+BVAP/gVAD/31QA/99TAP/fUwD/31MA/95SAP/eUgD/3lEA
/91RAP/dUQD/3VAA/91QAP/dUAD/3U8A/9xPAP/cTwD/3E4A/9xOAP/bTQD/200A/9tMAP/bSwD/
20sA/9tLAP/bSwD/2koA/9pKAP/aSQD/2kkA/9pJAP/ZSAD/2UgA/9lHAP/ZRwD/2EYA/9hGAP/Y
RgD/2EUA/9hFAP/YRQD/10QA/9dEAP/XRAD/1kMA/9ZDAP/WQgD/1UIA/9VCAP/VQQD/1UEA/9RA
AP/UQAD/1EAA/9RAAP/UPwD/1D8A/9Q/AP/TPgD/0z0A/9M8AP/TPAD/0jsA/9I7AP/SOwD/0ToA
/9E6AP/ROgD/0TkA/9E5AP/ROAD/0DcA/9A3AP/QOAH/zzsS/9trV/z1z8TY+NfNJ/na0QMAAAAA
//zrA//75yf/+NzY+t1n/PbOGv/2zAT/9swB//bLAf/2ywH/9ssB//bLAf/2ywH/9ssB//bKAf/2
ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1xwH/9ccB//XH
Af/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/0xAH/9MMB//TDAf/0wwH/9MMB
//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//O+Af/zvgH/
874B//O+Af/zvgH/870B//O9Af/zvQH/87wB//O8Af/zuwH/87sB//O7Af/zuwH/87sB//K6Af/y
ugH/8roB//K5Af/yuQH/8rkB//K4Af/yuAH/8rcB//K2Af/ytwT/8LIA//THO//nezj/3k0A/+BY
A//gVQD/4FUA/+BUAP/fVAD/31QA/99TAP/fUwD/3lIA/95SAP/eUgD/3VEA/91RAP/dUAD/3VAA
/91QAP/dUAD/3E8A/9xPAP/cTgD/3E4A/9xOAP/bTQD/20wA/9tMAP/bSwD/20sA/9tLAP/aSwD/
2koA/9pKAP/aSQD/2kkA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRQD/2EUA/9hFAP/Y
RQD/10QA/9dEAP/WQwD/1kMA/9ZDAP/VQgD/1UIA/9VBAP/VQQD/1UEA/9RAAP/UQAD/1EAA/9RA
AP/UPwD/1D8A/9M+AP/TPQD/0z0A/9M8AP/SPAD/0jsA/9I7AP/SOwD/0ToA/9E6AP/ROQD/0TkA
/9E4AP/QOAD/0DcA/9A4Av/PPBX/221Y/PXPxNj42c8n+dzTAwAAAAD//O0D//vpJ//43Nj63Wj8
9s4c//bNBP/2zAH/9swB//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2
ygH/9soB//bJAf/2yQH/9skB//bIAf/2yAH/9sgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XG
Af/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/1xAH/9cQB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB
//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/9L4B//S/Af/0vwH/874B//O+Af/zvgH/
870B//O9Af/zvAH/87wB//O8Af/zvAH/87sB//O7Af/zuwH/87sB//O6Af/zugH/87oB//K5Af/y
uQH/8rgB//K4Af/ytwH/8rcB//K3BP/xsgD/9cc7/+h8OP/fTQD/4VgD/+BWAP/gVQD/4FUA/99U
AP/fVAD/31QA/99TAP/eUwD/3lMA/95SAP/eUQD/3lEA/95RAP/dUAD/3VAA/91QAP/dTwD/3U8A
/9xOAP/cTgD/3E4A/9xNAP/bTQD/20wA/9tMAP/bTAD/20wA/9tLAP/bSgD/2koA/9pKAP/aSQD/
2kkA/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/2UYA/9hGAP/YRQD/2EUA/9hFAP/XRQD/10QA/9ZEAP/W
RAD/1kMA/9ZDAP/WQgD/1UEA/9VBAP/VQQD/1UEA/9VAAP/VQAD/1UAA/9Q/AP/UPwD/1D4A/9Q9
AP/TPQD/0zwA/9I8AP/SPAD/0jsA/9I7AP/SOgD/0joA/9I6AP/ROQD/0TgA/9E4AP/ROAD/0TkC
/9A9F//bbVj89M/E2PfYzif43NIDAAAAAP/87AP/++gn//jc2PrcZ/z2zx7/9s0E//bNAf/2zAH/
9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2
yQH/9sgB//bIAf/2yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cUB//XF
Af/1xQH/9cQB//XEAf/1xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB
//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//S/Af/zvgH/874B//O+Af/zvQH/870B//O9Af/zvAH/
87wB//O8Af/zuwH/87sB//O7Af/zuwH/87oB//O6Af/zugH/8rkB//K5Af/yuAH/8rgB//K3Af/y
twH/8rgE//GzAP/1xzv/6Hw4/+BOAP/hWAP/4FYA/+BWAP/gVQD/31UA/99VAP/fVAD/31MA/95T
AP/eUwD/3lMA/95SAP/eUQD/3lEA/91QAP/dUAD/3VAA/91QAP/dTwD/3U4A/9xOAP/cTgD/3E0A
/9xNAP/bTAD/20wA/9tMAP/bTAD/20sA/9tKAP/aSgD/2koA/9pKAP/aSQD/2kkA/9pJAP/ZSAD/
2UcA/9lHAP/ZRgD/2EYA/9hGAP/YRQD/2EUA/9hFAP/XRQD/1kQA/9ZEAP/WRAD/1kMA/9ZCAP/V
QQD/1UEA/9VBAP/VQQD/1UEA/9VAAP/VQAD/1D8A/9Q/AP/UPgD/1D4A/9Q9AP/TPAD/0jwA/9I8
AP/SPAD/0jsA/9I7AP/SOgD/0joA/9E6AP/ROQD/0TgA/9E4AP/ROQL/0D0X/9ttWPz00MTY99jO
J/jc0gMAAAAA//zsA//76Cf/+NzY+t1n/PXPHv/2zgX/9s0B//bMAf/2zAH/9swB//bMAf/2zAH/
9ssB//bLAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bIAf/1
yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XE
Af/0xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB
//S/Af/0vwH/9L8B//O/Af/zvgH/874B//O+Af/zvQH/870B//O9Af/zvAH/87wB//O8Af/zuwH/
87sB//O7Af/zuwH/87oB//O6Af/zuQH/8rkB//K4Af/yuAH/8rgB//K3Af/yuAT/8bMA//XIO//o
fDj/4E4A/+FYA//gVgD/4FYA/+BVAP/gVQD/4FUA/99VAP/fVAD/31QA/99TAP/eUwD/3lIA/95S
AP/eUQD/3lEA/95RAP/dUAD/3VAA/91QAP/dTwD/3U8A/91OAP/cTgD/3E0A/9xNAP/bTAD/20wA
/9tMAP/bSwD/20sA/9tKAP/bSgD/2koA/9pKAP/aSQD/2kkA/9pIAP/ZSAD/2UgA/9lHAP/ZRwD/
2UYA/9lGAP/ZRQD/2EUA/9dFAP/XRAD/10QA/9ZEAP/WQwD/1kIA/9ZCAP/WQgD/1UIA/9VBAP/V
QQD/1UEA/9VBAP/VPwD/1T8A/9Q+AP/UPgD/1D4A/9M9AP/TPQD/0zwA/9M8AP/TPAD/0jsA/9I7
AP/SOwD/0joA/9I5AP/ROQD/0TkA/9E5Av/QPhf/221Y/PTQxNj32c4n+NzSAwAAAAD//OwD//vo
J//43Nj63Wf89s8e//fOBf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/
9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bIAf/2yAH/9sgB//XHAf/1
xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/1xAH/9MMB//TD
Af/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0wAH/9MAB//S/Af/0vwH/878B
//O/Af/zvgH/874B//O+Af/zvQH/870B//O9Af/zvAH/87wB//O8Af/zvAH/87sB//O7Af/zuwH/
87oB//O6Af/zuQH/87kB//O4Af/yuAH/8rgB//K4BP/xswD/9cc7/+h9OP/gTgD/4VkD/+BWAP/g
VgD/4FYA/+BVAP/gVQD/31UA/99VAP/fVAD/31QA/99TAP/eUwD/3lMA/95SAP/eUgD/3lEA/95R
AP/dUAD/3VAA/91QAP/dTwD/3U8A/9xOAP/cTQD/3E0A/9xNAP/cTAD/20wA/9tMAP/bSwD/20sA
/9tKAP/bSgD/2koA/9pJAP/aSQD/2kkA/9lIAP/ZSAD/2UgA/9lHAP/ZRwD/2UYA/9lGAP/YRgD/
10UA/9dFAP/XRAD/10QA/9ZDAP/WQwD/1kIA/9ZCAP/WQgD/1UIA/9VBAP/VQQD/1UEA/9VAAP/V
PwD/1D4A/9Q+AP/UPgD/1D4A/9M9AP/TPQD/0z0A/9M8AP/TPAD/0zsA/9I7AP/SOgD/0jkA/9E5
AP/ROQD/0ToC/9A+F//bblj89NDE2PfZzif43NIDAAAAAP/87AP/++gn//jc2PrdZ/z3zx7/984F
//fOAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bLAf/2ygH/
9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bIAf/2yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1
xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/1xAH/9MMB//TDAf/0wwH/9MMB//TD
Af/0wwH/9MIB//TCAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/zvwH/878B//O/Af/zvgH/874B
//O+Af/zvQH/870B//O9Af/zvAH/87wB//O8Af/zvAH/87sB//O7Af/zugH/87oB//O5Af/zuQH/
87kB//K4Af/yuAH/8rkE//G0AP/1yDv/6H04/99PAP/hWQP/4VcA/+FXAP/gVwD/4FYA/+BWAP/g
VQD/4FUA/99VAP/fVAD/31QA/99UAP/fUwD/31MA/95SAP/eUgD/3lIA/95RAP/eUQD/3VAA/91P
AP/dTwD/3U8A/91OAP/cTgD/3E4A/9xOAP/cTgD/3E0A/9xMAP/bSwD/20sA/9tLAP/bSgD/20oA
/9pJAP/aSQD/2kkA/9pJAP/aSAD/2UgA/9lIAP/ZRwD/2UcA/9hGAP/YRgD/10UA/9dFAP/XRQD/
10QA/9dDAP/WQwD/1kMA/9ZDAP/WQwD/1kIA/9ZCAP/WQgD/1UAA/9VAAP/VPwD/1T8A/9Q+AP/U
PgD/1D0A/9Q9AP/UPQD/0z0A/9M8AP/TOwD/0zsA/9I6AP/SOgD/0jkA/9I5AP/SOgL/0T4X/9tu
WPz00MTY99nOJ/jc0gMAAAAA//zsA//76Cf/+NzY+t1n/PfQHv/3zgX/984B//bNAf/2zAH/9swB
//bMAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/
9soB//bJAf/2yQH/9skB//bIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1
xgH/9cUB//XFAf/1xQH/9cQB//TEAf/0xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TC
Af/0wQH/9MEB//TAAf/0wAH/9L8B//O/Af/zvwH/878B//O/Af/zvgH/874B//O+Af/zvQH/870B
//O9Af/zvQH/87wB//O8Af/zvAH/87sB//O7Af/zugH/87oB//O6Af/zuQH/8rkB//K5Af/yuQT/
8bQA//XIO//ofTj/308A/+FaA//hVwD/4VcA/+FWAP/gVgD/4FYA/+BVAP/gVQD/31UA/99VAP/f
VAD/31QA/99TAP/fUwD/3lIA/95SAP/eUQD/3lEA/95RAP/dUAD/3U8A/91PAP/dTwD/3U4A/9xO
AP/cTgD/3E4A/9xOAP/cTQD/3EwA/9tLAP/bSwD/20sA/9tKAP/bSgD/2kkA/9pJAP/aSQD/2kkA
/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/XRQD/10UA/9dEAP/XRAD/10MA/9ZDAP/WQwD/
1kMA/9ZDAP/WQgD/1kIA/9ZCAP/VQAD/1UAA/9U/AP/VPwD/1D4A/9Q+AP/UPQD/1D0A/9Q9AP/T
PQD/0z0A/9M8AP/TOwD/0joA/9I6AP/SOQD/0jkA/9I6Av/RPhf/3G5Y/PTQxNj32c4n+NzSAwAA
AAD//OwD//voJ//43Nj63mf899Ae//fPBf/3zgH/9s4B//bNAf/2zQH/9swB//bMAf/2zAH/9swB
//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/
9skB//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1
xQH/9cUB//TEAf/0xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wQH/9MAB//TA
Af/0wAH/9MAB//O/Af/zvwH/878B//O/Af/zvwH/874B//O+Af/zvgH/870B//O9Af/zvQH/87wB
//O8Af/zvAH/87sB//O7Af/zuwH/87oB//O6Af/yuQH/8rkB//K6BP/xtAD/9cg7/+h9OP/gTwD/
4VoD/+FXAP/hVwD/4VYA/+BWAP/gVgD/4FUA/+BVAP/fVQD/31QA/99UAP/fVAD/31MA/99TAP/e
UgD/3lIA/95RAP/eUQD/3lEA/91RAP/dUAD/3VAA/91PAP/dTgD/3E4A/9xOAP/cTgD/3E4A/9xN
AP/cTAD/20wA/9tLAP/bSwD/20oA/9tKAP/aSgD/2kkA/9pJAP/aSQD/2kkA/9lIAP/ZRwD/2UcA
/9lHAP/YRgD/2EYA/9dFAP/XRQD/10QA/9dEAP/XRAD/1kMA/9ZDAP/WQwD/1kMA/9ZCAP/WQgD/
1kIA/9VAAP/VQAD/1UAA/9U/AP/UPwD/1D4A/9Q9AP/UPQD/1D0A/9M9AP/TPAD/0zwA/9M7AP/S
OwD/0joA/9I5AP/SOQD/0joC/9E+F//cblj89NDE2PfZzif43NIDAAAAAP/87AP/++gn//jc2Pre
Z/z30B7/988F//fPAf/3zgH/980B//fNAf/3zAH/9s0B//bNAf/2zQH/9s0B//bMAf/2zAH/9swB
//bMAf/2zAH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bJAf/2yAH/
9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1
xAH/9cQB//XEAf/0wwH/9MMB//TDAf/0wgH/9MIB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/
Af/0vwH/9L8B//O/Af/zvwH/874B//O+Af/zvgH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87sB
//O7Af/zuwH/87oB//K6Af/yuQH/8roE//G1AP/1yTv/6H44/+BQAP/iWgP/4VgA/+FXAP/hVwD/
4FYA/+BWAP/gVgD/4FUA/99VAP/fVQD/31QA/99UAP/fVAD/31MA/95TAP/eUgD/3lIA/95SAP/e
UQD/3lEA/91QAP/dUAD/3VAA/91PAP/dTgD/3E4A/9xOAP/cTgD/3E4A/9xNAP/bTQD/20wA/9tM
AP/bSgD/20oA/9tKAP/aSQD/2kkA/9pJAP/aSQD/2UgA/9lIAP/ZSAD/2UcA/9hHAP/YRgD/2EYA
/9hGAP/XRQD/10UA/9dEAP/WRAD/1kMA/9ZDAP/WQwD/1kMA/9ZDAP/WQgD/1UEA/9VBAP/VQQD/
1UAA/9U/AP/UPwD/1D4A/9Q+AP/UPQD/0z0A/9M9AP/TPAD/0zwA/9I7AP/SOwD/0joA/9I5AP/S
OgH/0T0S/9xtV/z00MTY99jNJ/jb0QMAAAAA//zrA//75yf/+NzY+t5n/PfQGv/3zwT/988B//fO
Af/3zgH/984B//fNAf/2zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB
//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yAH/9cgB//XIAf/1yAH/
9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0
wwH/9MMB//TDAf/0wgH/9MIB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/878B//O/
Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/8rsB
//K6Af/yuwT/8bUA//XJO//ofjj/4VAA/+JbA//iWAD/4lgA/+JXAP/hVwD/4VcA/+BWAP/gVgD/
4FUA/+BVAP/gVQD/31QA/99UAP/fVAD/31MA/99TAP/fUgD/3lIA/95SAP/eUQD/3lEA/95RAP/d
UAD/3VAA/91PAP/dTwD/3U8A/91PAP/cTgD/3E4A/9xNAP/cTQD/3EwA/9tMAP/bSwD/20oA/9tK
AP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZSAD/2UcA/9lHAP/YRgD/2EYA/9hFAP/XRQD/10UA
/9dEAP/XRAD/10MA/9ZDAP/WQwD/1kMA/9ZDAP/WQgD/1kIA/9VBAP/VQAD/1T8A/9U/AP/UPgD/
1D4A/9Q+AP/TPQD/0z0A/9M9AP/TPQD/0zwA/9M7AP/SOwD/0joA/9I7Av/RPxX/3G5Y/PTQxNj3
2s8n+N3TAwAAAAD//O0D//vpJ//43Nj63mj899Ac//fPBP/3zwH/984B//fOAf/3zgH/980B//fN
Af/2zQH/9s0B//bNAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB
//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/
9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB//TEAf/0wwH/9MMB//TDAf/0
wgH/9MEB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/878B//O/Af/zvwH/874B//O+
Af/zvgH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O7Af/yuwH/8roB//K7BP/xtQD/9ck7
/+h+OP/hUAD/4lsD/+JZAP/iWAD/4lgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/+BVAP/fVQD/
31QA/99UAP/fVAD/31MA/99TAP/eUwD/3lIA/95SAP/eUQD/3lEA/91RAP/dUAD/3VAA/91PAP/d
TwD/3U8A/9xOAP/cTgD/3E0A/9xNAP/cTQD/20wA/9tMAP/bSwD/20oA/9pKAP/aSgD/2kkA/9lJ
AP/ZSAD/2UgA/9lIAP/ZSAD/2UcA/9hHAP/YRwD/2EYA/9hGAP/XRQD/10UA/9dEAP/XRAD/10MA
/9ZDAP/WQwD/1kMA/9ZDAP/WQgD/1UEA/9VAAP/VQAD/1T8A/9Q/AP/UPgD/1D4A/9Q+AP/TPQD/
0z0A/9M9AP/TPAD/0zsA/9I7AP/SOwD/0jsC/9E/F//cblj89NDE2PfZzif43NIDAAAAAP/87AP/
++gn//jc2PreZ/z30B7/988E//fPAf/3zgH/984B//fOAf/3zgH/980B//fNAf/3zQH/980B//bN
Af/2zQH/9s0B//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB
//bKAf/2yQH/9skB//XJAf/1yQH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/
9cYB//XFAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/9MMB//TDAf/0wgH/9MIB//TBAf/0
wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/9L8B//S/Af/zvwH/874B//O+Af/zvgH/870B//O9
Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/87sE//G2AP/1yjv/6H44/+BQAP/iWwP/4lkA
/+JZAP/iWAD/4VgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/99VAP/fVAD/31QA/99UAP/fVAD/
31MA/95TAP/eUwD/3lIA/95SAP/eUQD/3VEA/91QAP/dUAD/3VAA/91QAP/dTwD/3E4A/9xOAP/c
TgD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSwD/2koA/9pKAP/aSQD/2UkA/9lJAP/ZSAD/2UgA/9lI
AP/ZSAD/2EcA/9hHAP/YRgD/2EYA/9hFAP/XRQD/10UA/9dEAP/XRAD/10MA/9ZDAP/WQwD/1kMA
/9ZDAP/VQgD/1UEA/9VAAP/VQAD/1D8A/9Q/AP/UPwD/1D4A/9Q+AP/TPQD/0z0A/9M8AP/TOwD/
0jsA/9I7AP/SOwL/0UAX/9xuWPz00MTY99nOJ/jc0gMAAAAA//zsA//76Cf/+NzY+t5n/PfQHv/3
zwX/988B//fOAf/3zgH/984B//fOAf/3zgH/980B//fNAf/3zQH/9s0B//bNAf/2zQH/9swB//bM
Af/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2yQH/9ckB
//XJAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xgH/9cYB//XGAf/1xQH/
9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TCAf/0wgH/9MIB//TBAf/0wQH/9MEB//TAAf/0
wAH/9MAB//S/Af/0vwH/9L8B//O/Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8
Af/zvAH/87wB//O7Af/zvAT/8bYA//XKO//pfzj/4VEA/+NbA//iWQD/4lkA/+JZAP/iWAD/4lgA
/+FYAP/hVwD/4FYA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/99TAP/eUwD/
3lIA/95SAP/eUQD/3lEA/91QAP/dUAD/3VAA/91QAP/dTwD/3U8A/9xOAP/cTgD/3E4A/9xNAP/c
TAD/20wA/9tLAP/aSwD/2koA/9pKAP/aSQD/2kkA/9pJAP/aSAD/2UgA/9lIAP/ZSAD/2UcA/9lH
AP/YRwD/2EYA/9hFAP/YRQD/10UA/9dEAP/XRAD/10MA/9ZDAP/WQwD/1kMA/9ZCAP/WQQD/1UEA
/9VAAP/VQAD/1T8A/9U/AP/UPwD/1D4A/9Q+AP/UPQD/0z0A/9M8AP/TPAD/0zsA/9M8Av/SQRf/
3G5Y/PXQxNj42c4n+dzSAwAAAAD//OwD//voJ//43Nj63mf899Ae//fPBf/3zwH/988B//fPAf/3
zwH/988B//fOAf/3zgH/984B//fOAf/3zQH/980B//fNAf/2zQH/9swB//bMAf/2zAH/9swB//bM
Af/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bIAf/2yAH/9cgB
//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/
9cQB//XEAf/1wwH/9MIB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0
vwH/9L8B//S/Af/0vwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O9Af/zvAH/87sB//O8
BP/ytwD/9co7/+l/OP/iUQD/41wD/+JZAP/iWQD/4lkA/+JYAP/iWAD/4VgA/+FXAP/gVwD/4FcA
/+BWAP/gVgD/4FUA/+BVAP/fVQD/31QA/99UAP/fUwD/31MA/95TAP/eUwD/3lIA/95SAP/eUQD/
3VAA/91QAP/dUAD/3VAA/91PAP/dTwD/3E4A/9xOAP/cTgD/3E0A/9xMAP/bTAD/20wA/9pLAP/a
SwD/2koA/9pKAP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZSAD/2UcA/9hHAP/YRgD/2EYA/9hG
AP/YRQD/10UA/9dEAP/XRAD/10QA/9ZDAP/WQwD/1kIA/9ZCAP/VQQD/1UEA/9VAAP/VQAD/1T8A
/9Q/AP/UPwD/1D4A/9Q+AP/TPQD/0z0A/9M8AP/TPAD/0z0C/9JBF//dblj89dDE2PjZzif53NID
AAAAAP/87AP/++gn//jc2PreZ/z30B7/988F//fPAf/3zwH/988B//fPAf/3zwH/984B//fOAf/3
zgH/984B//fNAf/3zQH/980B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bL
Af/2ywH/9ssB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bIAf/2yAH/9ccB//XHAf/1xwH/9ccB
//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/
9MIB//TCAf/0wgH/9MIB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//TAAf/0vwH/9L8B//S/Af/z
vwH/874B//O+Af/zvgH/870B//O9Af/zvQH/870B//O8Af/zvAH/87wE//K3AP/2yzv/6X84/+JS
AP/jXAP/4loA/+JZAP/iWQD/4lkA/+JYAP/hWAD/4VgA/+BXAP/gVwD/4FcA/+BWAP/gVgD/4FUA
/99VAP/fVQD/31QA/99UAP/fUwD/31MA/95TAP/eUwD/3lIA/95RAP/eUAD/3VAA/91QAP/dUAD/
3VAA/91PAP/cTgD/3E4A/9xOAP/cTQD/3E0A/9tMAP/bTAD/20wA/9pLAP/aSwD/2koA/9pKAP/a
SQD/2kkA/9lJAP/ZSAD/2UgA/9lIAP/ZRwD/2EcA/9hHAP/YRgD/2EYA/9hGAP/XRQD/10UA/9dE
AP/XRAD/1kQA/9ZDAP/WQwD/1kIA/9ZBAP/VQQD/1UEA/9VAAP/VQAD/1D8A/9Q/AP/UPwD/1D4A
/9Q+AP/TPQD/0z0A/9M9AP/TPQL/0kEX/91uWPz10MTY+NnOJ/nc0gMAAAAA//zsA//76Cf/+NzY
+t5n/PfQHv/3zwX/988B//fPAf/3zwH/988B//fPAf/3zwH/984B//fOAf/3zgH/984B//fOAf/3
zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9ssB//bK
Af/2ygH/9skB//bJAf/2yQH/9sgB//bIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB
//XHAf/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xAH/9cQB//TDAf/0wwH/9MMB//TCAf/0wgH/
9MIB//TBAf/0wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//O/Af/zvwH/874B//O+Af/z
vQH/870B//O9Af/zvQH/87wB//O8Af/zvQT/8rcA//bLO//pgDj/4lIA/+NdA//jWgD/41oA/+NZ
AP/iWQD/4lkA/+FYAP/hWAD/4VgA/+FYAP/hVwD/4FcA/+BWAP/gVgD/4FYA/+BVAP/gVQD/31QA
/99UAP/fVAD/31MA/99TAP/eUgD/3lIA/95RAP/eUQD/3lEA/95RAP/dUAD/3U8A/91OAP/dTgD/
3U4A/9xNAP/cTQD/3E0A/9tMAP/bTAD/20wA/9tLAP/aSwD/2koA/9pKAP/aSgD/2koA/9pJAP/Z
SQD/2UgA/9lIAP/ZRwD/2UcA/9hHAP/YRwD/2EYA/9hGAP/XRQD/10UA/9dFAP/XRAD/10QA/9ZD
AP/WQgD/1kIA/9ZBAP/VQQD/1UEA/9VAAP/VQAD/1T8A/9U/AP/VPwD/1D4A/9Q+AP/TPQD/0z0A
/9M+Av/SQhf/3W9Y/PXRxNj42c4n+d3SAwAAAAD//OwD//voJ//43Nj63mf899Ee//fQBf/3zwH/
988B//fPAf/3zwH/988B//fPAf/3zwH/988B//fOAf/3zgH/984B//fOAf/3zQH/980B//fNAf/3
zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9swB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bJ
Af/2yQH/9sgB//bIAf/2yAH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xwH/9cYB
//XGAf/1xgH/9cUB//XFAf/1xAH/9cQB//XDAf/1wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/
9MEB//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//S/Af/0vwH/9L4B//O9Af/zvQH/870B//O9Af/z
vAH/87wB//O9BP/ytwD/9ss7/+mAOP/iUwD/410D/+NbAP/jWgD/41oA/+JZAP/iWQD/4lkA/+FY
AP/hWAD/4VgA/+FYAP/gVwD/4FcA/+BWAP/gVgD/4FUA/+BVAP/fVQD/31QA/99UAP/fVAD/31MA
/95TAP/eUgD/3lEA/95RAP/eUQD/3lEA/91QAP/dUAD/3U8A/91OAP/dTgD/3E4A/9xNAP/cTQD/
20wA/9tMAP/bTAD/20wA/9pLAP/aSwD/2ksA/9pKAP/aSgD/2kkA/9lJAP/ZSQD/2UgA/9lIAP/Z
RwD/2EcA/9hHAP/YRgD/2EYA/9hGAP/XRQD/10UA/9dEAP/XRAD/1kMA/9ZCAP/WQgD/1kEA/9ZB
AP/VQQD/1UAA/9VAAP/VPwD/1T8A/9U/AP/UPgD/1D4A/9M9AP/TPQD/0z4C/9JCF//db1j89dHE
2Pjazif53dIDAAAAAP/86wP/++cn//jc2PreZ/z30R7/99AF//fQAf/3zwH/988B//fPAf/3zwH/
988B//fPAf/3zwH/988B//fOAf/3zgH/984B//fNAf/3zQH/980B//fNAf/3zQH/9s0B//bMAf/2
zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9sgB//bI
Af/2yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB
//XEAf/1xAH/9cQB//XDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/
9MAB//TAAf/0vwH/9L8B//S/Af/0vgH/874B//O9Af/zvQH/870B//O8Af/zvAH/870E//K4AP/2
yzv/6oA4/+NUAP/kXQP/41sA/+NbAP/jWgD/41oA/+NZAP/iWQD/4lkA/+FYAP/hWAD/4VgA/+FX
AP/hVwD/4VcA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fVAD/31MA/99SAP/eUgD/3lIA
/95SAP/eUgD/3lEA/95QAP/dUAD/3U8A/91OAP/dTgD/3U4A/9xNAP/cTQD/3EwA/9tMAP/bTAD/
20wA/9tLAP/bSwD/20sA/9pKAP/aSgD/2kkA/9pJAP/aSAD/2UgA/9lIAP/ZRwD/2UcA/9hHAP/Y
RgD/2EYA/9hGAP/YRgD/10QA/9dEAP/XQwD/10MA/9ZCAP/WQgD/1kEA/9ZBAP/WQQD/1UAA/9VA
AP/VPwD/1T8A/9Q+AP/UPgD/1D0A/9Q9AP/UPgH/00ES/91rUf321Mfe+NvPIfnd0gIAAAAA//zt
A//76Sf/+NzY+t5g/PfRGf/30QT/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fPAf/3zwH/
988B//fPAf/3zgH/984B//fOAf/3zQH/980B//fNAf/2zQH/9s0B//bMAf/2zAH/9swB//bMAf/2
ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9sgB//bIAf/1yAH/9cgB//XI
Af/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xQH/9cUB//XEAf/1xAH/9cMB
//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/
9L8B//S+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zvQT/8rgA//bMO//qgTj/41QA/+ReA//j
XAD/41sA/+NbAP/jWgD/41oA/+JaAP/iWQD/4lkA/+FYAP/hWAD/4VgA/+FXAP/hVwD/4FcA/+BW
AP/gVgD/4FYA/+BVAP/fVQD/31QA/99UAP/fVAD/31MA/95SAP/eUgD/3lIA/95SAP/eUQD/3lEA
/91QAP/dUAD/3U8A/91OAP/dTgD/3E4A/9xNAP/cTQD/3E0A/9tMAP/bTAD/20wA/9tLAP/bSwD/
2ksA/9pKAP/aSgD/2kkA/9pJAP/ZSQD/2UgA/9lIAP/ZRwD/2UcA/9hHAP/YRgD/2EYA/9hGAP/X
RQD/10UA/9dEAP/XRAD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/VQQD/1UAA/9VAAP/VPwD/1T4A/9Q+
AP/UPgD/1D4A/9Q+Af/TQhT/3nBY/PXSxNj4288n+d7TAwAAAAD//OwD//voJ//43Nj63mf899Ic
//fRBP/30QH/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fPAf/3zwH/988B//fPAf/3zgH/
984B//fOAf/3zQH/980B//bNAf/2zQH/9s0B//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bLAf/2
ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//XIAf/1yAH/9cgB//XIAf/1yAH/9cgB//XH
Af/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xQH/9cQB//XEAf/1xAH/9MMB//TDAf/0wwH/9MMB
//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/9L8B//O+Af/zvgH/
874B//O+Af/zvQH/870B//O9BP/yuAD/9ss7/+qBOP/jVAD/5F4D/+NcAP/jXAD/41sA/+NbAP/j
WgD/4loA/+JZAP/iWQD/4lkA/+FYAP/hWAD/4VcA/+FXAP/gVwD/4FcA/+BWAP/gVgD/4FYA/99V
AP/fVQD/31QA/99UAP/fUwD/3lMA/95TAP/eUgD/3lIA/95RAP/eUQD/3VEA/91QAP/dTwD/3U8A
/91OAP/cTgD/3E4A/9xNAP/cTQD/3EwA/9tMAP/bTAD/20wA/9tLAP/aSwD/2ksA/9pKAP/aSgD/
2kkA/9lJAP/ZSAD/2UgA/9lIAP/ZRwD/2EcA/9hGAP/YRgD/2EYA/9hFAP/XRQD/10QA/9dEAP/W
RAD/1kMA/9ZCAP/WQgD/1kEA/9VBAP/VQQD/1UAA/9VAAP/VPwD/1T8A/9Q+AP/UPgD/1D8C/9NC
Fv/dcFj89dLE2Pjbzif53dIDAAAAAP/87AP/++gn//jc2PrfZ/z30h7/99EE//fRAf/30AH/99AB
//fQAf/30AH/99AB//fPAf/3zwH/988B//fPAf/3zwH/988B//fPAf/3zgH/984B//fOAf/3zQH/
980B//bNAf/3zQH/9s0B//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2
ygH/9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XH
Af/1xwH/9cYB//XFAf/1xAH/9cQB//XEAf/0xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB
//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0vwH/9L4B//S+Af/zvgH/874B//O+Af/zvQH/
874E//K5AP/2zDv/6oE4/+NUAP/kXgP/41wA/+NcAP/jXAD/41sA/+NbAP/iWgD/4loA/+JZAP/i
WQD/4lkA/+FYAP/hWAD/4VgA/+FXAP/gVwD/4FcA/+BWAP/gVgD/4FYA/99VAP/fVQD/31QA/99U
AP/fUwD/3lMA/95TAP/fUgD/3lIA/95RAP/eUQD/3VEA/91QAP/dTwD/3U8A/91PAP/cTgD/3E4A
/9xNAP/cTQD/3E0A/9tMAP/bTAD/20sA/9pLAP/aSwD/2ksA/9pKAP/aSgD/2UkA/9lJAP/ZSQD/
2UgA/9lIAP/YRwD/2EcA/9hHAP/YRgD/2EYA/9hFAP/XRQD/10QA/9dEAP/WQwD/1kMA/9ZCAP/W
QgD/1kIA/9VBAP/VQQD/1UAA/9VAAP/VPwD/1T8A/9Q+AP/VPwL/00MW/95wWPz10sTY+NvOJ/nd
0gMAAAAA//zsA//76Cf/+NzY+t9n/PfSHv/30QX/99EB//fRAf/30QH/99AB//fQAf/30AH/99AB
//fQAf/30AH/988B//fPAf/3zwH/988B//fPAf/3zgH/984B//fOAf/3zQH/980B//fNAf/2zQH/
9s0B//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2
yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cUB//XF
Af/1xQH/9cQB//TEAf/0xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB
//TBAf/0wQH/9MAB//S/Af/0vwH/9L4B//S+Af/0vgH/874B//O9Af/zvgT/8rkA//bMO//qgTj/
4lUA/+RfA//kXAD/5FwA/+NcAP/jXAD/41sA/+NbAP/jWwD/4loA/+JaAP/iWQD/4lkA/+FYAP/h
WAD/4VgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FYA/+BVAP/fVQD/31QA/99UAP/fUwD/31MA/99T
AP/eUgD/3lIA/95RAP/eUQD/3lEA/91QAP/dUAD/3U8A/91PAP/cTgD/3E4A/9xNAP/cTQD/3E0A
/9tNAP/bTAD/20sA/9tLAP/aSwD/2ksA/9pKAP/aSgD/2kkA/9lJAP/ZSQD/2UgA/9lIAP/ZRwD/
2UcA/9lHAP/YRgD/2EYA/9dFAP/XRQD/10QA/9dEAP/WQwD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/W
QQD/1UAA/9VAAP/VPwD/1T8A/9VAAv/URBb/3nBY/PXSxNj4284n+d3SAwAAAAD//OwD//voJ//4
3Nj632f899Ie//fRBf/30QH/99EB//fRAf/30QH/99AB//fQAf/30AH/99AB//fQAf/3zwH/988B
//fPAf/3zwH/988B//fPAf/3zgH/984B//fOAf/3zQH/980B//bNAf/2zQH/9s0B//bMAf/2zAH/
9swB//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//XIAf/1
yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cUB//XFAf/1xQH/9MQB//TE
Af/0xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wAH/9MAB
//S/Af/0vwH/9L8B//S+Af/zvgH/874B//O+BP/yuQD/9sw7/+qBOP/jVQD/5V8D/+RdAP/kXAD/
5FwA/+RcAP/jXAD/41sA/+NbAP/jWwD/41oA/+JaAP/iWgD/4lkA/+JZAP/hWAD/4VcA/+FXAP/h
VwD/4FYA/+BWAP/gVgD/4FYA/+BWAP/gVQD/31QA/99UAP/fVAD/31MA/99TAP/fUwD/3lIA/95S
AP/eUQD/3VEA/95QAP/dUAD/3U8A/91PAP/cTgD/3E8A/9xOAP/cTgD/3E0A/9tNAP/bTAD/20sA
/9tLAP/aSwD/2ksA/9pKAP/aSgD/2kkA/9pJAP/ZSQD/2UgA/9lIAP/ZRwD/2UcA/9hGAP/YRgD/
2EUA/9hFAP/XRAD/10QA/9dEAP/WRAD/10MA/9ZCAP/WQgD/1kIA/9ZBAP/WQQD/1UEA/9VAAP/V
QAD/1UAC/9RFFv/ecFj89dLE2Pjbzif53dIDAAAAAP/87AP/++gn//jc2PrfZ/z30x7/+NIF//fR
Af/30QH/99EB//fRAf/30QH/99AB//fQAf/30AH/99AB//fQAf/3zwH/988B//fPAf/3zwH/988B
//fPAf/3zgH/984B//fOAf/3zgH/980B//bNAf/3zQH/9s0B//bMAf/2zAH/9swB//bMAf/2ywH/
9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//XIAf/2yQH/9skB//XIAf/1
yAH/9cgB//XIAf/1xwH/9ccB//XGAf/1xgH/9cUB//XFAf/1xQH/9cUB//XEAf/1xAH/9cQB//TD
Af/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/9L8B
//O+Af/zvgH/878E//K6AP/2zTv/64I4/+RWAP/lYAP/5F0A/+RdAP/kXAD/5FwA/+RcAP/jWwD/
41sA/+NbAP/jWwD/41oA/+JaAP/iWQD/4lkA/+JYAP/iWAD/4lcA/+FXAP/hVwD/4VYA/+BWAP/g
VgD/4FYA/+BVAP/fVQD/31UA/99UAP/fVAD/31MA/99TAP/eUgD/3lIA/95SAP/eUQD/3lEA/91Q
AP/dTwD/3U8A/91PAP/dTwD/3E8A/9xPAP/cTQD/3E0A/9tNAP/bTAD/20sA/9tLAP/bSwD/2koA
/9pKAP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZSAD/2EYA/9hGAP/YRQD/2EUA/9dEAP/XRAD/
10QA/9dEAP/XQwD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/WQQD/1UAA/9VAAP/VQQL/1EUW/95xWPz1
0sTY+NvOJ/nd0gMAAAAA//zsA//76Cf/+NzY++Bn/PjTHv/40wX/+NIB//fRAf/30QH/99EB//fR
Af/30QH/99AB//fQAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fPAf/3zgH/984B
//fOAf/3zgH/980B//fNAf/2zQH/9s0B//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ygH/
9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bJAf/2yQH/9skB//XIAf/1yAH/9cgB//XIAf/1
xwH/9ccB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/1xAH/9MQB//TDAf/0wwH/9MMB//TD
Af/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//S/Af/0vwH/878B//O+Af/zvwT/8roA
//bNO//rgjj/5FYA/+VgA//kXgD/5F0A/+RdAP/kXAD/5FwA/+NcAP/jWwD/41sA/+NbAP/jWwD/
4loA/+JZAP/iWQD/4lkA/+JYAP/iWAD/4VcA/+FXAP/hVwD/4FYA/+BWAP/gVgD/4FYA/99VAP/f
VQD/31UA/99UAP/fUwD/31MA/95TAP/eUgD/3lIA/95RAP/eUQD/3VEA/91QAP/dTwD/3U8A/91P
AP/cTwD/3E8A/9xOAP/cTgD/3E4A/9tNAP/bTAD/20sA/9tLAP/aSwD/2koA/9pKAP/aSgD/2kkA
/9lJAP/ZSAD/2UgA/9lIAP/YRgD/2EYA/9hGAP/YRQD/2EUA/9dEAP/XRAD/10QA/9dEAP/WQwD/
1kMA/9ZDAP/WQgD/1kEA/9ZBAP/VQQD/1UAA/9VBAv/URRb/33FY/PXSxNj4284n+d3SAwAAAAD/
/OwD//voJ//43Nj74Gf8+NMe//jSBf/40gH/99EB//fRAf/30QH/99EB//fRAf/30QH/99AB//fQ
Af/30AH/99AB//fQAf/3zwH/988B//fPAf/3zwH/988B//fPAf/3zwH/984B//fOAf/3zgH/980B
//bNAf/2zQH/9s0B//bNAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/
9soB//bJAf/2yQH/9skB//bJAf/2yQH/9cgB//XIAf/1yAH/9cgB//XIAf/1xwH/9cYB//XGAf/1
xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TC
Af/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/zvwH/878B//PABP/yuwD/9s07/+uCOP/kVwD/5WAD
/+VeAP/lXgD/5F0A/+RdAP/kXAD/5FwA/+RcAP/jWwD/41sA/+NbAP/jWwD/41oA/+NaAP/iWQD/
4lkA/+JYAP/iWAD/4lgA/+FXAP/hVwD/4FcA/+BWAP/gVgD/4FUA/+BVAP/gVQD/4FUA/99UAP/f
VAD/31MA/99TAP/fUgD/3lIA/95SAP/eUQD/3lEA/91QAP/dUAD/3VAA/91QAP/dTwD/3U8A/91P
AP/cTgD/3E0A/9tMAP/bTAD/20sA/9tLAP/bSwD/2koA/9pKAP/aSQD/2kkA/9pJAP/aSAD/2UgA
/9lHAP/ZRwD/2EYA/9hGAP/YRQD/2EUA/9hEAP/XRAD/10QA/9dDAP/XQwD/10MA/9dCAP/WQgD/
1kIA/9ZBAP/WQQD/1kIC/9VGGP/fcVj89dLE2PjazSf53dEDAAAAAP/86wP/++cn//jc2PvgZ/z4
0yD/+NIF//jSAf/40gH/+NIB//jSAf/40gH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQ
Af/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/9s0B//bNAf/2zQH/9s0B
//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/
9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XHAf/1xwH/9cYB//XGAf/1xgH/9cYB//XFAf/1
xQH/9cUB//XEAf/1xAH/9cQB//XDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TB
Af/0wAH/9MAB//S/Af/0vwH/9MAE//K8AP/2zjv/64I4/+RXAP/lYAP/5V4A/+VeAP/lXgD/5F0A
/+RdAP/kXQD/5FwA/+NcAP/jWwD/41sA/+NbAP/jWgD/41oA/+JaAP/iWQD/4lkA/+JYAP/iWAD/
4VgA/+FXAP/hVwD/4FYA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fVAD/31MA/99TAP/e
UgD/3lIA/95SAP/eUQD/3VAA/91QAP/dUAD/3VAA/91QAP/dTwD/3U8A/9xOAP/cTQD/3E0A/9tM
AP/bTAD/20sA/9tLAP/aSwD/2koA/9pJAP/aSQD/2kkA/9pIAP/aSAD/2UcA/9lHAP/ZRgD/2EYA
/9hGAP/YRQD/2EUA/9hEAP/XRAD/10QA/9dDAP/XQwD/10MA/9ZDAP/WQgD/1kIA/9ZBAP/WQgL/
1UcZ/991XPv0z8PU+NrNK/nd0gQAAAAA//zsBP/75yv/99nU++Bs+/jTIf/40gX/+NIB//jSAf/4
0gH/+NIB//jSAf/30QH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQAf/30AH/99AB//fQ
Af/3zwH/988B//fPAf/3zgH/984B//fOAf/2zQH/9s4B//bNAf/2zQH/9swB//bMAf/2zAH/9swB
//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/
9skB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XFAf/1
xAH/9cQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MEB//TAAf/0wAH/9L8B//S/
Af/0wAT/8rwA//bOO//rgjj/5FcA/+VgA//lXgD/5V4A/+VeAP/kXgD/5F0A/+RdAP/kXQD/41wA
/+NcAP/jWwD/41sA/+NaAP/jWgD/4loA/+JaAP/iWQD/4lkA/+JYAP/hWAD/4VgA/+FXAP/gVwD/
4FYA/+BWAP/gVgD/4FUA/+BVAP/fVQD/31UA/99UAP/fVAD/31MA/95TAP/eUgD/3lIA/95RAP/d
UQD/3VAA/91QAP/dUAD/3VAA/91PAP/dTgD/3E4A/9xOAP/cTQD/3E0A/9tMAP/bTAD/20sA/9pL
AP/aSgD/2koA/9pJAP/aSQD/2kgA/9pIAP/ZSAD/2UgA/9lHAP/ZRgD/2EYA/9hGAP/YRQD/2EQA
/9hEAP/XRAD/10QA/9dDAP/XQwD/1kMA/9ZDAP/WQgD/1kIA/9ZCAv/VRhb/33BX/PXSxtn4288m
+d7TAwAAAAD//OwD//voJv/43Nn74Gb8+NMd//jTBP/40gH/+NIB//jSAf/40gH/+NIB//jSAf/3
0QH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fP
Af/3zgH/984B//fOAf/2zgH/9s0B//bNAf/2zAH/9swB//bMAf/2zAH/9swB//bLAf/2ywH/9ssB
//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9sgB//XIAf/1yAH/
9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB//TEAf/0
wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MEB//TBAf/0wAH/9MAB//TABP/zvAD/9s47/+uC
OP/kVwD/5WED/+VeAP/lXgD/5V4A/+VeAP/kXgD/5F0A/+RdAP/kXQD/41wA/+NcAP/jWwD/41sA
/+NaAP/jWgD/4loA/+JaAP/iWQD/4lkA/+JZAP/hWAD/4VgA/+BXAP/gVwD/4FYA/+BWAP/gVgD/
4FUA/99VAP/fVQD/31UA/99UAP/fVAD/31MA/99TAP/eUwD/3lIA/95RAP/dUQD/3VEA/91RAP/d
UAD/3U8A/91PAP/dTgD/3U4A/9xOAP/cTQD/3E0A/9tMAP/bTAD/20sA/9tKAP/aSgD/2kkA/9pJ
AP/aSAD/2kgA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRQD/2EUA/9dFAP/XRAD/10QA
/9dDAP/XQwD/1kMA/9ZDAP/WQgD/1kMC/9VHFv/fcVf89dLG2fjazyb53dIDAAAAAP/87AP/++gm
//jc2fvgZvz41B3/+NME//jTAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//fRAf/3
0QH/99EB//fQAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fPAf/3zwH/984B//fO
Af/3zQH/980B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB
//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yAH/9sgB//bIAf/1xwH/9ccB//XHAf/1xwH/
9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/9MMB//TDAf/0
wwH/9MIB//TCAf/0wQH/9MEB//TAAf/0wAH/9MEE//O8AP/3zjv/7II4/+VXAP/mYQP/5V8A/+Vf
AP/lXwD/5V4A/+VeAP/kXQD/5F0A/+RdAP/kXQD/5FwA/+NcAP/jWwD/41sA/+NaAP/jWgD/41oA
/+JaAP/iWQD/4lkA/+JZAP/hWAD/4VgA/+FXAP/gVwD/4FcA/+BWAP/gVgD/4FUA/+BVAP/fVQD/
31UA/99UAP/fVAD/31MA/95TAP/eUgD/3lIA/95RAP/eUQD/3VEA/91RAP/dUAD/3U8A/91OAP/d
TgD/3E4A/9xOAP/cTQD/3E0A/9tMAP/bSwD/20sA/9tLAP/aSgD/2kkA/9pJAP/aSQD/2kgA/9pI
AP/ZSAD/2UgA/9lHAP/ZRgD/2EYA/9hGAP/YRQD/10UA/9dEAP/XRAD/10QA/9dDAP/XQwD/1kMA
/9ZCAP/WQwL/1UcW/99xV/z10sbZ+NrPJvnd0gMAAAAA//zsA//76Cb/+NzZ++Bm/PjUHf/40wT/
+NMB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/99EB//fRAf/30QH/99EB//fRAf/3
0AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fPAf/3zgH/984B//fOAf/3zQH/9s0B//bN
Af/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB
//bKAf/2yQH/9skB//bJAf/2yAH/9sgB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/
9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0
wQH/9MEB//TAAf/0wQT/87wA//fOO//rgjj/5VcA/+ZhA//lXwD/5V8A/+VeAP/lXgD/5V4A/+Rd
AP/kXQD/5F0A/+RdAP/kXQD/41wA/+NcAP/jWwD/41sA/+NaAP/jWgD/4loA/+JaAP/iWQD/4lkA
/+JZAP/hWAD/4VgA/+BXAP/gVwD/4FcA/+BWAP/gVgD/4FUA/99VAP/fVQD/31QA/99UAP/fVAD/
31MA/95TAP/eUgD/3lIA/95RAP/dUQD/3VEA/91QAP/dTwD/3U8A/91OAP/cTgD/3E4A/9xOAP/c
TQD/3EwA/9tLAP/bSwD/20sA/9pKAP/aSgD/2kkA/9pJAP/aSQD/2kgA/9lIAP/ZSAD/2UcA/9lH
AP/ZRwD/2EYA/9hGAP/XRQD/10UA/9dFAP/XRAD/10QA/9dDAP/WQwD/1kMA/9ZDAv/VRxb/33FX
/PXSxtn42s8m+d3SAwAAAAD//OwD//voJv/43Nn74Gb8+NQd//jTBP/40wH/+NIB//jSAf/40gH/
+NIB//jSAf/40gH/+NIB//jSAf/30QH/99EB//fRAf/30QH/99EB//fRAf/30AH/99AB//fQAf/3
0AH/99AB//fPAf/3zwH/988B//fOAf/3zgH/984B//fOAf/2zQH/9s0B//bNAf/2zQH/9swB//bM
Af/2zAH/9ssB//bLAf/2ywH/9ssB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2ygH/9skB
//bJAf/2yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xgH/
9cUB//XFAf/1xQH/9MQB//TEAf/0xAH/9MMB//TDAf/0wwH/9MIB//TCAf/0wQH/9MEB//TBBP/z
vQD/9887/+yDOP/lWAD/5mID/+ZfAP/mXwD/5l4A/+VeAP/lXgD/5V4A/+VeAP/kXQD/5F0A/+Rd
AP/kXAD/5FwA/+RcAP/jWwD/41sA/+NaAP/jWgD/41oA/+JZAP/iWQD/4lkA/+JZAP/hWAD/4VgA
/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/95TAP/eUgD/
3lIA/95SAP/eUgD/3lAA/95PAP/dTwD/3U8A/91OAP/dTgD/3U4A/9xNAP/cTAD/20wA/9tLAP/b
SwD/20sA/9tKAP/bSgD/20oA/9pJAP/aSQD/2UgA/9lIAP/ZRwD/2UcA/9lHAP/ZRwD/2EYA/9hG
AP/YRQD/2EUA/9hFAP/XRAD/10QA/9dDAP/XQwD/10QC/9ZIFv/gclf89dLG2fjazyb53tIDAAAA
AP/87AP/++gm//jc2fvgZvz41B3/+NME//jTAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/
+NIB//fRAf/30QH/99EB//fRAf/30QH/99EB//fRAf/30AH/99AB//fQAf/30AH/988B//fPAf/3
zwH/988B//fOAf/3zgH/984B//bNAf/2zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9ssB//bL
Af/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2ygH/9skB//bIAf/1xwH/9ccB
//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/0xAH/
9MQB//TEAf/0wwH/9MMB//TDAf/0wgH/9MIB//TBAf/0wQH/9MIE//O9AP/3zjv/64M4/+VYAP/m
YgP/5mAA/+ZfAP/lXwD/5V4A/+VeAP/lXgD/5V4A/+RdAP/kXQD/5F0A/+RcAP/kXAD/5FwA/+Nc
AP/jWwD/41sA/+NaAP/jWgD/4loA/+JZAP/iWQD/4lkA/+JZAP/hWAD/4VgA/+FYAP/hVwD/4VcA
/+BWAP/gVgD/4FUA/+BVAP/fVQD/31QA/99UAP/fUwD/31MA/95TAP/eUgD/3lIA/95RAP/eUQD/
3lAA/91QAP/dTwD/3U8A/91PAP/dTQD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSwD/20sA/9tKAP/b
SgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZRwD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9dF
AP/XRAD/10QA/9dDAP/XRAL/1kgW/+ByV/z10sbZ+NvPJvne0gMAAAAA//zsA//76Cb/+NzZ++Fm
/PjUHf/40wT/+NMB//jTAf/40wH/+NMB//jTAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/
99EB//fRAf/30QH/99EB//fRAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fOAf/3
zgH/984B//fOAf/3zQH/980B//fNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bL
Af/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2yQH/9sgB//XIAf/1yAH/9cgB//XIAf/1yAH/9ccB
//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/
9MMB//TCAf/0wgH/9MIB//TBAf/0wgT/874A//fPO//shDj/5lkA/+diA//mYAD/5mAA/+ZfAP/m
XwD/5l4A/+VeAP/lXgD/5V0A/+VdAP/lXQD/5F0A/+RdAP/kXQD/5FwA/+RcAP/kXAD/41sA/+Nb
AP/jWgD/41oA/+NaAP/iWQD/4lkA/+JZAP/iWAD/4lgA/+JXAP/hVwD/4VcA/+BWAP/gVgD/4FYA
/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/99SAP/eUgD/3lIA/95SAP/eUQD/3lAA/95QAP/dTwD/
3U8A/91OAP/cTQD/3E0A/9xNAP/cTAD/20wA/9tLAP/bSwD/20sA/9tKAP/bSQD/20oA/9pJAP/a
SQD/2kgA/9pIAP/ZRwD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9hFAP/XRAD/10QA/9dE
Av/WSRb/4HNX/PXTxtn4288m+d7SAwAAAAD//OwD//voJv/43Nn74Wb8+NQd//jTBP/40wH/+NMB
//jTAf/40wH/+NMB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/30QH/99EB//fRAf/30QH/
99EB//fQAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/984B//fNAf/3
zQH/980B//bNAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bK
Af/2ygH/9skB//bJAf/2yAH/9cgB//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB
//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9cQB//TEAf/0wwH/9MMB//TCAf/0wgH/
9MEB//TCBP/zvgD/9887/+yEOP/mWQD/52MD/+ZhAP/mYAD/5mAA/+ZfAP/mXwD/5V8A/+VeAP/l
XgD/5V0A/+VdAP/kXQD/5F0A/+RdAP/kXAD/5FwA/+RcAP/jWwD/41sA/+NaAP/jWgD/41oA/+Ja
AP/iWQD/4lkA/+JZAP/iWAD/4lgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FYA/+BVAP/fVQD/31QA
/99UAP/fVAD/31MA/95SAP/eUgD/3lIA/95RAP/eUQD/3lAA/91PAP/dTwD/3U8A/91OAP/cTgD/
3E0A/9xNAP/cTAD/20wA/9tMAP/bSwD/20sA/9tKAP/bSgD/2koA/9pJAP/aSQD/2kgA/9lIAP/Z
SAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9dFAP/XRAD/10UC/9ZJF//gclf89dPG2ffb
zib53tIDAAAAAP/86wP/+ucm//jc2fvhZvz41R//+NQF//jTAf/40wH/+NMB//jTAf/40wH/+NIB
//jSAf/40gH/+NIB//jSAf/40gH/+NIB//fRAf/30QH/99EB//fRAf/30QH/99EB//fQAf/30AH/
99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/980B//fNAf/3zQH/9s0B//bNAf/2
zAH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bJ
Af/1yAH/9cgB//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB
//XGAf/1xQH/9cUB//XEAf/1xAH/9MQB//TDAf/0wwH/9MMB//TCAf/0wgH/9MIE//O+AP/3zzv/
7IQ4/+ZZAP/nYwP/5mEA/+ZgAP/mYAD/5l8A/+ZfAP/lXwD/5V4A/+VeAP/lXgD/5V0A/+RdAP/k
XQD/5F0A/+RcAP/kXAD/5FwA/+NbAP/jWwD/41oA/+NaAP/jWgD/4loA/+JZAP/iWQD/4lkA/+JZ
AP/iWAD/4VgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/99VAP/fVAD/31QA/99UAP/fUwD/3lIA
/95SAP/eUgD/3lEA/95RAP/eUAD/3U8A/91PAP/dTwD/3U4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/
20wA/9tLAP/bSwD/20oA/9tKAP/aSgD/2kkA/9pJAP/aSQD/2UgA/9lIAP/ZRwD/2UcA/9lHAP/Z
RwD/2EYA/9hGAP/YRQD/10UA/9dEAP/XRQL/1kkY/+B2XPz00MTV99rOKvne0gMAAAAA//zrA//6
5yr/99rV++Fr/PjVIP/41AX/+NQB//jTAf/40wH/+NMB//jTAf/40wH/+NIB//jSAf/40gH/+NIB
//jSAf/40gH/99EB//fRAf/30QH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQAf/3zwH/
988B//fPAf/3zwH/984B//fOAf/3zgH/980B//fNAf/2zQH/9s0B//bNAf/2zAH/9swB//bMAf/2
zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bIAf/1yAH/9cgB//XI
Af/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xQH/9cUB
//XFAf/0xAH/9MQB//TDAf/0wwH/9MIB//TCAf/0wwT/874A//fPO//shDj/5lkA/+djA//mYQD/
5mAA/+ZgAP/mYAD/5l8A/+VfAP/lXgD/5V4A/+VeAP/lXQD/5F0A/+RdAP/kXQD/5FwA/+RcAP/k
XAD/41sA/+NbAP/jWgD/41oA/+NaAP/iWgD/4lkA/+JZAP/iWQD/4lkA/+JYAP/hWAD/4VcA/+FX
AP/hVwD/4FYA/+BWAP/gVQD/31UA/99UAP/fVAD/31QA/99TAP/eUgD/3lIA/95SAP/eUQD/3lEA
/95QAP/dUAD/3U8A/91OAP/dTgD/3E4A/9xNAP/cTQD/3E0A/9tNAP/bTAD/20sA/9tLAP/bSwD/
20oA/9pKAP/aSQD/2kkA/9pJAP/ZSAD/2UgA/9lHAP/ZRwD/2UcA/9lHAP/YRgD/2EYA/9hFAP/X
RQD/10UA/9dFAf/WSBX/4HZc+/TQxNX32c0q+d7SBAAAAAD//OsE//rmKv/32tX74Wv7+NUc//jU
BP/41AH/+NQB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/40gH/+NIB//jSAf/40gH/+NIB
//jSAf/40gH/+NIB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/
984B//fOAf/3zgH/984B//fNAf/3zQH/980B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2
zAH/9ssB//bLAf/2ywH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9cgB//XIAf/1yAH/9cgB//XI
Af/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//TEAf/0xAH/9MMB
//TDAf/0wwH/9MIB//TDBP/zvwD/99A7/+yEOP/mWQD/52MD/+ZhAP/mYQD/5mAA/+ZgAP/mYAD/
5V8A/+VfAP/lXgD/5V4A/+VeAP/kXQD/5F0A/+RdAP/kXAD/5FwA/+RcAP/jWwD/41sA/+NaAP/j
WgD/41oA/+JaAP/iWgD/4lkA/+JZAP/iWQD/4lgA/+FYAP/hWAD/4VcA/+FXAP/hVwD/4FYA/+BW
AP/gVQD/31UA/99VAP/fVAD/31MA/95TAP/eUgD/3lIA/95SAP/eUQD/3lEA/91QAP/dUAD/3U8A
/91PAP/dTgD/3E4A/9xOAP/cTQD/200A/9tMAP/bTAD/20wA/9tLAP/bSwD/2koA/9pKAP/aSQD/
2kkA/9pJAP/ZSAD/2UgA/9lHAP/ZRwD/2UcA/9hGAP/YRgD/2EYA/9hGAP/XRQD/10UC/9ZJFf/g
clf89tPH2/jbzyT639MDAAAAAP/87AP/++gk//jd2/vhZvz41Rz/+NUE//jUAf/41AH/+NQB//jU
Af/40wH/+NMB//jTAf/40wH/+NMB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/99EB
//fRAf/30QH/99EB//fRAf/30QH/99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/
980B//fNAf/3zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2
ywH/9soB//bKAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XIAf/1yAH/9ccB//XH
Af/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9MUB//TEAf/0wwH/9MMB//TDAf/0wwH/9MME
//O/AP/30Dv/7IU4/+ZaAP/nZAP/52IA/+dhAP/mYQD/5mAA/+ZgAP/mYAD/5l8A/+VfAP/lXgD/
5V4A/+VeAP/lXQD/5V0A/+RcAP/kXAD/5FwA/+RcAP/kWwD/41sA/+NbAP/jWwD/41oA/+NaAP/i
WQD/4lkA/+JZAP/iWQD/4lgA/+JYAP/hVwD/4VcA/+FXAP/gVgD/4FYA/+BVAP/gVQD/31QA/99U
AP/fVAD/31MA/99SAP/fUgD/31IA/95SAP/eUQD/3lAA/95QAP/eUAD/3U8A/91PAP/dTwD/3E4A
/9xOAP/cTgD/3E0A/9xNAP/bTAD/20sA/9tLAP/bSwD/20oA/9pJAP/aSQD/2kkA/9pJAP/aSAD/
2UgA/9lHAP/ZRwD/2UcA/9hGAP/YRgD/2EYA/9hGAP/YRgL/10kV/+FyV/z108fb+NvPJPrf0wMA
AAAA//zsA//76CT/+N3b++Fm/PjVHP/41QT/+NUB//jUAf/41AH/+NQB//jTAf/40wH/+NMB//jT
Af/40wH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/30QH/99EB//fRAf/30QH/99EB
//fRAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/980B//fNAf/2zQH/
9s0B//bNAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB//bJAf/2
yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XG
Af/1xgH/9cYB//XFAf/1xQH/9MUB//TEAf/0xAH/9MMB//TDAf/0xAT/878A//fQO//shDj/5loA
/+dkA//nYgD/52EA/+ZhAP/mYQD/5mEA/+ZgAP/mYAD/5V8A/+VfAP/lXwD/5V4A/+VeAP/lXQD/
5F0A/+RcAP/kXAD/5FwA/+RcAP/jWwD/41sA/+NbAP/jWgD/41oA/+JZAP/iWQD/4lkA/+JZAP/i
WAD/4lgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/99S
AP/fUgD/3lIA/95RAP/eUQD/3lEA/95QAP/dUAD/3VAA/91PAP/dTwD/3E4A/9xOAP/cTgD/3E0A
/9xNAP/bTAD/20wA/9tLAP/bSwD/2ksA/9pKAP/aSQD/2kkA/9pJAP/ZSAD/2UgA/9lHAP/ZRwD/
2UcA/9hGAP/YRgD/2EYA/9hGAv/XSRX/4XJX/PbTx9v4288k+t/TAwAAAAD//OwD//voJP/43dv7
4Wb8+NUc//jVBP/41QH/+NUB//jUAf/41AH/+NQB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jT
Af/40wH/+NMB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//fRAf/30QH/99EB//fRAf/30QH/99AB
//fQAf/30AH/99AB//fPAf/3zwH/988B//fOAf/3zgH/984B//fNAf/3zQH/9s0B//bNAf/2zQH/
9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9ssB//bLAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2
yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XF
Af/1xQH/9cQB//XEAf/0wwH/9MMB//TEBP/zwAD/99E7/+2FOP/mWwD/6GQD/+diAP/nYQD/52EA
/+dhAP/mYQD/5mEA/+ZgAP/mXwD/5l8A/+VfAP/lXgD/5V4A/+VeAP/lXQD/5V0A/+RcAP/kXAD/
5FwA/+RcAP/kWwD/41sA/+NbAP/jWgD/41kA/+NZAP/jWQD/4lkA/+JYAP/iWAD/4VcA/+FXAP/h
VwD/4VYA/+FWAP/gVgD/4FUA/+BVAP/gVAD/4FQA/99UAP/fUwD/31MA/99SAP/fUgD/31EA/95R
AP/eUQD/3lAA/95RAP/eUAD/3VAA/91PAP/dTwD/3E4A/9xOAP/cTgD/3E0A/9xNAP/bTAD/20sA
/9tLAP/bSgD/20oA/9pKAP/aSgD/2kkA/9pIAP/aSAD/2kgA/9pHAP/ZRwD/2UcA/9lGAP/ZRgD/
2UcC/9hKFf/hclf89tPH2/jbzyT639MDAAAAAP/87AP/++gk//jd2/vhZvz41Rz/+NUE//jVAf/4
1QH/+NUB//jVAf/41AH/+NQB//jUAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jS
Af/40gH/+NIB//jSAf/40gH/99IB//fSAf/30QH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB
//fPAf/3zwH/988B//fOAf/3zgH/984B//fNAf/3zQH/9s0B//bNAf/2zQH/9s0B//bNAf/2zQH/
9swB//bMAf/2zAH/9ssB//bLAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9skB//XJAf/1
yQH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XFAf/1xQH/9cQB//TE
Af/0wwH/9MQE//PAAP/20Tv/7YU4/+dbAP/oZQP/52IA/+diAP/nYgD/52EA/+dhAP/mYQD/5mEA
/+ZgAP/mYAD/5l8A/+VfAP/lXwD/5V4A/+VdAP/lXQD/5V0A/+RcAP/kXAD/5FwA/+RbAP/kWwD/
41sA/+NbAP/jWgD/41oA/+NZAP/jWQD/4lgA/+JYAP/iWAD/4VcA/+FXAP/hVgD/4VYA/+BWAP/g
VgD/4FUA/+BVAP/gVAD/31QA/99UAP/fUwD/31MA/99TAP/fUgD/3lIA/95RAP/eUQD/3lEA/95R
AP/dUAD/3VAA/91PAP/dTwD/3U4A/9xOAP/cTgD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSgD/2koA
/9pKAP/aSgD/2kkA/9pJAP/aSAD/2kgA/9lHAP/ZRwD/2UcA/9lGAP/ZRwL/2EoV/+FyV/z108fb
+NvPJPnf0wMAAAAA//zsA//76CT/+N3b++Fm/PjWHP/41gT/+NUB//jVAf/41QH/+NUB//jVAf/4
1AH/+NQB//jUAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jSAf/40gH/+NIB//jS
Af/40gH/99IB//fSAf/30QH/99EB//fRAf/30QH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B
//fOAf/3zgH/984B//fNAf/3zQH/9s0B//bNAf/2zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/
9ssB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9skB//XJAf/1yAH/9cgB//XIAf/1
yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XFAf/1xQH/9MQB//TEAf/1xAT/9MAA//fR
O//thjj/51sA/+hlA//nYwD/52IA/+diAP/nYgD/52EA/+ZhAP/mYQD/5mAA/+ZgAP/mYAD/5V8A
/+VfAP/lXwD/5V4A/+VeAP/lXQD/5F0A/+RcAP/kXAD/5FwA/+RbAP/jWwD/41sA/+NbAP/jWgD/
41oA/+NZAP/jWQD/4lgA/+JYAP/iWAD/4VcA/+FXAP/hVgD/4VYA/+BWAP/gVgD/4FUA/+BVAP/g
VAD/31QA/99UAP/fUwD/31MA/99SAP/fUgD/3lIA/95RAP/eUQD/3lEA/91QAP/dUAD/3VAA/91P
AP/dTwD/3U8A/9xOAP/cTgD/3E0A/9tNAP/bTAD/20wA/9tLAP/bSgD/2koA/9pKAP/aSQD/2kkA
/9pJAP/aSAD/2UgA/9lHAP/ZRwD/2UcA/9lHAv/YSxX/4XJX/PXTx9v4288k+d7SAwAAAAD//OwD
//voJP/43dv74mb8+NYc//jWBP/41gH/+NUB//jVAf/41QH/+NUB//jVAf/41AH/+NQB//jUAf/4
1AH/+NQB//jUAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jSAf/40gH/+NIB//fR
Af/30QH/99EB//fRAf/30AH/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fOAf/3zgH/984B
//fOAf/3zgH/984B//fOAf/3zgH/980B//fNAf/3zQH/9s0B//bMAf/2ywH/9ssB//bKAf/2ygH/
9soB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9sgB//bIAf/2yAH/9ccB//XHAf/1
xwH/9ccB//XGAf/1xgH/9cUB//XEAf/1xAH/9cQB//XFBP/1wAD/99E7/+2GOP/nXAD/6GUD/+hj
AP/oYwD/6GMA/+diAP/nYgD/52EA/+dhAP/mYAD/5mAA/+ZgAP/mXwD/5l8A/+ZfAP/lXgD/5V4A
/+VeAP/lXQD/5V0A/+RcAP/kXAD/5FwA/+RbAP/kWwD/41sA/+NbAP/jWgD/41oA/+NZAP/jWQD/
4lgA/+JYAP/iWAD/4VcA/+FXAP/hVwD/4VYA/+FWAP/gVgD/4FUA/+BVAP/gVAD/4FQA/+BUAP/f
UwD/31MA/99SAP/fUgD/31IA/95RAP/eUQD/3lAA/95QAP/eUAD/3VAA/91PAP/dTwD/3U8A/9xO
AP/cTgD/3E0A/9xMAP/bTAD/20sA/9tLAP/bSgD/20oA/9pKAP/aSQD/2kkA/9pJAP/aSAD/2kgA
/9lIAP/ZRwD/2UgC/9hLFf/hclb89dPH2/faziT53tIDAAAAAP/87AP/+uck//jd2/viZvz41h7/
+NYF//jWAf/41QH/+NUB//jVAf/41QH/+NUB//jVAf/41AH/+NQB//jUAf/41AH/+NQB//jTAf/4
0wH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NIB//jSAf/40gH/99IB//fSAf/30QH/99EB//fQ
Af/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fOAf/3zgH/984B//fOAf/3zgH/984B
//fOAf/3zQH/980B//fNAf/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2ygH/
9soB//bJAf/2yQH/9skB//bJAf/2yAH/9sgB//bIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1
xgH/9cUB//XFAf/1xQH/9cUE//XBAP/30jv/7YY4/+dcAP/oZQP/6GMA/+hjAP/oYgD/52IA/+di
AP/nYQD/52EA/+ZgAP/mYAD/5mAA/+ZfAP/mXwD/5l8A/+VeAP/lXgD/5V4A/+VeAP/lXQD/5F0A
/+RcAP/kXAD/5FwA/+RbAP/jWwD/41sA/+NbAP/jWgD/41oA/+NZAP/iWQD/4lgA/+JYAP/hWAD/
4VcA/+FXAP/hVgD/4FYA/+BWAP/gVgD/4FUA/+BVAP/gVQD/4FQA/99UAP/fUwD/31MA/99TAP/f
UgD/3lIA/95RAP/eUAD/3lAA/95QAP/dUAD/3U8A/91PAP/dTwD/3E4A/9xOAP/cTQD/3EwA/9tM
AP/bSwD/20sA/9tLAP/bSgD/2koA/9pKAP/aSgD/2kkA/9pJAP/aSAD/2UgA/9lIAP/ZSAL/2EsW
/+FxVvz00MTW99rOKfnd0QMAAAAA//zrA//66Cn/99rW++Jq/PjWIP/41gX/+NYB//jVAf/41QH/
+NUB//jVAf/41QH/+NUB//jVAf/41QH/+NQB//jUAf/41AH/+NMB//jTAf/40wH/+NMB//jTAf/4
0wH/+NMB//jTAf/40gH/+NIB//jSAf/30gH/99IB//fRAf/30QH/99AB//fQAf/30AH/99AB//fQ
Af/3zwH/988B//fPAf/3zwH/988B//fOAf/3zgH/984B//fOAf/3zgH/984B//fNAf/3zQH/980B
//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/
9skB//bIAf/2yAH/9sgB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cUB//XFAf/0
xQX/88AA//fRPP/thjj/51wA/+hmA//oYwD/6GMA/+hiAP/nYgD/52IA/+dhAP/nYQD/5mAA/+Zg
AP/mYAD/5l8A/+ZfAP/mXwD/5V8A/+VeAP/lXgD/5V4A/+VeAP/kXQD/5F0A/+RdAP/kXAD/5FwA
/+NbAP/jWwD/41sA/+NbAP/jWgD/41oA/+JaAP/iWQD/4lkA/+FYAP/hWAD/4VcA/+FXAP/hVwD/
4FYA/+BWAP/gVQD/4FUA/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/99SAP/eUgD/3lIA/95RAP/e
UAD/3lAA/91QAP/dUAD/3U8A/91OAP/cTgD/3E4A/9xNAP/cTQD/3E0A/9tMAP/bSwD/20sA/9tL
AP/aSgD/2koA/9pKAP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAv/YSxP/4XJV/PXTx9z4288j+t/T
AwAAAAD//O0D//vpI//43tz74mX8+NYb//jWBP/41gH/+NUB//jVAf/41QH/+NUB//jVAf/41QH/
+NUB//jVAf/41AH/+NQB//jUAf/41AH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/4
0gH/+NIB//jSAf/30gH/99IB//fRAf/30QH/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fP
Af/3zwH/988B//fPAf/3zgH/984B//fOAf/3zgH/984B//fNAf/3zQH/9s0B//bMAf/2zAH/9swB
//bLAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bIAf/2yAH/
9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xQH/88QC//PFBf/ywAD/9tE8/+2HOv/n
XQD/6GcF/+hlAv/oZAL/6GQC/+dkAv/nYwL/52MC/+diAv/mYgL/5mIC/+ZhAv/mYQL/5mAC/+Zg
Av/lYAL/5WAC/+VgAv/lYAL/5V8C/+RfAv/kXwL/5F4C/+ReAv/kXgL/410C/+NdAv/jXAL/41wC
/+NbAv/jWwL/4lwC/+JbAv/iWgL/4loC/+FZAv/hWQL/4VkC/+FYAv/gWAL/4FcC/+BXAv/gVwL/
4FYC/+BWAv/fVwL/31YC/99VAv/fVQL/31QC/95UAv/eVAL/3lMC/95SAv/eUgL/3VIC/91SAv/d
UQL/3VAC/91QAv/dTwL/3E8C/9xOAv/cTwP/3E4D/9tOBf/bTQf/200H/9pMB//aTAf/2ksH/9pL
CP/aSwj/2ksJ/9lLCv/ZSgr/2UsK/9hNGP/hdFf89dPH3Pjc0CP64dUDAAAAAP/87AL/++gj//je
3PviZfz51x7/+dcO//nWC//41gr/+NYK//jWCv/41gr/+NYK//jVCv/41Qn/+NUJ//jVCP/41Qb/
+NQG//jUBv/41Ab/+NQG//jUA//41AP/+NMD//jTA//40wP/+NMD//jTA//40wP/+NID//jSA//4
0gP/+NID//fRA//30QP/99AD//fQA//30AP/99AD//fQA//30AP/99AD//fQA//3zwP/988D//fP
A//3zgP/984D//fOA//3zgP/984D//fNA//2zQP/9s0D//bMA//2zAP/9swD//bLA//2ywP/9ssD
//bLA//2ygP/9soD//bKA//2ygP/9skD//bJA//2yQP/9skD//bIA//2yAP/9sgD//bIA//2yAP/
9cgD//XHA//1xwP/9ccD//XGA//zxQT/88UH//LAAP/20T7/7YI4/+dWAP/oYAP/6F4A/+heAP/n
XQD/510A/+dcAP/nXAD/51sA/+ZbAP/mWgD/5loA/+ZaAP/mWQD/5lkA/+VZAP/lWQD/5VkA/+VZ
AP/lWAD/5FgA/+RXAP/kVwD/5FcA/+RWAP/jVgD/41UA/+NVAP/jVQD/41QA/+NUAP/iUwD/4lMA
/+JTAP/iUwD/4VIA/+FSAP/hUQD/4FEA/99QAP/fUAD/308A/99PAP/fTwD/304A/99OAP/eTgD/
3k0A/95NAP/eTQD/3kwA/91MAP/dSwD/3UoA/91LAP/cSgD/3EoA/9xJAP/cSQD/3EgA/9xHAP/d
Thf/3E4X/91TIv/eVyn+3lcq/t1XKv7eWzD93low/d1aMP3dWS/93Vkv/d1bNPzdXDT83Vw0/Nxb
NPzcWzT83F04/OJ7Yvv218na+uLYIvri2AIAAAAA//zsAv/76iH/+N/Y++Nr+PjZO/z52jT8+do0
/PjaNPz42jT8+No0/PjaNPz42TT8+Nk0/PjZNPz42C/9+Ncp/vjXKv741yr++NYq/vjWKv741ir+
+NUh//jUF//40gD/+NIA//jSAP/40gD/+NIA//jSAP/40QD/+NEA//jRAP/40AD/99AA//fQAP/3
0AD/988A//fPAP/3zwD/988A//fPAP/3zwD/988A//fPAP/3zgD/984A//fOAP/3zQD/980A//fN
AP/3zQD/980A//fMAP/2zAD/9swA//bLAP/2ywD/9ssA//bKAP/2ygD/9soA//bJAP/2yQD/9skA
//bJAP/2yQD/9sgA//bIAP/2yAD/9sgA//bHAP/2xwD/9scA//bHAP/2xwD/9cYA//XGAP/1xQD/
9cUA//TEAP/0wwP/878A//bQO//5yaP/+LaD//i7i//4uYr/+LmK//i5iv/4uYr/+LiK//e3iv/3
uIr/97iK//e3iv/3uIr/97eK//e3iv/3t4r/97eK//e3iv/3t4r/9reK//a3iv/2tor/9raK//a2
iv/2tYr/9rWK//a1iv/2tYr/9rWK//a1iv/2tYr/9rSK//a0iv/1tIr/9rSK//W0iv/1tIr/9bSK
//S0iv/0tIr/9LOK//Oziv/zsor/87KK//Oyiv/zsor/87KK//Oyiv/zsor/87GK//Oxiv/zsYr/
87GK//Oxiv/zsIr/87CK//Owiv/zsIr/87CK//Owiv/zsIr/86+K//GsiPbxrIj276iE6O+ohOjv
qITo76eE6O+ohOjupoLh7qWC4e6lguHto4Dc7KOA3OyjgNzso4Dc7KOA3OyigNzsoX/c87GV2vrn
4MT65dsX++bdAgAAAAD//O0B//vrFf/56aT+8p7Y/euA3P3rgdz96oDc/eqA3P3qgNz96oDc/eqA
3P3qgNz96oDc/eqA3P3rguL964To/euE6P3rhOj964To/euE6P3rhOj97Ibv/eyG7/3uiv/97or/
/e6K//3uiv/97or//e6K//3tiv/97Yr//e2K//3tiv/97Yr//e2K//3tiv/97Yr//e2K//3tiv/9
7Yr//e2K//3siv/97Ir//eyK//3siv/97Ir//eyK//3siv/97Ir//eyK//3siv/97Ir//euK//3r
iv/964r//euK//3riv/964r//euK//3qiv/96or//eqK//3qiv/96or//eqK//3qiv/96or//emK
//3piv/96Yr//emK//3piv/96Yr//emK//3piv/86Yr//OiK//zoiv/854r//OeK//zmjP/85YT/
/Oyl/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8q6KCfKtiQnyrYkQ8ayIF/GsiBfxrIgX8ayIF/GsiBfw
qoce8KqHJPCphiTvqYYj76mGI++phiPvqYYj76iFI/GriyP1xLAi+NHCF/zr5QsAAAAAAAAAAAAA
AAD/+/AK/vfIFf7zsyH9748j/e2FI/3thiP97YYj/e2GI/3thiP97YYj/e2GI/3thiP97Ycd/e2H
Hv3tiB797YgX/e2IF/3tiBf97YgX/e2JEP3tiRD97okQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADxrYkB8a2JAfGtiQHxrYkB8a2JAfGsiQHxq4gC8auIA/CriAPw
q4gD8KuIA/CriAPxq4kD8rSYA/XAqQL40cECAAAAAAAAAAAAAAAAAAAAAAAAAAD+9sYB/vOtAv3x
mgL974oD/e6IA/3uiAP97ogD/e6IA/3uiAP97ogD/e6JAv3uiQL97okC/e6JAf3tiQH97YkB/e2J
Af3tiQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPi9dwL4vXcC+L13Avi9dwL4vHYC
+Lx2Avi7dQL4u3UC+Lt1Avi7dQL4vXcC+cOKA/rNngP72bgCAAAAAAAAAAAAAAAAAAAAAAAAAAD+
9sQC/vKoA/3vjwP97HgC/et1Av3rdQL963UC/et1Av3qdQL963UC/et1Av3rdQL963YC/et2Av3r
dwL963cC/et3Af3rdwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAD4v3cQ+L53EPi9dhD4vHYW+Lx2Fvi7dR34u3Ud+Lt1Hfi7dR34unQd+Lp0Hfi5cx34unQh
+Lp0Ivi6dCL4vXoi+tCmIfzbuxf+8OEKAAAAAAAAAAAAAAAA//3wCv73yRf+87Ah/e1+Iv3rcyL9
63Qi/ep0Iv3qdCL96nQi/ep0Iv3qdCH96XMd/ep0Hf3qdB396nUd/ep1Hf3rdhb963YW/et2Fvzr
dhb763YQ++t4CPvqeAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPvUlv/5xnH/+sl6//rIeP/6yHj/+sh4//rIeP/6yHj/+sh4
//rIeP/6x3j/+sZ4//rGeP/6xnj/+sZ4//rGeP/6xnj/+sZ4//nGeP/5xXj/+cV4//nFeP/5xXj/
+cV4//nEeP/5xHj/+cR4//nEeP/5xHj/+cR4//nDeP/5w3j/+cN4//nDeP/5w3j/+cN4//nDeP/5
w3j/+cN4//nCeP/5wnj/+cF4//jBeP/4wXj/+MF4//jBeP/4wXj/+MF4//jBeP/4wXj/+MF4//jB
eP/4wXj/+MF4//jAeP/4wHj/+MB4//jAeP/4wHj/+MB4//jAeP/4wHj/+MB4//i8dO/4u3Tv+Lp0
7/i4cun4uHLp+Lhy6fe2cOL3tnDi97Zw4va2cOH2tG7d9rRu3fa0bt32tG7d97Rv3fe4cN35wobc
/uzdx/7s2Rf+7dsBAAAAAP/97gH//OwX//vsx/3wk9z96m/d/ehv3f3obt396G7d/edu3f3nbt39
527d/edu3f3nbt39527d/ehw4f3ocOL96XLp/ely6f3pcun96XLp/Oly6fvqdO/76nb3++l29/vq
eP/76nj/++p4//vqeP/76nj/++p4//vqeP/76nj/++p4//vqeP/76nj/++p4//vqeP/76Xj/++p4
//vqeP/76nj/++p4//vpeP/76Xj/++l4//vpeP/76Xj/++l4//vpeP/76Xj/++l4//voeP/76Hj/
++h4//voeP/76Hj/++h4//voeP/76Hj/++h4//voeP/76Hj/++h4//voeP/76Hj/++h4//voeP/7
6Hj/++h4//voeP/753j/++d4//vneP/753j/++d4//vneP/753j/++d4//vneP/753j/++d6//vl
cf/87Jf/86g4/++JAP/wkAP/8I8A//COAP/wjgD/8I4A/++NAP/vjAD/74wA/++MAP/viwD/74sA
/++KAP/vigD/74oA/++KAP/uigD/7okA/+6JAP/uiAD/7ogA/+6IAP/uiAD/7ocA/+6HAP/uhwD/
7ocA/+6HAP/thgD/7YYA/+2FAP/thQD/7YQA/+2EAP/thAD/7YQA/+2EAP/tgwD/7YMA/+2DAP/s
ggD/7IIA/+yCAP/sggD/7IIA/+yCAP/sgQD/7IEA/+yAAP/sgAD/7IAA/+yAAP/sgAD/638A/+t/
AP/rfwD/638A/+t/AP/rfgD/634A/+t+AP/rfgD/64Qc/+uDHP/rhSL/64Ui/+uFIv7rhSL+64Ui
/uqGJ/3qhSj96ogr/eqIK/3qhyv96ocr/eqGK/3qhiv964gx/fCcXfv+4cjc/urXIf7r1wIAAAAA
//ztAv/87CH/+N/c+uNp+/fYNP332Sv999kr/ffZK/332Cv999gr/ffYK/332Cv999gr/ffYK/33
2Cv999Yj/vfWIv731iL+99Yi/vfWIv721iL/9tYi//bTEv/20xL/9tIA//bSAP/20gD/9tEA//bR
AP/20QD/9tEA//bRAP/20QD/9tEA//bRAP/20AD/9dAA//XPAP/1zwD/9c8A//XPAP/10AD/9c8A
//XOAP/1zgD/9c4A//XOAP/1zgD/9c4A//XOAP/1zgD/9c0A//XNAP/1zQD/9c0A//TNAP/0zAD/
9MwA//TMAP/0zAD/9MwA//TMAP/0zAD/9MwA//TLAP/0ywD/9MsA//TLAP/0ywD/9MsA//TKAP/0
ygD/9MoA//TKAP/zygD/88kA//PJAP/zyQD/88kA//PJAP/zygP/8sYA//bWO//zrDr/744A//CV
Bf/wlAP/8JQD//CUA//wkwP/8JMD/++SA//vkgP/75ED/++RA//vkQP/75AD/++QA//vkAP/75AD
/++QA//ujwP/7o8D/+6OA//ujgP/7o4D/+6OA//ujQP/7o0D/+6NA//ujQP/7o0D/+2MA//tjAP/
7YsD/+2LA//tiwP/7YoD/+2KA//tigP/7YoD/+2JA//tiQP/7YkD/+yJA//siAP/7IgD/+yIA//s
iAP/7IgD/+yHA//shwP/7IcD/+yGA//shgP/7IYD/+yGA//rhgP/64UD/+uFA//rhQP/64UD/+uF
A//rhAP/64QD/+uEA//rhAP/64QE/+uDBP/rgwT/64ME/+uDBP/rgwT/6oME/+qCBf/qggf/6oII
/+qCCP/qgQj/6oEI/+qCCf/pghb/7ppV/fziyN3+6NAi/urUAgAAAAD//OwC//voIv/44N364WP9
99Yc//fXCv/31gj/99YI//fWCP/31Qj/99UI//fVCP/31Qj/99UG//fVBf/31AX/99QE//fUBP/3
1AT/99QE//bUBP/21AP/9tQD//bTA//20wP/9tMD//bTA//20wP/9tID//bSA//20gP/9tID//bS
A//20gP/9tID//bSA//10QP/9dED//XRA//10QP/9dED//XRA//10QP/9dAD//XQA//10AP/9dAD
//XQA//10AP/9dAD//XQA//1zwP/9c8D//XPA//1zwP/9M8D//TOA//0zgP/9M4D//TOA//0zgP/
9M4D//TOA//0zQP/9M0D//TNA//0zQP/9M0D//TNA//0zQP/9M0D//TMA//0zAP/9MwD//PMA//z
ywP/88sD//PLA//zywP/88sD//PMBv/yyQD/9tc9//OrOP/vjQD/8JQD//CTAP/wkwD/8JMA//CS
AP/wkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A
/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/
7YkA/+2JAP/tiQD/7YgA/+2IAP/tiAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/s
hgD/7IUA/+yFAP/shQD/7IUA/+uEAP/rhAD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64MA/+uD
AP/rggD/64IA/+uCAP/rggD/64IA/+uCAP/qgQD/6oEA/+qBAP/qgQD/6oEA/+qAAP/qgAD/6oEC
/+mCE//umlT9++LH3f7ozyL+6dICAAAAAP/77AL/++ki//jg3frhY/331hr/99YD//fWAP/31gD/
99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/2
1AD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XR
AP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA
//XPAP/1zwD/9c8A//XPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/
9M0A//TNAP/0zQD/9M0A//TNAP/0zAD/9MwA//TMAP/0zAD/88wA//PLAP/zywD/88sA//PLAP/z
ywD/88wD//LIAP/21zv/86w4/++OAP/wlAP/8JMA//CTAP/wkwD/8JIA//CSAP/vkgD/75EA/++R
AP/vkQD/75AA/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7o0A
/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiAD/
7YgA/+2IAP/siAD/7IcA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/s
hQD/64QA/+uEAP/rhAD/64QA/+uEAP/rhAD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64IA/+uC
AP/rggD/64IA/+qBAP/qgQD/6oEA/+qBAP/qgQD/6oAA/+qAAP/qgQH/6YIT/+6aVP374sfd/ujP
Iv7p0gIAAAAA//vsAv/76SL/+ODd+uFj/ffVGv/31gP/99YA//fWAP/31QD/99UA//fVAP/31QD/
99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//fUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/2
0wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XR
AP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1zwD/9c8A
//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M0A//TNAP/0zQD/9M0A//TNAP/0zQD/
9M0A//TMAP/0zAD/9MwA//TMAP/zzAD/88wA//PLAP/zywD/88sA//PLAP/zzAP/8sgA//bXO//z
qzj/748A//CVA//wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkQD/75AA/++Q
AP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA
/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiAD/7YgA/+yIAP/siAD/
7IgA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/rhAD/64QA/+uEAP/r
hAD/64QA/+uEAP/rgwD/64MA/+uDAP/rgwD/64IA/+uCAP/rggD/64IA/+uCAP/rggD/6oEA/+qB
AP/qgQD/6oEA/+qBAP/qgAD/6oAA/+qBAf/pghP/7ppU/fvix93+6M8i/unSAgAAAAD/++wC//vp
Iv/44N364WP999Ua//fWA//31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31AD/
99QA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/2
0gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQ
AP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A
//TOAP/0zgD/9M4A//TOAP/0zQD/9M0A//TNAP/0zQD/9M0A//TNAP/0zQD/9MwA//TMAP/0zAD/
9MwA//PMAP/zzAD/88wA//PLAP/zywD/88sA//PMA//yyAD/9tc7//SsOP/vjwD/8JUD//CTAP/w
kwD/8JMA//CTAP/wkwD/8JIA//CSAP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++O
AP/vjwD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA
/+2LAP/tiwD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/7YgA/+2IAP/tiAD/7IcA/+yHAP/shwD/
7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/shQD/7IUA/+uEAP/rhAD/64QA/+uEAP/r
hAD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64IA/+uCAP/rggD/64IA/+uCAP/qgQD/6oEA/+qB
AP/qgQD/6oEB/+mCD//ul039/OTK4/7o0Bz+6dIDAAAAAP/87AP/+ugi//jg3frhXP331RX/99YC
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//fUAP/31AD/
9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQ
AP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A
//TNAP/0zQD/9M0A//TNAP/0zQD/9M0A//TNAP/0zAD/9MwA//TMAP/0zAD/88wA//PMAP/zzAD/
88wA//PLAP/zywD/88wD//LIAP/21zv/9Kw4/++PAP/wlQP/8JMA//CTAP/wkwD/8JMA//CTAP/w
kgD/8JIA/++SAP/vkgD/75EA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6O
AP/ujgD/7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tiwD/7YoA
/+2KAP/tiQD/7YkA/+2JAP/tiAD/7YgA/+2IAP/siAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/
7IYA/+yGAP/shQD/7IUA/+yFAP/shQD/64QA/+uEAP/rhAD/64QA/+uEAP/rgwD/64MA/+uDAP/r
gwD/64IA/+uCAP/rggD/64IA/+uCAP/rggD/64IA/+qBAP/qgQD/6oEA/+qBAP/qggH/6YIQ/+6a
U/374sfe/ujQIf7q0gIAAAAA//zsAv/76iH/+OHe+uFh/ffVF//31gL/99YA//fWAP/31gD/99YA
//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//bUAP/21AD/
9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XP
AP/1zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M0A
//TNAP/0zQD/9M0A//TNAP/0zQD/9M0A//TNAP/zzAD/88wA//PMAP/zzAD/88sA//PLAP/zzAP/
8sgA//bXO//0rDj/8I4A//CVA//wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/v
kgD/75EA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6N
AP/ujQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA
/+2JAP/tiAD/7YgA/+yIAP/siAD/7IcA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shQD/
7IUA/+yFAP/shQD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64MA/+uDAP/rgwD/64IA/+uCAP/r
ggD/64IA/+uCAP/rggD/6oEA/+qBAP/qgQD/6oEA/+qCAf/pgxL/7plS/fvix97+6M8h/urSAgAA
AAD//OwC//vpIf/44d764WH999UY//fWA//31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//bUAP/21AD/9tMA//bTAP/20wD/
9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/1
0QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XP
AP/1zwD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M0A//TNAP/0zQD/9M0A
//TNAP/0zQD/9M0A//PMAP/zzAD/88wA//PMAP/zywD/88sA//PMA//yyAD/9tc7//SsOP/wjgD/
8ZUD//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkQD/75EA/++RAP/v
kAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7owA/+6M
AP/ujAD/7owA/+6MAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/tiQD/7IgA
/+yIAP/siAD/7IcA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shQD/7IUA/+yFAP/shQD/
7IUA/+uEAP/rhAD/64QA/+uEAP/rgwD/64MA/+uDAP/rgwD/64MA/+uDAP/rggD/64IA/+uCAP/q
gQD/6oEA/+qBAP/qgQD/6oIB/+mDEv/umVL9++LH3v7ozyH+6tICAAAAAP/87AL/++kh//jh3vrh
Yf331Rj/99cD//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31QD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/
9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/1
0QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TO
AP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zQD/9M0A//TNAP/0zQD/9M0A//TNAP/0zQD/9MwA
//PMAP/zzAD/88wA//PLAP/zywD/88wD//LIAP/21zv/9Kw4//CPAP/xlQP/8JQA//CUAP/wlAD/
8JQA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkQD/75EA/++QAP/vkAD/75AA/++QAP/v
jwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2L
AP/tiwD/7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/siAD/7IcA
/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yGAP/shQD/7IUA/+yFAP/shQD/64QA/+uEAP/rhAD/
64QA/+uDAP/rgwD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64IA/+qCAP/qgQD/6oEA/+qBAP/q
ggH/6YMS/+6ZUv384sfe/ujPIf7q0gIAAAAA//zsAv/76SH/+OHe+uFh/ffWGP/31wP/99cA//fX
AP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/
9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/1
0AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TO
AP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/9M0A//TNAP/0zAD/9MwA//TMAP/0zAD/88wA
//PMAP/zzQP/8skA//bYO//0rDj/8JAA//GWA//wlAD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/
8JIA//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/u
jgD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2L
AP/tigD/7YoA/+2JAP/tiQD/7YgA/+yIAP/siAD/7IgA/+yIAP/siAD/7IgA/+yHAP/shwD/7IYA
/+yGAP/shgD/7IYA/+yGAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64MA/+uDAP/rgwD/
64MA/+uDAP/rgwD/64IA/+uCAP/rggD/6oIA/+qCAP/qgQD/6oEA/+qCAf/pgxL/75pS/fzix97+
6M8h/urSAgAAAAD//OwC//vpIf/44d764WH999YY//fXA//31wD/99cA//fWAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//bUAP/21AD/9tQA
//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/
9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/1
0AD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TO
AP/0zgD/9M0A//TNAP/0zQD/9M0A//TNAP/0zQD/9MwA//TMAP/zzAD/88wA//PNA//yyQD/9tg7
//StOP/wjwD/8ZYD//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/
8JIA/++SAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/u
jgD/7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2J
AP/tiQD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IcA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA
/+yGAP/shQD/7IUA/+yFAP/shQD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64MA/+uDAP/rgwD/
64MA/+uDAP/rggD/64IA/+uCAP/rggD/64IB/+qEEv/vmlL9/OLH3v7ozyH+6tICAAAAAP/87AL/
++kh//jh3vriYf331hj/99cD//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99YA//fV
AP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/9tQA//bUAP/21AD/9tQA//bUAP/20wD/9tMA
//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/
9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1
zwD/9c8A//XPAP/1zwD/9c8A//XPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zQD/9M0A//TN
AP/0zQD/9M0A//TNAP/0zQD/9MwA//PMAP/zzAD/880D//PJAP/22Dv/9K04//CQAP/xlgP/8ZUA
//GVAP/wlAD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++SAP/vkQD/
75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/u
jQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2J
AP/siAD/7IgA/+yIAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/shgD/7IYA/+yGAP/shQD/7IUA
/+yFAP/rhAD/64QA/+uEAP/rhAD/64MA/+uDAP/rgwD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/
64IA/+uCAP/rgwH/6oQS//CaUv394sfe/ujPIf7q0gIAAAAA//zsAv/76SH/+OHe++Jh/fjWGP/4
1wP/+NcA//jXAP/41wD/+NcA//jXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
AP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA
//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/
9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1
zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zQD/9M0A//TN
AP/0zQD/9MwA//TMAP/0zQP/88kA//fYO//0rTj/8JAA//GWA//xlQD/8ZUA//GVAP/wlAD/8JQA
//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++QAP/vkAD/
75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujQD/7owA/+6MAP/u
jAD/7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yI
AP/shwD/7IcA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yGAP/shQD/7IUA/+yFAP/rhAD/64QA
/+uEAP/rhAD/64MA/+uDAP/rhAD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64IA/+uDAf/qhBH/
8JpS/f3ix97+6M8h/unSAgAAAAD//OwC//vpIf/44d774mH9+NYY//jXA//41wD/+NcA//jXAP/4
1wD/+NcA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fV
AP/31QD/99UA//fUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA
//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/
9dEA//XRAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/1
zwD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/9M0A//TNAP/0zAD/9MwA//TN
A//zyQD/99g7//WuOP/wkQD/8ZcD//GVAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JMA
//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/
748A/++PAP/vjwD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/t
iwD/7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IcA/+yH
AP/shwD/7IcA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA
/+uEAP/rgwD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64MB/+qDDP/wmlH9/eLH3v7nziH+6dEC
AAAAAP/76wL/+ugh//jh3vvhYf341hr/+NcD//jXAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/3
1wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//bU
AP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA
//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/
9dAA//XQAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/0zgD/9M4A//TOAP/0
zgD/9M4A//TOAP/0zgD/9M0A//TNAP/0zQD/9M0A//TMAP/0zAD/9M0D//PJAP/32Dv/9a44//CR
AP/xlwP/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JIA
//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/
7o4A/+6OAP/ujQD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2LAP/t
igD/7YoA/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/shwD/7IcA/+yHAP/shwD/7IYA/+yG
AP/shgD/7IYA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64MA
/+uDAP/rgwD/64MA/+uCAP/rgwH/6oMN//CXSv3+4sjg/ujQH/7q0wIAAAAA//zsAv/76h//+OHg
++Fg/fjWFv/41wL/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31wD/99YA//fWAP/3
1gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//bUAP/21AD/9tQA//bT
AP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA
//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/1zwD/
9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0
zQD/9M0A//TNAP/0zQD/9MwA//TMAP/0zQP/88kA//fYO//1rjj/8ZIA//KYA//xlgD/8ZYA//GW
AP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA
/++RAP/vkQD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/
7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2JAP/t
iQD/7YkA/+2JAP/tiQD/7YgA/+2IAP/siAD/7IcA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yF
AP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA/+uEAP/rhAD/64MA/+uDAP/rgwD/64MA
/+uEAf/qhA//8JpQ/f7iyOD+6NAf/urTAgAAAAD//OwC//vpH//44eD74WD9+NcY//jYAv/42AD/
+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/3
1gD/99YA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bU
AP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA
//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/1zwD/
9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/9M0A//TNAP/0
zQD/9M0A//TOA//zygD/99k7//WuOP/xkgD/8pgD//GXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GV
AP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JIA//CSAP/wkgD/75IA/++RAP/vkQD/75EA
/++QAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/
7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2JAP/t
iAD/7YgA/+yIAP/siAD/7IcA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+uE
AP/rhAD/64QA/+uEAP/rhAD/64QA/+uEAP/rgwD/64MA/+uDAP/rgwD/64QB/+qEEP/wmlD9/uLI
4P7o0B/+6tMCAAAAAP/87AL/++kf//jh4PviYP341xj/+NgD//jYAP/42AD/+NgA//jYAP/42AD/
+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/3
1QD/99UA//fVAP/31AD/99QA//fUAP/21AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bT
AP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA
//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/
9c8A//XPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/9M0A//TNAP/0zQD/9M4D//PKAP/3
2Tv/9a84//GSAP/ymAP/8ZcA//GWAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CU
AP/wlAD/8JMA//CTAP/wkwD/8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75EA/++QAP/vkAD/75AA
/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/tiwD/
7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2IAP/tiAD/7IgA/+yIAP/s
iAD/7IcA/+yHAP/shwD/7IYA/+yGAP/shgD/7IYA/+yFAP/shQD/7IQA/+uEAP/rhAD/64QA/+uE
AP/rhAD/64QA/+uDAP/rgwD/64MA/+uDAP/rhAH/6oQQ//CaUP3+4sjg/ujQH/7q0wIAAAAA//zs
Av/76R//+OHg++Jg/fjXGP/42AP/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/
99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fUAP/3
1AD/99QA//bUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bS
AP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA
//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/
9M4A//TOAP/0zgD/9M0A//TNAP/0zQD/9M0A//TNAP/0zgP/88oA//fZO//1rzj/8ZMA//KZA//y
lwD/8pcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wkwD/8JMA//CT
AP/wkwD/8JIA//CSAP/vkgD/8JIA/++RAP/vkQD/75EA/++QAP/vkAD/748A/++PAP/vjwD/748A
/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/
7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2JAP/tiAD/7YgA/+yIAP/siAD/7IcA/+yHAP/s
hwD/7IYA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+uFAP/shQD/64QA/+uEAP/rhAD/64QA/+uD
AP/rgwD/64MA/+uEAf/qhBD/8JpQ/f7iyOD+6NAf/urTAgAAAAD//OwC//vpH//44eD74mD9+NcY
//jYA//42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/
+NcA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/3
1AD/99QA//fUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bS
AP/20gD/9tIA//bSAP/10gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA
//XQAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1zwD/9M8A//TOAP/0zgD/9M4A//TOAP/0zgD/
9M4A//TOAP/0zQD/9M0A//TOA//zygD/99k7//WvOP/xkwD/8pkD//KXAP/ylwD/8ZcA//GWAP/x
lgD/8ZUA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkwD/8JIA//CS
AP/wkgD/8JIA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A
/+6OAP/ujQD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tigD/
7YkA/+2JAP/tiQD/7YkA/+2IAP/tiAD/7YgA/+yIAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/s
hgD/7IYA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64QB/+qE
EP/wmlD9/uLI4P7o0B/+6tMCAAAAAP/87AL/++kf//jh4PviYP341xj/+NgD//jYAP/42AD/+NgA
//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/99YA//fWAP/31gD/
99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/99QA//bUAP/2
1AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//XS
AP/10gD/9dIA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA
//XQAP/1zwD/9c8A//XPAP/0zwD/9M8A//TPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/
9M4D//PKAP/32Dv/9a84//GTAP/ymQP/8pgA//KXAP/xlwD/8ZcA//GWAP/xlgD/8ZYA//GVAP/x
lQD/8ZUA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/wkgD/75IA/++S
AP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A
/+6NAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/
7YkA/+2IAP/tiAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IYA/+yFAP/s
hQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA/+uDAP/rhAH/6oUQ//CaUP3+4sjg/ujQH/7q
0wIAAAAA//zsAv/76R//+OHg++Jg/fjXGP/42AP/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA
//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/
99UA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bTAP/2
0wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9dIA//XSAP/10gD/9dIA//XR
AP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/1zwD/9c8A
//XPAP/0zwD/9M8A//TPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zgP/88oA//fZO//1rzj/
8ZQA//KaA//ymAD/8pgA//KXAP/ylwD/8pcA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZQA//GUAP/w
lAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkQD/75EA/++Q
AP/vkAD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA
/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2JAP/siAD/
7IgA/+yIAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+yFAP/s
hQD/64QA/+uEAP/rhAD/64QA/+uFAf/qhRD/8JtQ/f7iyOD+6NAf/unTAgAAAAD//OwC//vpH//4
4eD74mD9+NgY//jZA//42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA
//jXAP/41wD/+NcA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/
99UA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/2
0wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XR
AP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1zwD/9c8A
//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TPA//zywD/99k7//WvOP/xlAD/8poD//KYAP/ymAD/
8pgA//KXAP/ylwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZQA//CUAP/wlAD/8JQA//CUAP/w
kwD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++QAP/vkAD/748A/++P
AP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAD/7YsA
/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IgA/+yIAP/shwD/
7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/r
hAD/64UB/+qFDP/wm1D9/uLI4P7nzx/+6dICAAAAAP/86wL/+ugf//jh4PviYP342Bj/+NkD//jZ
AP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/99cA
//fXAP/31wD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/
99UA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/2
0wD/9tMA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQ
AP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A
//TOAP/0zgD/9M8D//PLAP/32Tv/9a84//GUAP/ymgP/8pgA//KYAP/ymAD/8pgA//KYAP/xlwD/
8ZcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/w
kwD/8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/7o4A/+6O
AP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YsA
/+2KAP/tigD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IgA/+yIAP/shwD/7IcA/+yGAP/shgD/
7IYA/+yGAP/shgD/7IUA/+yFAP/shQD/7IUA/+uEAP/rhAD/64QA/+uEAP/rhQH/6oUN//CaT/7+
4snh/ujRHv7p0wEAAAAA//zsAf/76h7/+OHh+uJe/vjYFf/42QL/+NkA//jZAP/42AD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31gD/99YA
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/
9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/2
0gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQ
AP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A//TOAP/0zwP/88sA
//fZO//1sDj/8ZQA//KaA//ymQD/8pkA//KYAP/ymAD/8pgA//KXAP/ylwD/8ZcA//GXAP/xlgD/
8ZYA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CSAP/w
kgD/8JIA/++RAP/vkQD/75AA/++QAP/vkAD/75AA/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6O
AP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YoA/+2KAP/tiQD/7YkA
/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/
7IUA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uFAf/qhQ//8JpP/f7iyeH+6NEe/urUAgAAAAD/
/ewC//vpHv/54eH74l79+NgW//jZAv/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NcA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99YA
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//fUAP/21AD/
9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XP
AP/1zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/9M4A//TPA//zywD/99k7//WwOP/xlAD/8poD
//KZAP/ymQD/8pkA//KYAP/ymAD/8pcA//KXAP/xlwD/8ZcA//GWAP/xlgD/8ZYA//GVAP/xlQD/
8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JIA//CSAP/wkgD/75EA/++RAP/v
kAD/75AA/++QAP/vkAD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6M
AP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/7YkA
/+yIAP/siAD/7IgA/+yIAP/shwD/7IcA/+yGAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/shQD/
7IUA/+uEAP/rhAD/64QB/+qFD//wmk/9/uLJ4f7o0R7+6tQCAAAAAP/97AL//Oke//nh4fviXv34
2Bb/+NkC//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jY
AP/42AD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bUAP/21AD/
9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/1
0QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XP
AP/1zwD/9c8A//TOAP/0zgD/9M8D//PLAP/32Tv/9bA4//GVAP/ymgP/8pkA//KZAP/ymQD/8pkA
//KYAP/ymAD/8pcA//KXAP/ylwD/8pYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//GVAP/wlAD/
8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/75IA/++RAP/vkQD/75AA/++QAP/v
jwD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6M
AP/ujAD/7owA/+2LAP/tiwD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IgA
/+yIAP/shwD/7IcA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+yFAP/shQH/
64YP//CaT/3+48nh/unRHv7q1AIAAAAA//3sAv/86R7/+eHh++Je/fjYFv/42QL/+NkA//jZAP/4
2QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/31wD/99cA//fX
AP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA
//fVAP/31QD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/
9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/1
0QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TO
AP/0zwP/88sA//bZO//1sTj/8ZUA//KbA//ymQD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA
//KXAP/ylwD/8ZYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wlAD/
8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/v
jwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2L
AP/tiwD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IgA/+yIAP/shwD/7IcA
/+yHAP/shwD/7IYA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+yGAf/rhg//8JtP/f7jyeH+6dEe
/uvUAgAAAAD//ewC//zpHv/54eH74179+NgW//naAv/52gD/+doA//jaAP/42gD/+NoA//jZAP/4
2QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jX
AP/31wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31AD/99QA//fUAP/31AD/99QA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/
9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/1
0QD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPA//0zAD/99o7//Wx
OP/xlQD/8psD//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pcA//KXAP/xlwD/8ZYA
//GWAP/xlgD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/
8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/7o4A/+6OAP/u
jgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YoA/+2K
AP/tiQD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA
/+yGAP/shgD/7IUA/+yFAP/shQD/7IYB/+uGD//wm0/9/uPJ4f7p0R7+69QCAAAAAP/97AL//Oke
//nh4fvjXv352Rb/+doC//naAP/52gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/4
2QD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fX
AP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA
//fUAP/31AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/
9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/1
0AD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9dAD//XMAP/32jv/9bE4//KWAP/ymwP/8poA//Ka
AP/ymgD/8pkA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA//GXAP/xlwD/8ZcA//GWAP/xlgD/8ZUA
//GVAP/wlAD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkgD/
75IA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6NAP/u
jQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tigD/7YkA/+2J
AP/siAD/7IgA/+yIAP/siAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUA
/+yFAP/shgH/64YP//CbT/3+48nh/unRHv7q0wIAAAAA//3sAv/86R7/+eHh++Ne/fnZFv/52gL/
+doA//naAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/4
2AD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99cA//fWAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//fUAP/21AD/9tQA
//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/
9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/1zwD/9c8A//XPAP/1
zwD/9c8A//XPAP/10AP/9MwA//faO//2sTj/85YA//OcA//ymgD/8poA//KaAP/ymgD/8poA//Ka
AP/ymQD/8pkA//KZAP/ymAD/8pgA//KXAP/xlwD/8ZYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA
//GVAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkwD/8JIA//CSAP/wkgD/75IA/++RAP/vkQD/
75AA/++QAP/vkAD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7owA/+6MAP/u
jAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2I
AP/siAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/shgD/7IUA/+yGAf/rhhH/8JtP
/f7jyeH+6NAe/urTAgAAAAD//ewC//voHv/54eH74179+dkX//naAv/52gD/+doA//jaAP/42gD/
+NoA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NcA//jXAP/4
1wD/+NcA//jXAP/31wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
AP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bTAP/20wD/9tMA
//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/
9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XQA//0
zAD/99o7//ayOP/ylgD/85wD//KbAP/ymgD/8poA//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KY
AP/ymAD/8pgA//GXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA
//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75AA/++QAP/vkAD/
748A/++PAP/vjgD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA/+2LAP/t
iwD/7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiAD/7YgA/+yIAP/siAD/7IgA/+yH
AP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUB/+uGDf/wmk3+/uHH3v7o0CH+6tMCAAAA
AP/96wL/++kh//jf3vvjY/352Rj/+doD//naAP/52gD/+doA//jaAP/42gD/+NoA//jZAP/42QD/
+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/3
1wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fV
AP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tIA
//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/
9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9dAD//TMAP/32jv/9rI4//KXAP/z
nQP/85sA//ObAP/ymwD/8psA//KbAP/ymgD/8poA//KZAP/ymQD/8pkA//KYAP/ymAD/8pcA//KX
AP/xlwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//GVAP/xlAD/8ZQA//GUAP/wkwD/8JMA
//CTAP/wkwD/8JIA//CSAP/wkgD/75EA/++RAP/vkAD/75AA/++QAP/vkAD/748A/++PAP/vjwD/
748A/++PAP/ujgD/7o4A/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/t
iwD/7YoA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YgA/+2IAP/tiAD/7YgA/+yHAP/shwD/7IcA/+yH
AP/shwD/7IYA/+yGAP/shgH/64YO//CaTf7+48rj/unSHP7q0wEAAAAA//zsAf/86hz/+eLj++Rd
/vnaFP/52wL/+doA//naAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/
+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//fXAP/3
1wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fV
AP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA
//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/
9dAA//XQAP/10AD/9dAA//XPAP/10AP/9MwA//faO//2szj/8pcA//OdA//zmwD/85sA//ObAP/y
mwD/8psA//KaAP/ymgD/8pkA//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//GXAP/xlgD/8ZYA//GW
AP/xlgD/8ZUA//GVAP/xlQD/8ZUA//GUAP/xlAD/8ZQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JIA
//CSAP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/+6OAP/ujgD/
7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/t
iQD/7YkA/+2JAP/tiAD/7YgA/+2IAP/tiAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yH
Af/rhw7/8JtN/v7jyuP+6dIc/urTAQAAAAD//OwB//zqHP/54uP7413++doU//nbAv/52wD/+doA
//naAP/52gD/+doA//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/
+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99cA//fXAP/3
1gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//bUAP/21AD/9tQA//bU
AP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA
//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/
9dAA//XRA//0zAD/99o7//azOP/ymAD/850D//OcAP/znAD/8psA//KbAP/ymwD/8poA//KaAP/y
mQD/8pkA//KZAP/ymAD/8pgA//KYAP/ymAD/8ZcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GV
AP/xlQD/8ZQA//GUAP/xlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkgD/75EA
/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/
7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2IAP/t
iAD/7YgA/+2IAP/siAD/7IgA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYB/+uHDv/wm03+/uPK4/7p
0hz+6tMBAAAAAP/87AH//Ooc//ni4/vjXf752hT/+dsC//nbAP/52wD/+doA//naAP/52gD/+doA
//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/
+NgA//jYAP/42AD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/3
1QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bT
AP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA
//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dED//TNAP/32jv/
9rM4//KYAP/zngP/85wA//OcAP/zmwD/8psA//KbAP/ymgD/8poA//KZAP/ymQD/8pkA//KYAP/y
mAD/8pgA//KYAP/ymAD/8ZcA//GXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/xlQD/8ZQA//GU
AP/wlAD/8JQA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkAD/75AA
/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/
7YsA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2IAP/tiAD/7YgA/+yIAP/s
iAD/7IgA/+yHAP/shwD/7IcA/+yGAP/shwH/64cO//CbTf7+48rj/unSHP7q0wEAAAAA//zsAf/8
6hz/+eLj++Nd/vnaFP/52wL/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/52gD/+NoA
//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/
+NgA//jXAP/41wD/+NcA//jXAP/41wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/3
1QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bT
AP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA
//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10QP/9M0A//fbO//2szj/8pgA//OeA//znAD/
85wA//ObAP/zmwD/85sA//KbAP/ymgD/8poA//KaAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/y
mAD/8pcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CT
AP/wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A
/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/tiwD/
7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IcA/+yHAP/s
hwD/7IcA/+yIAf/riA7/8JxN/v7jyuP+6dIc/urTAQAAAAD//OwB//zqHP/54uP7413++doU//nb
Av/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42gD/+NoA
//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/
+NcA//jXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/3
1QD/99QA//fUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bT
AP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA
//XRAP/10AD/9dAA//XRA//0zgD/99s7//azOP/ymAD/854D//OdAP/znAD/85wA//ObAP/zmwD/
8psA//KaAP/ymgD/8poA//KaAP/ymQD/8pkA//KYAP/ymAD/8pgA//KYAP/ymAD/8ZcA//GXAP/x
lgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CS
AP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A
/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/
7YoA/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/siAD/7IcA/+yHAP/shwD/7IgB/+uIDv/w
nE3+/uPK4/7p0hz+6tMBAAAAAP/87AH//Ooc//ni4/vjXf752hT/+dsC//nbAP/52wD/+dsA//nb
AP/52wD/+doA//naAP/52gD/+doA//naAP/52gD/+doA//naAP/52gD/+NkA//jZAP/42QD/+NgA
//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/
99cA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99QA//fUAP/3
1AD/99QA//fUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bT
AP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dID
//TPAP/33Dv/9rQ4//KZAP/zngP/850A//OdAP/znAD/85wA//ObAP/zmwD/85sA//KaAP/ymgD/
8poA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/ymAD/8pcA//KXAP/ylwD/8ZYA//GVAP/x
lQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CS
AP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o0A
/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tiQD/
7YkA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IcA/+yHAP/siAH/64gO//CcTf7+48rj/unSHP7q0wEA
AAAA//zsAf/86hz/+eLj++Nd/vnaFP/52wL/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//na
AP/52gD/+doA//naAP/52gD/+doA//naAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA
//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99YA//fWAP/31gD/
99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//bUAP/2
1AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bS
AP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10gP/9M8A//fcO//2tDj/8pkA
//OfA//znQD/850A//OdAP/znAD/85wA//OcAP/zmwD/8psA//KaAP/ymgD/8pkA//KZAP/ymQD/
8pkA//KYAP/ymAD/8pgA//KYAP/ymAD/8pcA//KXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/x
lQD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkgD/75EA/++R
AP/vkQD/75AA/++QAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA
/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/
7IgA/+yIAP/siAD/7IcA/+yHAf/riA7/8JxN/v7jyuP+6dIc/urTAQAAAAD//OwB//zqHP/54uP7
413++doU//nbAv/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA//na
AP/52gD/+doA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA
//jYAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/
99YA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tMA//bTAP/2
0wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XR
AP/10QD/9dEA//XRAP/10QD/9dEA//XSA//0zwD/99w7//a0OP/ymgD/858D//OeAP/zngD/850A
//OdAP/znAD/85wA//ObAP/ymwD/8psA//KaAP/ymgD/8pkA//KZAP/ymQD/8pgA//KYAP/ymAD/
8pgA//KYAP/ylwD/8pcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/w
lAD/8JQA//CTAP/wkwD/8JIA//CSAP/wkgD/75IA/++SAP/vkgD/75EA/++RAP/vkQD/75AA/++Q
AP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA
/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/siAD/
7IgB/+uID//wm039/uPK4/7p0Rz+69MCAAAAAP/97QL/++oc//ni4/vjXf352hX/+dsC//nbAP/5
2wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+NkA//jZ
AP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA
//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/
99UA//fUAP/31AD/99QA//fUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/2
0wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XR
AP/10QD/9dID//TPAP/33Dv/9rQ4//OaAP/zoAP/854A//OeAP/zngD/850A//OdAP/znAD/85wA
//ObAP/ymwD/8psA//KaAP/ymgD/8poA//KZAP/ymQD/8pgA//KYAP/ymAD/8pgA//KXAP/ylwD/
8ZcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/w
kwD/8JIA//CSAP/vkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/+6O
AP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YoA
/+2KAP/tigD/7YoA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IgA/+yIAP/siQH/7IcL//CbS/7+5Mvm
/unRHv7q0wIAAAAA//zsAv/76h7/+OHh++Rh/fnbFv/53AL/+dwA//ncAP/53AD/+dwA//ncAP/5
2wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/42gD/+NkA//jZAP/42QD/+NkA//jZ
AP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA
//jXAP/41wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/
99UA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/2
0wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10gP/9M8A//fc
O//2tTj/85oA//SgA//0ngD/9J4A//OeAP/znQD/850A//OdAP/znQD/85wA//OcAP/zmwD/8psA
//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ylwD/8pcA//GWAP/xlgD/
8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CSAP/w
kgD/8JIA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6O
AP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tigD/7YoA/+2KAP/tigD/7YoA
/+2JAP/tiQD/7YkA/+2JAP/tiAD/7YgA/+2JAf/tiA3/8ZtL/v7ky+b+6dIZ/urTAQAAAAD//O0B
//vrGf/55Ob75Fr++dsS//ncAv/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/5
2wD/+dsA//naAP/52gD/+doA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZ
AP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA
//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/
9tQA//bUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/2
0gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XSA//0zwD/99w7//a1OP/zmgD/9KAD//Sf
AP/0ngD/9J4A//OdAP/znQD/850A//OdAP/znAD/85wA//OcAP/ymwD/8psA//KaAP/ymgD/8pkA
//KZAP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ylwD/8ZcA//GXAP/xlgD/8ZYA//GVAP/xlQD/
8ZUA//GVAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JIA//CSAP/wkgD/75IA/++SAP/v
kQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6N
AP/ujQD/7owA/+6MAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tigD/7YoA/+2JAP/tiQD/7YkA
/+2IAP/tiAD/7YkB/+yIDf/xm0v+/uTL5v7p0hn+6tMBAAAAAP/87QH/++sZ//nk5vvkWv752xL/
+dwC//ncAP/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/5
2gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fXAP/31gD/99YA
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/
9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gD/9tIA//XRAP/10QD/9dID//TPAP/33Dv/9rU4//ObAP/0oQP/9J8A//SfAP/0nwD/9J4A//Se
AP/znQD/850A//OcAP/znAD/85wA//OcAP/zmwD/8psA//KaAP/ymgD/8poA//KaAP/ymQD/8pkA
//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//KXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/xlQD/
8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkQD/75EA/++RAP/v
kAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6M
AP/uiwD/7YsA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/tiQH/7IkN
//GcS/7+5Mvm/unSGf7q0wEAAAAA//ztAf/76xn/+eTm/ORa/vrcEv/63AL/+twA//rcAP/53AD/
+dwA//ncAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/4
2gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/31gD/99YA//fWAP/31gD/99UA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//fUAP/31AD/99QA//fUAP/31AD/
99QA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gP/9c8A//jcO//2tTj/85sA//ShA//0nwD/9J8A//SeAP/0ngD/9J4A//OeAP/znQD/850A//Oc
AP/znAD/85wA//ObAP/ymwD/8poA//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA
//KYAP/ylwD/8pcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CTAP/wkwD/
8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/v
jwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA/+2L
AP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2KAf/siQ3/8ZxL/v7ky+b+6dIZ/urT
AQAAAAD//O0B//vrGf/55Ob85Fr++twS//rdAv/63AD/+twA//ncAP/53AD/+dwA//ncAP/53AD/
+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//jaAP/42gD/+NoA//jaAP/4
2gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jY
AP/41wD/+NcA//jXAP/41wD/+NcA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31QD/99QA//fUAP/31AD/99QA//fUAP/31AD/99QA//fUAP/31AD/9tMA//bTAP/20wD/
9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bTA//20AD/+Nw7//e1OP/z
mwD/9KED//SfAP/0nwD/9J8A//SeAP/0ngD/9J4A//SdAP/znQD/850A//OcAP/znAD/85wA//Ob
AP/zmwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ylwD/8pcA
//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GUAP/xlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/
8JIA//CTAP/wkwD/8JIA//CSAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/748A/+6OAP/v
jwD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2L
AP/tigD/7YoA/+2JAP/tiQD/7YoB/+yJDf/xnEv+/uTL5v7p0hn+6tMBAAAAAP/87QH//OsZ//nk
5vzkWv763BL/+t0C//rdAP/63AD/+t0A//rdAP/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/
+dsA//nbAP/52wD/+dsA//naAP/52gD/+NoA//naAP/52gD/+doA//jaAP/42gD/+NoA//jaAP/4
2QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jX
AP/41wD/99YA//fWAP/31gD/99YA//fVAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99QA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/
9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tMD//bQAP/43Dv/97U4//ObAP/0oQP/9J8A//SfAP/0
nwD/9J8A//SfAP/0nwD/9J4A//OeAP/znQD/850A//OdAP/znAD/85wA//ObAP/zmwD/8poA//Ka
AP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/ymAD/8pcA//GXAP/xlgD/8ZYA
//GWAP/xlQD/8ZUA//GUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/
8JIA//CSAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/u
jgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2J
AP/tiQH/7IkN//GcS/7+5Mvm/unSGf7q0wEAAAAA//3tAf/86xn/+uTm/OVa/vrcEv/63QL/+t0A
//rdAP/63QD/+t0A//rdAP/53AD/+dwA//ncAP/53AD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/
+dsA//naAP/52gD/+doA//naAP/52gD/+NoA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/4
2QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31QD/99UA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/
9tIA//bSAP/20wP/9tAA//jcO//3tTj/85sA//ShA//0nwD/9J8A//SfAP/0nwD/9J8A//SfAP/0
nwD/854A//OeAP/znQD/850A//OcAP/znAD/85wA//KbAP/ymwD/8poA//KaAP/ymQD/8pkA//KZ
AP/ymQD/8pkA//KYAP/ymAD/8pgA//KYAP/ylwD/8ZcA//GXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA
//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkQD/
75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6MAP/u
jAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2KAf/siQ7/8ZxL/v7k
y+b+6dEZ/urSAQAAAAD//ewB//3rGf/64+b85Vr++twT//rdAv/63QD/+t0A//rdAP/63QD/+t0A
//ncAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/52gD/
+doA//naAP/42gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/4
2AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
AP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/9tQA
//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bTA//20AD/
+Nw7//e1OP/0mwD/9KED//SgAP/0oAD/9KAA//SgAP/0nwD/9J8A//SfAP/zngD/854A//OeAP/z
nQD/850A//OdAP/znAD/85wA//ObAP/ymwD/8psA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZ
AP/ymAD/8pgA//KYAP/ylwD/8pcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZQA//GVAP/wlAD/8JQA
//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkQD/75EA/++QAP/vkAD/
75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/u
jAD/7owA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoB/+yJCv/xnlD+/uPK4f7p0R7+6tIBAAAAAP/+
7AH//ese//ri4fzlX/763BT/+t0C//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dwA
//nbAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+doA//jaAP/42gD/
+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/4
1wD/+NcA//jXAP/41wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fV
AP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/21AD/9tQA//bUAP/20wD/9tMA
//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tMD//bQAP/43Dv/97U4//WbAP/1oQP/
9KAA//SgAP/0oAD/9KAA//SgAP/0nwD/9J8A//OeAP/zngD/854A//OeAP/znQD/850A//OdAP/z
nAD/85sA//ObAP/ymwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KX
AP/ylwD/8pcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wkwD/8JMA
//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA/++RAP/vkQD/75AA/++QAP/vkAD/75AA/++PAP/vjwD/
748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/t
iwD/7YoA/+2KAP/tiwH/7IkK//GcSv7+5czm/urSGf7r0wEAAAAA//7tAf/+7Bn/++Xm/OVZ/vrc
Ef/63QL/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dsA//nbAP/52wD/+dsA
//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+doA//jaAP/42gD/+NoA//jZAP/42QD/
+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/3
1gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fV
AP/31QD/99UA//fVAP/31QD/99UA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA
//bTAP/20wD/9tIA//bSAP/20gP/9tAA//jcO//3tjj/9ZwA//WhA//0oAD/9KAA//SgAP/0oAD/
9KAA//SgAP/0nwD/858A//OeAP/zngD/854A//OdAP/znQD/850A//OcAP/znAD/85wA//KbAP/y
mwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA//KXAP/ylwD/8ZcA//GW
AP/xlgD/8ZYA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA
//CSAP/wkgD/75IA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/748A/+6OAP/ujgD/
7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2LAf/s
igr/8Z1K/v7lzOb+6tIZ/uvTAQAAAAD//u0B//7sGf/75eb85Vn++twR//rdAv/63QD/+t0A//rd
AP/63QD/+t0A//rdAP/63QD/+twA//ncAP/53AD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA
//naAP/52gD/+doA//naAP/52gD/+doA//naAP/52gD/+NoA//jZAP/42QD/+NkA//jZAP/42QD/
+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fWAP/3
1gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fV
AP/31QD/99UA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA
//bTA//20AD/+N07//e2OP/0nAD/9aID//WhAP/1oQD/9aEA//ShAP/0oQD/9KAA//SgAP/0nwD/
9J8A//SfAP/zngD/854A//OdAP/znQD/850A//OcAP/znAD/85wA//ObAP/zmwD/85sA//KaAP/y
mgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/ylwD/8pcA//GWAP/xlgD/8ZUA//GV
AP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkgD/8JIA
/++RAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/
7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YwB/+yKCv/xnkr+/uXM5v7q0hn+
69MBAAAAAP/+7QH//uwZ//vl5vzlWf763BH/+t0C//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rd
AP/63QD/+twA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA
//naAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/
+NgA//jYAP/42AD/+NgA//jXAP/41wD/99cA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/3
1gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fV
AP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tQD//bRAP/43Tv/97Y4
//ScAP/1ogP/9aEA//WhAP/1oQD/9KEA//ShAP/0oAD/9KAA//SgAP/0nwD/9J8A//OeAP/zngD/
854A//OdAP/znQD/85wA//OcAP/znAD/85sA//ObAP/zmwD/8psA//KaAP/ymgD/8pkA//KZAP/y
mQD/8pkA//KZAP/ymAD/8pgA//KXAP/ylwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//GV
AP/wlAD/8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CSAP/wkgD/75IA/++RAP/vkQD/75EA
/++QAP/vkAD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujQD/
7owA/+6MAP/ujAD/7YsA/+2LAP/tjAH/7IsK//GeSv7+5czm/urSGf7r0wEAAAAA//7tAf/+7Bn/
++Xm/OVZ/vrcEf/63gL/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+dwA//nc
AP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA//naAP/52gD/+doA
//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/
+NgA//jXAP/31wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/3
1gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/21AD/9tQA//bU
AP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/21AP/9tEA//jdO//3tjj/9JwA//WiA//1oQD/9aEA
//WhAP/0oQD/9KEA//SgAP/0oAD/9KAA//SgAP/0oAD/858A//OfAP/zngD/854A//OdAP/znQD/
850A//OcAP/znAD/85sA//ObAP/ymwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/y
mAD/8pgA//KYAP/xlwD/8ZcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZQA//CUAP/wlAD/8JQA//CU
AP/wlAD/8JQA//CTAP/wkwD/8JIA//CSAP/vkgD/75IA/++SAP/vkQD/75EA/++QAP/vkAD/75AA
/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujAD/7owA/+6MAP/tiwD/
7YsA/+2MAf/siwr/8Z5K/v7lzOb+6tIZ/uvTAQAAAAD//u0B//7sGf/75eb85Vn++t0R//reAv/6
3gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//rdAP/53QD/+d0A//ncAP/53AD/+dwA//nb
AP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA
//naAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jXAP/41wD/
+NcA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/99cA//fWAP/31gD/99YA//fWAP/3
1gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bU
AP/20wD/9tMA//bUA//20QD/+N07//e3OP/0nQD/9aID//WhAP/1oQD/9aEA//ShAP/0oQD/9KEA
//SgAP/0oAD/9KAA//SgAP/0oAD/858A//OeAP/zngD/854A//OdAP/znQD/85wA//OcAP/znAD/
85sA//ObAP/ymwD/8poA//KaAP/ymQD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/x
lwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/xlAD/8JQA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CT
AP/wkwD/8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75EA/++QAP/vkAD/748A/++PAP/vjwD/7o4A
/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/tiwD/7YwB/+yLCv/xnkr+
/ubM5v7r0hn+7NMBAAAAAP/+7QH//uwZ//vl5vzlWf763RH/+t4C//reAP/63gD/+t4A//reAP/6
3gD/+t0A//rdAP/63QD/+t0A//ndAP/53QD/+d0A//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nb
AP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/52gD/+doA//jaAP/42gD/+NkA
//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/
+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/3
1QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tQD//bR
AP/43Tv/+Lc4//SdAP/1owP/9aIA//WiAP/1ogD/9aEA//WhAP/0oQD/9KEA//SgAP/0oAD/9KAA
//SgAP/0nwD/9J8A//SeAP/zngD/854A//OdAP/znQD/850A//OcAP/znAD/85sA//ObAP/ymgD/
8poA//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/xlwD/8ZcA//GWAP/x
lgD/8ZUA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JIA//CS
AP/wkgD/75IA/++RAP/vkQD/75EA/++QAP/vkAD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A
/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAH/7YsK//GfSv7+5szm/uvSGf7s0wEAAAAA
//7tAf/+7Bn/++Xm/OVZ/vrdEf/63gL/+t4A//reAP/63gD/+t4A//reAP/63QD/+t0A//rdAP/6
3QD/+d0A//ndAP/53QD/+d0A//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nb
AP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA
//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/
+NcA//fXAP/31wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fUAP/3
1AD/99QA//fUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wP/9tEA//jdO//4tzj/9Z4A//Wj
A//1ogD/9aIA//WiAP/1oQD/9aEA//ShAP/0oQD/9KAA//SgAP/0oAD/9KAA//SgAP/0nwD/9J8A
//SeAP/zngD/854A//OdAP/znQD/85wA//OcAP/znAD/85sA//ObAP/ymwD/8poA//KaAP/ymgD/
8poA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA//GXAP/xlwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/x
lQD/8ZUA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkgD/75EA/++R
AP/vkQD/75EA/++QAP/vkAD/748A/++PAP/vjgD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A
/+6MAP/ujAD/7owA/+6NAf/tjAr/8Z9K/v7mzOb+69IZ/uzTAQAAAAD//u0B//7sGf/75eb85Vn+
+t0R//reAv/63gD/+t4A//reAP/63gD/+t4A//reAP/63QD/+t0A//rdAP/53QD/+d0A//ndAP/5
3QD/+d0A//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//na
AP/52gD/+doA//naAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA
//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/
99cA//fXAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//fUAP/2
1AD/9tQA//bUAP/20wD/9tMA//bUA//20QD/+N07//i4OP/2ngD/9qMD//WiAP/1ogD/9aIA//Wi
AP/1ogD/9aEA//WhAP/0oQD/9KEA//ShAP/0oAD/9KAA//SfAP/0nwD/9J8A//SeAP/0ngD/854A
//OdAP/znQD/850A//OcAP/znAD/85sA//ObAP/zmwD/8psA//KbAP/ymgD/8poA//KaAP/ymQD/
8pkA//KYAP/ymAD/8pcA//KXAP/ylwD/8ZcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/x
lQD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75EA/++RAP/vkQD/75AA/++Q
AP/vkAD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7o0B
/+2LBv/xnUP//ubM5v7r0hn+7NMBAAAAAP/+7QH//uwZ//vl5vzmWf763RH/+t4C//reAP/63gD/
+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/5
3AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//na
AP/52gD/+doA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA
//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/
99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//bUAP/2
1AD/9tUD//bSAP/43jv/+Lg4//afAP/2pAP/9aMA//WiAP/1ogD/9aIA//WiAP/1oQD/9aEA//Sh
AP/0oQD/9KEA//SgAP/0oAD/9J8A//SfAP/0ngD/9J4A//SeAP/zngD/850A//OdAP/znQD/850A
//OcAP/znAD/85wA//ObAP/ymwD/8psA//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KYAP/ymAD/
8pcA//KXAP/xlwD/8ZYA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CTAP/w
kwD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75EA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++P
AP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujAH/7YsG//GdQ//+6M7r/uzT
FAAAAAAAAAAAAAAAAP/+7RT//Ojr/OZS//rdDP/63gL/+t4A//reAP/63gD/+t4A//reAP/63gD/
+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/5
3AD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+NoA//ja
AP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA
//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99YA//fWAP/31gD/
99YA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21QP/9dIA//jeO//4
uDj/9p8A//akA//1owD/9aMA//WjAP/1ogD/9aIA//WhAP/1oQD/9KEA//ShAP/0oQD/9KAA//Sg
AP/0nwD/9J8A//SeAP/0ngD/9J4A//OeAP/zngD/850A//OdAP/znQD/85wA//OcAP/znAD/85wA
//KbAP/ymwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA//GXAP/xlwD/
8ZYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CTAP/w
kwD/8JMA//CTAP/vkgD/75IA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/vjwD/7o4A/+6O
AP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAf/tiwb/8Z1D//7ozuv+7NMUAAAAAAAAAAAAAAAA//7t
FP/86Ov85lL/+t0M//reAv/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63QD/
+t0A//rdAP/63QD/+t0A//ncAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dsA//nbAP/5
2wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42QD/+NkA//jZ
AP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA
//jXAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99UA//fVAP/31QD/
99UA//fVAP/31AD/99QA//fUAP/21AD/9tQA//bVA//20gD/+N47//i4OP/2nwD/9qQD//ajAP/2
owD/9aIA//WiAP/1ogD/9aIA//WiAP/1ogD/9aEA//ShAP/0oQD/9KAA//SgAP/0nwD/9J8A//Se
AP/0nwD/9J8A//SeAP/0ngD/850A//OdAP/znAD/85wA//OcAP/znAD/85sA//KbAP/ymwD/8poA
//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KYAP/ymAD/8pcA//KXAP/xlwD/8ZYA//GWAP/xlQD/
8ZUA//GVAP/xlQD/8ZQA//GUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/v
kgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6N
AP/ujQD/7o0B/+2LBv/xnkP//ujO6/7s0xQAAAAAAAAAAAAAAAD//u0U//zo6/zmUv/63gz/+t8C
//rfAP/63wD/+t8A//rfAP/63wD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/
+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/5
2wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//jaAP/42gD/+NoA//jaAP/42gD/+NkA//jZ
AP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA
//jXAP/41wD/+NcA//jXAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/
99UA//fUAP/31AD/99UD//fSAP/53jv/+Lk4//afAP/2pQP/9qMA//ajAP/2ogD/9aIA//WiAP/1
ogD/9aIA//WiAP/1ogD/9aEA//ShAP/0oAD/9KAA//SgAP/0nwD/9J8A//SfAP/0nwD/9J8A//Se
AP/0ngD/850A//OdAP/znAD/85wA//OcAP/zmwD/85sA//KbAP/ymgD/8poA//KaAP/ymgD/8pkA
//KZAP/ymQD/8pkA//KYAP/ymAD/8pcA//KXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlAD/
8ZQA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/vkgD/75EA/++RAP/v
kAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6NAP/ujgH/7osG//Ge
Q//+6M7r/uzTFAAAAAAAAAAAAAAAAP/+7RT//Ojr/OZS//reDP/63wL/+t8A//rfAP/63wD/+t8A
//rfAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/53AD/
+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/5
2wD/+doA//naAP/52gD/+NoA//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AP/
99IA//neO//4uTj/9qAA//alA//2pAD/9qMA//ajAP/1ogD/9aIA//WiAP/1ogD/9aIA//WiAP/1
oQD/9KEA//ShAP/0oAD/9KAA//SgAP/0nwD/9J8A//SfAP/0nwD/9J8A//SeAP/zngD/850A//Od
AP/znAD/85wA//OcAP/zmwD/8psA//KaAP/ymgD/8poA//KaAP/ymQD/8pkA//KZAP/ymQD/8pkA
//KYAP/ymAD/8pcA//GXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlAD/8JQA//CUAP/wlAD/
8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA/++SAP/vkgD/75EA/++RAP/vkQD/75AA/++QAP/v
jwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6NAf/tjAb/8Z5D//7ozuv+7NMUAAAAAAAA
AAAAAAAA//7tFP/86Ov851L/+t4M//rfAv/63wD/+t8A//rfAP/63wD/+t8A//rfAP/63gD/+t4A
//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//ncAP/53AD/+dwA//ncAP/53AD/
+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/5
2gD/+NoA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/99YA//fWAP/31gD/99UA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fVA//30gD/+d47//i5OP/2oAD/
9qYD//akAP/2pAD/9qMA//ajAP/2owD/9aMA//WjAP/1ogD/9aIA//WiAP/1oQD/9aEA//SgAP/0
oAD/9KAA//SgAP/0oAD/9KAA//SfAP/0nwD/9J8A//OeAP/zngD/850A//OdAP/znQD/85wA//Oc
AP/zmwD/85sA//OaAP/zmgD/85oA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA
//KXAP/ylwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wlAD/
8JMA//CTAP/wkwD/8JMA//CSAP/vkgD/75EA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/v
jwD/748A/++OAP/vjgD/744B/+6MBv/yn0P//ujO6/7s0xQAAAAAAAAAAAAAAAD//u0U//zo6/zn
Uv/73gz/+98C//vfAP/73wD/+t8A//rfAP/63wD/+t8A//rfAP/63wD/+t8A//reAP/63gD/+t4A
//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//ncAP/53AD/+dwA//ncAP/53AD/
+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/5
2gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jY
AP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA
//fVAP/31QD/99UA//fVAP/31QD/99YD//fTAP/53zv/+Lo4//ahAP/2pgP/9qUA//akAP/2pAD/
9qMA//ajAP/1owD/9aMA//WiAP/1ogD/9aIA//WiAP/1oQD/9KEA//ShAP/0oAD/9KAA//SgAP/0
oAD/9KAA//SfAP/0nwD/858A//OeAP/zngD/850A//OdAP/znQD/85wA//OcAP/zmwD/85sA//Ob
AP/zmgD/8poA//KaAP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ymAD/8pgA//KXAP/xlwD/8ZYA
//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/
8JIA/++SAP/vkQD/75EA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/744A/++OAP/v
jwH/74wG//KfQ//+6M7r/uzTFAAAAAAAAAAAAAAAAP/+7RT//Ojr/OdS//veDP/73wL/+98A//vf
AP/63wD/+t8A//rfAP/63wD/+t8A//rfAP/63wD/+t4A//reAP/63gD/+t4A//reAP/63QD/+t0A
//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/
+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/42QD/+NkA//jZAP/4
2QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jX
AP/41wD/+NcA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31QP/99MA//nfO//4ujj/9qEA//anA//2pQD/9qUA//alAP/2pAD/9qQA//WjAP/1owD/
9aIA//WiAP/1ogD/9aIA//WhAP/0oQD/9KEA//SgAP/0oAD/9KAA//SgAP/0oAD/9J8A//SfAP/z
nwD/858A//OeAP/zngD/854A//OdAP/znAD/85wA//OcAP/zmwD/85sA//OaAP/ymgD/8poA//KZ
AP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//GXAP/xlwD/8ZYA//GWAP/xlgD/8ZUA
//GVAP/wlAD/8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/75IA/++RAP/vkQD/
75EA/++RAP/vkAD/75AA/++QAP/vkAD/748A/++PAP/vjgD/744A/++OAf/ujQb/8p9D//7pzuv+
7NMUAAAAAAAAAAAAAAAA//7tFP/86Ov851L/+94M//vfAv/73wD/+98A//rfAP/63wD/+t8A//rf
AP/63wD/+t8A//rfAP/63gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//rdAP/63QD/+t0A
//rdAP/63QD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/
+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/4
2QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/99YA//fW
AP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fWA//30wD/+d87
//i6OP/2oQD/9qcD//alAP/2pQD/9qQA//akAP/2pAD/9qQA//ajAP/1owD/9aMA//WjAP/1owD/
9aIA//WiAP/1oQD/9KEA//ShAP/0oQD/9KAA//SgAP/0oAD/9KAA//SfAP/0nwD/9J4A//SeAP/0
ngD/854A//OdAP/znQD/85wA//OcAP/znAD/85sA//ObAP/zmgD/8poA//KZAP/ymgD/8poA//KZ
AP/ymQD/8pgA//KYAP/ylwD/8pcA//KXAP/xlwD/8ZYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA
//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA/++SAP/vkQD/75EA/++RAP/vkAD/
75AA/++QAP/vjwD/748A/++PAP/vjwD/748B/++NA//yoEP//unO6/7s0xQAAAAAAAAAAAAAAAD/
/u0U//zo6/znUv/73gz/++AC//vgAP/74AD/+98A//vfAP/73wD/+t8A//rfAP/63wD/+t8A//re
AP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A
//rdAP/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/
+dsA//naAP/52gD/+doA//naAP/52gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/4
2QD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UD//fTAP/53zv/+bo4//WhAP/2pwP/9qUA
//alAP/2pQD/9qQA//akAP/2pAD/9qMA//WjAP/1owD/9aMA//WjAP/1owD/9aIA//WiAP/0oQD/
9KEA//ShAP/0oAD/9KAA//SgAP/0oAD/9J8A//SfAP/0nwD/9J4A//SeAP/zngD/850A//OdAP/z
nAD/85wA//OcAP/znAD/85sA//ObAP/ymgD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pgA//KY
AP/ymAD/8pcA//KXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA
//CUAP/wkwD/8JMA//CTAP/wkwD/75IA/++SAP/vkgD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/
748A/++PAP/vkAH/740D//KeO//+69Dw/u3UDwAAAAAAAAAAAAAAAP/+7g///erw/OdK//vfB//7
4AL/++AA//vgAP/73wD/+98A//vfAP/63wD/+t8A//rfAP/63wD/+t4A//reAP/63gD/+t4A//re
AP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//ncAP/53AD/+dwA
//ncAP/53AD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/
+doA//naAP/52gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/4
2AD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31QP/99MA//nfO//5uzj/9qIA//anA//2pgD/9qUA//alAP/2pQD/9qQA
//akAP/2owD/9qMA//WjAP/1owD/9aMA//WjAP/1ogD/9aIA//WiAP/0oQD/9KEA//SgAP/0oAD/
9KAA//SgAP/0oAD/9J8A//SfAP/0nwD/9J4A//OeAP/znQD/850A//OdAP/znAD/85wA//OcAP/z
mwD/85sA//ObAP/ymgD/8poA//KaAP/ymgD/8poA//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//GX
AP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA
//CTAP/wkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++QAf/vjQP/
8p47//7r0PD+7dQPAAAAAAAAAAAAAAAA//7uD//96vD850r/+98H//vgAv/74AD/++AA//vfAP/7
3wD/+98A//rfAP/63wD/+t8A//rfAP/63gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//rd
AP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dsA
//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/52gD/+doA//naAP/42QD/
+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jXAP/4
1wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
A//30wD/+d87//m7OP/3ogD/96gD//amAP/2pgD/9qUA//alAP/2pQD/9qQA//akAP/2pAD/9qQA
//akAP/1owD/9aMA//WjAP/1ogD/9aIA//WiAP/1oQD/9KEA//ShAP/0oQD/9KEA//SgAP/0oAD/
9J8A//SfAP/0nwD/9J4A//SeAP/zngD/850A//OdAP/znAD/85wA//ObAP/zmwD/85sA//ObAP/z
mwD/8psA//KaAP/ymgD/8poA//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//KXAP/xlgD/8ZYA//GW
AP/xlQD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CSAP/wkgD/8JIA
//CSAP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/75AB/++NA//ynjv//uvQ8P7t1A8AAAAA
AAAAAAAAAAD//u4P//7q8PzoSv/73wf/++AC//vgAP/74AD/++AA//vgAP/74AD/+98A//vfAP/7
3wD/+98A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//rd
AP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rcAP/63AD/+twA//ncAP/53AD/+dwA
//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA//naAP/52gD/+doA//naAP/42gD/
+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NcA//jYAP/41wD/+NcA//jXAP/4
1wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99cD//fTAP/53zv/+bs4//ei
AP/3qAP/9qcA//amAP/2pgD/9qUA//alAP/2pQD/9qQA//akAP/2pAD/9qQA//WjAP/1owD/9aMA
//WiAP/1ogD/9aIA//WiAP/0oQD/9KEA//ShAP/0oQD/9KAA//SgAP/0oAD/9KAA//SfAP/0nwD/
9J4A//OeAP/znQD/850A//OdAP/znAD/85wA//ObAP/zmwD/85sA//ObAP/ymwD/8psA//KbAP/y
mgD/8poA//KZAP/ymQD/8pgA//KYAP/ylwD/8pcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GV
AP/xlQD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JIA//CSAP/wkgD/8JIA/++SAP/vkgD/75EA
/++RAP/vkAD/75AA/++QAP/vjwH/740D//KeO//+69Dw/u3UDwAAAAAAAAAAAAAAAP/+7g///urw
/OhK//vfB//74AL/++AA//vgAP/74AD/++AA//vgAP/73wD/+98A//vfAP/73wD/+t4A//reAP/6
3gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rd
AP/63QD/+t0A//rdAP/63QD/+twA//rcAP/63AD/+dwA//ncAP/53AD/+dsA//nbAP/52wD/+dsA
//nbAP/52gD/+doA//naAP/52gD/+doA//naAP/52gD/+doA//jaAP/42gD/+NoA//jZAP/42QD/
+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/3
1wD/99cA//fXAP/31wD/99YA//fWAP/31gP/99QA//nfO//5uzj/96MA//eoA//2pwD/9qcA//an
AP/2pgD/9qUA//alAP/2pQD/9qQA//akAP/2pAD/9aMA//WjAP/1owD/9aMA//WiAP/1ogD/9aIA
//ShAP/0oQD/9KEA//ShAP/0oAD/9KAA//SgAP/0oAD/9KAA//SfAP/0nwD/854A//OeAP/znQD/
850A//OdAP/znAD/85wA//ObAP/zmwD/85sA//KbAP/ymwD/8psA//KaAP/ymgD/8poA//KZAP/y
mQD/8pkA//KYAP/ymAD/8ZcA//GXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CU
AP/wlAD/8JMA//CTAP/wkgD/8JIA//CSAP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkAD/75AA
/++QAf/vjQP/8p47//7r0PD+7dQPAAAAAAAAAAAAAAAA//7uD//+6vD86Er/+98H//vgAv/74AD/
++AA//vgAP/74AD/++AA//vfAP/73wD/+98A//vfAP/63gD/+t4A//reAP/63gD/+t4A//reAP/6
3gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rd
AP/63QD/+t0A//rcAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA
//naAP/52gD/+doA//naAP/52gD/+NoA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42QD/
+NkA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/3
1gD/99YA//fWA//31AD/+d87//m7OP/3pAD/96kD//enAP/3pwD/9qcA//amAP/2pgD/9qYA//al
AP/2pQD/9qUA//akAP/2pAD/9qQA//WkAP/1owD/9aMA//WiAP/1ogD/9aIA//WhAP/1oQD/9aEA
//ShAP/0oQD/9KAA//SgAP/0oAD/9J8A//SfAP/0nwD/9J4A//SeAP/zngD/850A//OdAP/znAD/
85wA//OcAP/znAD/85sA//ObAP/zmwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pgA//KYAP/y
mAD/8pcA//GXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wkwD/8JMA//CT
AP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkgD/75EA/++RAP/vkAD/75EB/++OA//ynzv//uvQ
8P7t1A8AAAAAAAAAAAAAAAD//u4P//7q8PzoSv/74Af/++EC//vhAP/74QD/++AA//vgAP/74AD/
+98A//vfAP/73wD/+98A//rfAP/63wD/+t8A//rfAP/63wD/+t4A//reAP/63gD/+t4A//reAP/6
3gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//nc
AP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA
//naAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42AD/
+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//fWAP/31gD/99cD//fUAP/5
3zv/+bs4//ekAP/3qQP/96cA//enAP/3pwD/9qYA//amAP/2pgD/9qYA//alAP/2pQD/9qQA//ak
AP/2pAD/9aQA//WkAP/1owD/9aMA//WiAP/1ogD/9aIA//WhAP/1oQD/9KEA//ShAP/0oAD/9KAA
//SgAP/0nwD/9J8A//SfAP/0nwD/9J4A//OeAP/zngD/850A//OdAP/znAD/85wA//OcAP/zmwD/
85sA//OaAP/ymgD/8poA//KaAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/ylwD/8ZcA//GXAP/x
lgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkwD/8JMA//CT
AP/wkgD/8JIA/++SAP/vkQD/75EA/++QAP/vkAH/744D//KfO//+69Dw/u3UDwAAAAAAAAAAAAAA
AP/+7g///urw/OlK//vgCP/74QL/++EA//vhAP/74AD/++AA//vgAP/74AD/++AA//vfAP/73wD/
+t8A//rfAP/63wD/+t8A//rfAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/6
3gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+d0A//ncAP/53AD/+dwA//nc
AP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+doA
//jaAP/42gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/
+NgA//jYAP/41wD/+NcA//jXAP/41wD/99cA//fWAP/31gP/99QA//nfO//5vTz/96UA//erCP/3
qQX/96kF//epBf/2qAX/9qgF//aoBf/2qAX/9qcF//anBf/2pwX/9qYF//amBf/2pgX/9aYF//Wm
Bf/1pQX/9aUF//WkBf/1pAX/9aQF//WjBf/1owX/9aMF//SiBf/0ogX/9KIF//ShBf/0oQX/9KEF
//ShBf/0oAX/9KAF//SgBf/zoAX/858F//OfBf/zngX/854F//OdBf/znQX/850F//OcBf/znAX/
85wF//KcBf/ymwX/8psF//KbBf/ymwX/8poF//KaBf/ymQX/8pkF//KZBf/xmAX/8ZgF//GYBf/x
lwX/8ZcF//GXBf/xlgX/8JYF//CVBf/wlQX/8JUF//CVBf/wlQX/8JUF//CVBf/wlAX/8JQG//CU
Bv/vkwb/75MG/++TB//vkQb/8qE7//7r0fD+7dMPAAAAAAAAAAAAAAAA//7tD//+6vD86Uz/++AI
//viCP/74gb/++IG//vhBv/74Qb/++EF//vhBf/74QX/++AF//vfBf/64AX/+uAF//rgBf/64AX/
+t8F//rfBf/63wX/+t8F//rfBf/63wX/+t8F//rfBf/63wX/+t8F//rfBf/63wX/+t8F//rfBf/6
3wX/+t8F//reBf/63gX/+t4F//reBf/53gX/+d0F//ndBf/53QX/+d0F//ndBf/53QX/+d0F//nc
Bf/53AX/+dwF//ncBf/53AX/+dsF//nbBf/52wX/+dsF//nbBf/52wX/+NsF//jbBf/42wX/+NsF
//jbBf/42gX/+NoF//jaBf/42QX/+NkF//jZBf/42QX/+NkF//jZBf/42QX/+NkF//jYBf/42AX/
+NgF//jYBf/32AX/99cF//fXCP/31QD/+eA///i2OP/2nAD/9qID//ahAP/2oQD/9qAA//afAP/2
nwD/9Z8A//WeAP/1ngD/9Z0A//WdAP/1nQD/9Z0A//WcAP/1nAD/9ZwA//ScAP/0mwD/9JsA//Sb
AP/0mgD/9JoA//SZAP/0mQD/9JgA//OYAP/zmAD/85gA//OYAP/zlwD/85cA//OXAP/zlgD/85YA
//KWAP/ylQD/8pUA//KVAP/ylAD/8pQA//KTAP/ykwD/8pIA//KSAP/ykQD/8ZEA//GRAP/xkQD/
8ZAA//GQAP/xjwD/8Y8A//GPAP/xjgD/8Y4A//CNAP/wjQD/8I8Q//COEP/wjhD/8I4Q//CPGv/v
jxr/748a/++PGv/vjxr/748a/++PGv/vjhr/744a/++OGv/vjRr/740a/+6OIv/ujiL/7o4j/+2M
JP/xnEP//urO8P7w2w8AAAAAAAAAAAAAAAD//u8O//7n8PzpSv764Cb/+98j//vgI//73yL/+94a
//veGv/73hr/+94a//veGv/73hr/+94a//rdGv/63Rr/+t0a//rdGv/63Rr/+twQ//rcEP/63BD/
+twQ//rbAP/62wD/+tsA//rbAP/62wD/+tsA//rbAP/62wD/+tsA//rbAP/62wD/+tsA//raAP/6
2gD/+doA//naAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jY
AP/42AD/+NcA//jXAP/41wD/+NcA//nXAP/41wD/99cA//fXAP/31wD/99cA//fWAP/31gD/99YA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//bUAP/21AD/
9tQD//bQAP/43Tv//OKo//vXiv/82pH//NmQ//zZkP/82ZD//NmQ//vZkP/72ZD/+9iQ//vYkP/7
2JD/+9iQ//vYkP/72JD/+9eQ//vXkP/715D/+9eQ//vXkP/715D/+9eQ//vXkP/71pD/+9eQ//vW
kP/61pD/+taQ//rWkP/61pD/+taQ//rWkP/61ZD/+tWQ//rVkP/61ZD/+tWQ//rUkP/61JD/+tSQ
//rUkP/61JD/+tSQ//rUkP/605D/+tOQ//rTkP/505D/+dOQ//nTkP/50pD/+dOQ//nSkP/50pD/
+dKQ//nSkP/50pD/+dGQ//nRkP/50I//+dCP//nQj//50I//+dCP//nPjv/4zo7/+M6O//jOjv/4
zo7/+M6O//jOjv/4zo7/+M6O//jOjv/4zY7/+M6O//jNjv/4zY7/+MuL//nTmv//9efw//PiDwAA
AAAAAAAAAAAAAP//8gz///LD/vWk/P3xiv/98o///fKO//3yjv/98o7//fGO//3xjv/98Y7//fGO
//3yjv/98o7//fGO//3xjv/98Y7//fGO//3xj//98Y///fGP//3xj//98Y///fGQ//3xkP/98ZD/
/fGQ//3xkP/98ZD//fGQ//3xkP/98ZD//fGQ//3xkP/98ZD//fCQ//3wkP/98JD//fCQ//zwkP/8
8JD//PCQ//zwkP/88JD//PCQ//zwkP/88JD//O+Q//zvkP/875D//O+Q//zvkP/875D//O+Q//zv
kP/875D//O+Q//zvkP/875D//O+Q//zvkP/875D//O6Q//zukP/87pD//O6Q//zukP/87pD//O6Q
//zukP/87pD//O6Q//zukP/87pD//O6Q//zukP/87pD//O6Q//zukP/87pH/++yK//zxqf8AAAAA
AAAAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAD//////////AAAOAAAH/////////4AAAD/////////
/4AAfAAA//////////4AAAD///////////////////////////4AAAD/////////////////////
//////4AAAD//////////+AAfAAA//////////4AAAD//////////gAAOAAAD/////////4AAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAA=')
	#endregion
	$formWindowsOptimizationT.MaximizeBox = $False
	$formWindowsOptimizationT.Name = 'formWindowsOptimizationT'
	$formWindowsOptimizationT.StartPosition = 'CenterScreen'
	$formWindowsOptimizationT.Text = 'Windows Optimization Toolbox By paint29'
	$formWindowsOptimizationT.add_Load($formWindowsOptimizationT_Load)
	#
	# tabcontrol1
	#
	$tabcontrol1.Controls.Add($tabpage1)
	$tabcontrol1.Controls.Add($tabpage6)
	$tabcontrol1.Controls.Add($tabpage3)
	$tabcontrol1.Controls.Add($tabpage8)
	$tabcontrol1.Font = 'Microsoft Sans Serif, 8.25pt'
	$tabcontrol1.Location = '5, 3'
	$tabcontrol1.Name = 'tabcontrol1'
	$tabcontrol1.SelectedIndex = 0
	$tabcontrol1.Size = '942, 934'
	$tabcontrol1.TabIndex = 0
	$tabcontrol1.add_SelectedIndexChanged($tabcontrol1_SelectedIndexChanged)
	#
	# tabpage1
	#
	$tabpage1.Controls.Add($buttonDiskDefragUtility)
	$tabpage1.Controls.Add($buttonFixWindows11PlayStor)
	$tabpage1.Controls.Add($buttonEnableGodMode)
	$tabpage1.Controls.Add($AddTakeOwnershipMenu)
	$tabpage1.Controls.Add($RemoveTakeOwnershipMenu)
	$tabpage1.Controls.Add($textbox90)
	$tabpage1.Controls.Add($DisableWin10Explorer)
	$tabpage1.Controls.Add($EnableWin10Ribbon)
	$tabpage1.Controls.Add($buttonDisableWindows10Expl)
	$tabpage1.Controls.Add($buttonEnableWindows10Explo)
	$tabpage1.Controls.Add($textbox89)
	$tabpage1.Controls.Add($DisableBackgroundApps)
	$tabpage1.Controls.Add($RemoveWindows10XBoot)
	$tabpage1.Controls.Add($CompactOS)
	$tabpage1.Controls.Add($Windows10XBootAnimat)
	$tabpage1.Controls.Add($EnableMSIMode)
	$tabpage1.Controls.Add($BypassTPM20)
	$tabpage1.Controls.Add($AMDGpuTweaks)
	$tabpage1.Controls.Add($DefaultTaskbar)
	$tabpage1.Controls.Add($NVIDIAGpuTweaks)
	$tabpage1.Controls.Add($SmallTaskbar)
	$tabpage1.Controls.Add($NetworkTweaks)
	$tabpage1.Controls.Add($DefaultContextMenu)
	$tabpage1.Controls.Add($EnableNet35)
	$tabpage1.Controls.Add($OldContextMenu)
	$tabpage1.Controls.Add($textbox12)
	$tabpage1.Controls.Add($textbox75)
	$tabpage1.Controls.Add($textbox19)
	$tabpage1.Controls.Add($textbox18)
	$tabpage1.Controls.Add($textbox17)
	$tabpage1.Controls.Add($textbox16)
	$tabpage1.Controls.Add($textbox14)
	$tabpage1.Controls.Add($textbox13)
	$tabpage1.Controls.Add($textbox10)
	$tabpage1.Controls.Add($textbox9)
	$tabpage1.Controls.Add($textbox8)
	$tabpage1.Controls.Add($textbox7)
	$tabpage1.Controls.Add($textbox6)
	$tabpage1.Controls.Add($textbox5)
	$tabpage1.Controls.Add($textbox1)
	$tabpage1.Controls.Add($textbox2)
	$tabpage1.Controls.Add($textbox3)
	$tabpage1.Controls.Add($textbox4)
	$tabpage1.Controls.Add($EnableNFS)
	$tabpage1.Controls.Add($RemoveStartupProgram)
	$tabpage1.Controls.Add($WindowsSearchAndTask)
	$tabpage1.Controls.Add($LaptopNumlockFix)
	$tabpage1.Controls.Add($FixWhitelistedApps)
	$tabpage1.Controls.Add($YourPhoneAppFIx)
	$tabpage1.Controls.Add($RepairHardDrive)
	$tabpage1.Controls.Add($FixNetworkProblems)
	$tabpage1.Controls.Add($SystemFileChecker)
	$tabpage1.Controls.Add($RepairWindowsImage)
	$tabpage1.Controls.Add($ApplyTweaks)
	$tabpage1.Controls.Add($EnableClipboardHisto)
	$tabpage1.Controls.Add($DisableClipboardHist)
	$tabpage1.Controls.Add($DisableLocationTrack)
	$tabpage1.Controls.Add($DisableCortana)
	$tabpage1.Controls.Add($EnableLocationTRacki)
	$tabpage1.Controls.Add($DisableActionCenter)
	$tabpage1.Controls.Add($Hide)
	$tabpage1.Controls.Add($EnableCortanaSearch)
	$tabpage1.Controls.Add($Show)
	$tabpage1.Controls.Add($EnableBackgroundApps)
	$tabpage1.Controls.Add($LightMode)
	$tabpage1.Controls.Add($DisableHibernation)
	$tabpage1.Controls.Add($DarkMode)
	$tabpage1.Controls.Add($EnableHibernation)
	$tabpage1.Controls.Add($SetTimeToUTCDualBoot)
	$tabpage1.Controls.Add($CleanTempFilesAndLog)
	$tabpage1.Controls.Add($AppearanceVisualFX)
	$tabpage1.Controls.Add($EnableActionCenter)
	$tabpage1.Controls.Add($PerformanceVisualFX)
	$tabpage1.Controls.Add($DisableMemoryCompres)
	$tabpage1.Controls.Add($EnableMemoryCompress)
	$tabpage1.BackColor = 'Control'
	$tabpage1.Location = '4, 22'
	$tabpage1.Name = 'tabpage1'
	$tabpage1.Padding = '3, 3, 3, 3'
	$tabpage1.Size = '934, 908'
	$tabpage1.TabIndex = 0
	$tabpage1.Text = 'System Tweaks'
	#
	# buttonDiskDefragUtility
	#
	$buttonDiskDefragUtility.BackColor = 'DodgerBlue'
	$buttonDiskDefragUtility.FlatAppearance.BorderColor = 'Control'
	$buttonDiskDefragUtility.FlatStyle = 'Flat'
	$buttonDiskDefragUtility.Font = 'Microsoft Sans Serif, 12pt'
	$buttonDiskDefragUtility.ForeColor = 'ControlText'
	$buttonDiskDefragUtility.Location = '549, 306'
	$buttonDiskDefragUtility.Margin = '4, 3, 4, 3'
	$buttonDiskDefragUtility.Name = 'buttonDiskDefragUtility'
	$buttonDiskDefragUtility.Size = '181, 55'
	$buttonDiskDefragUtility.TabIndex = 1460
	$buttonDiskDefragUtility.Text = 'Disk Defrag Utility'
	$buttonDiskDefragUtility.UseCompatibleTextRendering = $True
	$buttonDiskDefragUtility.UseVisualStyleBackColor = $False
	$buttonDiskDefragUtility.add_Click($buttonDiskDefragUtility_Click)
	#
	# buttonFixWindows11PlayStor
	#
	$buttonFixWindows11PlayStor.BackColor = 'DodgerBlue'
	$buttonFixWindows11PlayStor.FlatAppearance.BorderColor = 'Control'
	$buttonFixWindows11PlayStor.FlatStyle = 'Flat'
	$buttonFixWindows11PlayStor.Font = 'Microsoft Sans Serif, 12.3pt'
	$buttonFixWindows11PlayStor.Location = '736, 306'
	$buttonFixWindows11PlayStor.Margin = '4, 3, 4, 3'
	$buttonFixWindows11PlayStor.Name = 'buttonFixWindows11PlayStor'
	$buttonFixWindows11PlayStor.Size = '186, 56'
	$buttonFixWindows11PlayStor.TabIndex = 1459
	$buttonFixWindows11PlayStor.Text = 'Fix Windows 11 Play Store Sign In'
	$buttonFixWindows11PlayStor.UseCompatibleTextRendering = $True
	$buttonFixWindows11PlayStor.UseVisualStyleBackColor = $False
	$buttonFixWindows11PlayStor.add_Click($buttonFixWindows11PlayStor_Click)
	#
	# buttonEnableGodMode
	#
	$buttonEnableGodMode.BackColor = 'DodgerBlue'
	$buttonEnableGodMode.FlatAppearance.BorderColor = 'Control'
	$buttonEnableGodMode.FlatStyle = 'Flat'
	$buttonEnableGodMode.Font = 'Microsoft Sans Serif, 12pt'
	$buttonEnableGodMode.ForeColor = 'ControlText'
	$buttonEnableGodMode.Location = '549, 367'
	$buttonEnableGodMode.Margin = '4, 3, 4, 3'
	$buttonEnableGodMode.Name = 'buttonEnableGodMode'
	$buttonEnableGodMode.Size = '181, 41'
	$buttonEnableGodMode.TabIndex = 1458
	$buttonEnableGodMode.Text = 'Enable God Mode'
	$buttonEnableGodMode.UseCompatibleTextRendering = $True
	$buttonEnableGodMode.UseVisualStyleBackColor = $False
	$buttonEnableGodMode.add_Click($buttonEnableGodMode_Click)
	#
	# AddTakeOwnershipMenu
	#
	$AddTakeOwnershipMenu.BackColor = 'DodgerBlue'
	$AddTakeOwnershipMenu.FlatAppearance.BorderColor = 'Control'
	$AddTakeOwnershipMenu.FlatStyle = 'Flat'
	$AddTakeOwnershipMenu.Font = 'Microsoft Sans Serif, 12pt'
	$AddTakeOwnershipMenu.Location = '389, 445'
	$AddTakeOwnershipMenu.Margin = '4, 3, 4, 3'
	$AddTakeOwnershipMenu.Name = 'AddTakeOwnershipMenu'
	$AddTakeOwnershipMenu.Size = '106, 25'
	$AddTakeOwnershipMenu.TabIndex = 1457
	$AddTakeOwnershipMenu.Text = 'Add'
	$AddTakeOwnershipMenu.UseCompatibleTextRendering = $True
	$AddTakeOwnershipMenu.UseVisualStyleBackColor = $False
	$AddTakeOwnershipMenu.add_Click($AddTakeOwnershipMenu_Click)
	#
	# RemoveTakeOwnershipMenu
	#
	$RemoveTakeOwnershipMenu.BackColor = 'DodgerBlue'
	$RemoveTakeOwnershipMenu.FlatAppearance.BorderColor = 'Control'
	$RemoveTakeOwnershipMenu.FlatStyle = 'Flat'
	$RemoveTakeOwnershipMenu.Font = 'Microsoft Sans Serif, 12pt'
	$RemoveTakeOwnershipMenu.Location = '279, 445'
	$RemoveTakeOwnershipMenu.Margin = '4, 3, 4, 3'
	$RemoveTakeOwnershipMenu.Name = 'RemoveTakeOwnershipMenu'
	$RemoveTakeOwnershipMenu.Size = '106, 25'
	$RemoveTakeOwnershipMenu.TabIndex = 1456
	$RemoveTakeOwnershipMenu.Text = 'Remove'
	$RemoveTakeOwnershipMenu.UseCompatibleTextRendering = $True
	$RemoveTakeOwnershipMenu.UseVisualStyleBackColor = $False
	$RemoveTakeOwnershipMenu.add_Click($RemoveTakeOwnershipMenu_Click)
	#
	# textbox90
	#
	$textbox90.AccessibleRole = 'None'
	$textbox90.BackColor = 'Control'
	$textbox90.BorderStyle = 'None'
	$textbox90.Font = 'Microsoft Sans Serif, 13.7pt'
	$textbox90.Location = '50, 445'
	$textbox90.Margin = '4, 3, 4, 3'
	$textbox90.Name = 'textbox90'
	$textbox90.ReadOnly = $True
	$textbox90.Size = '204, 21'
	$textbox90.TabIndex = 1455
	$textbox90.TabStop = $False
	$textbox90.Text = '>Take Ownership Menu'
	#
	# DisableWin10Explorer
	#
	$DisableWin10Explorer.BackColor = 'DodgerBlue'
	$DisableWin10Explorer.FlatAppearance.BorderColor = 'Control'
	$DisableWin10Explorer.FlatStyle = 'Flat'
	$DisableWin10Explorer.Font = 'Microsoft Sans Serif, 12pt'
	$DisableWin10Explorer.Location = '287, 724'
	$DisableWin10Explorer.Margin = '4, 3, 4, 3'
	$DisableWin10Explorer.Name = 'DisableWin10Explorer'
	$DisableWin10Explorer.Size = '175, 54'
	$DisableWin10Explorer.TabIndex = 1454
	$DisableWin10Explorer.Text = 'Minimized Windows 10 Explorer Ribbon'
	$DisableWin10Explorer.UseCompatibleTextRendering = $True
	$DisableWin10Explorer.UseVisualStyleBackColor = $False
	$DisableWin10Explorer.add_Click($DisableWin10Explorer_Click)
	#
	# EnableWin10Ribbon
	#
	$EnableWin10Ribbon.BackColor = 'DodgerBlue'
	$EnableWin10Ribbon.FlatAppearance.BorderColor = 'Control'
	$EnableWin10Ribbon.FlatStyle = 'Flat'
	$EnableWin10Ribbon.Font = 'Microsoft Sans Serif, 12pt'
	$EnableWin10Ribbon.Location = '104, 723'
	$EnableWin10Ribbon.Margin = '4, 3, 4, 3'
	$EnableWin10Ribbon.Name = 'EnableWin10Ribbon'
	$EnableWin10Ribbon.Size = '175, 54'
	$EnableWin10Ribbon.TabIndex = 1453
	$EnableWin10Ribbon.Text = 'Expanded Windows 10 Explorer Ribbon'
	$EnableWin10Ribbon.UseCompatibleTextRendering = $True
	$EnableWin10Ribbon.UseVisualStyleBackColor = $False
	$EnableWin10Ribbon.add_Click($EnableWin10Ribbon_Click)
	#
	# buttonDisableWindows10Expl
	#
	$buttonDisableWindows10Expl.BackColor = 'DodgerBlue'
	$buttonDisableWindows10Expl.FlatAppearance.BorderColor = 'Control'
	$buttonDisableWindows10Expl.FlatStyle = 'Flat'
	$buttonDisableWindows10Expl.Font = 'Microsoft Sans Serif, 12pt'
	$buttonDisableWindows10Expl.Location = '287, 664'
	$buttonDisableWindows10Expl.Margin = '4, 3, 4, 3'
	$buttonDisableWindows10Expl.Name = 'buttonDisableWindows10Expl'
	$buttonDisableWindows10Expl.Size = '175, 54'
	$buttonDisableWindows10Expl.TabIndex = 1452
	$buttonDisableWindows10Expl.Text = 'Disable Windows 10 Explorer'
	$buttonDisableWindows10Expl.UseCompatibleTextRendering = $True
	$buttonDisableWindows10Expl.UseVisualStyleBackColor = $False
	$buttonDisableWindows10Expl.add_Click($buttonDisableWindows10Expl_Click)
	#
	# buttonEnableWindows10Explo
	#
	$buttonEnableWindows10Explo.BackColor = 'DodgerBlue'
	$buttonEnableWindows10Explo.FlatAppearance.BorderColor = 'Control'
	$buttonEnableWindows10Explo.FlatStyle = 'Flat'
	$buttonEnableWindows10Explo.Font = 'Microsoft Sans Serif, 12pt'
	$buttonEnableWindows10Explo.Location = '104, 663'
	$buttonEnableWindows10Explo.Margin = '4, 3, 4, 3'
	$buttonEnableWindows10Explo.Name = 'buttonEnableWindows10Explo'
	$buttonEnableWindows10Explo.Size = '175, 54'
	$buttonEnableWindows10Explo.TabIndex = 1451
	$buttonEnableWindows10Explo.Text = 'Enable Windows 10 Explorer'
	$buttonEnableWindows10Explo.UseCompatibleTextRendering = $True
	$buttonEnableWindows10Explo.UseVisualStyleBackColor = $False
	$buttonEnableWindows10Explo.add_Click($buttonEnableWindows10Explo_Click)
	#
	# textbox89
	#
	$textbox89.BackColor = 'Control'
	$textbox89.BorderStyle = 'None'
	$textbox89.Location = '23, 104'
	$textbox89.Margin = '4, 3, 4, 3'
	$textbox89.Name = 'textbox89'
	$textbox89.ReadOnly = $True
	$textbox89.Size = '200, 13'
	$textbox89.TabIndex = 1450
	$textbox89.TabStop = $False
	$textbox89.Text = '- Enhance Privacy'
	#
	# DisableBackgroundApps
	#
	$DisableBackgroundApps.BackColor = 'DodgerBlue'
	$DisableBackgroundApps.FlatAppearance.BorderColor = 'Control'
	$DisableBackgroundApps.FlatStyle = 'Flat'
	$DisableBackgroundApps.Font = 'Microsoft Sans Serif, 12pt'
	$DisableBackgroundApps.Location = '279, 179'
	$DisableBackgroundApps.Margin = '4, 3, 4, 3'
	$DisableBackgroundApps.Name = 'DisableBackgroundApps'
	$DisableBackgroundApps.Size = '106, 28'
	$DisableBackgroundApps.TabIndex = 1449
	$DisableBackgroundApps.Text = 'Disable'
	$DisableBackgroundApps.UseCompatibleTextRendering = $True
	$DisableBackgroundApps.UseVisualStyleBackColor = $False
	$DisableBackgroundApps.add_Click($DisableBackgroundApps_Click)
	#
	# RemoveWindows10XBoot
	#
	$RemoveWindows10XBoot.BackColor = 'DodgerBlue'
	$RemoveWindows10XBoot.FlatAppearance.BorderColor = 'Control'
	$RemoveWindows10XBoot.FlatStyle = 'Flat'
	$RemoveWindows10XBoot.Font = 'Microsoft Sans Serif, 12.3pt'
	$RemoveWindows10XBoot.Location = '287, 613'
	$RemoveWindows10XBoot.Margin = '4, 3, 4, 3'
	$RemoveWindows10XBoot.Name = 'RemoveWindows10XBoot'
	$RemoveWindows10XBoot.Size = '175, 45'
	$RemoveWindows10XBoot.TabIndex = 1448
	$RemoveWindows10XBoot.Text = 'Remove Windows 10X Boot Animation'
	$RemoveWindows10XBoot.UseCompatibleTextRendering = $True
	$RemoveWindows10XBoot.UseVisualStyleBackColor = $False
	$RemoveWindows10XBoot.add_Click($RemoveWindows10XBoot_Click)
	#
	# CompactOS
	#
	$CompactOS.BackColor = 'DodgerBlue'
	$CompactOS.FlatAppearance.BorderColor = 'Control'
	$CompactOS.FlatStyle = 'Flat'
	$CompactOS.Font = 'Microsoft Sans Serif, 12pt'
	$CompactOS.Location = '738, 651'
	$CompactOS.Margin = '4, 3, 4, 3'
	$CompactOS.Name = 'CompactOS'
	$CompactOS.Size = '155, 41'
	$CompactOS.TabIndex = 1447
	$CompactOS.Text = 'CompactOS'
	$CompactOS.UseCompatibleTextRendering = $True
	$CompactOS.UseVisualStyleBackColor = $False
	$CompactOS.add_Click($CompactOS_Click)
	#
	# Windows10XBootAnimat
	#
	$Windows10XBootAnimat.BackColor = 'DodgerBlue'
	$Windows10XBootAnimat.FlatAppearance.BorderColor = 'Control'
	$Windows10XBootAnimat.FlatStyle = 'Flat'
	$Windows10XBootAnimat.Font = 'Microsoft Sans Serif, 12.3pt'
	$Windows10XBootAnimat.Location = '104, 612'
	$Windows10XBootAnimat.Margin = '4, 3, 4, 3'
	$Windows10XBootAnimat.Name = 'Windows10XBootAnimat'
	$Windows10XBootAnimat.Size = '175, 45'
	$Windows10XBootAnimat.TabIndex = 1447
	$Windows10XBootAnimat.Text = 'Windows 10X Boot Animation'
	$Windows10XBootAnimat.UseCompatibleTextRendering = $True
	$Windows10XBootAnimat.UseVisualStyleBackColor = $False
	$Windows10XBootAnimat.add_Click($Windows10XBootAnimat_Click)
	#
	# EnableMSIMode
	#
	$EnableMSIMode.BackColor = 'DodgerBlue'
	$EnableMSIMode.FlatAppearance.BorderColor = 'Control'
	$EnableMSIMode.FlatStyle = 'Flat'
	$EnableMSIMode.Font = 'Microsoft Sans Serif, 12pt'
	$EnableMSIMode.Location = '738, 535'
	$EnableMSIMode.Margin = '4, 3, 4, 3'
	$EnableMSIMode.Name = 'EnableMSIMode'
	$EnableMSIMode.Size = '155, 49'
	$EnableMSIMode.TabIndex = 1446
	$EnableMSIMode.Text = 'Enable MSI Mode'
	$EnableMSIMode.UseCompatibleTextRendering = $True
	$EnableMSIMode.UseVisualStyleBackColor = $False
	$EnableMSIMode.add_Click($EnableMSIMode_Click)
	#
	# BypassTPM20
	#
	$BypassTPM20.BackColor = 'DodgerBlue'
	$BypassTPM20.FlatAppearance.BorderColor = 'Control'
	$BypassTPM20.FlatStyle = 'Flat'
	$BypassTPM20.Font = 'Microsoft Sans Serif, 12pt'
	$BypassTPM20.Location = '104, 781'
	$BypassTPM20.Margin = '4, 3, 4, 3'
	$BypassTPM20.Name = 'BypassTPM20'
	$BypassTPM20.Size = '175, 41'
	$BypassTPM20.TabIndex = 1446
	$BypassTPM20.Text = 'Bypass TPM 2.0'
	$BypassTPM20.UseCompatibleTextRendering = $True
	$BypassTPM20.UseVisualStyleBackColor = $False
	$BypassTPM20.add_Click($BypassTPM20_Click)
	#
	# AMDGpuTweaks
	#
	$AMDGpuTweaks.BackColor = 'DodgerBlue'
	$AMDGpuTweaks.FlatAppearance.BorderColor = 'Control'
	$AMDGpuTweaks.FlatStyle = 'Flat'
	$AMDGpuTweaks.Font = 'Microsoft Sans Serif, 12pt'
	$AMDGpuTweaks.Location = '736, 479'
	$AMDGpuTweaks.Margin = '4, 3, 4, 3'
	$AMDGpuTweaks.Name = 'AMDGpuTweaks'
	$AMDGpuTweaks.Size = '155, 50'
	$AMDGpuTweaks.TabIndex = 1445
	$AMDGpuTweaks.Text = 'AMD GPU Tweaks'
	$AMDGpuTweaks.UseCompatibleTextRendering = $True
	$AMDGpuTweaks.UseVisualStyleBackColor = $False
	$AMDGpuTweaks.add_Click($AMDGpuTweaks_Click)
	#
	# DefaultTaskbar
	#
	$DefaultTaskbar.BackColor = 'DodgerBlue'
	$DefaultTaskbar.FlatAppearance.BorderColor = 'Control'
	$DefaultTaskbar.FlatStyle = 'Flat'
	$DefaultTaskbar.Font = 'Microsoft Sans Serif, 12pt'
	$DefaultTaskbar.Location = '104, 572'
	$DefaultTaskbar.Margin = '4, 3, 4, 3'
	$DefaultTaskbar.Name = 'DefaultTaskbar'
	$DefaultTaskbar.Size = '175, 34'
	$DefaultTaskbar.TabIndex = 1445
	$DefaultTaskbar.Text = 'Default Taskbar'
	$DefaultTaskbar.UseCompatibleTextRendering = $True
	$DefaultTaskbar.UseVisualStyleBackColor = $False
	$DefaultTaskbar.add_Click($DefaultTaskbar_Click)
	#
	# NVIDIAGpuTweaks
	#
	$NVIDIAGpuTweaks.BackColor = 'DodgerBlue'
	$NVIDIAGpuTweaks.FlatAppearance.BorderColor = 'Control'
	$NVIDIAGpuTweaks.FlatStyle = 'Flat'
	$NVIDIAGpuTweaks.Font = 'Microsoft Sans Serif, 12pt'
	$NVIDIAGpuTweaks.Location = '577, 481'
	$NVIDIAGpuTweaks.Margin = '4, 3, 4, 3'
	$NVIDIAGpuTweaks.Name = 'NVIDIAGpuTweaks'
	$NVIDIAGpuTweaks.Size = '154, 48'
	$NVIDIAGpuTweaks.TabIndex = 1444
	$NVIDIAGpuTweaks.Text = 'NVIDIA GPU Tweaks'
	$NVIDIAGpuTweaks.UseCompatibleTextRendering = $True
	$NVIDIAGpuTweaks.UseVisualStyleBackColor = $False
	$NVIDIAGpuTweaks.add_Click($NVIDIAGpuTweaks_Click)
	#
	# SmallTaskbar
	#
	$SmallTaskbar.BackColor = 'DodgerBlue'
	$SmallTaskbar.FlatAppearance.BorderColor = 'Control'
	$SmallTaskbar.FlatStyle = 'Flat'
	$SmallTaskbar.Font = 'Microsoft Sans Serif, 12pt'
	$SmallTaskbar.Location = '287, 572'
	$SmallTaskbar.Margin = '4, 3, 4, 3'
	$SmallTaskbar.Name = 'SmallTaskbar'
	$SmallTaskbar.Size = '175, 34'
	$SmallTaskbar.TabIndex = 1444
	$SmallTaskbar.Text = 'Small Taskbar'
	$SmallTaskbar.UseCompatibleTextRendering = $True
	$SmallTaskbar.UseVisualStyleBackColor = $False
	$SmallTaskbar.add_Click($SmallTaskbar_Click)
	#
	# NetworkTweaks
	#
	$NetworkTweaks.BackColor = 'DodgerBlue'
	$NetworkTweaks.FlatAppearance.BorderColor = 'Control'
	$NetworkTweaks.FlatStyle = 'Flat'
	$NetworkTweaks.Font = 'Microsoft Sans Serif, 12pt'
	$NetworkTweaks.Location = '576, 535'
	$NetworkTweaks.Margin = '4, 3, 4, 3'
	$NetworkTweaks.Name = 'NetworkTweaks'
	$NetworkTweaks.Size = '154, 49'
	$NetworkTweaks.TabIndex = 1443
	$NetworkTweaks.Text = 'Network Tweaks'
	$NetworkTweaks.UseCompatibleTextRendering = $True
	$NetworkTweaks.UseVisualStyleBackColor = $False
	$NetworkTweaks.add_Click($NetworkTweaks_Click)
	#
	# DefaultContextMenu
	#
	$DefaultContextMenu.BackColor = 'DodgerBlue'
	$DefaultContextMenu.FlatAppearance.BorderColor = 'Control'
	$DefaultContextMenu.FlatStyle = 'Flat'
	$DefaultContextMenu.Font = 'Microsoft Sans Serif, 12pt'
	$DefaultContextMenu.Location = '104, 535'
	$DefaultContextMenu.Margin = '4, 3, 4, 3'
	$DefaultContextMenu.Name = 'DefaultContextMenu'
	$DefaultContextMenu.Size = '175, 34'
	$DefaultContextMenu.TabIndex = 1443
	$DefaultContextMenu.Text = 'Default Context Menu'
	$DefaultContextMenu.UseCompatibleTextRendering = $True
	$DefaultContextMenu.UseVisualStyleBackColor = $False
	$DefaultContextMenu.add_Click($DefaultContextMenu_Click)
	#
	# EnableNet35
	#
	$EnableNet35.BackColor = 'DodgerBlue'
	$EnableNet35.FlatAppearance.BorderColor = 'Control'
	$EnableNet35.FlatStyle = 'Flat'
	$EnableNet35.Font = 'Microsoft Sans Serif, 12pt'
	$EnableNet35.ForeColor = 'ControlText'
	$EnableNet35.Location = '576, 651'
	$EnableNet35.Margin = '4, 3, 4, 3'
	$EnableNet35.Name = 'EnableNet35'
	$EnableNet35.Size = '154, 41'
	$EnableNet35.TabIndex = 1442
	$EnableNet35.Text = 'Enable Net 3.5'
	$EnableNet35.UseCompatibleTextRendering = $True
	$EnableNet35.UseVisualStyleBackColor = $False
	$EnableNet35.add_Click($EnableNet35_Click)
	#
	# OldContextMenu
	#
	$OldContextMenu.BackColor = 'DodgerBlue'
	$OldContextMenu.FlatAppearance.BorderColor = 'Control'
	$OldContextMenu.FlatStyle = 'Flat'
	$OldContextMenu.Font = 'Microsoft Sans Serif, 12pt'
	$OldContextMenu.Location = '287, 535'
	$OldContextMenu.Margin = '4, 3, 4, 3'
	$OldContextMenu.Name = 'OldContextMenu'
	$OldContextMenu.Size = '175, 34'
	$OldContextMenu.TabIndex = 1442
	$OldContextMenu.Text = 'Old Context Menu'
	$OldContextMenu.UseCompatibleTextRendering = $True
	$OldContextMenu.UseVisualStyleBackColor = $False
	$OldContextMenu.add_Click($OldContextMenu_Click)
	#
	# textbox12
	#
	$textbox12.BackColor = 'Control'
	$textbox12.BorderStyle = 'None'
	$textbox12.Location = '554, 415'
	$textbox12.Margin = '4, 3, 4, 3'
	$textbox12.Name = 'textbox12'
	$textbox12.ReadOnly = $True
	$textbox12.Size = '181, 13'
	$textbox12.TabIndex = 1437
	$textbox12.TabStop = $False
	$textbox12.Text = '(Fix Common Windows Problems)'
	#
	# textbox75
	#
	$textbox75.AccessibleRole = 'None'
	$textbox75.BackColor = 'Control'
	$textbox75.BorderStyle = 'None'
	$textbox75.Font = 'Microsoft Sans Serif, 18pt'
	$textbox75.Location = '185, 501'
	$textbox75.Margin = '4, 3, 4, 3'
	$textbox75.Name = 'textbox75'
	$textbox75.ReadOnly = $True
	$textbox75.Size = '200, 28'
	$textbox75.TabIndex = 1441
	$textbox75.TabStop = $False
	$textbox75.Text = 'Windows 11 Only'
	#
	# textbox19
	#
	$textbox19.AccessibleRole = 'None'
	$textbox19.BackColor = 'Control'
	$textbox19.BorderStyle = 'None'
	$textbox19.Font = 'Microsoft Sans Serif, 18pt'
	$textbox19.Location = '646, 39'
	$textbox19.Margin = '4, 3, 4, 3'
	$textbox19.Name = 'textbox19'
	$textbox19.ReadOnly = $True
	$textbox19.Size = '163, 28'
	$textbox19.TabIndex = 1427
	$textbox19.TabStop = $False
	$textbox19.Text = 'Optional Fixes'
	#
	# textbox18
	#
	$textbox18.AccessibleRole = 'None'
	$textbox18.BackColor = 'Control'
	$textbox18.BorderStyle = 'None'
	$textbox18.Font = 'Microsoft Sans Serif, 13.7pt'
	$textbox18.Location = '70, 418'
	$textbox18.Margin = '4, 3, 4, 3'
	$textbox18.Name = 'textbox18'
	$textbox18.ReadOnly = $True
	$textbox18.Size = '157, 21'
	$textbox18.TabIndex = 1424
	$textbox18.TabStop = $False
	$textbox18.Text = '>Clipboard History'
	#
	# textbox17
	#
	$textbox17.AccessibleRole = 'None'
	$textbox17.BackColor = 'Control'
	$textbox17.BorderStyle = 'None'
	$textbox17.Font = 'Microsoft Sans Serif, 18pt'
	$textbox17.Location = '646, 445'
	$textbox17.Margin = '4, 3, 4, 3'
	$textbox17.Name = 'textbox17'
	$textbox17.ReadOnly = $True
	$textbox17.Size = '193, 28'
	$textbox17.TabIndex = 1423
	$textbox17.TabStop = $False
	$textbox17.Text = 'Aditional Tweaks'
	#
	# textbox16
	#
	$textbox16.BackColor = 'Control'
	$textbox16.BorderStyle = 'None'
	$textbox16.Location = '23, 123'
	$textbox16.Margin = '4, 3, 4, 3'
	$textbox16.Name = 'textbox16'
	$textbox16.ReadOnly = $True
	$textbox16.Size = '231, 13'
	$textbox16.TabIndex = 1422
	$textbox16.TabStop = $False
	$textbox16.Text = '- Disable Useless Tasks, Services And Telemetry'
	#
	# textbox14
	#
	$textbox14.BackColor = 'Control'
	$textbox14.BorderStyle = 'None'
	$textbox14.Location = '26, 123'
	$textbox14.Margin = '4, 3, 4, 3'
	$textbox14.Name = 'textbox14'
	$textbox14.ReadOnly = $True
	$textbox14.Size = '94, 13'
	$textbox14.TabIndex = 1420
	$textbox14.TabStop = $False
	$textbox14.Text = '- Enhance Privacy'
	#
	# textbox13
	#
	$textbox13.BackColor = 'Control'
	$textbox13.BorderStyle = 'None'
	$textbox13.Location = '23, 85'
	$textbox13.Margin = '4, 3, 4, 3'
	$textbox13.Name = 'textbox13'
	$textbox13.ReadOnly = $True
	$textbox13.Size = '248, 13'
	$textbox13.TabIndex = 1292
	$textbox13.TabStop = $False
	$textbox13.Text = '- Better Windows Experience & Gaming Performance'
	#
	# textbox10
	#
	$textbox10.AccessibleRole = 'None'
	$textbox10.BackColor = 'Control'
	$textbox10.BorderStyle = 'None'
	$textbox10.Font = 'Microsoft Sans Serif, 19pt'
	$textbox10.Location = '175, 38'
	$textbox10.Margin = '4, 3, 4, 3'
	$textbox10.Name = 'textbox10'
	$textbox10.ReadOnly = $True
	$textbox10.Size = '189, 29'
	$textbox10.TabIndex = 1419
	$textbox10.TabStop = $False
	$textbox10.Text = 'System Tweaks'
	#
	# textbox9
	#
	$textbox9.AccessibleRole = 'None'
	$textbox9.BackColor = 'Control'
	$textbox9.BorderStyle = 'None'
	$textbox9.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox9.Location = '101, 210'
	$textbox9.Margin = '4, 3, 4, 3'
	$textbox9.Name = 'textbox9'
	$textbox9.ReadOnly = $True
	$textbox9.Size = '80, 21'
	$textbox9.TabIndex = 1417
	$textbox9.TabStop = $False
	$textbox9.Text = '>Cortana'
	#
	# textbox8
	#
	$textbox8.AccessibleRole = 'None'
	$textbox8.BackColor = 'Control'
	$textbox8.BorderStyle = 'None'
	$textbox8.Font = 'Microsoft Sans Serif, 13.7pt'
	$textbox8.Location = '63, 391'
	$textbox8.Margin = '4, 3, 4, 3'
	$textbox8.Name = 'textbox8'
	$textbox8.ReadOnly = $True
	$textbox8.Size = '161, 21'
	$textbox8.TabIndex = 1416
	$textbox8.TabStop = $False
	$textbox8.Text = '>Location Tracking'
	#
	# textbox7
	#
	$textbox7.AccessibleRole = 'None'
	$textbox7.BackColor = 'Control'
	$textbox7.BorderStyle = 'None'
	$textbox7.Font = 'Microsoft Sans Serif, 13.7pt'
	$textbox7.Location = '50, 364'
	$textbox7.Margin = '4, 3, 4, 3'
	$textbox7.Name = 'textbox7'
	$textbox7.ReadOnly = $True
	$textbox7.Size = '189, 21'
	$textbox7.TabIndex = 1415
	$textbox7.TabStop = $False
	$textbox7.Text = '>Memory Compression'
	#
	# textbox6
	#
	$textbox6.AccessibleRole = 'None'
	$textbox6.BackColor = 'Control'
	$textbox6.BorderStyle = 'None'
	$textbox6.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox6.Location = '96, 337'
	$textbox6.Margin = '4, 3, 4, 3'
	$textbox6.Name = 'textbox6'
	$textbox6.ReadOnly = $True
	$textbox6.Size = '99, 21'
	$textbox6.TabIndex = 1414
	$textbox6.TabStop = $False
	$textbox6.Text = '>Tray Icons'
	#
	# textbox5
	#
	$textbox5.AccessibleRole = 'None'
	$textbox5.BackColor = 'Control'
	$textbox5.BorderStyle = 'None'
	$textbox5.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox5.Location = '93, 306'
	$textbox5.Margin = '4, 3, 4, 3'
	$textbox5.Name = 'textbox5'
	$textbox5.ReadOnly = $True
	$textbox5.Size = '102, 21'
	$textbox5.TabIndex = 1413
	$textbox5.TabStop = $False
	$textbox5.Text = '>Hibernation'
	#
	# textbox1
	#
	$textbox1.AccessibleRole = 'None'
	$textbox1.BackColor = 'Control'
	$textbox1.BorderStyle = 'None'
	$textbox1.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox1.Location = '78, 273'
	$textbox1.Margin = '4, 3, 4, 3'
	$textbox1.Name = 'textbox1'
	$textbox1.ReadOnly = $True
	$textbox1.Size = '149, 21'
	$textbox1.TabIndex = 1412
	$textbox1.TabStop = $False
	$textbox1.Text = '>Dark/Light Mode'
	#
	# textbox2
	#
	$textbox2.AccessibleRole = 'None'
	$textbox2.BackColor = 'Control'
	$textbox2.BorderStyle = 'None'
	$textbox2.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox2.Location = '90, 240'
	$textbox2.Margin = '4, 3, 4, 3'
	$textbox2.Name = 'textbox2'
	$textbox2.ReadOnly = $True
	$textbox2.Size = '122, 21'
	$textbox2.TabIndex = 1411
	$textbox2.TabStop = $False
	$textbox2.Text = '>Visual Effect'
	#
	# textbox3
	#
	$textbox3.AccessibleRole = 'None'
	$textbox3.BackColor = 'Control'
	$textbox3.BorderStyle = 'None'
	$textbox3.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox3.Location = '70, 181'
	$textbox3.Margin = '4, 3, 4, 3'
	$textbox3.Name = 'textbox3'
	$textbox3.ReadOnly = $True
	$textbox3.Size = '174, 21'
	$textbox3.TabIndex = 1410
	$textbox3.TabStop = $False
	$textbox3.Text = '>Backgrounds Apps'
	#
	# textbox4
	#
	$textbox4.AccessibleRole = 'None'
	$textbox4.BackColor = 'Control'
	$textbox4.BorderStyle = 'None'
	$textbox4.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox4.Location = '87, 152'
	$textbox4.Margin = '4, 3, 4, 3'
	$textbox4.Name = 'textbox4'
	$textbox4.ReadOnly = $True
	$textbox4.Size = '125, 21'
	$textbox4.TabIndex = 1409
	$textbox4.TabStop = $False
	$textbox4.Text = '>Action Center'
	#
	# EnableNFS
	#
	$EnableNFS.BackColor = 'DodgerBlue'
	$EnableNFS.FlatAppearance.BorderColor = 'Control'
	$EnableNFS.FlatStyle = 'Flat'
	$EnableNFS.Font = 'Microsoft Sans Serif, 12pt'
	$EnableNFS.Location = '736, 201'
	$EnableNFS.Margin = '4, 3, 4, 3'
	$EnableNFS.Name = 'EnableNFS'
	$EnableNFS.Size = '186, 36'
	$EnableNFS.TabIndex = 1436
	$EnableNFS.Text = 'Enable NFS'
	$EnableNFS.UseCompatibleTextRendering = $True
	$EnableNFS.UseVisualStyleBackColor = $False
	$EnableNFS.add_Click($EnableNFS_Click)
	#
	# RemoveStartupProgram
	#
	$RemoveStartupProgram.BackColor = 'DodgerBlue'
	$RemoveStartupProgram.FlatAppearance.BorderColor = 'Control'
	$RemoveStartupProgram.FlatStyle = 'Flat'
	$RemoveStartupProgram.Font = 'Microsoft Sans Serif, 12.3pt'
	$RemoveStartupProgram.Location = '736, 243'
	$RemoveStartupProgram.Margin = '4, 3, 4, 3'
	$RemoveStartupProgram.Name = 'RemoveStartupProgram'
	$RemoveStartupProgram.Size = '186, 56'
	$RemoveStartupProgram.TabIndex = 1435
	$RemoveStartupProgram.Text = 'Remove Startup Programs'
	$RemoveStartupProgram.UseCompatibleTextRendering = $True
	$RemoveStartupProgram.UseVisualStyleBackColor = $False
	$RemoveStartupProgram.add_Click($RemoveStartupProgram_Click)
	#
	# WindowsSearchAndTask
	#
	$WindowsSearchAndTask.BackColor = 'DodgerBlue'
	$WindowsSearchAndTask.FlatAppearance.BorderColor = 'Control'
	$WindowsSearchAndTask.FlatStyle = 'Flat'
	$WindowsSearchAndTask.Font = 'Microsoft Sans Serif, 12pt'
	$WindowsSearchAndTask.Location = '549, 243'
	$WindowsSearchAndTask.Margin = '4, 3, 4, 3'
	$WindowsSearchAndTask.Name = 'WindowsSearchAndTask'
	$WindowsSearchAndTask.Size = '182, 56'
	$WindowsSearchAndTask.TabIndex = 1434
	$WindowsSearchAndTask.Text = 'Windows Search and Taskbar Fix'
	$WindowsSearchAndTask.UseCompatibleTextRendering = $True
	$WindowsSearchAndTask.UseVisualStyleBackColor = $False
	$WindowsSearchAndTask.add_Click($WindowsSearchAndTask_Click)
	#
	# LaptopNumlockFix
	#
	$LaptopNumlockFix.BackColor = 'DodgerBlue'
	$LaptopNumlockFix.FlatAppearance.BorderColor = 'Control'
	$LaptopNumlockFix.FlatStyle = 'Flat'
	$LaptopNumlockFix.Font = 'Microsoft Sans Serif, 11.9pt'
	$LaptopNumlockFix.Location = '548, 201'
	$LaptopNumlockFix.Margin = '4, 3, 4, 3'
	$LaptopNumlockFix.Name = 'LaptopNumlockFix'
	$LaptopNumlockFix.Size = '182, 36'
	$LaptopNumlockFix.TabIndex = 1433
	$LaptopNumlockFix.Text = 'Laptop Numlock Fix'
	$LaptopNumlockFix.UseCompatibleTextRendering = $True
	$LaptopNumlockFix.UseVisualStyleBackColor = $False
	$LaptopNumlockFix.add_Click($LaptopNumlockFix_Click)
	#
	# FixWhitelistedApps
	#
	$FixWhitelistedApps.BackColor = 'DodgerBlue'
	$FixWhitelistedApps.FlatAppearance.BorderColor = 'Control'
	$FixWhitelistedApps.FlatStyle = 'Flat'
	$FixWhitelistedApps.Font = 'Microsoft Sans Serif, 11.9pt'
	$FixWhitelistedApps.Location = '736, 159'
	$FixWhitelistedApps.Margin = '4, 3, 4, 3'
	$FixWhitelistedApps.Name = 'FixWhitelistedApps'
	$FixWhitelistedApps.Size = '186, 36'
	$FixWhitelistedApps.TabIndex = 1432
	$FixWhitelistedApps.Text = 'Fix Whitelisted Apps'
	$FixWhitelistedApps.UseCompatibleTextRendering = $True
	$FixWhitelistedApps.UseVisualStyleBackColor = $False
	$FixWhitelistedApps.add_Click($FixWhitelistedApps_Click)
	#
	# YourPhoneAppFIx
	#
	$YourPhoneAppFIx.BackColor = 'DodgerBlue'
	$YourPhoneAppFIx.FlatAppearance.BorderColor = 'Control'
	$YourPhoneAppFIx.FlatStyle = 'Flat'
	$YourPhoneAppFIx.Font = 'Microsoft Sans Serif, 11.9pt'
	$YourPhoneAppFIx.Location = '737, 122'
	$YourPhoneAppFIx.Margin = '4, 3, 4, 3'
	$YourPhoneAppFIx.Name = 'YourPhoneAppFIx'
	$YourPhoneAppFIx.Size = '185, 36'
	$YourPhoneAppFIx.TabIndex = 1430
	$YourPhoneAppFIx.Text = 'Your Phone App Fix'
	$YourPhoneAppFIx.UseCompatibleTextRendering = $True
	$YourPhoneAppFIx.UseVisualStyleBackColor = $False
	$YourPhoneAppFIx.add_Click($YourPhoneAppFIx_Click)
	#
	# RepairHardDrive
	#
	$RepairHardDrive.BackColor = 'DodgerBlue'
	$RepairHardDrive.FlatAppearance.BorderColor = 'Control'
	$RepairHardDrive.FlatStyle = 'Flat'
	$RepairHardDrive.Font = 'Microsoft Sans Serif, 11.8pt'
	$RepairHardDrive.Location = '548, 159'
	$RepairHardDrive.Margin = '4, 3, 4, 3'
	$RepairHardDrive.Name = 'RepairHardDrive'
	$RepairHardDrive.Size = '182, 36'
	$RepairHardDrive.TabIndex = 1429
	$RepairHardDrive.Text = 'Repair Hard Drive'
	$RepairHardDrive.UseCompatibleTextRendering = $True
	$RepairHardDrive.UseVisualStyleBackColor = $False
	$RepairHardDrive.add_Click($RepairHardDrive_Click)
	#
	# FixNetworkProblems
	#
	$FixNetworkProblems.BackColor = 'DodgerBlue'
	$FixNetworkProblems.FlatAppearance.BorderColor = 'Control'
	$FixNetworkProblems.FlatStyle = 'Flat'
	$FixNetworkProblems.Font = 'Microsoft Sans Serif, 11.9pt'
	$FixNetworkProblems.Location = '549, 122'
	$FixNetworkProblems.Margin = '4, 3, 4, 3'
	$FixNetworkProblems.Name = 'FixNetworkProblems'
	$FixNetworkProblems.Size = '181, 36'
	$FixNetworkProblems.TabIndex = 1428
	$FixNetworkProblems.Text = 'Fix Network Problems'
	$FixNetworkProblems.UseCompatibleTextRendering = $True
	$FixNetworkProblems.UseVisualStyleBackColor = $False
	$FixNetworkProblems.add_Click($FixNetworkProblems_Click)
	#
	# SystemFileChecker
	#
	$SystemFileChecker.BackColor = 'DodgerBlue'
	$SystemFileChecker.FlatAppearance.BorderColor = 'Control'
	$SystemFileChecker.FlatStyle = 'Flat'
	$SystemFileChecker.Font = 'Microsoft Sans Serif, 12pt'
	$SystemFileChecker.Location = '736, 76'
	$SystemFileChecker.Margin = '4, 3, 4, 3'
	$SystemFileChecker.Name = 'SystemFileChecker'
	$SystemFileChecker.Size = '186, 45'
	$SystemFileChecker.TabIndex = 1426
	$SystemFileChecker.Text = 'System File Checker'
	$SystemFileChecker.UseCompatibleTextRendering = $True
	$SystemFileChecker.UseVisualStyleBackColor = $False
	$SystemFileChecker.add_Click($SystemFileChecker_Click)
	#
	# RepairWindowsImage
	#
	$RepairWindowsImage.BackColor = 'DodgerBlue'
	$RepairWindowsImage.FlatAppearance.BorderColor = 'Control'
	$RepairWindowsImage.FlatStyle = 'Flat'
	$RepairWindowsImage.Font = 'Microsoft Sans Serif, 12pt'
	$RepairWindowsImage.Location = '548, 76'
	$RepairWindowsImage.Margin = '4, 3, 4, 3'
	$RepairWindowsImage.Name = 'RepairWindowsImage'
	$RepairWindowsImage.Size = '182, 45'
	$RepairWindowsImage.TabIndex = 1425
	$RepairWindowsImage.Text = 'Repair Windows Image'
	$RepairWindowsImage.UseCompatibleTextRendering = $True
	$RepairWindowsImage.UseVisualStyleBackColor = $False
	$RepairWindowsImage.add_Click($RepairWindowsImage_Click)
	#
	# ApplyTweaks
	#
	$ApplyTweaks.BackColor = 'DodgerBlue'
	$ApplyTweaks.FlatAppearance.BorderColor = 'Control'
	$ApplyTweaks.FlatStyle = 'Flat'
	$ApplyTweaks.Font = 'Microsoft Sans Serif, 17.5pt'
	$ApplyTweaks.Location = '279, 85'
	$ApplyTweaks.Margin = '4, 3, 4, 3'
	$ApplyTweaks.Name = 'ApplyTweaks'
	$ApplyTweaks.Size = '216, 60'
	$ApplyTweaks.TabIndex = 1418
	$ApplyTweaks.Text = 'Apply Tweaks'
	$ApplyTweaks.UseCompatibleTextRendering = $True
	$ApplyTweaks.UseVisualStyleBackColor = $False
	$ApplyTweaks.add_Click($ApplyTweaks_Click)
	#
	# EnableClipboardHisto
	#
	$EnableClipboardHisto.BackColor = 'DodgerBlue'
	$EnableClipboardHisto.FlatAppearance.BorderColor = 'Control'
	$EnableClipboardHisto.FlatStyle = 'Flat'
	$EnableClipboardHisto.Font = 'Microsoft Sans Serif, 12pt'
	$EnableClipboardHisto.Location = '389, 418'
	$EnableClipboardHisto.Margin = '4, 3, 4, 3'
	$EnableClipboardHisto.Name = 'EnableClipboardHisto'
	$EnableClipboardHisto.Size = '106, 25'
	$EnableClipboardHisto.TabIndex = 1408
	$EnableClipboardHisto.Text = 'Enable '
	$EnableClipboardHisto.UseCompatibleTextRendering = $True
	$EnableClipboardHisto.UseVisualStyleBackColor = $False
	$EnableClipboardHisto.add_Click($EnableClipboardHisto_Click)
	#
	# DisableClipboardHist
	#
	$DisableClipboardHist.BackColor = 'DodgerBlue'
	$DisableClipboardHist.FlatAppearance.BorderColor = 'Control'
	$DisableClipboardHist.FlatStyle = 'Flat'
	$DisableClipboardHist.Font = 'Microsoft Sans Serif, 12pt'
	$DisableClipboardHist.Location = '279, 418'
	$DisableClipboardHist.Margin = '4, 3, 4, 3'
	$DisableClipboardHist.Name = 'DisableClipboardHist'
	$DisableClipboardHist.Size = '106, 25'
	$DisableClipboardHist.TabIndex = 1407
	$DisableClipboardHist.Text = 'Disable'
	$DisableClipboardHist.UseCompatibleTextRendering = $True
	$DisableClipboardHist.UseVisualStyleBackColor = $False
	$DisableClipboardHist.add_Click($DisableClipboardHist_Click)
	#
	# DisableLocationTrack
	#
	$DisableLocationTrack.BackColor = 'DodgerBlue'
	$DisableLocationTrack.FlatAppearance.BorderColor = 'Control'
	$DisableLocationTrack.FlatStyle = 'Flat'
	$DisableLocationTrack.Font = 'Microsoft Sans Serif, 12pt'
	$DisableLocationTrack.Location = '279, 391'
	$DisableLocationTrack.Margin = '4, 3, 4, 3'
	$DisableLocationTrack.Name = 'DisableLocationTrack'
	$DisableLocationTrack.Size = '106, 25'
	$DisableLocationTrack.TabIndex = 1406
	$DisableLocationTrack.Text = 'Disable '
	$DisableLocationTrack.UseCompatibleTextRendering = $True
	$DisableLocationTrack.UseVisualStyleBackColor = $False
	$DisableLocationTrack.add_Click($DisableLocationTrack_Click)
	#
	# DisableCortana
	#
	$DisableCortana.BackColor = 'DodgerBlue'
	$DisableCortana.FlatAppearance.BorderColor = 'Control'
	$DisableCortana.FlatStyle = 'Flat'
	$DisableCortana.Font = 'Microsoft Sans Serif, 12pt'
	$DisableCortana.Location = '279, 208'
	$DisableCortana.Margin = '4, 3, 4, 3'
	$DisableCortana.Name = 'DisableCortana'
	$DisableCortana.Size = '106, 28'
	$DisableCortana.TabIndex = 1388
	$DisableCortana.Text = 'Disable '
	$DisableCortana.UseCompatibleTextRendering = $True
	$DisableCortana.UseVisualStyleBackColor = $False
	$DisableCortana.add_Click($DisableCortana_Click)
	#
	# EnableLocationTRacki
	#
	$EnableLocationTRacki.BackColor = 'DodgerBlue'
	$EnableLocationTRacki.FlatAppearance.BorderColor = 'Control'
	$EnableLocationTRacki.FlatStyle = 'Flat'
	$EnableLocationTRacki.Font = 'Microsoft Sans Serif, 12pt'
	$EnableLocationTRacki.Location = '389, 391'
	$EnableLocationTRacki.Margin = '4, 3, 4, 3'
	$EnableLocationTRacki.Name = 'EnableLocationTRacki'
	$EnableLocationTRacki.Size = '106, 25'
	$EnableLocationTRacki.TabIndex = 1405
	$EnableLocationTRacki.Text = 'Enable'
	$EnableLocationTRacki.UseCompatibleTextRendering = $True
	$EnableLocationTRacki.UseVisualStyleBackColor = $False
	$EnableLocationTRacki.add_Click($EnableLocationTRacki_Click)
	#
	# DisableActionCenter
	#
	$DisableActionCenter.BackColor = 'DodgerBlue'
	$DisableActionCenter.FlatAppearance.BorderColor = 'Control'
	$DisableActionCenter.FlatStyle = 'Flat'
	$DisableActionCenter.Font = 'Microsoft Sans Serif, 12pt'
	$DisableActionCenter.Location = '279, 151'
	$DisableActionCenter.Margin = '4, 3, 4, 3'
	$DisableActionCenter.Name = 'DisableActionCenter'
	$DisableActionCenter.Size = '106, 27'
	$DisableActionCenter.TabIndex = 1389
	$DisableActionCenter.Text = 'Disable'
	$DisableActionCenter.UseCompatibleTextRendering = $True
	$DisableActionCenter.UseVisualStyleBackColor = $False
	$DisableActionCenter.add_Click($DisableActionCenter_Click)
	#
	# Hide
	#
	$Hide.BackColor = 'DodgerBlue'
	$Hide.FlatAppearance.BorderColor = 'Control'
	$Hide.FlatStyle = 'Flat'
	$Hide.Font = 'Microsoft Sans Serif, 12pt'
	$Hide.Location = '279, 335'
	$Hide.Margin = '4, 3, 4, 3'
	$Hide.Name = 'Hide'
	$Hide.Size = '106, 25'
	$Hide.TabIndex = 1404
	$Hide.Text = 'Hide '
	$Hide.UseCompatibleTextRendering = $True
	$Hide.UseVisualStyleBackColor = $False
	#
	# EnableCortanaSearch
	#
	$EnableCortanaSearch.BackColor = 'DodgerBlue'
	$EnableCortanaSearch.FlatAppearance.BorderColor = 'Control'
	$EnableCortanaSearch.FlatStyle = 'Flat'
	$EnableCortanaSearch.Font = 'Microsoft Sans Serif, 12pt'
	$EnableCortanaSearch.Location = '389, 208'
	$EnableCortanaSearch.Margin = '4, 3, 4, 3'
	$EnableCortanaSearch.Name = 'EnableCortanaSearch'
	$EnableCortanaSearch.Size = '106, 28'
	$EnableCortanaSearch.TabIndex = 1390
	$EnableCortanaSearch.Text = 'Enable'
	$EnableCortanaSearch.UseCompatibleTextRendering = $True
	$EnableCortanaSearch.UseVisualStyleBackColor = $False
	$EnableCortanaSearch.add_Click($EnableCortanaSearch_Click)
	#
	# Show
	#
	$Show.BackColor = 'DodgerBlue'
	$Show.FlatAppearance.BorderColor = 'Control'
	$Show.FlatStyle = 'Flat'
	$Show.Font = 'Microsoft Sans Serif, 12pt'
	$Show.Location = '389, 335'
	$Show.Margin = '4, 3, 4, 3'
	$Show.Name = 'Show'
	$Show.Size = '106, 25'
	$Show.TabIndex = 1403
	$Show.Text = 'Show '
	$Show.UseCompatibleTextRendering = $True
	$Show.UseVisualStyleBackColor = $False
	#
	# EnableBackgroundApps
	#
	$EnableBackgroundApps.BackColor = 'DodgerBlue'
	$EnableBackgroundApps.FlatAppearance.BorderColor = 'Control'
	$EnableBackgroundApps.FlatStyle = 'Flat'
	$EnableBackgroundApps.Font = 'Microsoft Sans Serif, 12pt'
	$EnableBackgroundApps.Location = '389, 179'
	$EnableBackgroundApps.Margin = '4, 3, 4, 3'
	$EnableBackgroundApps.Name = 'EnableBackgroundApps'
	$EnableBackgroundApps.Size = '106, 28'
	$EnableBackgroundApps.TabIndex = 1391
	$EnableBackgroundApps.Text = 'Enable '
	$EnableBackgroundApps.UseCompatibleTextRendering = $True
	$EnableBackgroundApps.UseVisualStyleBackColor = $False
	$EnableBackgroundApps.add_Click($EnableBackgroundApps_Click)
	#
	# LightMode
	#
	$LightMode.BackColor = 'DodgerBlue'
	$LightMode.FlatAppearance.BorderColor = 'Control'
	$LightMode.FlatStyle = 'Flat'
	$LightMode.Font = 'Microsoft Sans Serif, 12pt'
	$LightMode.Location = '389, 272'
	$LightMode.Margin = '4, 3, 4, 3'
	$LightMode.Name = 'LightMode'
	$LightMode.Size = '106, 27'
	$LightMode.TabIndex = 1402
	$LightMode.Text = 'Light Mode'
	$LightMode.UseCompatibleTextRendering = $True
	$LightMode.UseVisualStyleBackColor = $False
	$LightMode.add_Click($LightMode_Click)
	#
	# DisableHibernation
	#
	$DisableHibernation.BackColor = 'DodgerBlue'
	$DisableHibernation.FlatAppearance.BorderColor = 'Control'
	$DisableHibernation.FlatStyle = 'Flat'
	$DisableHibernation.Font = 'Microsoft Sans Serif, 12pt'
	$DisableHibernation.Location = '279, 305'
	$DisableHibernation.Margin = '4, 3, 4, 3'
	$DisableHibernation.Name = 'DisableHibernation'
	$DisableHibernation.Size = '106, 26'
	$DisableHibernation.TabIndex = 1392
	$DisableHibernation.Text = 'Disable '
	$DisableHibernation.UseCompatibleTextRendering = $True
	$DisableHibernation.UseVisualStyleBackColor = $False
	$DisableHibernation.add_Click($DisableHibernation_Click)
	#
	# DarkMode
	#
	$DarkMode.BackColor = 'DodgerBlue'
	$DarkMode.FlatAppearance.BorderColor = 'Control'
	$DarkMode.FlatStyle = 'Flat'
	$DarkMode.Font = 'Microsoft Sans Serif, 12pt'
	$DarkMode.Location = '279, 272'
	$DarkMode.Margin = '4, 3, 4, 3'
	$DarkMode.Name = 'DarkMode'
	$DarkMode.Size = '106, 27'
	$DarkMode.TabIndex = 1401
	$DarkMode.Text = 'Dark Mode'
	$DarkMode.UseCompatibleTextRendering = $True
	$DarkMode.UseVisualStyleBackColor = $False
	$DarkMode.add_Click($DarkMode_Click)
	#
	# EnableHibernation
	#
	$EnableHibernation.BackColor = 'DodgerBlue'
	$EnableHibernation.FlatAppearance.BorderColor = 'Control'
	$EnableHibernation.FlatStyle = 'Flat'
	$EnableHibernation.Font = 'Microsoft Sans Serif, 12pt'
	$EnableHibernation.Location = '389, 305'
	$EnableHibernation.Margin = '4, 3, 4, 3'
	$EnableHibernation.Name = 'EnableHibernation'
	$EnableHibernation.Size = '106, 26'
	$EnableHibernation.TabIndex = 1393
	$EnableHibernation.Text = 'Enable '
	$EnableHibernation.UseCompatibleTextRendering = $True
	$EnableHibernation.UseVisualStyleBackColor = $False
	$EnableHibernation.add_Click($EnableHibernation_Click)
	#
	# SetTimeToUTCDualBoot
	#
	$SetTimeToUTCDualBoot.BackColor = 'DodgerBlue'
	$SetTimeToUTCDualBoot.FlatAppearance.BorderColor = 'Control'
	$SetTimeToUTCDualBoot.FlatStyle = 'Flat'
	$SetTimeToUTCDualBoot.Font = 'Microsoft Sans Serif, 12pt'
	$SetTimeToUTCDualBoot.Location = '738, 590'
	$SetTimeToUTCDualBoot.Margin = '4, 3, 4, 3'
	$SetTimeToUTCDualBoot.Name = 'SetTimeToUTCDualBoot'
	$SetTimeToUTCDualBoot.Size = '155, 55'
	$SetTimeToUTCDualBoot.TabIndex = 1400
	$SetTimeToUTCDualBoot.Text = 'Set Time To UTC (Dual Boot)'
	$SetTimeToUTCDualBoot.UseCompatibleTextRendering = $True
	$SetTimeToUTCDualBoot.UseVisualStyleBackColor = $False
	$SetTimeToUTCDualBoot.add_Click($SetTimeToUTCDualBoot_Click)
	#
	# CleanTempFilesAndLog
	#
	$CleanTempFilesAndLog.BackColor = 'DodgerBlue'
	$CleanTempFilesAndLog.FlatAppearance.BorderColor = 'Control'
	$CleanTempFilesAndLog.FlatStyle = 'Flat'
	$CleanTempFilesAndLog.Font = 'Microsoft Sans Serif, 14pt'
	$CleanTempFilesAndLog.Location = '576, 590'
	$CleanTempFilesAndLog.Margin = '4, 3, 4, 3'
	$CleanTempFilesAndLog.Name = 'CleanTempFilesAndLog'
	$CleanTempFilesAndLog.Size = '154, 55'
	$CleanTempFilesAndLog.TabIndex = 1394
	$CleanTempFilesAndLog.Text = 'Cleaner'
	$CleanTempFilesAndLog.UseCompatibleTextRendering = $True
	$CleanTempFilesAndLog.UseVisualStyleBackColor = $False
	$CleanTempFilesAndLog.add_Click($CleanTempFilesAndLog_Click)
	#
	# AppearanceVisualFX
	#
	$AppearanceVisualFX.BackColor = 'DodgerBlue'
	$AppearanceVisualFX.FlatAppearance.BorderColor = 'Control'
	$AppearanceVisualFX.FlatStyle = 'Flat'
	$AppearanceVisualFX.Font = 'Microsoft Sans Serif, 11.8pt'
	$AppearanceVisualFX.Location = '389, 238'
	$AppearanceVisualFX.Margin = '4, 3, 4, 3'
	$AppearanceVisualFX.Name = 'AppearanceVisualFX'
	$AppearanceVisualFX.Size = '106, 28'
	$AppearanceVisualFX.TabIndex = 1399
	$AppearanceVisualFX.Text = 'Appearance '
	$AppearanceVisualFX.UseCompatibleTextRendering = $True
	$AppearanceVisualFX.UseVisualStyleBackColor = $False
	$AppearanceVisualFX.add_Click($AppearanceVisualFX_Click)
	#
	# EnableActionCenter
	#
	$EnableActionCenter.BackColor = 'DodgerBlue'
	$EnableActionCenter.FlatAppearance.BorderColor = 'Control'
	$EnableActionCenter.FlatStyle = 'Flat'
	$EnableActionCenter.Font = 'Microsoft Sans Serif, 12pt'
	$EnableActionCenter.Location = '389, 151'
	$EnableActionCenter.Margin = '4, 3, 4, 3'
	$EnableActionCenter.Name = 'EnableActionCenter'
	$EnableActionCenter.Size = '106, 27'
	$EnableActionCenter.TabIndex = 1395
	$EnableActionCenter.Text = 'Enable'
	$EnableActionCenter.UseCompatibleTextRendering = $True
	$EnableActionCenter.UseVisualStyleBackColor = $False
	$EnableActionCenter.add_Click($EnableActionCenter_Click)
	#
	# PerformanceVisualFX
	#
	$PerformanceVisualFX.BackColor = 'DodgerBlue'
	$PerformanceVisualFX.FlatAppearance.BorderColor = 'Control'
	$PerformanceVisualFX.FlatStyle = 'Flat'
	$PerformanceVisualFX.Font = 'Microsoft Sans Serif, 11.5pt'
	$PerformanceVisualFX.Location = '279, 238'
	$PerformanceVisualFX.Margin = '4, 3, 4, 3'
	$PerformanceVisualFX.Name = 'PerformanceVisualFX'
	$PerformanceVisualFX.Size = '106, 28'
	$PerformanceVisualFX.TabIndex = 1398
	$PerformanceVisualFX.Text = 'Performance '
	$PerformanceVisualFX.UseCompatibleTextRendering = $True
	$PerformanceVisualFX.UseVisualStyleBackColor = $False
	$PerformanceVisualFX.add_Click($PerformanceVisualFX_Click)
	#
	# DisableMemoryCompres
	#
	$DisableMemoryCompres.BackColor = 'DodgerBlue'
	$DisableMemoryCompres.FlatAppearance.BorderColor = 'Control'
	$DisableMemoryCompres.FlatStyle = 'Flat'
	$DisableMemoryCompres.Font = 'Microsoft Sans Serif, 12pt'
	$DisableMemoryCompres.Location = '279, 364'
	$DisableMemoryCompres.Margin = '4, 3, 4, 3'
	$DisableMemoryCompres.Name = 'DisableMemoryCompres'
	$DisableMemoryCompres.Size = '106, 25'
	$DisableMemoryCompres.TabIndex = 1396
	$DisableMemoryCompres.Text = 'Disable '
	$DisableMemoryCompres.UseCompatibleTextRendering = $True
	$DisableMemoryCompres.UseVisualStyleBackColor = $False
	$DisableMemoryCompres.add_Click($DisableMemoryCompres_Click)
	#
	# EnableMemoryCompress
	#
	$EnableMemoryCompress.BackColor = 'DodgerBlue'
	$EnableMemoryCompress.FlatAppearance.BorderColor = 'Control'
	$EnableMemoryCompress.FlatStyle = 'Flat'
	$EnableMemoryCompress.Font = 'Microsoft Sans Serif, 12pt'
	$EnableMemoryCompress.Location = '389, 364'
	$EnableMemoryCompress.Margin = '4, 3, 4, 3'
	$EnableMemoryCompress.Name = 'EnableMemoryCompress'
	$EnableMemoryCompress.Size = '106, 25'
	$EnableMemoryCompress.TabIndex = 1397
	$EnableMemoryCompress.Text = 'Enable '
	$EnableMemoryCompress.UseCompatibleTextRendering = $True
	$EnableMemoryCompress.UseVisualStyleBackColor = $False
	$EnableMemoryCompress.add_Click($EnableMemoryCompress_Click)
	#
	# tabpage6
	#
	$tabpage6.Controls.Add($buttonUnistallEdge)
	$tabpage6.Controls.Add($buttonRevertRegistryChange)
	$tabpage6.Controls.Add($textbox88)
	$tabpage6.Controls.Add($InstallOnedrive)
	$tabpage6.Controls.Add($textbox87)
	$tabpage6.Controls.Add($EnableEdgePDF)
	$tabpage6.Controls.Add($textbox86)
	$tabpage6.Controls.Add($buttonDebloatWithBlocklist)
	$tabpage6.Controls.Add($DebloatAll)
	$tabpage6.Controls.Add($ReinstallAllBloatwar)
	$tabpage6.Controls.Add($textbox84)
	$tabpage6.Controls.Add($UnsintallOnedrive)
	$tabpage6.Controls.Add($DisableEdgePDF)
	$tabpage6.Controls.Add($UnpinTitilesFromStar)
	$tabpage6.Controls.Add($RemoveBloatwareRegKe)
	$tabpage6.Controls.Add($textbox85)
	$tabpage6.BackColor = 'Control'
	$tabpage6.Location = '4, 22'
	$tabpage6.Name = 'tabpage6'
	$tabpage6.Size = '934, 908'
	$tabpage6.TabIndex = 6
	$tabpage6.Text = 'Debloat Windows'
	#
	# buttonUnistallEdge
	#
	$buttonUnistallEdge.BackColor = 'DodgerBlue'
	$buttonUnistallEdge.FlatAppearance.BorderColor = 'Control'
	$buttonUnistallEdge.FlatStyle = 'Flat'
	$buttonUnistallEdge.Font = 'Microsoft Sans Serif, 14pt'
	$buttonUnistallEdge.Location = '174, 310'
	$buttonUnistallEdge.Margin = '4, 3, 4, 3'
	$buttonUnistallEdge.Name = 'buttonUnistallEdge'
	$buttonUnistallEdge.Size = '203, 44'
	$buttonUnistallEdge.TabIndex = 1505
	$buttonUnistallEdge.Text = 'Unistall Edge'
	$buttonUnistallEdge.UseCompatibleTextRendering = $True
	$buttonUnistallEdge.UseVisualStyleBackColor = $False
	$buttonUnistallEdge.add_Click($buttonUnistallEdge_Click)
	#
	# buttonRevertRegistryChange
	#
	$buttonRevertRegistryChange.BackColor = 'DodgerBlue'
	$buttonRevertRegistryChange.FlatAppearance.BorderColor = 'Control'
	$buttonRevertRegistryChange.FlatStyle = 'Flat'
	$buttonRevertRegistryChange.Font = 'Microsoft Sans Serif, 12.3pt'
	$buttonRevertRegistryChange.Location = '525, 160'
	$buttonRevertRegistryChange.Margin = '4, 3, 4, 3'
	$buttonRevertRegistryChange.Name = 'buttonRevertRegistryChange'
	$buttonRevertRegistryChange.Size = '203, 44'
	$buttonRevertRegistryChange.TabIndex = 1504
	$buttonRevertRegistryChange.Text = 'Revert Registry Changes'
	$buttonRevertRegistryChange.UseCompatibleTextRendering = $True
	$buttonRevertRegistryChange.UseVisualStyleBackColor = $False
	$buttonRevertRegistryChange.add_Click($buttonRevertRegistryChange_Click)
	#
	# textbox88
	#
	$textbox88.AccessibleRole = 'None'
	$textbox88.BackColor = 'Control'
	$textbox88.BorderStyle = 'None'
	$textbox88.Font = 'Microsoft Sans Serif, 20pt'
	$textbox88.Location = '580, 73'
	$textbox88.Margin = '4, 3, 4, 3'
	$textbox88.Name = 'textbox88'
	$textbox88.ReadOnly = $True
	$textbox88.Size = '104, 31'
	$textbox88.TabIndex = 1503
	$textbox88.TabStop = $False
	$textbox88.Text = 'Revert'
	#
	# InstallOnedrive
	#
	$InstallOnedrive.BackColor = 'DodgerBlue'
	$InstallOnedrive.FlatAppearance.BorderColor = 'White'
	$InstallOnedrive.FlatStyle = 'Flat'
	$InstallOnedrive.Font = 'Microsoft Sans Serif, 14pt'
	$InstallOnedrive.Location = '505, 478'
	$InstallOnedrive.Margin = '4, 3, 4, 3'
	$InstallOnedrive.Name = 'InstallOnedrive'
	$InstallOnedrive.Size = '119, 39'
	$InstallOnedrive.TabIndex = 1502
	$InstallOnedrive.Text = 'Install'
	$InstallOnedrive.UseCompatibleTextRendering = $True
	$InstallOnedrive.UseVisualStyleBackColor = $False
	$InstallOnedrive.add_Click($InstallOnedrive_Click)
	#
	# textbox87
	#
	$textbox87.AccessibleRole = 'None'
	$textbox87.BackColor = 'Control'
	$textbox87.BorderStyle = 'None'
	$textbox87.Font = 'Microsoft Sans Serif, 16pt'
	$textbox87.Location = '519, 404'
	$textbox87.Margin = '4, 3, 4, 3'
	$textbox87.Name = 'textbox87'
	$textbox87.ReadOnly = $True
	$textbox87.Size = '88, 25'
	$textbox87.TabIndex = 1501
	$textbox87.TabStop = $False
	$textbox87.Text = 'Onedrive'
	#
	# EnableEdgePDF
	#
	$EnableEdgePDF.BackColor = 'DodgerBlue'
	$EnableEdgePDF.FlatAppearance.BorderColor = 'White'
	$EnableEdgePDF.FlatStyle = 'Flat'
	$EnableEdgePDF.Font = 'Microsoft Sans Serif, 14pt'
	$EnableEdgePDF.Location = '362, 478'
	$EnableEdgePDF.Margin = '4, 3, 4, 3'
	$EnableEdgePDF.Name = 'EnableEdgePDF'
	$EnableEdgePDF.Size = '119, 39'
	$EnableEdgePDF.TabIndex = 1500
	$EnableEdgePDF.Text = 'Enable'
	$EnableEdgePDF.UseCompatibleTextRendering = $True
	$EnableEdgePDF.UseVisualStyleBackColor = $False
	#
	# textbox86
	#
	$textbox86.AccessibleRole = 'None'
	$textbox86.BackColor = 'Control'
	$textbox86.BorderStyle = 'None'
	$textbox86.Font = 'Microsoft Sans Serif, 16pt'
	$textbox86.Location = '373, 404'
	$textbox86.Margin = '4, 3, 4, 3'
	$textbox86.Name = 'textbox86'
	$textbox86.ReadOnly = $True
	$textbox86.Size = '102, 25'
	$textbox86.TabIndex = 1499
	$textbox86.TabStop = $False
	$textbox86.Text = 'Edge PDF'
	#
	# buttonDebloatWithBlocklist
	#
	$buttonDebloatWithBlocklist.BackColor = 'DodgerBlue'
	$buttonDebloatWithBlocklist.FlatAppearance.BorderColor = 'Control'
	$buttonDebloatWithBlocklist.FlatStyle = 'Flat'
	$buttonDebloatWithBlocklist.Font = 'Microsoft Sans Serif, 14pt'
	$buttonDebloatWithBlocklist.Location = '174, 260'
	$buttonDebloatWithBlocklist.Margin = '4, 3, 4, 3'
	$buttonDebloatWithBlocklist.Name = 'buttonDebloatWithBlocklist'
	$buttonDebloatWithBlocklist.Size = '203, 44'
	$buttonDebloatWithBlocklist.TabIndex = 1498
	$buttonDebloatWithBlocklist.Text = 'Debloat With Blocklist'
	$buttonDebloatWithBlocklist.UseCompatibleTextRendering = $True
	$buttonDebloatWithBlocklist.UseVisualStyleBackColor = $False
	$buttonDebloatWithBlocklist.add_Click($buttonDebloatWithBlocklist_Click)
	#
	# DebloatAll
	#
	$DebloatAll.BackColor = 'DodgerBlue'
	$DebloatAll.FlatAppearance.BorderColor = 'Control'
	$DebloatAll.FlatStyle = 'Flat'
	$DebloatAll.Font = 'Microsoft Sans Serif, 14pt'
	$DebloatAll.Location = '174, 110'
	$DebloatAll.Margin = '4, 3, 4, 3'
	$DebloatAll.Name = 'DebloatAll'
	$DebloatAll.Size = '203, 44'
	$DebloatAll.TabIndex = 1443
	$DebloatAll.Text = 'Debloat All '
	$DebloatAll.UseCompatibleTextRendering = $True
	$DebloatAll.UseVisualStyleBackColor = $False
	$DebloatAll.add_Click($DebloatAll_Click)
	#
	# ReinstallAllBloatwar
	#
	$ReinstallAllBloatwar.BackColor = 'DodgerBlue'
	$ReinstallAllBloatwar.FlatAppearance.BorderColor = 'Control'
	$ReinstallAllBloatwar.FlatStyle = 'Flat'
	$ReinstallAllBloatwar.Font = 'Microsoft Sans Serif, 12.3pt'
	$ReinstallAllBloatwar.Location = '525, 110'
	$ReinstallAllBloatwar.Margin = '4, 3, 4, 3'
	$ReinstallAllBloatwar.Name = 'ReinstallAllBloatwar'
	$ReinstallAllBloatwar.Size = '203, 44'
	$ReinstallAllBloatwar.TabIndex = 1497
	$ReinstallAllBloatwar.Text = 'Reinstall All Bloatware'
	$ReinstallAllBloatwar.UseCompatibleTextRendering = $True
	$ReinstallAllBloatwar.UseVisualStyleBackColor = $False
	$ReinstallAllBloatwar.add_Click($ReinstallAllBloatwar_Click)
	#
	# textbox84
	#
	$textbox84.BackColor = 'Control'
	$textbox84.BorderStyle = 'None'
	$textbox84.Location = '151, 360'
	$textbox84.Margin = '4, 3, 4, 3'
	$textbox84.Name = 'textbox84'
	$textbox84.ReadOnly = $True
	$textbox84.Size = '295, 13'
	$textbox84.TabIndex = 1496
	$textbox84.TabStop = $False
	$textbox84.Text = '(Remove All MS Store Apps To Lighten Up Windows System)'
	#
	# UnsintallOnedrive
	#
	$UnsintallOnedrive.BackColor = 'DodgerBlue'
	$UnsintallOnedrive.FlatAppearance.BorderColor = 'White'
	$UnsintallOnedrive.FlatStyle = 'Flat'
	$UnsintallOnedrive.Font = 'Microsoft Sans Serif, 14pt'
	$UnsintallOnedrive.Location = '505, 435'
	$UnsintallOnedrive.Margin = '4, 3, 4, 3'
	$UnsintallOnedrive.Name = 'UnsintallOnedrive'
	$UnsintallOnedrive.Size = '119, 39'
	$UnsintallOnedrive.TabIndex = 1495
	$UnsintallOnedrive.Text = 'Unsintall '
	$UnsintallOnedrive.UseCompatibleTextRendering = $True
	$UnsintallOnedrive.UseVisualStyleBackColor = $False
	$UnsintallOnedrive.add_Click($UnsintallOnedrive_Click)
	#
	# DisableEdgePDF
	#
	$DisableEdgePDF.BackColor = 'DodgerBlue'
	$DisableEdgePDF.FlatAppearance.BorderColor = 'White'
	$DisableEdgePDF.FlatStyle = 'Flat'
	$DisableEdgePDF.Font = 'Microsoft Sans Serif, 14pt'
	$DisableEdgePDF.Location = '362, 435'
	$DisableEdgePDF.Margin = '4, 3, 4, 3'
	$DisableEdgePDF.Name = 'DisableEdgePDF'
	$DisableEdgePDF.Size = '119, 39'
	$DisableEdgePDF.TabIndex = 1494
	$DisableEdgePDF.Text = 'Disable '
	$DisableEdgePDF.UseCompatibleTextRendering = $True
	$DisableEdgePDF.UseVisualStyleBackColor = $False
	$DisableEdgePDF.add_Click($DisableEdgePDF_Click)
	#
	# UnpinTitilesFromStar
	#
	$UnpinTitilesFromStar.BackColor = 'DodgerBlue'
	$UnpinTitilesFromStar.FlatAppearance.BorderColor = 'Control'
	$UnpinTitilesFromStar.FlatStyle = 'Flat'
	$UnpinTitilesFromStar.Font = 'Microsoft Sans Serif, 12.3pt'
	$UnpinTitilesFromStar.Location = '174, 160'
	$UnpinTitilesFromStar.Margin = '4, 3, 4, 3'
	$UnpinTitilesFromStar.Name = 'UnpinTitilesFromStar'
	$UnpinTitilesFromStar.Size = '203, 44'
	$UnpinTitilesFromStar.TabIndex = 1493
	$UnpinTitilesFromStar.Text = 'Unpin Titiles From Start Menu'
	$UnpinTitilesFromStar.UseCompatibleTextRendering = $True
	$UnpinTitilesFromStar.UseVisualStyleBackColor = $False
	$UnpinTitilesFromStar.add_Click($UnpinTitilesFromStar_Click)
	#
	# RemoveBloatwareRegKe
	#
	$RemoveBloatwareRegKe.BackColor = 'DodgerBlue'
	$RemoveBloatwareRegKe.FlatAppearance.BorderColor = 'Control'
	$RemoveBloatwareRegKe.FlatStyle = 'Flat'
	$RemoveBloatwareRegKe.Font = 'Microsoft Sans Serif, 12.3pt'
	$RemoveBloatwareRegKe.Location = '174, 210'
	$RemoveBloatwareRegKe.Margin = '4, 3, 4, 3'
	$RemoveBloatwareRegKe.Name = 'RemoveBloatwareRegKe'
	$RemoveBloatwareRegKe.Size = '203, 44'
	$RemoveBloatwareRegKe.TabIndex = 1492
	$RemoveBloatwareRegKe.Text = 'Remove Bloatware Reg Keys'
	$RemoveBloatwareRegKe.UseCompatibleTextRendering = $True
	$RemoveBloatwareRegKe.UseVisualStyleBackColor = $False
	$RemoveBloatwareRegKe.add_Click($RemoveBloatwareRegKe_Click)
	#
	# textbox85
	#
	$textbox85.AccessibleRole = 'None'
	$textbox85.BackColor = 'Control'
	$textbox85.BorderStyle = 'None'
	$textbox85.Font = 'Microsoft Sans Serif, 20pt'
	$textbox85.Location = '171, 73'
	$textbox85.Margin = '4, 3, 4, 3'
	$textbox85.Name = 'textbox85'
	$textbox85.ReadOnly = $True
	$textbox85.Size = '220, 31'
	$textbox85.TabIndex = 1490
	$textbox85.TabStop = $False
	$textbox85.Text = 'Debloat Windows'
	#
	# tabpage3
	#
	$tabpage3.Controls.Add($buttonRestore)
	$tabpage3.Controls.Add($textbox114)
	$tabpage3.Controls.Add($textbox113)
	$tabpage3.Controls.Add($textbox112)
	$tabpage3.Controls.Add($textbox111)
	$tabpage3.Controls.Add($textbox110)
	$tabpage3.Controls.Add($buttonCreateARestorePoint)
	$tabpage3.Controls.Add($textbox109)
	$tabpage3.Controls.Add($textbox108)
	$tabpage3.Controls.Add($textbox107)
	$tabpage3.Controls.Add($textbox106)
	$tabpage3.Controls.Add($textbox105)
	$tabpage3.Controls.Add($textbox103)
	$tabpage3.Controls.Add($textbox102)
	$tabpage3.Controls.Add($textbox101)
	$tabpage3.Controls.Add($textbox100)
	$tabpage3.Controls.Add($textbox99)
	$tabpage3.Controls.Add($textbox98)
	$tabpage3.Controls.Add($textbox97)
	$tabpage3.Controls.Add($textbox96)
	$tabpage3.Controls.Add($textbox95)
	$tabpage3.Controls.Add($textbox94)
	$tabpage3.Controls.Add($textbox93)
	$tabpage3.Controls.Add($textbox92)
	$tabpage3.Controls.Add($buttonActivateMSOffice)
	$tabpage3.Controls.Add($buttonActivateWindows)
	$tabpage3.Controls.Add($textbox91)
	$tabpage3.Controls.Add($WindowsUpdateReset)
	$tabpage3.Controls.Add($Low)
	$tabpage3.Controls.Add($textbox49)
	$tabpage3.Controls.Add($EnableWindowsUpdates)
	$tabpage3.Controls.Add($DisableWindowsUpdate)
	$tabpage3.Controls.Add($textbox71)
	$tabpage3.Controls.Add($textbox72)
	$tabpage3.Controls.Add($textbox73)
	$tabpage3.Controls.Add($DefaultSetting)
	$tabpage3.Controls.Add($SecurityUpdatesOnly)
	$tabpage3.Controls.Add($textbox74)
	$tabpage3.Controls.Add($RemoveMalware)
	$tabpage3.Controls.Add($RemoveViruses)
	$tabpage3.Controls.Add($textbox62)
	$tabpage3.Controls.Add($textbox63)
	$tabpage3.Controls.Add($textbox64)
	$tabpage3.Controls.Add($textbox65)
	$tabpage3.Controls.Add($textbox66)
	$tabpage3.Controls.Add($textbox67)
	$tabpage3.Controls.Add($textbox68)
	$tabpage3.Controls.Add($textbox69)
	$tabpage3.Controls.Add($textbox70)
	$tabpage3.Controls.Add($High)
	$tabpage3.BackColor = 'Control'
	$tabpage3.Font = 'Microsoft Sans Serif, 8.25pt'
	$tabpage3.Location = '4, 22'
	$tabpage3.Name = 'tabpage3'
	$tabpage3.Size = '934, 908'
	$tabpage3.TabIndex = 3
	$tabpage3.Text = 'Updates & Security'
	#
	# buttonRestore
	#
	$buttonRestore.BackColor = 'DodgerBlue'
	$buttonRestore.FlatAppearance.BorderColor = 'White'
	$buttonRestore.FlatStyle = 'Flat'
	$buttonRestore.Font = 'Microsoft Sans Serif, 12pt'
	$buttonRestore.Location = '709, 631'
	$buttonRestore.Margin = '4, 3, 4, 3'
	$buttonRestore.Name = 'buttonRestore'
	$buttonRestore.Size = '132, 40'
	$buttonRestore.TabIndex = 1476
	$buttonRestore.Text = 'Restore'
	$buttonRestore.UseCompatibleTextRendering = $True
	$buttonRestore.UseVisualStyleBackColor = $False
	$buttonRestore.add_Click($buttonRestore_Click)
	#
	# textbox114
	#
	$textbox114.BackColor = 'Control'
	$textbox114.BorderStyle = 'None'
	$textbox114.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox114.Location = '550, 593'
	$textbox114.Margin = '4, 3, 4, 3'
	$textbox114.Name = 'textbox114'
	$textbox114.ReadOnly = $True
	$textbox114.Size = '306, 13'
	$textbox114.TabIndex = 1475
	$textbox114.TabStop = $False
	$textbox114.Text = '(Windows Will Reboot And Restore The Previous State)'
	#
	# textbox113
	#
	$textbox113.BackColor = 'Control'
	$textbox113.BorderStyle = 'None'
	$textbox113.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox113.Location = '550, 564'
	$textbox113.Margin = '4, 3, 4, 3'
	$textbox113.Name = 'textbox113'
	$textbox113.ReadOnly = $True
	$textbox113.Size = '306, 13'
	$textbox113.TabIndex = 1474
	$textbox113.TabStop = $False
	$textbox113.Text = '- Click Next And Finish'
	#
	# textbox112
	#
	$textbox112.BackColor = 'Control'
	$textbox112.BorderStyle = 'None'
	$textbox112.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox112.Location = '550, 549'
	$textbox112.Margin = '4, 3, 4, 3'
	$textbox112.Name = 'textbox112'
	$textbox112.ReadOnly = $True
	$textbox112.Size = '306, 13'
	$textbox112.TabIndex = 1473
	$textbox112.TabStop = $False
	$textbox112.Text = '- Choose "WinToolBox" Section'
	#
	# textbox111
	#
	$textbox111.BackColor = 'Control'
	$textbox111.BorderStyle = 'None'
	$textbox111.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox111.Location = '550, 535'
	$textbox111.Margin = '4, 3, 4, 3'
	$textbox111.Name = 'textbox111'
	$textbox111.ReadOnly = $True
	$textbox111.Size = '306, 13'
	$textbox111.TabIndex = 1472
	$textbox111.TabStop = $False
	$textbox111.Text = '- Click The "Restore" Button Below'
	#
	# textbox110
	#
	$textbox110.BackColor = 'Control'
	$textbox110.BorderStyle = 'None'
	$textbox110.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox110.Location = '550, 516'
	$textbox110.Margin = '4, 3, 4, 3'
	$textbox110.Name = 'textbox110'
	$textbox110.ReadOnly = $True
	$textbox110.Size = '306, 13'
	$textbox110.TabIndex = 1471
	$textbox110.TabStop = $False
	$textbox110.Text = '> To Restore'
	#
	# buttonCreateARestorePoint
	#
	$buttonCreateARestorePoint.BackColor = 'DodgerBlue'
	$buttonCreateARestorePoint.FlatAppearance.BorderColor = 'White'
	$buttonCreateARestorePoint.FlatStyle = 'Flat'
	$buttonCreateARestorePoint.Font = 'Microsoft Sans Serif, 12pt'
	$buttonCreateARestorePoint.Location = '651, 470'
	$buttonCreateARestorePoint.Margin = '4, 3, 4, 3'
	$buttonCreateARestorePoint.Name = 'buttonCreateARestorePoint'
	$buttonCreateARestorePoint.Size = '190, 40'
	$buttonCreateARestorePoint.TabIndex = 1470
	$buttonCreateARestorePoint.Text = 'Create A Restore Point'
	$buttonCreateARestorePoint.UseCompatibleTextRendering = $True
	$buttonCreateARestorePoint.UseVisualStyleBackColor = $False
	$buttonCreateARestorePoint.add_Click($buttonCreateARestorePoint_Click)
	#
	# textbox109
	#
	$textbox109.BackColor = 'Control'
	$textbox109.BorderStyle = 'None'
	$textbox109.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox109.Location = '550, 433'
	$textbox109.Margin = '4, 3, 4, 3'
	$textbox109.Name = 'textbox109'
	$textbox109.ReadOnly = $True
	$textbox109.Size = '306, 13'
	$textbox109.TabIndex = 1469
	$textbox109.TabStop = $False
	$textbox109.Text = 'It''s Completely Safe to use because everything is reversible'
	#
	# textbox108
	#
	$textbox108.BackColor = 'Control'
	$textbox108.BorderStyle = 'None'
	$textbox108.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox108.Location = '550, 417'
	$textbox108.Margin = '4, 3, 4, 3'
	$textbox108.Name = 'textbox108'
	$textbox108.ReadOnly = $True
	$textbox108.Size = '306, 13'
	$textbox108.TabIndex = 1468
	$textbox108.TabStop = $False
	$textbox108.Text = 'goes wrong or you want to revert back in previous state'
	#
	# textbox107
	#
	$textbox107.BackColor = 'Control'
	$textbox107.BorderStyle = 'None'
	$textbox107.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox107.Location = '550, 403'
	$textbox107.Margin = '4, 3, 4, 3'
	$textbox107.Name = 'textbox107'
	$textbox107.ReadOnly = $True
	$textbox107.Size = '306, 13'
	$textbox107.TabIndex = 1467
	$textbox107.TabStop = $False
	$textbox107.Text = 'Windows Optimization Toolbox . Just in case if something '
	#
	# textbox106
	#
	$textbox106.BackColor = 'Control'
	$textbox106.BorderStyle = 'None'
	$textbox106.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox106.Location = '550, 389'
	$textbox106.Margin = '4, 3, 4, 3'
	$textbox106.Name = 'textbox106'
	$textbox106.ReadOnly = $True
	$textbox106.Size = '291, 13'
	$textbox106.TabIndex = 1466
	$textbox106.TabStop = $False
	$textbox106.Text = 'Before doing anything, Create a "System Restore Point" from'
	#
	# textbox105
	#
	$textbox105.AccessibleRole = 'None'
	$textbox105.BackColor = 'Control'
	$textbox105.BorderStyle = 'None'
	$textbox105.Font = 'Microsoft Sans Serif, 20pt'
	$textbox105.Location = '608, 348'
	$textbox105.Margin = '4, 3, 4, 3'
	$textbox105.Name = 'textbox105'
	$textbox105.ReadOnly = $True
	$textbox105.Size = '204, 31'
	$textbox105.TabIndex = 1465
	$textbox105.TabStop = $False
	$textbox105.Text = 'Backup/Restore'
	#
	# textbox103
	#
	$textbox103.BackColor = 'Control'
	$textbox103.BorderStyle = 'None'
	$textbox103.Font = 'Microsoft Sans Serif, 10pt'
	$textbox103.Location = '157, 533'
	$textbox103.Margin = '4, 3, 4, 3'
	$textbox103.Name = 'textbox103'
	$textbox103.ReadOnly = $True
	$textbox103.Size = '209, 16'
	$textbox103.TabIndex = 1464
	$textbox103.TabStop = $False
	$textbox103.Text = '(1 Click Will Try To Activate All)'
	#
	# textbox102
	#
	$textbox102.BackColor = 'Control'
	$textbox102.BorderStyle = 'None'
	$textbox102.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox102.Location = '309, 503'
	$textbox102.Margin = '4, 3, 4, 3'
	$textbox102.Name = 'textbox102'
	$textbox102.ReadOnly = $True
	$textbox102.Size = '164, 13'
	$textbox102.TabIndex = 1463
	$textbox102.TabStop = $False
	$textbox102.Text = '- Project 2016/2019'
	#
	# textbox101
	#
	$textbox101.BackColor = 'Control'
	$textbox101.BorderStyle = 'None'
	$textbox101.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox101.Location = '309, 489'
	$textbox101.Margin = '4, 3, 4, 3'
	$textbox101.Name = 'textbox101'
	$textbox101.ReadOnly = $True
	$textbox101.Size = '164, 13'
	$textbox101.TabIndex = 1462
	$textbox101.TabStop = $False
	$textbox101.Text = '- Visio 2016/2019'
	#
	# textbox100
	#
	$textbox100.BackColor = 'Control'
	$textbox100.BorderStyle = 'None'
	$textbox100.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox100.Location = '309, 476'
	$textbox100.Margin = '4, 3, 4, 3'
	$textbox100.Name = 'textbox100'
	$textbox100.ReadOnly = $True
	$textbox100.Size = '164, 13'
	$textbox100.TabIndex = 1461
	$textbox100.TabStop = $False
	$textbox100.Text = '- Office 365'
	#
	# textbox99
	#
	$textbox99.BackColor = 'Control'
	$textbox99.BorderStyle = 'None'
	$textbox99.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox99.Location = '309, 462'
	$textbox99.Margin = '4, 3, 4, 3'
	$textbox99.Name = 'textbox99'
	$textbox99.ReadOnly = $True
	$textbox99.Size = '164, 13'
	$textbox99.TabIndex = 1460
	$textbox99.TabStop = $False
	$textbox99.Text = '- Office 2019'
	#
	# textbox98
	#
	$textbox98.BackColor = 'Control'
	$textbox98.BorderStyle = 'None'
	$textbox98.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox98.Location = '309, 448'
	$textbox98.Margin = '4, 3, 4, 3'
	$textbox98.Name = 'textbox98'
	$textbox98.ReadOnly = $True
	$textbox98.Size = '164, 13'
	$textbox98.TabIndex = 1459
	$textbox98.TabStop = $False
	$textbox98.Text = '- Office 2016'
	#
	# textbox97
	#
	$textbox97.BackColor = 'Control'
	$textbox97.BorderStyle = 'None'
	$textbox97.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox97.Location = '309, 433'
	$textbox97.Margin = '4, 3, 4, 3'
	$textbox97.Name = 'textbox97'
	$textbox97.ReadOnly = $True
	$textbox97.Size = '164, 13'
	$textbox97.TabIndex = 1458
	$textbox97.TabStop = $False
	$textbox97.Text = '- Office 2010/2013'
	#
	# textbox96
	#
	$textbox96.BackColor = 'Control'
	$textbox96.BorderStyle = 'None'
	$textbox96.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox96.Location = '309, 416'
	$textbox96.Margin = '4, 3, 4, 3'
	$textbox96.Name = 'textbox96'
	$textbox96.ReadOnly = $True
	$textbox96.Size = '100, 13'
	$textbox96.TabIndex = 1457
	$textbox96.TabStop = $False
	$textbox96.Text = '> Supported Version'
	#
	# textbox95
	#
	$textbox95.BackColor = 'Control'
	$textbox95.BorderStyle = 'None'
	$textbox95.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox95.Location = '127, 462'
	$textbox95.Margin = '4, 3, 4, 3'
	$textbox95.Name = 'textbox95'
	$textbox95.ReadOnly = $True
	$textbox95.Size = '100, 13'
	$textbox95.TabIndex = 1456
	$textbox95.TabStop = $False
	$textbox95.Text = '- Windows 8'
	#
	# textbox94
	#
	$textbox94.BackColor = 'Control'
	$textbox94.BorderStyle = 'None'
	$textbox94.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox94.Location = '127, 448'
	$textbox94.Margin = '4, 3, 4, 3'
	$textbox94.Name = 'textbox94'
	$textbox94.ReadOnly = $True
	$textbox94.Size = '164, 13'
	$textbox94.TabIndex = 1455
	$textbox94.TabStop = $False
	$textbox94.Text = '- Windows 10'
	#
	# textbox93
	#
	$textbox93.BackColor = 'Control'
	$textbox93.BorderStyle = 'None'
	$textbox93.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox93.Location = '127, 433'
	$textbox93.Margin = '4, 3, 4, 3'
	$textbox93.Name = 'textbox93'
	$textbox93.ReadOnly = $True
	$textbox93.Size = '164, 13'
	$textbox93.TabIndex = 1454
	$textbox93.TabStop = $False
	$textbox93.Text = '- Windows 11'
	#
	# textbox92
	#
	$textbox92.BackColor = 'Control'
	$textbox92.BorderStyle = 'None'
	$textbox92.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox92.Location = '127, 416'
	$textbox92.Margin = '4, 3, 4, 3'
	$textbox92.Name = 'textbox92'
	$textbox92.ReadOnly = $True
	$textbox92.Size = '100, 13'
	$textbox92.TabIndex = 1453
	$textbox92.TabStop = $False
	$textbox92.Text = '> Supported Version'
	#
	# buttonActivateMSOffice
	#
	$buttonActivateMSOffice.BackColor = 'DodgerBlue'
	$buttonActivateMSOffice.FlatAppearance.BorderColor = 'White'
	$buttonActivateMSOffice.FlatStyle = 'Flat'
	$buttonActivateMSOffice.Font = 'Microsoft Sans Serif, 14pt'
	$buttonActivateMSOffice.Location = '293, 357'
	$buttonActivateMSOffice.Margin = '4, 3, 4, 3'
	$buttonActivateMSOffice.Name = 'buttonActivateMSOffice'
	$buttonActivateMSOffice.Size = '178, 53'
	$buttonActivateMSOffice.TabIndex = 1452
	$buttonActivateMSOffice.Text = 'Activate MS Office'
	$buttonActivateMSOffice.UseCompatibleTextRendering = $True
	$buttonActivateMSOffice.UseVisualStyleBackColor = $False
	$buttonActivateMSOffice.add_Click($buttonActivateMSOffice_Click)
	#
	# buttonActivateWindows
	#
	$buttonActivateWindows.BackColor = 'DodgerBlue'
	$buttonActivateWindows.FlatAppearance.BorderColor = 'White'
	$buttonActivateWindows.FlatStyle = 'Flat'
	$buttonActivateWindows.Font = 'Microsoft Sans Serif, 14pt'
	$buttonActivateWindows.Location = '105, 357'
	$buttonActivateWindows.Margin = '4, 3, 4, 3'
	$buttonActivateWindows.Name = 'buttonActivateWindows'
	$buttonActivateWindows.Size = '178, 53'
	$buttonActivateWindows.TabIndex = 1451
	$buttonActivateWindows.Text = 'Activate Windows'
	$buttonActivateWindows.UseCompatibleTextRendering = $True
	$buttonActivateWindows.UseVisualStyleBackColor = $False
	$buttonActivateWindows.add_Click($buttonActivateWindows_Click)
	#
	# textbox91
	#
	$textbox91.AccessibleRole = 'None'
	$textbox91.BackColor = 'Control'
	$textbox91.BorderStyle = 'None'
	$textbox91.Font = 'Microsoft Sans Serif, 20pt'
	$textbox91.Location = '225, 320'
	$textbox91.Margin = '4, 3, 4, 3'
	$textbox91.Name = 'textbox91'
	$textbox91.ReadOnly = $True
	$textbox91.Size = '127, 31'
	$textbox91.TabIndex = 1450
	$textbox91.TabStop = $False
	$textbox91.Text = 'Activation'
	#
	# WindowsUpdateReset
	#
	$WindowsUpdateReset.BackColor = 'DodgerBlue'
	$WindowsUpdateReset.FlatAppearance.BorderColor = 'White'
	$WindowsUpdateReset.FlatStyle = 'Flat'
	$WindowsUpdateReset.Font = 'Microsoft Sans Serif, 12pt'
	$WindowsUpdateReset.Location = '541, 191'
	$WindowsUpdateReset.Margin = '4, 3, 4, 3'
	$WindowsUpdateReset.Name = 'WindowsUpdateReset'
	$WindowsUpdateReset.Size = '164, 53'
	$WindowsUpdateReset.TabIndex = 1432
	$WindowsUpdateReset.Text = 'Windows Update Reset'
	$WindowsUpdateReset.UseCompatibleTextRendering = $True
	$WindowsUpdateReset.UseVisualStyleBackColor = $False
	$WindowsUpdateReset.add_Click($WindowsUpdateReset_Click)
	#
	# Low
	#
	$Low.BackColor = 'DodgerBlue'
	$Low.FlatAppearance.BorderColor = 'White'
	$Low.FlatStyle = 'Flat'
	$Low.Font = 'Microsoft Sans Serif, 16pt'
	$Low.Location = '107, 175'
	$Low.Margin = '4, 3, 4, 3'
	$Low.Name = 'Low'
	$Low.Size = '112, 41'
	$Low.TabIndex = 1449
	$Low.Text = 'Low'
	$Low.UseCompatibleTextRendering = $True
	$Low.UseVisualStyleBackColor = $False
	$Low.add_Click($Low_Click)
	#
	# textbox49
	#
	$textbox49.BackColor = 'Control'
	$textbox49.BorderStyle = 'None'
	$textbox49.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox49.Location = '552, 250'
	$textbox49.Margin = '4, 3, 4, 3'
	$textbox49.Name = 'textbox49'
	$textbox49.ReadOnly = $True
	$textbox49.Size = '215, 13'
	$textbox49.TabIndex = 1448
	$textbox49.TabStop = $False
	$textbox49.Text = '> Security Updates:'
	#
	# EnableWindowsUpdates
	#
	$EnableWindowsUpdates.BackColor = 'DodgerBlue'
	$EnableWindowsUpdates.FlatAppearance.BorderColor = 'White'
	$EnableWindowsUpdates.FlatStyle = 'Flat'
	$EnableWindowsUpdates.Font = 'Microsoft Sans Serif, 12pt'
	$EnableWindowsUpdates.Location = '541, 132'
	$EnableWindowsUpdates.Margin = '4, 3, 4, 3'
	$EnableWindowsUpdates.Name = 'EnableWindowsUpdates'
	$EnableWindowsUpdates.Size = '164, 53'
	$EnableWindowsUpdates.TabIndex = 1447
	$EnableWindowsUpdates.Text = 'Enable Windows Updates'
	$EnableWindowsUpdates.UseCompatibleTextRendering = $True
	$EnableWindowsUpdates.UseVisualStyleBackColor = $False
	$EnableWindowsUpdates.add_Click($EnableWindowsUpdates_Click)
	#
	# DisableWindowsUpdate
	#
	$DisableWindowsUpdate.BackColor = 'DodgerBlue'
	$DisableWindowsUpdate.FlatAppearance.BorderColor = 'White'
	$DisableWindowsUpdate.FlatStyle = 'Flat'
	$DisableWindowsUpdate.Font = 'Microsoft Sans Serif, 12pt'
	$DisableWindowsUpdate.Location = '713, 132'
	$DisableWindowsUpdate.Margin = '4, 3, 4, 3'
	$DisableWindowsUpdate.Name = 'DisableWindowsUpdate'
	$DisableWindowsUpdate.Size = '164, 53'
	$DisableWindowsUpdate.TabIndex = 1446
	$DisableWindowsUpdate.Text = 'Disable Windows Updates'
	$DisableWindowsUpdate.UseCompatibleTextRendering = $True
	$DisableWindowsUpdate.UseVisualStyleBackColor = $False
	$DisableWindowsUpdate.add_Click($DisableWindowsUpdate_Click)
	#
	# textbox71
	#
	$textbox71.BackColor = 'Control'
	$textbox71.BorderStyle = 'None'
	$textbox71.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox71.Location = '552, 307'
	$textbox71.Margin = '4, 3, 4, 3'
	$textbox71.Name = 'textbox71'
	$textbox71.ReadOnly = $True
	$textbox71.Size = '405, 13'
	$textbox71.TabIndex = 1445
	$textbox71.TabStop = $False
	$textbox71.Text = '- Set Maximum Active Time'
	#
	# textbox72
	#
	$textbox72.BackColor = 'Control'
	$textbox72.BorderStyle = 'None'
	$textbox72.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox72.Location = '552, 288'
	$textbox72.Margin = '4, 3, 4, 3'
	$textbox72.Name = 'textbox72'
	$textbox72.ReadOnly = $True
	$textbox72.Size = '227, 13'
	$textbox72.TabIndex = 1444
	$textbox72.TabStop = $False
	$textbox72.Text = '- Delays Security Updates For 4 Days'
	#
	# textbox73
	#
	$textbox73.BackColor = 'Control'
	$textbox73.BorderStyle = 'None'
	$textbox73.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox73.Location = '552, 269'
	$textbox73.Margin = '4, 3, 4, 3'
	$textbox73.Name = 'textbox73'
	$textbox73.ReadOnly = $True
	$textbox73.Size = '356, 13'
	$textbox73.TabIndex = 1443
	$textbox73.TabStop = $False
	$textbox73.Text = '- Delays Features Updats Up To 3 Years'
	#
	# DefaultSetting
	#
	$DefaultSetting.BackColor = 'DodgerBlue'
	$DefaultSetting.FlatAppearance.BorderColor = 'White'
	$DefaultSetting.FlatStyle = 'Flat'
	$DefaultSetting.Font = 'Microsoft Sans Serif, 12pt'
	$DefaultSetting.Location = '541, 73'
	$DefaultSetting.Margin = '4, 3, 4, 3'
	$DefaultSetting.Name = 'DefaultSetting'
	$DefaultSetting.Size = '164, 53'
	$DefaultSetting.TabIndex = 1442
	$DefaultSetting.Text = 'Default Setting'
	$DefaultSetting.UseCompatibleTextRendering = $True
	$DefaultSetting.UseVisualStyleBackColor = $False
	$DefaultSetting.add_Click($DefaultSetting_Click)
	#
	# SecurityUpdatesOnly
	#
	$SecurityUpdatesOnly.BackColor = 'DodgerBlue'
	$SecurityUpdatesOnly.FlatAppearance.BorderColor = 'White'
	$SecurityUpdatesOnly.FlatStyle = 'Flat'
	$SecurityUpdatesOnly.Font = 'Microsoft Sans Serif, 12pt'
	$SecurityUpdatesOnly.Location = '713, 73'
	$SecurityUpdatesOnly.Margin = '4, 3, 4, 3'
	$SecurityUpdatesOnly.Name = 'SecurityUpdatesOnly'
	$SecurityUpdatesOnly.Size = '164, 53'
	$SecurityUpdatesOnly.TabIndex = 1441
	$SecurityUpdatesOnly.Text = 'Security Updates Only'
	$SecurityUpdatesOnly.UseCompatibleTextRendering = $True
	$SecurityUpdatesOnly.UseVisualStyleBackColor = $False
	$SecurityUpdatesOnly.add_Click($SecurityUpdatesOnly_Click)
	#
	# textbox74
	#
	$textbox74.AccessibleRole = 'None'
	$textbox74.BackColor = 'Control'
	$textbox74.BorderStyle = 'None'
	$textbox74.Font = 'Microsoft Sans Serif, 20pt'
	$textbox74.Location = '599, 36'
	$textbox74.Margin = '4, 3, 4, 3'
	$textbox74.Name = 'textbox74'
	$textbox74.ReadOnly = $True
	$textbox74.Size = '226, 31'
	$textbox74.TabIndex = 1440
	$textbox74.TabStop = $False
	$textbox74.Text = 'Windows Updates'
	#
	# RemoveMalware
	#
	$RemoveMalware.BackColor = 'DodgerBlue'
	$RemoveMalware.FlatAppearance.BorderColor = 'White'
	$RemoveMalware.FlatStyle = 'Flat'
	$RemoveMalware.Font = 'Microsoft Sans Serif, 14pt'
	$RemoveMalware.Location = '288, 222'
	$RemoveMalware.Margin = '4, 3, 4, 3'
	$RemoveMalware.Name = 'RemoveMalware'
	$RemoveMalware.Size = '167, 55'
	$RemoveMalware.TabIndex = 1439
	$RemoveMalware.Text = 'Remove Malware'
	$RemoveMalware.UseCompatibleTextRendering = $True
	$RemoveMalware.UseVisualStyleBackColor = $False
	$RemoveMalware.add_Click($RemoveMalware_Click)
	#
	# RemoveViruses
	#
	$RemoveViruses.BackColor = 'DodgerBlue'
	$RemoveViruses.FlatAppearance.BorderColor = 'White'
	$RemoveViruses.FlatStyle = 'Flat'
	$RemoveViruses.Font = 'Microsoft Sans Serif, 15pt'
	$RemoveViruses.Location = '80, 222'
	$RemoveViruses.Margin = '4, 3, 4, 3'
	$RemoveViruses.Name = 'RemoveViruses'
	$RemoveViruses.Size = '167, 55'
	$RemoveViruses.TabIndex = 1438
	$RemoveViruses.Text = 'Remove Viruses'
	$RemoveViruses.UseCompatibleTextRendering = $True
	$RemoveViruses.UseVisualStyleBackColor = $False
	$RemoveViruses.add_Click($RemoveViruses_Click)
	#
	# textbox62
	#
	$textbox62.AccessibleRole = 'None'
	$textbox62.BackColor = 'Control'
	$textbox62.BorderStyle = 'None'
	$textbox62.Font = 'Microsoft Sans Serif, 20pt'
	$textbox62.Location = '214, 36'
	$textbox62.Margin = '4, 3, 4, 3'
	$textbox62.Name = 'textbox62'
	$textbox62.ReadOnly = $True
	$textbox62.Size = '157, 31'
	$textbox62.TabIndex = 1437
	$textbox62.TabStop = $False
	$textbox62.Text = 'Security'
	#
	# textbox63
	#
	$textbox63.BackColor = 'Control'
	$textbox63.BorderStyle = 'None'
	$textbox63.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox63.Location = '312, 145'
	$textbox63.Margin = '4, 3, 4, 3'
	$textbox63.Name = 'textbox63'
	$textbox63.ReadOnly = $True
	$textbox63.Size = '102, 13'
	$textbox63.TabIndex = 1436
	$textbox63.TabStop = $False
	$textbox63.Text = '- And More...'
	#
	# textbox64
	#
	$textbox64.BackColor = 'Control'
	$textbox64.BorderStyle = 'None'
	$textbox64.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox64.Location = '312, 126'
	$textbox64.Margin = '4, 3, 4, 3'
	$textbox64.Name = 'textbox64'
	$textbox64.ReadOnly = $True
	$textbox64.Size = '102, 13'
	$textbox64.TabIndex = 1435
	$textbox64.TabStop = $False
	$textbox64.Text = '- Enable SBM1 '
	#
	# textbox65
	#
	$textbox65.BackColor = 'Control'
	$textbox65.BorderStyle = 'None'
	$textbox65.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox65.Location = '107, 107'
	$textbox65.Margin = '4, 3, 4, 3'
	$textbox65.Name = 'textbox65'
	$textbox65.ReadOnly = $True
	$textbox65.Size = '166, 13'
	$textbox65.TabIndex = 1434
	$textbox65.TabStop = $False
	$textbox65.Text = '- Disable Windows Defender'
	#
	# textbox66
	#
	$textbox66.BackColor = 'Control'
	$textbox66.BorderStyle = 'None'
	$textbox66.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox66.Location = '312, 88'
	$textbox66.Margin = '4, 3, 4, 3'
	$textbox66.Name = 'textbox66'
	$textbox66.ReadOnly = $True
	$textbox66.Size = '98, 13'
	$textbox66.TabIndex = 1433
	$textbox66.TabStop = $False
	$textbox66.Text = '- Enable Firewall'
	#
	# textbox67
	#
	$textbox67.BackColor = 'Control'
	$textbox67.BorderStyle = 'None'
	$textbox67.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox67.Location = '107, 145'
	$textbox67.Margin = '4, 3, 4, 3'
	$textbox67.Name = 'textbox67'
	$textbox67.ReadOnly = $True
	$textbox67.Size = '166, 13'
	$textbox67.TabIndex = 1432
	$textbox67.TabStop = $False
	$textbox67.Text = '- And More...'
	#
	# textbox68
	#
	$textbox68.BackColor = 'Control'
	$textbox68.BorderStyle = 'None'
	$textbox68.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox68.Location = '106, 126'
	$textbox68.Margin = '4, 3, 4, 3'
	$textbox68.Name = 'textbox68'
	$textbox68.ReadOnly = $True
	$textbox68.Size = '166, 13'
	$textbox68.TabIndex = 1431
	$textbox68.TabStop = $False
	$textbox68.Text = '- Disable SBM1 '
	#
	# textbox69
	#
	$textbox69.BackColor = 'Control'
	$textbox69.BorderStyle = 'None'
	$textbox69.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox69.Location = '312, 107'
	$textbox69.Margin = '4, 3, 4, 3'
	$textbox69.Name = 'textbox69'
	$textbox69.ReadOnly = $True
	$textbox69.Size = '143, 13'
	$textbox69.TabIndex = 1430
	$textbox69.TabStop = $False
	$textbox69.Text = '- Enable Windows Defender'
	#
	# textbox70
	#
	$textbox70.BackColor = 'Control'
	$textbox70.BorderStyle = 'None'
	$textbox70.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox70.Location = '111, 88'
	$textbox70.Margin = '4, 3, 4, 3'
	$textbox70.Name = 'textbox70'
	$textbox70.ReadOnly = $True
	$textbox70.Size = '161, 13'
	$textbox70.TabIndex = 1429
	$textbox70.TabStop = $False
	$textbox70.Text = '- Disable Firewall'
	#
	# High
	#
	$High.BackColor = 'DodgerBlue'
	$High.FlatAppearance.BorderColor = 'White'
	$High.FlatStyle = 'Flat'
	$High.Font = 'Microsoft Sans Serif, 16pt'
	$High.Location = '312, 175'
	$High.Margin = '4, 3, 4, 3'
	$High.Name = 'High'
	$High.Size = '112, 41'
	$High.TabIndex = 1428
	$High.Text = 'High'
	$High.UseCompatibleTextRendering = $True
	$High.UseVisualStyleBackColor = $False
	$High.add_Click($High_Click)
	#
	# tabpage8
	#
	$tabpage8.Controls.Add($buttonEpicGames)
	$tabpage8.Controls.Add($buttonSteam)
	$tabpage8.Controls.Add($textbox115)
	$tabpage8.Controls.Add($buttonInstallGooglePlaySto)
	$tabpage8.Controls.Add($textbox104)
	$tabpage8.Controls.Add($buttonGithub)
	$tabpage8.Controls.Add($textbox76)
	$tabpage8.Controls.Add($textbox77)
	$tabpage8.Controls.Add($textbox78)
	$tabpage8.Controls.Add($textbox79)
	$tabpage8.Controls.Add($textbox80)
	$tabpage8.Controls.Add($textbox81)
	$tabpage8.Controls.Add($textbox83)
	$tabpage8.Controls.Add($textbox82)
	$tabpage8.Controls.Add($GeforceExperience)
	$tabpage8.Controls.Add($IntelDriverSupportAs)
	$tabpage8.Controls.Add($GoogleChrome)
	$tabpage8.Controls.Add($FireFox)
	$tabpage8.Controls.Add($Ventoy)
	$tabpage8.Controls.Add($7zip)
	$tabpage8.Controls.Add($StartIsBack)
	$tabpage8.Controls.Add($VLC)
	$tabpage8.Controls.Add($Blender)
	$tabpage8.Controls.Add($PaintNET)
	$tabpage8.Controls.Add($OpenShell)
	$tabpage8.Controls.Add($DirectX)
	$tabpage8.Controls.Add($Cleanmgr)
	$tabpage8.Controls.Add($VisualC)
	$tabpage8.Controls.Add($LibreOffice)
	$tabpage8.Controls.Add($XNAFramework40)
	$tabpage8.Controls.Add($GreenShot)
	$tabpage8.Controls.Add($OpenAl)
	$tabpage8.Controls.Add($balenaEtcher)
	$tabpage8.Controls.Add($Audacity)
	$tabpage8.Controls.Add($Java)
	$tabpage8.Controls.Add($Discord)
	$tabpage8.Controls.Add($PhysX)
	$tabpage8.Controls.Add($OBSStudio)
	$tabpage8.Controls.Add($Everything)
	$tabpage8.Controls.Add($AMDRyzenChipsetDrive)
	$tabpage8.Controls.Add($SumatraPDF)
	$tabpage8.Controls.Add($Rufus)
	$tabpage8.Controls.Add($FoxitReader)
	$tabpage8.Controls.Add($WinRAR)
	$tabpage8.Controls.Add($IDM)
	$tabpage8.Controls.Add($MediaPlayerClassic)
	$tabpage8.Controls.Add($GPUZ)
	$tabpage8.Controls.Add($PowerToys)
	$tabpage8.Controls.Add($CPUZ)
	$tabpage8.Controls.Add($WindowsTerminal)
	$tabpage8.Controls.Add($Vivaldi)
	$tabpage8.Controls.Add($Brave)
	$tabpage8.Controls.Add($Edge)
	$tabpage8.Controls.Add($BleachBit)
	$tabpage8.Controls.Add($Notepad)
	$tabpage8.Controls.Add($MicrosoftSilverLight)
	$tabpage8.Controls.Add($UTorrent)
	$tabpage8.Controls.Add($ImageGlass)
	$tabpage8.Controls.Add($CCleaner)
	$tabpage8.Controls.Add($VSCode)
	$tabpage8.Controls.Add($Gimp)
	$tabpage8.Controls.Add($VSCodium)
	$tabpage8.Controls.Add($ShareX)
	$tabpage8.Controls.Add($AdobeReaderDC)
	$tabpage8.Controls.Add($Opera)
	$tabpage8.Controls.Add($IrfanView)
	$tabpage8.BackColor = 'Control'
	$tabpage8.Location = '4, 22'
	$tabpage8.Name = 'tabpage8'
	$tabpage8.Size = '934, 908'
	$tabpage8.TabIndex = 8
	$tabpage8.Text = 'Program Installation'
	#
	# buttonEpicGames
	#
	$buttonEpicGames.BackColor = 'DodgerBlue'
	$buttonEpicGames.FlatAppearance.BorderColor = 'White'
	$buttonEpicGames.FlatStyle = 'Flat'
	$buttonEpicGames.Font = 'Microsoft Sans Serif, 12pt'
	$buttonEpicGames.Location = '379, 609'
	$buttonEpicGames.Margin = '4, 3, 4, 3'
	$buttonEpicGames.Name = 'buttonEpicGames'
	$buttonEpicGames.Size = '127, 38'
	$buttonEpicGames.TabIndex = 1495
	$buttonEpicGames.Text = 'Epic Games'
	$buttonEpicGames.UseCompatibleTextRendering = $True
	$buttonEpicGames.UseVisualStyleBackColor = $False
	$buttonEpicGames.add_Click($buttonEpicGames_Click)
	#
	# buttonSteam
	#
	$buttonSteam.BackColor = 'DodgerBlue'
	$buttonSteam.FlatAppearance.BorderColor = 'White'
	$buttonSteam.FlatStyle = 'Flat'
	$buttonSteam.Font = 'Microsoft Sans Serif, 12pt'
	$buttonSteam.Location = '244, 609'
	$buttonSteam.Margin = '4, 3, 4, 3'
	$buttonSteam.Name = 'buttonSteam'
	$buttonSteam.Size = '127, 38'
	$buttonSteam.TabIndex = 1494
	$buttonSteam.Text = 'Steam'
	$buttonSteam.UseCompatibleTextRendering = $True
	$buttonSteam.UseVisualStyleBackColor = $False
	$buttonSteam.add_Click($buttonSteam_Click)
	#
	# textbox115
	#
	$textbox115.BackColor = 'Control'
	$textbox115.BorderStyle = 'None'
	$textbox115.Font = 'Arial, 9pt, style=Bold'
	$textbox115.Location = '324, 589'
	$textbox115.Margin = '4, 3, 4, 3'
	$textbox115.Name = 'textbox115'
	$textbox115.ReadOnly = $True
	$textbox115.Size = '101, 14'
	$textbox115.TabIndex = 1493
	$textbox115.TabStop = $False
	$textbox115.Text = 'Game Launchers'
	#
	# buttonInstallGooglePlaySto
	#
	$buttonInstallGooglePlaySto.BackColor = 'DodgerBlue'
	$buttonInstallGooglePlaySto.FlatAppearance.BorderColor = 'White'
	$buttonInstallGooglePlaySto.FlatStyle = 'Flat'
	$buttonInstallGooglePlaySto.Font = 'Microsoft Sans Serif, 12pt'
	$buttonInstallGooglePlaySto.Location = '36, 609'
	$buttonInstallGooglePlaySto.Margin = '4, 3, 4, 3'
	$buttonInstallGooglePlaySto.Name = 'buttonInstallGooglePlaySto'
	$buttonInstallGooglePlaySto.Size = '175, 54'
	$buttonInstallGooglePlaySto.TabIndex = 1492
	$buttonInstallGooglePlaySto.Text = 'Install Google Play Store'
	$buttonInstallGooglePlaySto.UseCompatibleTextRendering = $True
	$buttonInstallGooglePlaySto.UseVisualStyleBackColor = $False
	$buttonInstallGooglePlaySto.add_Click($buttonInstallGooglePlaySto_Click)
	#
	# textbox104
	#
	$textbox104.BackColor = 'Control'
	$textbox104.BorderStyle = 'None'
	$textbox104.Font = 'Arial, 9pt, style=Bold'
	$textbox104.Location = '75, 589'
	$textbox104.Margin = '4, 3, 4, 3'
	$textbox104.Name = 'textbox104'
	$textbox104.ReadOnly = $True
	$textbox104.Size = '101, 14'
	$textbox104.TabIndex = 1491
	$textbox104.TabStop = $False
	$textbox104.Text = 'Windows 11 Only'
	#
	# buttonGithub
	#
	$buttonGithub.BackColor = 'DodgerBlue'
	$buttonGithub.FlatAppearance.BorderColor = 'White'
	$buttonGithub.FlatStyle = 'Flat'
	$buttonGithub.Font = 'Microsoft Sans Serif, 12pt'
	$buttonGithub.Location = '184, 520'
	$buttonGithub.Margin = '4, 3, 4, 3'
	$buttonGithub.Name = 'buttonGithub'
	$buttonGithub.Size = '132, 48'
	$buttonGithub.TabIndex = 1490
	$buttonGithub.Text = 'Github'
	$buttonGithub.UseCompatibleTextRendering = $True
	$buttonGithub.UseVisualStyleBackColor = $False
	$buttonGithub.add_Click($buttonGithub_Click)
	#
	# textbox76
	#
	$textbox76.BackColor = 'Control'
	$textbox76.BorderStyle = 'None'
	$textbox76.Location = '529, 37'
	$textbox76.Margin = '4, 3, 4, 3'
	$textbox76.Name = 'textbox76'
	$textbox76.ReadOnly = $True
	$textbox76.Size = '139, 13'
	$textbox76.TabIndex = 1450
	$textbox76.TabStop = $False
	$textbox76.Text = '(Required Internet To Install)'
	#
	# textbox77
	#
	$textbox77.AccessibleRole = 'None'
	$textbox77.BackColor = 'Control'
	$textbox77.BorderStyle = 'None'
	$textbox77.Font = 'Microsoft Sans Serif, 18pt'
	$textbox77.Location = '314, 25'
	$textbox77.Margin = '4, 3, 4, 3'
	$textbox77.Name = 'textbox77'
	$textbox77.ReadOnly = $True
	$textbox77.Size = '258, 28'
	$textbox77.TabIndex = 1430
	$textbox77.TabStop = $False
	$textbox77.Text = 'Program Installation'
	#
	# textbox78
	#
	$textbox78.BackColor = 'Control'
	$textbox78.BorderStyle = 'None'
	$textbox78.Font = 'Arial, 9pt, style=Bold'
	$textbox78.Location = '49, 384'
	$textbox78.Margin = '4, 3, 4, 3'
	$textbox78.Name = 'textbox78'
	$textbox78.ReadOnly = $True
	$textbox78.Size = '99, 14'
	$textbox78.TabIndex = 1487
	$textbox78.TabStop = $False
	$textbox78.Text = 'Driver Updates'
	#
	# textbox79
	#
	$textbox79.BackColor = 'Control'
	$textbox79.BorderStyle = 'None'
	$textbox79.Font = 'Arial, 9pt, style=Bold'
	$textbox79.Location = '787, 78'
	$textbox79.Margin = '4, 3, 4, 3'
	$textbox79.Name = 'textbox79'
	$textbox79.ReadOnly = $True
	$textbox79.Size = '95, 14'
	$textbox79.TabIndex = 1466
	$textbox79.TabStop = $False
	$textbox79.Text = 'Game Support'
	#
	# textbox80
	#
	$textbox80.BackColor = 'Control'
	$textbox80.BorderStyle = 'None'
	$textbox80.Font = 'Arial, 10pt, style=Bold'
	$textbox80.Location = '57, 77'
	$textbox80.Margin = '4, 3, 4, 3'
	$textbox80.Name = 'textbox80'
	$textbox80.ReadOnly = $True
	$textbox80.Size = '103, 16'
	$textbox80.TabIndex = 1453
	$textbox80.TabStop = $False
	$textbox80.Text = 'Web Browsers'
	#
	# textbox81
	#
	$textbox81.BackColor = 'Control'
	$textbox81.BorderStyle = 'None'
	$textbox81.Font = 'Arial, 10pt, style=Bold'
	$textbox81.Location = '288, 76'
	$textbox81.Margin = '4, 3, 4, 3'
	$textbox81.Name = 'textbox81'
	$textbox81.ReadOnly = $True
	$textbox81.Size = '62, 16'
	$textbox81.TabIndex = 1454
	$textbox81.TabStop = $False
	$textbox81.Text = 'Utilities'
	#
	# textbox83
	#
	$textbox83.BackColor = 'Control'
	$textbox83.BorderStyle = 'None'
	$textbox83.Font = 'Arial, 9pt, style=Bold'
	$textbox83.Location = '525, 78'
	$textbox83.Margin = '4, 3, 4, 3'
	$textbox83.Name = 'textbox83'
	$textbox83.ReadOnly = $True
	$textbox83.Size = '181, 14'
	$textbox83.TabIndex = 1455
	$textbox83.TabStop = $False
	$textbox83.Text = 'Video, Audio And Image Tools'
	#
	# textbox82
	#
	$textbox82.BackColor = 'Control'
	$textbox82.BorderStyle = 'None'
	$textbox82.Font = 'Arial, 9pt, style=Bold'
	$textbox82.Location = '619, 404'
	$textbox82.Margin = '4, 3, 4, 3'
	$textbox82.Name = 'textbox82'
	$textbox82.ReadOnly = $True
	$textbox82.Size = '141, 14'
	$textbox82.TabIndex = 1460
	$textbox82.TabStop = $False
	$textbox82.Text = 'Documment Tools'
	#
	# GeforceExperience
	#
	$GeforceExperience.BackColor = 'DodgerBlue'
	$GeforceExperience.FlatAppearance.BorderColor = 'White'
	$GeforceExperience.FlatStyle = 'Flat'
	$GeforceExperience.Font = 'Microsoft Sans Serif, 12pt'
	$GeforceExperience.Location = '18, 514'
	$GeforceExperience.Margin = '4, 3, 4, 3'
	$GeforceExperience.Name = 'GeforceExperience'
	$GeforceExperience.Size = '151, 49'
	$GeforceExperience.TabIndex = 1489
	$GeforceExperience.Text = 'Geforce Experience'
	$GeforceExperience.UseCompatibleTextRendering = $True
	$GeforceExperience.UseVisualStyleBackColor = $False
	$GeforceExperience.add_Click($GeforceExperience_Click)
	#
	# IntelDriverSupportAs
	#
	$IntelDriverSupportAs.BackColor = 'DodgerBlue'
	$IntelDriverSupportAs.FlatAppearance.BorderColor = 'White'
	$IntelDriverSupportAs.FlatStyle = 'Flat'
	$IntelDriverSupportAs.Font = 'Microsoft Sans Serif, 12pt'
	$IntelDriverSupportAs.Location = '18, 459'
	$IntelDriverSupportAs.Margin = '4, 3, 4, 3'
	$IntelDriverSupportAs.Name = 'IntelDriverSupportAs'
	$IntelDriverSupportAs.Size = '151, 49'
	$IntelDriverSupportAs.TabIndex = 1488
	$IntelDriverSupportAs.Text = 'Intel Driver Support Assitant'
	$IntelDriverSupportAs.UseCompatibleTextRendering = $True
	$IntelDriverSupportAs.UseVisualStyleBackColor = $False
	$IntelDriverSupportAs.add_Click($IntelDriverSupportAs_Click)
	#
	# GoogleChrome
	#
	$GoogleChrome.BackColor = 'DodgerBlue'
	$GoogleChrome.FlatAppearance.BorderColor = 'White'
	$GoogleChrome.FlatStyle = 'Flat'
	$GoogleChrome.Font = 'Microsoft Sans Serif, 13pt'
	$GoogleChrome.Location = '17, 145'
	$GoogleChrome.Margin = '4, 3, 4, 3'
	$GoogleChrome.Name = 'GoogleChrome'
	$GoogleChrome.Size = '159, 40'
	$GoogleChrome.TabIndex = 1431
	$GoogleChrome.Text = 'Google Chrome'
	$GoogleChrome.UseCompatibleTextRendering = $True
	$GoogleChrome.UseVisualStyleBackColor = $False
	$GoogleChrome.add_Click($GoogleChrome_Click)
	#
	# FireFox
	#
	$FireFox.BackColor = 'DodgerBlue'
	$FireFox.FlatAppearance.BorderColor = 'White'
	$FireFox.FlatStyle = 'Flat'
	$FireFox.Font = 'Microsoft Sans Serif, 13pt'
	$FireFox.Location = '17, 99'
	$FireFox.Margin = '4, 3, 4, 3'
	$FireFox.Name = 'FireFox'
	$FireFox.Size = '159, 40'
	$FireFox.TabIndex = 1432
	$FireFox.Text = 'Firefox'
	$FireFox.UseCompatibleTextRendering = $True
	$FireFox.UseVisualStyleBackColor = $False
	$FireFox.add_Click($FireFox_Click)
	#
	# Ventoy
	#
	$Ventoy.BackColor = 'DodgerBlue'
	$Ventoy.FlatAppearance.BorderColor = 'White'
	$Ventoy.FlatStyle = 'Flat'
	$Ventoy.Font = 'Microsoft Sans Serif, 12pt'
	$Ventoy.Location = '184, 420'
	$Ventoy.Margin = '4, 3, 4, 3'
	$Ventoy.Name = 'Ventoy'
	$Ventoy.Size = '132, 40'
	$Ventoy.TabIndex = 1486
	$Ventoy.Text = 'Ventoy'
	$Ventoy.UseCompatibleTextRendering = $True
	$Ventoy.UseVisualStyleBackColor = $False
	$Ventoy.add_Click($Ventoy_Click)
	#
	# 7zip
	#
	$7zip.BackColor = 'DodgerBlue'
	$7zip.FlatAppearance.BorderColor = 'White'
	$7zip.FlatStyle = 'Flat'
	$7zip.Font = 'Microsoft Sans Serif, 12pt'
	$7zip.Location = '324, 145'
	$7zip.Margin = '4, 3, 4, 3'
	$7zip.Name = '7zip'
	$7zip.Size = '132, 43'
	$7zip.TabIndex = 1433
	$7zip.Text = '7-Zip'
	$7zip.UseCompatibleTextRendering = $True
	$7zip.UseVisualStyleBackColor = $False
	$7zip.add_Click($7zip_Click)
	#
	# StartIsBack
	#
	$StartIsBack.BackColor = 'DodgerBlue'
	$StartIsBack.FlatAppearance.BorderColor = 'White'
	$StartIsBack.FlatStyle = 'Flat'
	$StartIsBack.Font = 'Microsoft Sans Serif, 11.7pt'
	$StartIsBack.Location = '324, 373'
	$StartIsBack.Margin = '4, 3, 4, 3'
	$StartIsBack.Name = 'StartIsBack'
	$StartIsBack.Size = '132, 40'
	$StartIsBack.TabIndex = 1485
	$StartIsBack.Text = 'StartIsBack'
	$StartIsBack.UseCompatibleTextRendering = $True
	$StartIsBack.UseVisualStyleBackColor = $False
	$StartIsBack.add_Click($StartIsBack_Click)
	#
	# VLC
	#
	$VLC.BackColor = 'DodgerBlue'
	$VLC.FlatAppearance.BorderColor = 'White'
	$VLC.FlatStyle = 'Flat'
	$VLC.Font = 'Microsoft Sans Serif, 12pt'
	$VLC.Location = '468, 98'
	$VLC.Margin = '4, 3, 4, 3'
	$VLC.Name = 'VLC'
	$VLC.Size = '132, 43'
	$VLC.TabIndex = 1434
	$VLC.Text = 'VLC '
	$VLC.UseCompatibleTextRendering = $True
	$VLC.UseVisualStyleBackColor = $False
	$VLC.add_Click($VLC_Click)
	#
	# Blender
	#
	$Blender.BackColor = 'DodgerBlue'
	$Blender.FlatAppearance.BorderColor = 'White'
	$Blender.FlatStyle = 'Flat'
	$Blender.Font = 'Microsoft Sans Serif, 12pt'
	$Blender.Location = '608, 335'
	$Blender.Margin = '4, 3, 4, 3'
	$Blender.Name = 'Blender'
	$Blender.Size = '132, 43'
	$Blender.TabIndex = 1484
	$Blender.Text = 'Blender'
	$Blender.UseCompatibleTextRendering = $True
	$Blender.UseVisualStyleBackColor = $False
	$Blender.add_Click($Blender_Click)
	#
	# PaintNET
	#
	$PaintNET.BackColor = 'DodgerBlue'
	$PaintNET.FlatAppearance.BorderColor = 'White'
	$PaintNET.FlatStyle = 'Flat'
	$PaintNET.Font = 'Microsoft Sans Serif, 12pt'
	$PaintNET.Location = '468, 237'
	$PaintNET.Margin = '4, 3, 4, 3'
	$PaintNET.Name = 'PaintNET'
	$PaintNET.Size = '132, 43'
	$PaintNET.TabIndex = 1435
	$PaintNET.Text = 'Paint.NET'
	$PaintNET.UseCompatibleTextRendering = $True
	$PaintNET.UseVisualStyleBackColor = $False
	$PaintNET.add_Click($PaintNET_Click)
	#
	# OpenShell
	#
	$OpenShell.BackColor = 'DodgerBlue'
	$OpenShell.FlatAppearance.BorderColor = 'White'
	$OpenShell.FlatStyle = 'Flat'
	$OpenShell.Font = 'Microsoft Sans Serif, 12pt'
	$OpenShell.Location = '184, 374'
	$OpenShell.Margin = '4, 3, 4, 3'
	$OpenShell.Name = 'OpenShell'
	$OpenShell.Size = '132, 40'
	$OpenShell.TabIndex = 1483
	$OpenShell.Text = 'Openshell'
	$OpenShell.UseCompatibleTextRendering = $True
	$OpenShell.UseVisualStyleBackColor = $False
	$OpenShell.add_Click($OpenShell_Click)
	#
	# DirectX
	#
	$DirectX.BackColor = 'DodgerBlue'
	$DirectX.FlatAppearance.BorderColor = 'White'
	$DirectX.FlatStyle = 'Flat'
	$DirectX.Font = 'Microsoft Sans Serif, 12pt'
	$DirectX.Location = '758, 226'
	$DirectX.Margin = '4, 3, 4, 3'
	$DirectX.Name = 'DirectX'
	$DirectX.Size = '150, 34'
	$DirectX.TabIndex = 1436
	$DirectX.Text = 'DirectX'
	$DirectX.UseCompatibleTextRendering = $True
	$DirectX.UseVisualStyleBackColor = $False
	$DirectX.add_Click($DirectX_Click)
	#
	# Cleanmgr
	#
	$Cleanmgr.BackColor = 'DodgerBlue'
	$Cleanmgr.FlatAppearance.BorderColor = 'White'
	$Cleanmgr.FlatStyle = 'Flat'
	$Cleanmgr.Font = 'Microsoft Sans Serif, 12pt'
	$Cleanmgr.Location = '184, 466'
	$Cleanmgr.Margin = '4, 3, 4, 3'
	$Cleanmgr.Name = 'Cleanmgr'
	$Cleanmgr.Size = '132, 48'
	$Cleanmgr.TabIndex = 1482
	$Cleanmgr.Text = 'Cleanmgr+'
	$Cleanmgr.UseCompatibleTextRendering = $True
	$Cleanmgr.UseVisualStyleBackColor = $False
	$Cleanmgr.add_Click($Cleanmgr_Click)
	#
	# VisualC
	#
	$VisualC.BackColor = 'DodgerBlue'
	$VisualC.FlatAppearance.BorderColor = 'White'
	$VisualC.FlatStyle = 'Flat'
	$VisualC.Font = 'Microsoft Sans Serif, 12pt'
	$VisualC.Location = '758, 184'
	$VisualC.Margin = '4, 3, 4, 3'
	$VisualC.Name = 'VisualC'
	$VisualC.Size = '150, 36'
	$VisualC.TabIndex = 1437
	$VisualC.Text = 'Visual C++'
	$VisualC.UseCompatibleTextRendering = $True
	$VisualC.UseVisualStyleBackColor = $False
	$VisualC.add_Click($VisualC_Click)
	#
	# LibreOffice
	#
	$LibreOffice.BackColor = 'DodgerBlue'
	$LibreOffice.FlatAppearance.BorderColor = 'White'
	$LibreOffice.FlatStyle = 'Flat'
	$LibreOffice.Font = 'Microsoft Sans Serif, 11.8pt'
	$LibreOffice.Location = '682, 424'
	$LibreOffice.Margin = '4, 3, 4, 3'
	$LibreOffice.Name = 'LibreOffice'
	$LibreOffice.Size = '140, 49'
	$LibreOffice.TabIndex = 1481
	$LibreOffice.Text = 'LibreOffice'
	$LibreOffice.UseCompatibleTextRendering = $True
	$LibreOffice.UseVisualStyleBackColor = $False
	$LibreOffice.add_Click($LibreOffice_Click)
	#
	# XNAFramework40
	#
	$XNAFramework40.BackColor = 'DodgerBlue'
	$XNAFramework40.FlatAppearance.BorderColor = 'White'
	$XNAFramework40.FlatStyle = 'Flat'
	$XNAFramework40.Font = 'Microsoft Sans Serif, 11pt'
	$XNAFramework40.Location = '758, 98'
	$XNAFramework40.Margin = '4, 3, 4, 3'
	$XNAFramework40.Name = 'XNAFramework40'
	$XNAFramework40.Size = '150, 43'
	$XNAFramework40.TabIndex = 1438
	$XNAFramework40.Text = 'XNA Framework 4.0'
	$XNAFramework40.UseCompatibleTextRendering = $True
	$XNAFramework40.UseVisualStyleBackColor = $False
	$XNAFramework40.add_Click($XNAFramework40_Click)
	#
	# GreenShot
	#
	$GreenShot.BackColor = 'DodgerBlue'
	$GreenShot.FlatAppearance.BorderColor = 'White'
	$GreenShot.FlatStyle = 'Flat'
	$GreenShot.Font = 'Microsoft Sans Serif, 12pt'
	$GreenShot.Location = '468, 286'
	$GreenShot.Margin = '4, 3, 4, 3'
	$GreenShot.Name = 'GreenShot'
	$GreenShot.Size = '132, 43'
	$GreenShot.TabIndex = 1480
	$GreenShot.Text = 'GreenShot'
	$GreenShot.UseCompatibleTextRendering = $True
	$GreenShot.UseVisualStyleBackColor = $False
	$GreenShot.add_Click($GreenShot_Click)
	#
	# OpenAl
	#
	$OpenAl.BackColor = 'DodgerBlue'
	$OpenAl.FlatAppearance.BorderColor = 'White'
	$OpenAl.FlatStyle = 'Flat'
	$OpenAl.Font = 'Microsoft Sans Serif, 12pt'
	$OpenAl.Location = '758, 147'
	$OpenAl.Margin = '4, 3, 4, 3'
	$OpenAl.Name = 'OpenAl'
	$OpenAl.Size = '150, 31'
	$OpenAl.TabIndex = 1439
	$OpenAl.Text = 'OpenAL'
	$OpenAl.UseCompatibleTextRendering = $True
	$OpenAl.UseVisualStyleBackColor = $False
	$OpenAl.add_Click($OpenAl_Click)
	#
	# balenaEtcher
	#
	$balenaEtcher.BackColor = 'DodgerBlue'
	$balenaEtcher.FlatAppearance.BorderColor = 'White'
	$balenaEtcher.FlatStyle = 'Flat'
	$balenaEtcher.Font = 'Microsoft Sans Serif, 12pt'
	$balenaEtcher.Location = '324, 420'
	$balenaEtcher.Margin = '4, 3, 4, 3'
	$balenaEtcher.Name = 'balenaEtcher'
	$balenaEtcher.Size = '132, 40'
	$balenaEtcher.TabIndex = 1479
	$balenaEtcher.Text = 'balenaEtcher'
	$balenaEtcher.UseCompatibleTextRendering = $True
	$balenaEtcher.UseVisualStyleBackColor = $False
	$balenaEtcher.add_Click($balenaEtcher_Click)
	#
	# Audacity
	#
	$Audacity.BackColor = 'DodgerBlue'
	$Audacity.FlatAppearance.BorderColor = 'White'
	$Audacity.FlatStyle = 'Flat'
	$Audacity.Font = 'Microsoft Sans Serif, 12.3pt'
	$Audacity.Location = '608, 237'
	$Audacity.Margin = '4, 3, 4, 3'
	$Audacity.Name = 'Audacity'
	$Audacity.Size = '132, 43'
	$Audacity.TabIndex = 1440
	$Audacity.Text = 'Audacity'
	$Audacity.UseCompatibleTextRendering = $True
	$Audacity.UseVisualStyleBackColor = $False
	$Audacity.add_Click($Audacity_Click)
	#
	# Java
	#
	$Java.BackColor = 'DodgerBlue'
	$Java.FlatAppearance.BorderColor = 'White'
	$Java.FlatStyle = 'Flat'
	$Java.Font = 'Microsoft Sans Serif, 12pt'
	$Java.Location = '758, 364'
	$Java.Margin = '4, 3, 4, 3'
	$Java.Name = 'Java'
	$Java.Size = '150, 35'
	$Java.TabIndex = 1478
	$Java.Text = 'Java '
	$Java.UseCompatibleTextRendering = $True
	$Java.UseVisualStyleBackColor = $False
	$Java.add_Click($Java_Click)
	#
	# Discord
	#
	$Discord.BackColor = 'DodgerBlue'
	$Discord.FlatAppearance.BorderColor = 'White'
	$Discord.FlatStyle = 'Flat'
	$Discord.Font = 'Microsoft Sans Serif, 12.3pt'
	$Discord.Location = '184, 283'
	$Discord.Margin = '4, 3, 4, 3'
	$Discord.Name = 'Discord'
	$Discord.Size = '132, 39'
	$Discord.TabIndex = 1441
	$Discord.Text = 'Discord'
	$Discord.UseCompatibleTextRendering = $True
	$Discord.UseVisualStyleBackColor = $False
	$Discord.add_Click($Discord_Click)
	#
	# PhysX
	#
	$PhysX.BackColor = 'DodgerBlue'
	$PhysX.FlatAppearance.BorderColor = 'White'
	$PhysX.FlatStyle = 'Flat'
	$PhysX.Font = 'Microsoft Sans Serif, 12pt'
	$PhysX.Location = '758, 316'
	$PhysX.Margin = '4, 3, 4, 3'
	$PhysX.Name = 'PhysX'
	$PhysX.Size = '150, 42'
	$PhysX.TabIndex = 1477
	$PhysX.Text = 'PhysX'
	$PhysX.UseCompatibleTextRendering = $True
	$PhysX.UseVisualStyleBackColor = $False
	$PhysX.add_Click($PhysX_Click)
	#
	# OBSStudio
	#
	$OBSStudio.BackColor = 'DodgerBlue'
	$OBSStudio.FlatAppearance.BorderColor = 'White'
	$OBSStudio.FlatStyle = 'Flat'
	$OBSStudio.Font = 'Microsoft Sans Serif, 12pt'
	$OBSStudio.Location = '608, 286'
	$OBSStudio.Margin = '4, 3, 4, 3'
	$OBSStudio.Name = 'OBSStudio'
	$OBSStudio.Size = '132, 43'
	$OBSStudio.TabIndex = 1442
	$OBSStudio.Text = 'OBS Studio'
	$OBSStudio.UseCompatibleTextRendering = $True
	$OBSStudio.UseVisualStyleBackColor = $False
	$OBSStudio.add_Click($OBSStudio_Click)
	#
	# Everything
	#
	$Everything.BackColor = 'DodgerBlue'
	$Everything.FlatAppearance.BorderColor = 'White'
	$Everything.FlatStyle = 'Flat'
	$Everything.Font = 'Microsoft Sans Serif, 11.9pt'
	$Everything.Location = '324, 283'
	$Everything.Margin = '4, 3, 4, 3'
	$Everything.Name = 'Everything'
	$Everything.Size = '132, 39'
	$Everything.TabIndex = 1476
	$Everything.Text = 'Everything '
	$Everything.UseCompatibleTextRendering = $True
	$Everything.UseVisualStyleBackColor = $False
	$Everything.add_Click($Everything_Click)
	#
	# AMDRyzenChipsetDrive
	#
	$AMDRyzenChipsetDrive.BackColor = 'DodgerBlue'
	$AMDRyzenChipsetDrive.FlatAppearance.BorderColor = 'White'
	$AMDRyzenChipsetDrive.FlatStyle = 'Flat'
	$AMDRyzenChipsetDrive.Font = 'Microsoft Sans Serif, 12pt'
	$AMDRyzenChipsetDrive.Location = '18, 404'
	$AMDRyzenChipsetDrive.Margin = '4, 3, 4, 3'
	$AMDRyzenChipsetDrive.Name = 'AMDRyzenChipsetDrive'
	$AMDRyzenChipsetDrive.Size = '150, 49'
	$AMDRyzenChipsetDrive.TabIndex = 1443
	$AMDRyzenChipsetDrive.Text = 'AMD Ryzen Chipset Drivers'
	$AMDRyzenChipsetDrive.UseCompatibleTextRendering = $True
	$AMDRyzenChipsetDrive.UseVisualStyleBackColor = $False
	$AMDRyzenChipsetDrive.add_Click($AMDRyzenChipsetDrive_Click)
	#
	# SumatraPDF
	#
	$SumatraPDF.BackColor = 'DodgerBlue'
	$SumatraPDF.FlatAppearance.BorderColor = 'White'
	$SumatraPDF.FlatStyle = 'Flat'
	$SumatraPDF.Font = 'Microsoft Sans Serif, 11.5pt'
	$SumatraPDF.Location = '534, 479'
	$SumatraPDF.Margin = '4, 3, 4, 3'
	$SumatraPDF.Name = 'SumatraPDF'
	$SumatraPDF.Size = '140, 49'
	$SumatraPDF.TabIndex = 1475
	$SumatraPDF.Text = 'Sumatra PDF'
	$SumatraPDF.UseCompatibleTextRendering = $True
	$SumatraPDF.UseVisualStyleBackColor = $False
	$SumatraPDF.add_Click($SumatraPDF_Click)
	#
	# Rufus
	#
	$Rufus.BackColor = 'DodgerBlue'
	$Rufus.FlatAppearance.BorderColor = 'White'
	$Rufus.FlatStyle = 'Flat'
	$Rufus.Font = 'Microsoft Sans Serif, 12pt'
	$Rufus.Location = '324, 466'
	$Rufus.Margin = '4, 3, 4, 3'
	$Rufus.Name = 'Rufus'
	$Rufus.Size = '132, 48'
	$Rufus.TabIndex = 1444
	$Rufus.Text = 'Rufus'
	$Rufus.UseCompatibleTextRendering = $True
	$Rufus.UseVisualStyleBackColor = $False
	$Rufus.add_Click($Rufus_Click)
	#
	# FoxitReader
	#
	$FoxitReader.BackColor = 'DodgerBlue'
	$FoxitReader.FlatAppearance.BorderColor = 'White'
	$FoxitReader.FlatStyle = 'Flat'
	$FoxitReader.Font = 'Microsoft Sans Serif, 11.8pt'
	$FoxitReader.Location = '534, 534'
	$FoxitReader.Margin = '4, 3, 4, 3'
	$FoxitReader.Name = 'FoxitReader'
	$FoxitReader.Size = '140, 49'
	$FoxitReader.TabIndex = 1474
	$FoxitReader.Text = 'Foxit Reader'
	$FoxitReader.UseCompatibleTextRendering = $True
	$FoxitReader.UseVisualStyleBackColor = $False
	$FoxitReader.add_Click($FoxitReader_Click)
	#
	# WinRAR
	#
	$WinRAR.BackColor = 'DodgerBlue'
	$WinRAR.FlatAppearance.BorderColor = 'White'
	$WinRAR.FlatStyle = 'Flat'
	$WinRAR.Font = 'Microsoft Sans Serif, 12pt'
	$WinRAR.Location = '184, 243'
	$WinRAR.Margin = '4, 3, 4, 3'
	$WinRAR.Name = 'WinRAR'
	$WinRAR.Size = '132, 39'
	$WinRAR.TabIndex = 1445
	$WinRAR.Text = 'WinRAR'
	$WinRAR.UseCompatibleTextRendering = $True
	$WinRAR.UseVisualStyleBackColor = $False
	$WinRAR.add_Click($WinRAR_Click)
	#
	# IDM
	#
	$IDM.BackColor = 'DodgerBlue'
	$IDM.FlatAppearance.BorderColor = 'White'
	$IDM.FlatStyle = 'Flat'
	$IDM.Font = 'Microsoft Sans Serif, 12pt'
	$IDM.Location = '324, 328'
	$IDM.Margin = '4, 3, 4, 3'
	$IDM.Name = 'IDM'
	$IDM.Size = '132, 39'
	$IDM.TabIndex = 1473
	$IDM.Text = 'IDM'
	$IDM.UseCompatibleTextRendering = $True
	$IDM.UseVisualStyleBackColor = $False
	$IDM.add_Click($IDM_Click)
	#
	# MediaPlayerClassic
	#
	$MediaPlayerClassic.BackColor = 'DodgerBlue'
	$MediaPlayerClassic.FlatAppearance.BorderColor = 'White'
	$MediaPlayerClassic.FlatStyle = 'Flat'
	$MediaPlayerClassic.Font = 'Microsoft Sans Serif, 12pt'
	$MediaPlayerClassic.Location = '608, 147'
	$MediaPlayerClassic.Margin = '4, 3, 4, 3'
	$MediaPlayerClassic.Name = 'MediaPlayerClassic'
	$MediaPlayerClassic.Size = '132, 44'
	$MediaPlayerClassic.TabIndex = 1446
	$MediaPlayerClassic.Text = 'Media Player Classic'
	$MediaPlayerClassic.UseCompatibleTextRendering = $True
	$MediaPlayerClassic.UseVisualStyleBackColor = $False
	$MediaPlayerClassic.add_Click($MediaPlayerClassic_Click)
	#
	# GPUZ
	#
	$GPUZ.BackColor = 'DodgerBlue'
	$GPUZ.FlatAppearance.BorderColor = 'White'
	$GPUZ.FlatStyle = 'Flat'
	$GPUZ.Font = 'Microsoft Sans Serif, 12pt'
	$GPUZ.Location = '324, 243'
	$GPUZ.Margin = '4, 3, 4, 3'
	$GPUZ.Name = 'GPUZ'
	$GPUZ.Size = '132, 39'
	$GPUZ.TabIndex = 1472
	$GPUZ.Text = 'GPU-Z'
	$GPUZ.UseCompatibleTextRendering = $True
	$GPUZ.UseVisualStyleBackColor = $False
	$GPUZ.add_Click($GPUZ_Click)
	#
	# PowerToys
	#
	$PowerToys.BackColor = 'DodgerBlue'
	$PowerToys.FlatAppearance.BorderColor = 'White'
	$PowerToys.FlatStyle = 'Flat'
	$PowerToys.Font = 'Microsoft Sans Serif, 12pt'
	$PowerToys.ForeColor = 'ControlText'
	$PowerToys.Location = '324, 96'
	$PowerToys.Margin = '4, 3, 4, 3'
	$PowerToys.Name = 'PowerToys'
	$PowerToys.Size = '132, 43'
	$PowerToys.TabIndex = 1447
	$PowerToys.Text = 'PowerToys'
	$PowerToys.UseCompatibleTextRendering = $True
	$PowerToys.UseVisualStyleBackColor = $False
	$PowerToys.add_Click($PowerToys_Click)
	#
	# CPUZ
	#
	$CPUZ.BackColor = 'DodgerBlue'
	$CPUZ.FlatAppearance.BorderColor = 'White'
	$CPUZ.FlatStyle = 'Flat'
	$CPUZ.Font = 'Microsoft Sans Serif, 13pt'
	$CPUZ.Location = '184, 328'
	$CPUZ.Margin = '4, 3, 4, 3'
	$CPUZ.Name = 'CPUZ'
	$CPUZ.Size = '132, 40'
	$CPUZ.TabIndex = 1471
	$CPUZ.Text = 'CPU-Z'
	$CPUZ.UseCompatibleTextRendering = $True
	$CPUZ.UseVisualStyleBackColor = $False
	$CPUZ.add_Click($CPUZ_Click)
	#
	# WindowsTerminal
	#
	$WindowsTerminal.BackColor = 'DodgerBlue'
	$WindowsTerminal.FlatAppearance.BorderColor = 'White'
	$WindowsTerminal.FlatStyle = 'Flat'
	$WindowsTerminal.Font = 'Microsoft Sans Serif, 12pt'
	$WindowsTerminal.Location = '184, 145'
	$WindowsTerminal.Margin = '4, 3, 4, 3'
	$WindowsTerminal.Name = 'WindowsTerminal'
	$WindowsTerminal.Size = '132, 46'
	$WindowsTerminal.TabIndex = 1448
	$WindowsTerminal.Text = 'Windows Terminal'
	$WindowsTerminal.UseCompatibleTextRendering = $True
	$WindowsTerminal.UseVisualStyleBackColor = $False
	$WindowsTerminal.add_Click($WindowsTerminal_Click)
	#
	# Vivaldi
	#
	$Vivaldi.BackColor = 'DodgerBlue'
	$Vivaldi.FlatAppearance.BorderColor = 'White'
	$Vivaldi.FlatStyle = 'Flat'
	$Vivaldi.Font = 'Microsoft Sans Serif, 12pt'
	$Vivaldi.Location = '17, 327'
	$Vivaldi.Margin = '4, 3, 4, 3'
	$Vivaldi.Name = 'Vivaldi'
	$Vivaldi.Size = '159, 40'
	$Vivaldi.TabIndex = 1470
	$Vivaldi.Text = 'Vivaldi'
	$Vivaldi.UseCompatibleTextRendering = $True
	$Vivaldi.UseVisualStyleBackColor = $False
	$Vivaldi.add_Click($Vivaldi_Click)
	#
	# Brave
	#
	$Brave.BackColor = 'DodgerBlue'
	$Brave.FlatAppearance.BorderColor = 'White'
	$Brave.FlatStyle = 'Flat'
	$Brave.Font = 'Microsoft Sans Serif, 12pt'
	$Brave.Location = '17, 191'
	$Brave.Margin = '4, 3, 4, 3'
	$Brave.Name = 'Brave'
	$Brave.Size = '159, 40'
	$Brave.TabIndex = 1449
	$Brave.Text = 'Brave'
	$Brave.UseCompatibleTextRendering = $True
	$Brave.UseVisualStyleBackColor = $False
	$Brave.add_Click($Brave_Click)
	#
	# Edge
	#
	$Edge.BackColor = 'DodgerBlue'
	$Edge.FlatAppearance.BorderColor = 'White'
	$Edge.FlatStyle = 'Flat'
	$Edge.Font = 'Microsoft Sans Serif, 12pt'
	$Edge.Location = '17, 281'
	$Edge.Margin = '4, 3, 4, 3'
	$Edge.Name = 'Edge'
	$Edge.Size = '159, 40'
	$Edge.TabIndex = 1469
	$Edge.Text = 'Edge'
	$Edge.UseCompatibleTextRendering = $True
	$Edge.UseVisualStyleBackColor = $False
	$Edge.add_Click($Edge_Click)
	#
	# BleachBit
	#
	$BleachBit.BackColor = 'DodgerBlue'
	$BleachBit.FlatAppearance.BorderColor = 'White'
	$BleachBit.FlatStyle = 'Flat'
	$BleachBit.Font = 'Microsoft Sans Serif, 12pt'
	$BleachBit.Location = '324, 194'
	$BleachBit.Margin = '4, 3, 4, 3'
	$BleachBit.Name = 'BleachBit'
	$BleachBit.Size = '132, 43'
	$BleachBit.TabIndex = 1468
	$BleachBit.Text = 'BleachBit'
	$BleachBit.UseCompatibleTextRendering = $True
	$BleachBit.UseVisualStyleBackColor = $False
	$BleachBit.add_Click($BleachBit_Click)
	#
	# Notepad
	#
	$Notepad.BackColor = 'DodgerBlue'
	$Notepad.FlatAppearance.BorderColor = 'White'
	$Notepad.FlatStyle = 'Flat'
	$Notepad.Font = 'Microsoft Sans Serif, 11.9pt'
	$Notepad.Location = '534, 424'
	$Notepad.Margin = '4, 3, 4, 3'
	$Notepad.Name = 'Notepad'
	$Notepad.Size = '140, 49'
	$Notepad.TabIndex = 1451
	$Notepad.Text = 'Notepad++'
	$Notepad.UseCompatibleTextRendering = $True
	$Notepad.UseVisualStyleBackColor = $False
	$Notepad.add_Click($Notepad_Click)
	#
	# MicrosoftSilverLight
	#
	$MicrosoftSilverLight.BackColor = 'DodgerBlue'
	$MicrosoftSilverLight.FlatAppearance.BorderColor = 'White'
	$MicrosoftSilverLight.FlatStyle = 'Flat'
	$MicrosoftSilverLight.Font = 'Microsoft Sans Serif, 11.2pt'
	$MicrosoftSilverLight.Location = '758, 268'
	$MicrosoftSilverLight.Margin = '4, 3, 4, 3'
	$MicrosoftSilverLight.Name = 'MicrosoftSilverLight'
	$MicrosoftSilverLight.Size = '150, 42'
	$MicrosoftSilverLight.TabIndex = 1467
	$MicrosoftSilverLight.Text = 'Microsoft Silverlight'
	$MicrosoftSilverLight.UseCompatibleTextRendering = $True
	$MicrosoftSilverLight.UseVisualStyleBackColor = $False
	$MicrosoftSilverLight.add_Click($MicrosoftSilverLight_Click)
	#
	# UTorrent
	#
	$UTorrent.BackColor = 'DodgerBlue'
	$UTorrent.FlatAppearance.BorderColor = 'White'
	$UTorrent.FlatStyle = 'Flat'
	$UTorrent.Font = 'Microsoft Sans Serif, 12pt'
	$UTorrent.Location = '184, 194'
	$UTorrent.Margin = '4, 3, 4, 3'
	$UTorrent.Name = 'UTorrent'
	$UTorrent.Size = '132, 43'
	$UTorrent.TabIndex = 1452
	$UTorrent.Text = 'UTorrent'
	$UTorrent.UseCompatibleTextRendering = $True
	$UTorrent.UseVisualStyleBackColor = $False
	$UTorrent.add_Click($UTorrent_Click)
	#
	# ImageGlass
	#
	$ImageGlass.BackColor = 'DodgerBlue'
	$ImageGlass.FlatAppearance.BorderColor = 'White'
	$ImageGlass.FlatStyle = 'Flat'
	$ImageGlass.Font = 'Microsoft Sans Serif, 12pt'
	$ImageGlass.Location = '608, 194'
	$ImageGlass.Margin = '4, 3, 4, 3'
	$ImageGlass.Name = 'ImageGlass'
	$ImageGlass.Size = '132, 41'
	$ImageGlass.TabIndex = 1465
	$ImageGlass.Text = 'ImageGlass'
	$ImageGlass.UseCompatibleTextRendering = $True
	$ImageGlass.UseVisualStyleBackColor = $False
	$ImageGlass.add_Click($ImageGlass_Click)
	#
	# CCleaner
	#
	$CCleaner.BackColor = 'DodgerBlue'
	$CCleaner.FlatAppearance.BorderColor = 'White'
	$CCleaner.FlatStyle = 'Flat'
	$CCleaner.Font = 'Microsoft Sans Serif, 12pt'
	$CCleaner.Location = '184, 96'
	$CCleaner.Margin = '4, 3, 4, 3'
	$CCleaner.Name = 'CCleaner'
	$CCleaner.Size = '132, 43'
	$CCleaner.TabIndex = 1464
	$CCleaner.Text = 'CCleaner'
	$CCleaner.UseCompatibleTextRendering = $True
	$CCleaner.UseVisualStyleBackColor = $False
	$CCleaner.add_Click($CCleaner_Click)
	#
	# VSCode
	#
	$VSCode.BackColor = 'DodgerBlue'
	$VSCode.FlatAppearance.BorderColor = 'White'
	$VSCode.FlatStyle = 'Flat'
	$VSCode.Font = 'Microsoft Sans Serif, 11.9pt'
	$VSCode.Location = '682, 479'
	$VSCode.Margin = '4, 3, 4, 3'
	$VSCode.Name = 'VSCode'
	$VSCode.Size = '140, 49'
	$VSCode.TabIndex = 1463
	$VSCode.Text = 'VS Code'
	$VSCode.UseCompatibleTextRendering = $True
	$VSCode.UseVisualStyleBackColor = $False
	$VSCode.add_Click($VSCode_Click)
	#
	# Gimp
	#
	$Gimp.BackColor = 'DodgerBlue'
	$Gimp.FlatAppearance.BorderColor = 'White'
	$Gimp.FlatStyle = 'Flat'
	$Gimp.Font = 'Microsoft Sans Serif, 12pt'
	$Gimp.Location = '468, 147'
	$Gimp.Margin = '4, 3, 4, 3'
	$Gimp.Name = 'Gimp'
	$Gimp.Size = '132, 43'
	$Gimp.TabIndex = 1456
	$Gimp.Text = 'Gimp'
	$Gimp.UseCompatibleTextRendering = $True
	$Gimp.UseVisualStyleBackColor = $False
	$Gimp.add_Click($Gimp_Click)
	#
	# VSCodium
	#
	$VSCodium.BackColor = 'DodgerBlue'
	$VSCodium.FlatAppearance.BorderColor = 'White'
	$VSCodium.FlatStyle = 'Flat'
	$VSCodium.Font = 'Microsoft Sans Serif, 11.9pt'
	$VSCodium.Location = '682, 534'
	$VSCodium.Margin = '4, 3, 4, 3'
	$VSCodium.Name = 'VSCodium'
	$VSCodium.Size = '140, 49'
	$VSCodium.TabIndex = 1462
	$VSCodium.Text = 'VS Codium'
	$VSCodium.UseCompatibleTextRendering = $True
	$VSCodium.UseVisualStyleBackColor = $False
	$VSCodium.add_Click($VSCodium_Click)
	#
	# ShareX
	#
	$ShareX.BackColor = 'DodgerBlue'
	$ShareX.FlatAppearance.BorderColor = 'White'
	$ShareX.FlatStyle = 'Flat'
	$ShareX.Font = 'Microsoft Sans Serif, 12pt'
	$ShareX.Location = '468, 194'
	$ShareX.Margin = '4, 3, 4, 3'
	$ShareX.Name = 'ShareX'
	$ShareX.Size = '132, 40'
	$ShareX.TabIndex = 1457
	$ShareX.Text = 'ShareX'
	$ShareX.UseCompatibleTextRendering = $True
	$ShareX.UseVisualStyleBackColor = $False
	$ShareX.add_Click($ShareX_Click)
	#
	# AdobeReaderDC
	#
	$AdobeReaderDC.BackColor = 'DodgerBlue'
	$AdobeReaderDC.FlatAppearance.BorderColor = 'White'
	$AdobeReaderDC.FlatStyle = 'Flat'
	$AdobeReaderDC.Font = 'Microsoft Sans Serif, 12pt'
	$AdobeReaderDC.Location = '534, 589'
	$AdobeReaderDC.Margin = '4, 3, 4, 3'
	$AdobeReaderDC.Name = 'AdobeReaderDC'
	$AdobeReaderDC.Size = '140, 49'
	$AdobeReaderDC.TabIndex = 1461
	$AdobeReaderDC.Text = 'Adobe Reader DC'
	$AdobeReaderDC.UseCompatibleTextRendering = $True
	$AdobeReaderDC.UseVisualStyleBackColor = $False
	$AdobeReaderDC.add_Click($AdobeReaderDC_Click)
	#
	# Opera
	#
	$Opera.BackColor = 'DodgerBlue'
	$Opera.FlatAppearance.BorderColor = 'White'
	$Opera.FlatStyle = 'Flat'
	$Opera.Font = 'Microsoft Sans Serif, 12pt'
	$Opera.Location = '17, 235'
	$Opera.Margin = '4, 3, 4, 3'
	$Opera.Name = 'Opera'
	$Opera.Size = '159, 40'
	$Opera.TabIndex = 1458
	$Opera.Text = 'Opera'
	$Opera.UseCompatibleTextRendering = $True
	$Opera.UseVisualStyleBackColor = $False
	$Opera.add_Click($Opera_Click)
	#
	# IrfanView
	#
	$IrfanView.BackColor = 'DodgerBlue'
	$IrfanView.FlatAppearance.BorderColor = 'White'
	$IrfanView.FlatStyle = 'Flat'
	$IrfanView.Font = 'Microsoft Sans Serif, 12pt'
	$IrfanView.Location = '608, 98'
	$IrfanView.Margin = '4, 3, 4, 3'
	$IrfanView.Name = 'IrfanView'
	$IrfanView.Size = '132, 43'
	$IrfanView.TabIndex = 1459
	$IrfanView.Text = 'IrfanView'
	$IrfanView.UseCompatibleTextRendering = $True
	$IrfanView.UseVisualStyleBackColor = $False
	$IrfanView.add_Click($IrfanView_Click)
	$tabpage8.ResumeLayout()
	$tabpage3.ResumeLayout()
	$tabpage6.ResumeLayout()
	$tabpage1.ResumeLayout()
	$tabcontrol1.ResumeLayout()
	$formWindowsOptimizationT.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formWindowsOptimizationT.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formWindowsOptimizationT.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formWindowsOptimizationT.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formWindowsOptimizationT.ShowDialog()

} #End Function

#Call the form
Show-wintoolbox_psf | Out-Null
