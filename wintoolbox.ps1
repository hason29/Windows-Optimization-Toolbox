#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 0b4aaf75-3ca3-4f75-8ea5-c6eff587cffa
# Source File: ..\Documents\wintoolbox\wintoolbox.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
xc0AAB+LCAAAAAAABABkm1mPo0qUrd9Tyv/Q6lekZp6kvi15AGPAgBkCzBujmSGY4dd3ZPXjLeno
ZKkycRB777W+RZD/bWdJv2bjcY/m6D/QF1PZd//vP+n/Iv/zf35//uM//tscy2/ZRY1cNpkRtdn/
bGU3930T9/t/DVP+3/j/9w3/fkzux/Z/yNu8VbuvkdtHvtzM++3yf3+ul/u0+rP7qqlzWKn0ZvF3
SRADUB+n/Ck+EeET36lv/M0D61Y/0SdePIUXWbUVf38gxy0c5B+RQAkShovu6y1q+OyQ2scS4DGd
uoVNZxpa9UZzOG6GK0+OuEh8O3HOKybDlzUHJz6eiTX+/uD8wGbDIvJijHO4LYrZKIgnjg057HC8
CsTEgHjuYmKDNzgbKDi+WDlLCqt/YOCL42IebzPo0hU/ld+fFR/yms06LgnuJ34XsUyZ1yMGXEc2
flVDUlqbgj5mfBHxNaVwosYyAlvYUaR56n6I1kKvBu7eNhrHf38ifGTEuxoTcY5hmCvGscHlZIe3
tHhiM81DPLMKMWh3mjAwaj3zyhdzuuktncBWU6H7UhCxXsRlb/y7WtDk7erMXZ6HG4/jGGtj9aLQ
xA0nhAXHFchhSqHhTF5gWHce+Kph2JriCy1qGNXtrXXc3YZDd8RQvz+AEHlsoqGNBThmpPYQnowb
lPdqFoOJyQGZxd01wF0Cz++8OQ5x/nBwdaHQVq90Q7X5SWLZOOd4ftC/P3G6KvNMERbD+MbK401H
J1jDEDwwJRU/cgOHlhWpeILzKZZijOVyVHXOM1ZhinqunV/FFW5hhgcltLYpg+mw4/qykJN+W3GP
CAQQO9MnWE6QvMddxZ46vzEt/VjEG3Yb6UoG+FlkV00TmWI0ElsMw9PAdXv//WHfTeCvG8DWMmEG
ccUKcuS2TKNYiWkxadTIg91Z7xTw8sGshluOGC64sxkzY1gpp1wFGe+kGEwdHq2tmT0maFafFFP7
iOCyVqHPw5JrmymuyuxZ0lxygnfX8cVhy7nfciYAPtpFGbKdqHdGMeCBf8wRJIO/Ow1XhQWcmFX9
J3c+GNlj1LbuVuxPM+VXKymKnX+OZNLBDYPiCE/Ue5Y7tYMiHov+WXtcS7kHU+Pc78/dH5Tu8DXO
zcpcEFvs1YvjeB6y02Rj/tBIl5cD3A7iMyVkagBLOfsjUdBhjLfLk2YKTIwxaRAqM53RLBCqYJti
o/cpU/KlZqqLPfLVrgoJqoDQCu+8jF8RKyxDboZ9Ii0GS+v8KZAfMfqmAVAeco4lispH0+9PL0Do
BspAv3o0azlHdqAj+ZtWAXjnm1n0R4snWzqPm1LGE47ilhfc3QT1/3hLFlomeULeE4Mu6wT8/lTf
7Cnvb+soHGtZXZLyjuKV+ODZ4Nf0tB+ykmjyBePFK81aScpWS92xQ5KWzcyXEN9MzA/05I2Xuhmi
fRvZitLe42mT6ZKdX5NjYakLvTK6g4rZ1lHF1wU+GJqLVjTYtRRh9+yZMraHZgEbUkLJpw4rV6h6
aE7NJAyCO+l2FvZdlPlqUbLV0Z7E7qvcuQK/P0xUMiEhxBzHn8fzGg8OVhvBUol3jkrwPA5h47F4
vPoPdKehRuYiD+i40gW/MJLoYeS7INLkyDcn1ommGDRMocy0m4sl1qUa2DhA7sw0buXMhU7+oIIF
pyguQDUVRoVJSGaI8Wd3f7i5WQ0RIa/cpJf7aIKqd4W8ggSWx6xo8bitnBd+zxJ3zXTMpEXd2Old
UiSstFYTdYhorb42GVzxpjklT3g8eppMYU1Fi03wPZL5dvbA7FYa4qs9RLMdpDYaw1LhrO7AuJFi
EyYoL9i1QXPa+q9YeOv0Gfc9kwxtccxuLvn2h+ZkKXvedrqUj8+9fJ3bTO+LsEHn/pBwXWRhPouw
LpwJzy/++nyFzO9P4X6wyeM30dx97FkHSBPialVI0ZztSksHmxWf2JPTLY2bMGedPP0UBznrlUJy
l3SDpSHYOf1EC9ovyGVevEXhsXuHzBdf7mt/xRLt5Pc8bdYxUAegB1DnEs9lIn4BwYtlZz9PXyLf
rPSbnns5FGk3uHNEEqHuhTu1jGY9BsU9DxwC9RlRrcuVeSvK2Wa6Ik9BpfH7LWFGRrGkJnfFvS1w
t0nrMIhbtM50Y0hTiw9++P2R36N1Yca17b+KKbzT/UJp45YzWPPQmWWudqN7XQxhj2YNOOyyVNbI
VHVkMD0rC/Z1z0tcugguo5Ez+fuDpoMT72vb4GXso6KVziRiRcc+cw6yhSJ/dw7rmQd+QEYS3ure
ZipWkWyxchneg8/ozedIrPnacIb7+5PI/dI9zuFob7K2p5K5qAvJhYz5KNzugRMSQFJ9VJnBh/7A
m9ViPMrMyqv9Gqczi4uZdNJM3nLBMdZosijBEvPxmCqQn99etzfaZjE6ogstABs1du364tZAH9xg
7VjGfYlYwOLuWL1DifG7+/QdJS2nczFrn78/3rzNAd62PCfS14bmyumjRlGQxvW8Dxit3IT3vN9y
ZVB26kLfk6uRK6mBPXmVMrQzWqhX/m0WNboHivX7g9Qj9cAxPxM059I1uS/PK1PQS4uUjUn6IBeS
KCAfDfbMKzKfhsNMGSZJQLVKGqRyKfywc64zNoZzqEPuMX6TlYfNLIIRtNLRr+W03eXs46qXzsw/
4vISmXZvK5B9UmsbXbRSXLL2uCeD2DSxztyYvZwTRhOw3x/KUTP+o334fU799AlyhUEg8tib2RJr
WNz0eSC4TBdlR45zKaYwvtzemXR5BRRGAjEy4Lc6+6nCu/38/RnJrdzOyL7buBUrNwVQ3xI7KcSh
p9BGuTXjcCrznS/zI7bPKDH8o61Wa3ghjVh2E/t2J1c9diZlttfvj/W60uhvdXiZd2Vv+BKt/Lgp
uFh1ODsgaRJKWpRaE3/V7NqbSS54O4t//QQ5etLtWBljR+Hh+7Hz6E67wBAkFg8vmMtYjxRtX4n4
zqoxZbtj8ePh4hKGfjIzY9bfuJS5nw227tuXxlR3QeVYd5GqH/j+SGmkls+rYPnsbgki/pxeFYsR
H/cR5MrLz+tHqwrRmMcmZX9Z6ySbuuQ55ch9xo8tMvfze8VwINT3iBcdC6KrLTvBLYOHRSN+XF94
HFLz0iQjIX/8Mx1J/yGKdtqu5S3HKEooMJW7v7veuiWceiSXE2ovtnvxa2q6lYQ4xDYSyiHeM6My
X71UMbVAraQrdrtV9KLzFA8qT6royq2FK5Mx9WIw37h8LS9+vyhSliRkeyseK5pAFjESFBF+hULW
vs8Cy7+C+j1fivnErPbzOq9nqRT7abWB5r2Fu69z+eK6hCsxs9rdE/pKn9f2Y3rOayEuyE9brTuZ
HTMFe375HfvqTFV74HnDGnN7n/Ar7codakfzlbOI929PmeYEC1GJFpAciMikId8Gl374l3RHa5s+
8nRcD7hct71BvaA3BNx3DiCI3C3zevCKzEIsP84ldYZCS77TPBbCct0xn+QDKyQUK1TowptbiDyL
78ltyU0mvg/JvdoWPtZfg5c0oWe2ddUazKmt7P70CtjUtL0ieqfoOc9ydj64R4wRKGPYacNH55Sj
tdW4cUwpvwN/AUTLL0xO2ChrCG8g7I9J1DEMV9RcrSRyc6h8XrFy1KopKfSC0FpvCZ3lSZTJfG2l
tUU11VthqnYzcHrR/b6WhAiTa/d4OssHfddy7I/AZniNehTYqXfRIN5rsFyPfrm6ZTO9B34awxnh
WD0t0e/PfguGmdxMyLli9bVtNtjfKuyjUUZqFD2dE1vaM8Hj/W7nXncuoTDZ6L93k12JZro17SEE
nsM3sdQmvz9Hs2tYqHrwo+rnEN+fysQB49lJiJ2w677BBAsGcKPuigLRVk6uGLATDKppmpM7tMK6
6lKzyc0ooNHalsjlp+s+O3gjoDADzLYyWNYSzsacIVJyEqYnlGNOFGbFg2QXoih6EcN1tpVmx5kh
B0Hx2N9scP80SC0HkBzN2xmwlpF1s1GBNSTTkPDNO4Fjl2Bpdzia45gerQ7hd95I50bsdnLvtiXd
Ndm9oTBLeUsESKS9VvKEC4XTjh6Yj+Y2fx662zOL+3QKtEnOqbri+hl5LxHbV1I27hGeGpar0pEF
F0bUCk8DpeclMCMPxOTKZUioL3JBf2f36/towm2ubWItgYUa4LJ19VQgwA+J6HFspHvkuUFGxxFE
ha+LfJwiAYqLNFlwn38j7U1xEhXwDU/a57hpDPigTWs34XrDi9gGcALBwjQeLKeoyQ9sNNJgMyEO
69y89eSU6oN1hECjVIlFiqSEmaje+FEaPLIgX2Kzp8BJ/MdiOedAzM2mdXfW/YLm1AAjuyobZ9qx
f8HB9WSLN1IYdb5qkFzr5Gjfsi9u+K8jcGKwmMO2vtP67JqyKUfChZnbuVl4xK+40dRt7s71Fb2P
4Mk0+tnzL8SG0Uba7evgAuPto2Q0tqMciLW3yCcT3DVw6YOwUkPd5j0ueEGY2k3qOpqZ3Mbev6+v
MHlhfQpqJrAXOuVyvV1IHzYhL4nL74944qcEO78YV5qIM0h6jxwMlhVzdjQIAYZbEbaKIp5j+JWJ
2lgBNCiXZGVk7Vs3/rRTyISZ2OYaXUNzWnJd3XMGaq62bq24Miz6qYhIoeyg5m5vEwQDdcXbBAb1
C+KvZuE5oE7rynZ6xnT6PJME5C2etm/w9yf1HCi+jZerv0Kbz8vS9hnZshp3XJBP2npBmsrBy56Y
y0FDmaFDsoZZjlTxQEKxxISPrkyC0zdtHnEvJJbc6S4RZ4RfI+vag3ncHColYXL4u1mXszpOCc0n
kC9fIw4vzpC6qBFL7pHgaxTwQsfeG5PqNloWf39eKGBMWUxjntdBHUSDPFhsE4krotFkNQ2+WXD6
RNDMfa8mHMlK9kaoaIx1oRjl6TOjkt/AQ8/NT6z//tjxCEI3qs4hZZ8Hd6c0xWEDt0jsNtcFA3RU
SSFSu+uzOelFbseXxlQdPp4nvKEKhluO0MfZwuNwAyVKRxvJh7Pw/Mmm3YW9tt6lSRBFgpP3ghtH
AFsM95DfhSM8sijMgzd7I0EFOOQRQSF0ya0J8tAZD5tH/VZ7OiAR1y6VW3iQ38Unatgbx1+GnC8e
m+qOWe3zgtpkut7eqjHvsmBPNA5/RTDNspH8RgO5JnjTeH81DbPm3ckmFrj75TKEs8P0Jh0/VLrK
4gkLzcMPph4aJxt/xcdlefLgw6z2pveioDUEONgdLpc9CMS/q4mlVn86JZfGxgNd42nDh0njKlHi
hW9jEN04SF4MT7vWo/FAXc5T3FuJwKRF1Se+hea+hYlbegAK0Ed+SlotMO138CEM8Dje+tsDnAgY
NO3Pz1sLNn9wqOtLjSAuReFl7blZ1fcQ/bTZTGr/QvULK+1ahQ6HtJfMgsVE6ozK6kvfDqWk+U+V
svBu8aqozS0Z38c49IX84WDkyMDVN/NhyY9jRFGsvDPY8QkPrsuurPz7ow10h9QseJ+vJRXl6eYx
7mK+UZjtPbH+3rS+c683liRBIc/lwXevIWmhsNwOpBBR3gYqI0Fhpiaso35/HvoVnv4noWN4LYbN
TGm6fJXYQPZXXT0XCIYsUZLHMBXjOB7xOpjbh3ZeNlTeTJojo176ChplvSbwQA6oNV4eAo8jwTuj
SDVD0b1J7KGQ5sFIurCOu+kgd2he/dGqH2DnaG5GNkrmwxVWgQVHzyRj+IJGiLp3n815yfiqFb0c
r2qlOFeOLTuCaikdvg35PqQd1p4D0hgweQ3yN5frHgPtZMPMhtxzVRK0bQ1Mw1ZA/YY1G4Tnwx00
ttGa2l2C1CF9bLiWMH3nIKs1KH4AQP1a30b2367oc8B6aLL2HQdcpcW3IJSDxUFTf9QlBrTC/wSA
TQUtiVatiWpR6ik11SZ5sDEmTPRKAschW+Hj4iBEkkPUsZ9zAk48124hfimGFPsM7Zu/ZXAOvg/S
hVJUktc5i7ivD0nBlMs4kqMDafAh+GcW0VkWCJci3XJvPYuuv8r1VTCW0Aa6ytEb3xCoe1vj8gwk
mIzte5Ed6OsUVD0WBFJ8sJ6uDt7WJPggPtT8CNpAZ4DbCsUCm2AlFANEquFxmweX9EHef3/m/MP4
B/f9rJIU0xuc9jZwKImEWeCAWMbuzCPRk1z6o55ZgBWtz15IzN3IPlk56J91N/DX7mm9PwXyheSG
msxFk7YwhaDVdex3ZgiyUP8kswcJ3lBPO/8YyxhkXx9L6EEe9W8L58kfjXfsLU7sY5XXknInZEjJ
yVBEanUetvhWG9Sw7KqzaXk5mFK7Z2RzDEc0/qnoMoMTmg7ZdGDjWw8me3u98Y1W4zd6AaEX6c7v
D4PbF30yvHm+de20zH6cLJ5PpG/ev5Vp07+1gQQKooNPob/Ays0gR+NuD5+R9RKn8fP3E5apcc0v
GFpbe8OrCQueSVUYvEmoYm2X0+ExVf5+QzkLYEXYE5L7RO3LgI77Nd3obkoJcHKL7mEk3YXqnPLN
dSdxxOQo3vWr6GmneM4P00j4V+BByk3hbFHhg/ACWuS11Xf0z0u776cJqESjQ3WQmbx/w/pg4xeM
jxgmFFLyPoIWbdQuC5w1wgFyleHNHLLJRqP1Vr21iWb9C0zlz/mWDJ4OyhCX1Nfua4h90WY6XOEP
HNYmUouuFhIG90BTRSM3S7WOiDj8CzSxqvnSg8GbIYPbMK5QyrbicRk8czglMd37RQZe7r3aRJnU
xhU5njf62+/PIMpQR3fik9qsMDIc0yBbNLRIjmSh8bEAD3xOppg+OLh8EEprZ1BCzQoychHkaoiQ
tMA7qGDb/+bUIiiFENzMv1LBqw++QBXWJqYO6T3cu9tA6xzqOsk1Qu/WTEdeJtfxzr6xESzsxHs3
smlK8jvpYziZSMkJLXFOcaFvYU5rJdvI3mw58oE1Mpje46d2kZLt24CanNoQX9+/KEhHs6aadNAC
vR57yHOHUR/0pUVej2ExJZQFMRpr3GOBU36MSFckjrdKzvgAZAMWwL40wOaTAI+JemKuMtwGi1jG
gzSB11MmqTWxO71ZlNqePLUlfca1n4EUi9yzgsZcG7u1aVrJqk8lRoeSanu2OyOtdaLkVitBD/v3
W91wijXgGlJOtBIPacMqxCE2Njq+q3yTojHltVU8romWXalv+OmXfHo2X2GzhbkaaMRNZ3NDuwD1
wuNZ6Qken/PUfGwW0jRAn4audnmChXYOFWGpaH22gU2SuyggRYoQrxRk6fKgHXj3piZp747x0B7s
ovk8M6fRxDb9HPhW1E5gBqGNFClkV81dy3anwaNpDETSWnAZgEL7mCtrO65vjYj3EiTmwT2cRA9I
c0+ZrCdq5/PBpWHXkqPqKWj3I5osVn7ZHtsozkrKN5vaFu7Bt25bowAMyJV2sOfrJPDmBgcyvCeC
3gPhSDsb5v3rMURQ/s6m6PbUsfgn8iwOOPtHdT8Huw7aaM3xHjghSuayuwIPjg7/OJGPLYrEI1Qt
3cN+2Ftzf3W3mGDkhzDHUDz4BqwPBeUFaraAvyoEhjbAWeXWRWvAvTsrfNRx9A57VaGnhYfWveKe
0t+QXABKzCir212eJKhIUof8a2kIRVF+f8BDM72xjQxEjOPkOYOoSWA7Aowy6M8weFfERRFX+Vq0
+s0eehxzy43TD07/jQwm0AWBQQWMJr1Oi98f2VsStdNDonsOKR7WL5TEj9WIERfoSGEDj76HnqKG
5WI4QUMfq25d2M/Vi3j2BtdgwZHBze8RZNMC/2rKTX7Z5mOlsCbffP/yqramkntvjIXvvQgRzIAY
rajGxbgT8ml21+A1eMJ4nFqYRVaoXZxFRV3fhcjrVUIXZuyz80P61n3K1/3yjV1kl7439WJcEcLd
I8dGCUhjSa34DBQ7dCXmTiUQbu+ISmfV2SNfsA8VJUoH+Xbq7zrXXAIT+Iter8uqmyV5ZI+DKzX7
k18Eq/VZwQ5GeQ2gHps96LtbBEkJKaWlYEK72IjU+P335yqxtd7Tx0BsTX7pSsg/7CPUPlXnBx5F
IySn7gNq2AuKI802yQ3BJjcQxR9UL7dEe4OHCcmYXcckD6SWjLwgLRYj6UYyazvczbbcDvn044qY
KH9rh001QiazKLFFw5dOF05+Ov092HSS1XzIQSNzg/E8vx2LskyjGXc/1ROflcSb/06jg18Gl9Zb
AveJkLvNOxtSPgZeDC6TJWnVGhl/deD3BqQBb0Ou4a+3UUawhChaAfbYkt74UC69qLfTKLy8z8Le
2erZ5kdYOwzuPmVBC7SYQgPMGMkSHLPfvM0gYsBbLO2uJV9ld1FPRA7BdWRl07GCVMhRHMmAV5Ln
cGIzqV3x0mr3PREmG3iZzdVaj99VP9ffpR2bq2WGa31EGe6Ib9zmh+fn7xlXI/3tPi5p5eoSO+rt
a0N0gHq92YP5omR+u887ZiMaC07si9F23nYtFCmAFeQ8EiBb7TuaxgNCNKeywuO8zXFpIN5iavn6
DfGXyoAsfdgKYZTQIiFSo3tyo3xTovUhep5gfTal2j5JuH444/h7ksCqzwYxuVLAhOv8CY2moKQF
fpCPORaw2v/O30/HzgUJRqM0dvRdQVGOvuj4z5PNjoAoiQ9NF6GUU3dS9gPmLxm5zHPdgkBqhHvj
VfLwCKkT6O3dtIxk12osoOA42X3Q8acShfjBZpzJI6hIRz7FRdcs8IAbjHV58x5ymdwAWsfn4Jhw
hKx5XoxdGA7mqc6ED42JhUVg+Wjh72i3J1+Cm99o+uxj1wC3LcI9sE8blmrojQZrIXK4BgeWKp2z
W3h9xeRcKL6cNdZ3T1TnmMHuUktW60UgvWzyiwxhxnio6dc9/MjDXNUgvRyxyJ26bV2CNMT7wJQj
N5U7V+e4BoFAtx3hgWUrhFvyzi5LUJfmGT2FDcdI1GWycJvR3mNW9Ulq4Wo5OtJeEuQajdaWNH8P
6kVqorn9ZVBzItKAjZUZph8yT7klmFeCADARnaWZaIpcJ2Yt46cJyY8wpSqUivcxbOmpRTPqt0Qd
JTUSEP6Py2cl7/OdkdsSvt+PQLIER3IwZE6hijuWJsn8+hVdSSGWC4arj9UnZBW6Vyhc2SeNmSgv
DIhqNSuBr0ycNhg4OuFGUHQZqSzZymwlMeo8rNAl8Hgp1pAdEYPfGuoyjA6noLRexPf2Dd8nK00u
ygvy8yj8XnxmqgpFJMo1toqHzcE5aweyPdvonhFJg1czmOcuVuHqOdZ2Qf/u0zwkuvZVhbEw74pr
eN3vT/fp5eHol3tO3ocXi8Dj5a0Vd7iEIjXEHS1nyvtVQaWDyqBW26NKU1nsBFG8BqON6lzXYeia
zaVS9T8NOc0GbBoG1PfkUqAsgZk7HFi/b7femZvLe9r6tXcs1fo3TzRJORgVLJm71nxgNroJFp0M
ymZZ6qO1Rdos3uwQJQ16Ve8Efj6WuaVwz+/W8K6hG8ZLRKoPIYoL7+9RCyQIcTga7m7t0WjiJwoW
+mkGRC21KC/UCvbMquRMk4xDyRcJG28OxH1QMP3haaSBaPUEkNSh/BHc3L749buYGuyq5c6pBjJs
SuGu96Zpihmi6Kd2OdqthdZ1cemCN7q+mpwd3QcuiVfl2Y13gd5GRrqBnQLyBkXivfHU4emUwd3q
yCxnsqxGTcmiE10t0gHwqEnUWimLSBITZHdUJnzMJtITVqPtbpgLHuclSvZlaEb52k21NQRfUbks
H5y85xWpPtdSeZguqoKKSpO8IIc0BZxD4XHY8QTmdH/c2vw9Bn7Bbmnu8CRla4mxUtAlDiXrsbMX
nAZ1eMy6tryONuK3BJGDz0PsagyQv+0F3rTfaVE4afqKnDCkErLP13IsV48D8fBGXaugPK95AFXq
tkisibh4zjfz6+8P+jA3lLNGGea5DSIhpwBrjGEcvRCA763Hy7eVKZKReQG69f653ztnis0NvcXL
6+pid+69EH0LKqxGIFqaUXZeXwe4Le3kjWvo7qsMbvsihR3kjAiA/YHSPuW/PNN0BCZ49K3uoCQr
bn2ctMFbrVcjtyyu3Qbs+qwR4fcBEzwZ4Q+INpwp/pJiBr/WjJLPMOvnnVZOlMjLpM5gGgstEzdh
TfUz/1jvScTxqoG0t3Hm5L4gfotLaosbH5LFdzHCEwpcFpYdAFDocfvVNRu6Occl2WNiP29WyPGU
bQwZZadS2iWS7+MHXaGhKsyoQ+48bzkxu/wa32Y6l16BvBeJPgicGN6Y3KhfCd2lpByKRc8vRoIF
9yFlYyeZTImydYz+rMkcvrFG7zWe+/0xTKBKlRjfKzow8U/jmaneCYvf1qts6e7oMHeS/Qe3kliK
yMtanKfpi8qpiDoTvyeHZYsmsrUNCnkWqyAzdLXy0wJT4iYsyvc7M2+DmAbh39QZDd4iJfWbwAy6
UrxW+nxWGma5WtArgpr8pbYEwaSsQfL35zZ7XHjhunumHrvROgwh1f6pdYB4ACQch7qi6kXDB7vq
fRqdlyFDebXJ9rHDnvW0SpifDD7JKfmlff3+LPY5iHX1aYhbJBh6d3AFLWx/4hENAB5nLy/BR9Tm
JsUgiQbajrnXmPcMqsK1OdB8a8OE2bnwFnREqsRieNb+SC2pdgTH26hbYIsryi5zsPMCiX92bpxv
jAtQCydGrkSFzgrzWE2N816y88O4lDNU+aqYIVIkOEVcwiLCNrzGvBC8HFWW2VeEbCIHtDUGvNhQ
WBqJRGJ/REEF7pu26AehOszskw8DBNlkoj59IcX9/UFcJGYlcmJEdgFoUp9lYRekf08l7nZy3b0P
Sgh6CcXPDrjzms3vGPXQPCztMI2PEfztp3gMlZV+ZMQhX3zR0jsnQRuMiZTd/o7GLmGi1iSzR5Vv
3cp6YFOS4+5F8mkEE6QHZmvLPkLEqCUShhg2Xy1wPzJSpDAFSjJnzqrOYsBonxdRYIw3b09EK8Fl
TpRpRvjscMgnsGZHwESIRBp14bLtiPDfy8GwcHUC4H8L7/eH4+2/h8JrsktfMhnZVKYe5XY3n4oz
jsnWsMRUAJRzvL0rge5HqXGQZB2hdb3zfvEOP/E58Bqxp9divz/WAj6ys7JSXfBN3GeWQSdDlqDv
POevPzbSgQ/WgFQrOuxooO5lrpP9hNAmZi9hTGDMkhrsql8ZoD9/fxpe02Z71Sxby1I2gohJUjnM
7HMuZDTdN4+1VMnxg3dJUxVEvn/VXuzV5IBOYFIo3E42v/AMOashhRhJxswB784b8kyShHSQjx6A
Q/AhuMEfCPMSvN0juSp9Vjjoyo2ex+zrGGIJpn/nqddhHuArlNY/lit/f7yFCKRhml00n8atp84h
+aoN/nCVYsgvte/m6UR9VY8TFXast+Q7yMomfzElncqG824JXafeq/bua4PSR4nJzvFkbB2a6YQ+
lR7JcA2yAcSSFmyquHYOk184Rtb+Tu6G87NRTHwr+Fupn0hl12/I68Mw6u9wQYykftg73Z7vZ3hH
82R8qWRu8eLKYwVzhUYcW3MaZTYzjgI0lVBxWw1ay2doSHs87kRnDN7RvPDMbuvZQGr5PflCcDms
/Ha2oHoYcuKoRHM5GHn7ikuJM1afsyOaN8PMN4YmfIxJf7Gz42JUaGA1gHLOawyJ5oEyoA6zBwae
pOmozhEz0tRzImEGeqR/XuPB3lF16K12glmaj4Ed8HWQQazabhcs59YQ49+zftwzvXAnUfc6umdi
Q6V8kM4p2vXe3wu5EC6Y107yQGnknIdfP0esuH1fszaAR45Pz+FomRMpbG1hz6hFlTaaaBVQ2tXA
8jApmeWX11dvPCgPuxboTysocecWrFM3nwtE2Iw4WG5vRW7hCzTC2U7szmhOCYL5W5X513EQo/y9
j/TonAVvV9mkK+USMsTybUdDEPxlb5XUT2CNJ4TDLqsrvEUHu17qlKMn1j9774b2eMMT14MEizgK
eb2UfaleHlepeY8RJBoAKfI1CJ214CEXV15Yz1vUOAYKKbuJ7uZ1sI1WA0SQfj5cuZuk+recKCK9
CM7fnxO7eueQb6q73nmZuO7ilndZrtuyn4NsuQBzJWWjO5qySwzvCZuqAiyxLBfYjlPSm6t6QT23
rY1tZIgcgql2GuGmntFHVSWerMj8sqLSWl8XaYDZ2kC8fZ7ngrmZr+Z6f96C7kYMKqqaLplk3nrn
12dF7vDH3x9ybS+IeVTgT0aHj1ek+56QHkrybx4/2MDj8BleWBBE/XByrvr64Lt5SMd+AxPyLSlM
Ipk/ioTipr/3kVaE6blGCvfCAqQQXphUH2gQSn/n3JwLRwkixTKTrR0d8YFIhqm9hMBLsXF4b3p7
uK92xqXBbBUpEsurFd3UfBZ2vbxrSWdmk943rhzm2rQxPd3AwNOoZmIGhC6q7KdSdblm1+VLg3L9
3JhCe93kHU7QR/tGEBalVzRe398pt8LsMku4eqGCrXVUT1kA7r2I4DbwN6jy6msftqKuJYDdnlzl
V28aLEjBtVNc2Wylf3+KYcoDh5O1CSufGQvOAjUctn2AQiRyuBrwlir9ONVUhcjl7+k7HAk1KANY
sba+BBNnTU4kYRdyYVGu16rRt3LsbevCG/NslNszjiXW73iEKcL6qCVvM7E7sEkZmTNi4RW8x8f3
bPN0raY+7qKUb1qt0x12f/ydO18OVLde+1RMwbkNIschUQiVaU5fjglx+fLkdhelBNcmIuWasxIl
vpSZGFcFuXFHCdFMJfcj6EKUT41t6cnem726TboSMqLsjM20ap6sIcOOvw53m/YyPCJv5lWNWTfE
mV4Tzc6IvTmrs3hp+R5DQr/A/nd+ShR/nqCJVEwu2WYjT9WOoxUxvCnwfly27dPd4wqQJW99NlIg
nYG8yfZnDtnrnHGP/vr0xLVgE75G/ZaRh6a84tZF48dWznAlBNGP9P1+tk+H8/SgCqsd+uGN5CUL
s7+kWEVRSSM2uCqfi37/GiiqyCjYYhpSJHrCk25r0lwfrleR0Bdrq8LXPJTSsJmDSoz3MD//XhWy
gf532sl164Zf6hUIngaJRXHmLHiq24oS6Q11iGqdqJ/EYNOaqvFRgQl2Ypn1nbxXW6H9d3JtGhCM
IkU+Z/9z7i4wH2U1oE3JGlRvj4zmHNGwJ5YumnoucId9LF4LDQkIHCS7Kiuqzz2HybCMV4Jv3Gz9
K/fopc7gixdhN/vG7zpsmVB0MYyYQK5zZjaLFGmQp9wWzqJF1e7O1WxOLhjIHt2Zr2d+Jlazv+oo
vYL1bXn5yNgSJ93H0guCPcNrW7ilLkt0V/LILRP5Qt45scWG4s17Cy2o++8CSVe1x7R9QXmSybR/
QfJDNvtmrcrXYd03FRxh47CBVWHLYVWl9feIAO0UutP80bb/3OLdLGcnZdzGgb4Tn3U7TatcmSXc
o4ZVEd3h401M7/aNW1HHeKTMrfwnXh0SQSPdpoRsoZrerdqJlM/6QRhDZtlRIuo8o9JscqPxxpgw
Y9JPijbkDI2POCSrae/jb0iLcoq3aRppNDcb4RpuOI1IlYzoR/AYvPG1DB/E22cYuuSJS7osoJxc
3RI2c3KmrD+UJbxZFzVPFDw1gg/TNz6Yo4TSen8dS/GJ8tbvzysV73OquzU2cbDweOXlNN2NvmoO
MVgOsiIE7eWXpuynOnH55AxmRXoJmZpz65gX8sxC/N3bfCgx3d9b1kzFekvxdrHQSefUwexnPZZc
s3pQm8UYMFfNrRhkgDbBdBH12ZmRuj2KcYz2qPVGs1nuhKXy7vtToSpQBmgK2Ty76jRo6Ak8dS4s
PKMXrohvsgrUtZnVuPn71QzpMWIz0Lj9DrPapwWKvllbMIJD36OBLBPkp57DT5fZi5J744fSTI+s
PjZ9DPzHY/UQ13FB66pEXp4VfIslbGpGWQKkh1+UeJ9i5wibaCewm7X0hvYtElrsKjVLozTOGGCm
EwemrwdmL//5AQGgHHfo32PPJwHZ9A3SW6AGUvR3Npg+jgj2+Ffh0AjDqPv9eUpDcdcyLVfb+tP4
2PUWAoUG3Wgm+adzHg1XlK242wX+kog05fzDAtiUDzk53eZV1xeOLoRK+QrV37ugf2feJ/loWaB9
8o11ucCEbXGEcKbIS/mPEvIvLM05p0Sn+nvz5O+kxZjWE8WeWZskMWqINWk82Rb/ERdmEA0jw2t0
Q5qwOKzHsbM/p5rmzbf52/Yk0+j/TocPlIbolxNwV6xMmjbftQ1l18Y4hpxzwj9905mH4/AvVz88
mKIM/549pYLEmM18b9UPUp/vwQ0pOW03aWBwF/jVet7499bOljkIz1B2RfLHDsIdsaUnAi+Pbb5h
H8hLxfSGJitZAdgj8Ng/H14w2cSdfdHyGtARXyX4IlRfKTVwOYA84f0RKU3pH7GJNAjlrOgaOVsL
53eHcOiKnJZcS7BFkCxzgn+LWTaavoGI4d6oda/+mzrqIYyHb6TCF1NPNiv/HkvMn1BASTyDWNRQ
698pPoX04g28gsbuIJTx2ps4f6AMjG7fy5zXB4yySx4wkt4GdNg2ZJtdUdJuOtJzA6SRKtJeAkGG
VhH5pXsJ0Ev5sn1bhru+ETfCgeNr4BhynkpHc5tVbo+Y9MuZFF4qT6WxstX3vZkl+tvqL8rn98cf
s8L/Jtxt9FFy3CkATmSklWUd9myAKNUBiTjyaC3WkFgbK4Xc232UExGflMF1nIGvOvz3eVpDgfbt
S7HiTLR0WiuqcBCcv82jKQyNIWiNbfrzRnU3ve6QIPq9xH7YJlj9mtzLJljAm1y/hhW/9N4wfS1G
uV44vCfGpD0uPcvAgM7CxncYDIdtlpL9SS9r18g5DqBxE8CNpdk3x/F8nLcxbwn94g/kl7Q6kFnj
+uf1HIMSGeaFXvjqYs9OlG5O2FUSkBBSPgGTRwNEUZnq24q9ZQR48jMW3qTGmNFKoeSSmhb2bu6M
7GMZSrsmOCLRviHuJi9zED7ngFkKaEebVy3C94GywcJe/VTTVzxRaWmAZPFX4/Qh5uOTzvoCNUJd
itf3yL1Q98aPLGe+R0AzvUABafdQZlpfjfNCGhLmn0QPCaCto3Pc/2htZrLrHqlBViEaG8mSJJdL
6V3pBxRjH2VnM8H0WarqK5YMSH//3n2GY/niBcV1Qx3t58tMuJRgWcpYpCNTnx1iFOVAhEbed5nQ
ZXdsMGogJ7FCa4Ok/pIlFsUt0h2IyGUrLX5GLJBDtAF8c9iKzI0q4lBkucAG3Z42d5bZTFslV98w
m3gqYXcMZtegtQ2GfqpeOWHDGVIjrW83omYRk1nf+QkpXY7lukIOLR5+aM5iON0m3PftFZB9O/kQ
RBy7A40/Vq4mCTRZ8qHJd6270q8/qTNzh6nMNXzj7D3vbK/G8k0KVJgmWqc2vYqXsgIG7kQIxIHz
8afyyndhVHa00vb3B2UsmwLwAjjHOY7s3zvYFsr1f+/ycsEFJlGNccf9Wtn/l4Tb7mCrRkyrSRuR
KfAYeZgfMgomP0P6lsl2+0JqtNDfRfM5N1rohJDpTxKRZAXGUR4D33ejit8ffS+GXAGGMe8uut6L
ol4FoYc+XQ0RI0xBgvyUbjHD8izzU+k26sTj0gYQIcoVWbtF4hqw+fY1QmR79R1i2fvvqeJRih+O
pE0u1089S3U9zPWW/TvlGYAuSzB9rC7LoQREyXqJXa1BlWagZsMwcel7NjB4foHq5+6eXxqwxtYZ
vq89yDCER7BkBqUYK4dDV1MR/5CITqa980cv8Mc3NvkdYdZ/7xwR91fk9Yvo9BRvGeei4M8Y8Yd6
9wNrAIvKHQVilGM/bpEOAjRZz1QWjqgHXUSPAdJhLWITkijJYGIYn36Ku6kc3oQ1iz4khTKI4RXx
rzbwuW/nHVuaafTo3tbFWkCI+i1/v9EX1P5xYEhs70Uis+CLbja/oy7SAiQZLxzVtEYZ3MxUGQXy
rSFz+PZHgBHimsSR4mdL98rtv9PYv6cjm9ZS6iHaexQfd/Gx6F+CMTLV4eLHIr5FlGu0cykQlYaF
Ll73XNFluLu7v3g+FG31td7uMvD4v3cJbHQxoLKMsHc7AjluBWybQm5JlmcuFEn7LExqXF6peZXz
SysFBX7tAu3LIoaoTMCGuJEpnM+D5o7mVAgI9TPhEzHs5FuDVGz70V9ajLnC9yC8xbMPyXnbYRo3
tWyPZozx1zBxijcHnjDl9JoESKzz55qjO1WbsMoxL/80b5lYO0G1WgWaWWEgW/NLhlSC7LM34y4Q
UR5wNgK6tanH713ab5EvEZQh79SwPWS07+hOMx45by0e62y3h3AL3ubzIJbF/XTBcFbrCqz2GE3D
IUjri12fPTx5+0V8veDVQ7AA/ameutJd2VMbyd+furFHDjijvzT0jUxjiPln5tABH15hADgbZaoO
SdIEX5z/75mTq2GikO/bp+p9M5BIDhfezG4mQ4o8azweece9VZ208NoqBO3vlywo0h9TlLkRQws0
uMHVCyv5/VQsZwgq4RtgkF0N++AyNsXm2uleI+uNpP7782nXv1wf+PK63c9HuEon9K2EvQfOhPW2
vjEsSbPJ9xzJkB3VQhS9Lu0QQZpaGDikM6ZpF+I2whIRERcZQHxlVBj7PXfVP7oHKaKfTtyQz3QZ
jwNl/jS/dtKjZioK6AZ0B9xpNphfBgd75r1K1CVePlQStKhDpk2UkDLez208oOqKb8YFYZI9Ikih
EENzcA18wNFB8uxff2oaOIxyyxsHCVfoXTpcUhtdIFrHt/6emH0SVaeQbzFPvcNsXWKltaG8iy3v
eNgcF7lhe3fZw1ks/Q89K3kQV3OMW7zfYR6H/siITa48C4cEjxFFL6BzSJwySh0sExse1EOH8WR4
n68WfwrdjVkPRdzW0BTI0NpnX/KuR2m39OB8CuLV+vqIuMpiJPALmtPkg4fPlB0NZFppmCEW77p2
IM3LwVTa8AkJTkJSvWWZeMLofBwFPW42p+6VUCeBj+RROslTqONBRxQNH1ZKOS87f7eOO7CprX9f
HtYRohBuMLACqhmDhhHfY5LRo9zTMfZ9Zy+ybe7EzUcTaJDaLKH/P4BEo8mSI0CBR11XX7F7Lc+y
p1EILJJj7Rx4tSiAyDVfcCvALyjt9p5m7XdR3h9iyQ9d2qyLZ35PrSfb7e+t14h/2UcvPP7eCnrB
VA0MPqTq1nmp/pITRS+eWssVSNrUWoXE3xNs1IdfRLCXJrFRCggkdq6EhQjZG7pTU3RD63Aex4bI
Hu8GGQ7kfQYcGA4XYVAIH3Ae6YJz4hzlnHQRseCWfLqskRg3MAcPngMFL/ueNRX4/bHJ247mD2+t
iwNdl7rvStLdMlzchF0ou82UyKPyAtr+Yoi0XeC35BV92L1M8/2i9cAdlCCh+SxApvX7Iw3ZXVOT
SLbntx8UdH6pkUGfI6IWrtir7tiQY/P1/cRfDaGYg2VKB9ONXYj2GLEVFXBjp78Mb0Lqj2aB55P5
b97cnAA0XuXaKWSdqsAxwENugbPHviOeqMh8gGKYVQl5Q9CrquNO3O+FETQ7113JsHrTS4DYkitw
Rxly5e8d6wB7nlrAWrq7Kuxzy6KOEsPHAKxS6fW/N+I97k6+R0Doq9K05Kv3SJPtZ53KhfXWsr8/
wAz04XEOGJN8XJJ/LNkVoYukxyjjm9n0Za+CI5q3MI2+lmh0DpPaQl+vBf0+URakSLJZuJhllyBN
M0SDLnF7ph53Q1Sn131qGsFIXb/ggY2qwH1fid8fjB2M3zLnpNJJbXUW0uJ6amv1VT0x2ycydVaU
z4YM7duYEbunZNObB3/n7leMcDgxSq9IIWVXtrO/0wAei5+NcDYO2V1D146X4YSQfxS51n2eW2Mf
yEPUjkVT/0JfXULfybfiLGdQ20EkegTmOFcaASt25Q1m6rZy5m+PJ5yrS0PcXe+4evk7qv1FjAa5
D4g9VWefQYxEJnBll9WnucGvRJMJ7KfY0BpVWS+LyA5VQ9F0R7EvVrxQtDgJmNOKS9aNCp/Druy+
q7MeVjhEO+/27w/LjX5PPxVYeEAmB7G6ZrVP4oWcNMkBe7K5CQ3qbgpJ24Bdkf695o9eWydhZLjw
FW0oFxucGcCkxd9vLbnK4n81sD+a252QkoYPCXdcv85x3TK/daOOzGjjmuO22SOg9zjEFHPIlrbT
9aDJUAjbj7WwyyfB4r8/GwdeYfLFVd1f3b8XIaNZxwHXNCeNr534rAzBN5tlDP9OGGHni755B7fp
fAVLWXJidQ4frMmdDKKMgaZeP7Ik2tPgHSVZN9X6/7J0HsuRMu0S3k+EroQF3i3bAY1vPOzw3nuu
/i++cxYKaWJmWlAm80moemvMnqTkjInb1Xw/jx9BC0k5dhRI4LBE6j6AffOeUIEeH84zPUnzFcsW
DtfSI7yfh5DN8tB0egERc2qpjqsa5qTuTQ4bNoyRkwEOssPGHRCy30uA54scRBGi2ajBOgJVEKDj
324VtlcJZlYjVwIlb8UXR10xYV+GNM6/ek1lYtvv+h1HCoUtZoYdAjKKUw4MP50eZZt4g5rBya/+
ucoz6tAyPv/9E0iZV60onEP6fBM1yUMFRyX4PJ2UaBPKtUKiTj/F+7dMsy1BbzmPf5EHaZHNgFTS
odbYXXTG2tQTjN4oZAWC38YxCQRnxDxuwZE9rDGNHicTiuxRH8a5jl/Wop6jl3aoXpuCFljAR3F4
cQPxIXXkhED+dO/7iOs4cbQFMuF0wYrxF03I+4HBleD8pu0lb1xFeTJtf279M8VrTMJzXM7EPSKQ
XWvMFMXLHzKleekn9vdP5eO3FEkNOsQ58QOS/vQmyM8+Dq8bWDYxuhTCa1dNmhykKLROeO34SyrF
eajOwyZdfcXCiY1RCaDWv39sNHKKNUf67/vegD06AlZ2rwgntHsjCgEbytL4c5I0qmLruSduuTFc
pylCfUZQzNw3iOQEVOJM9gKYfIouLd60ez8rin9JNzVEJyT37efEqBbKg+Q9KH/3wNR0ReSlAdjO
tST1EdCoz6VWEjDcs8cTYRFHBHMBrYVvs783OsYdxgSpdVqGaxbFB502RGXBr8ShImEduR8djGwq
T449Ri0JNIOa1pTszfpUsWdqr+8duAzxFskkBHnibKhXYUFfr09aPNqQVUGKeba76Hls+a9NyQxE
+G2+112oTYn2k4ZGK3AvBjS0RTmH1gJSbeYN8ImHislTT+QmfjYgTHxJ9GYL8JtOu5vjBpZiMZvN
UFjocmuI7XiRHzYCKbkqlVWUvxplaNIAPq3q6gAFYA93neHWNKYzWmVPSMXuOfM5oeu/Zx4VxiMN
Nwn+p8jj3tAx9vCkCIRPi/nBFqmQmMR6u3hTNO5ajjmTsFpleSB2jzUtGtXZVpCZ+R6g7bRCMb17
bpsb2OOD/voWz5+v4Vdup9i65tVEeaMMHkoBinak2RJxty9p4qMMCfxbHG+j4nwTh9gQEFEUmGVA
NLaX8HPk3JlE5l+MSjQqfVaaaL5COkIyAWbGYVpAQ2YE9lg1oxMjDGFFRNGJHvEGQulPwkFujvUj
FbbtKyyBmV7tSexvz5hjSS71wE4te5DjLgOZk9DNHPBbD/MN8+oBB1lyotPA5UagJZYT0bOhA2WF
bBxqxkkFavkDibOLqJCPdw6fo282u60QUx6yDuYlRidQpEU2tnhyBj44RYHamLlDResB82eJsetE
FVjBvsxx0FWHhY+nujVXFN7tjKw5IYgT7pBJ3Y4s7Kmg3Vgze9Nw7y5J1OFKKLGTbeahFyzDpGqq
496rFQBTCiQTxEfHjXUFVzPlGhcBnNme/ntKEFTx5X5wME+dcB8GzB+dzdfLzIrVkAsTqJgnC3ik
Eehu5Jku3iBGzyhs/QQhqCact9SZJZXoAf9BQ9e+X6s/VY75+3c65+uHh5X3ilQXpKzne39m4dR+
FvYYF8SKI62xIcDFjzbOXi09vdIkCd+YaDzplwaQ73qQxHoap7SBZKSw27LzKuDGe0P4c82ykwsn
DEtT8k3oYohOHD8i6/PefTP4IOM2KphYFUgpJ+kIHKWJ2flyiHXA7lWvnehOJogzh8adiGKCLIKi
R3b+gKf7Y2fz4kJvz+ne8vzfinDf7F4jEnHPbbiGVTCHTihsE/jYL3EEMOsFqSABBTh6bhZyq2jG
3MvNTHXSdJFmKZonF8mFyLxiU0ss11svEHHgFFCIk709a+KhzeVVh9qpe54qv8OSOE7sdOplkp2U
q2otDyr9ao0s74z/duwBnhvEOv3UsF0CPRFio0HYwszddU42Ydvj852sXQOYPDjni8mq11g4thR1
toNjud91qRsulWoOrvvB+PFndsX9DAzqVO3M6vM0cDlIJMxi6muOu3N0Z39o7jcpEUICrEncVZsi
BELxPBydtP/tqhJRanRKKLgbkLKLxpuI6nTv698YEJ3WTMiU72RIrolQVmJ57f3kRxvkWpBfJo5i
tnTAJaDv7DNt1of7TS7gpQV+nKoQlIA9CVLKFjg+KLbU9AYOfZN4c97s2RP/kgkOsOVWX1KzPZpS
E0xH8dqqQbPH5GpOZv9enJ2RXvfDLzxooGdE23M+oqUjM/xFIXNOc8Tac1NUtWPSf9LHTdEbk20M
8hbs78xPbNuNI+s3DoVpDoRaAvXkCduT/F1yGWw+2kvOEXAtgA9BypsfSmxOOMnXrQwpFEi7Bgi9
+95un994vxsvAWEB348uKfSYoRL4HircMQWwb/cZt5/ADnMXli9yZLYf3Bj0ipK2jWmFfBMXdHx9
ktl695c86cS7xOB9Bv53y90A1bwf2WRaI9wv3VGn2i+Es9pUJ8BdWp7BMZQjHX4UL0Cp0Cu7nw3C
LLuldpob2/qJn+KDUPeKeRunMYObJM/VgjJbwuNv/Fgfq/Ir0gfwsvVZ1jMLsF4j3WHeebd8kTQP
PIt5/Uy83myozur2ftpeZ0g+XG1SHiBBReeswKQajqhxJdjK0mBcKrpMm4b5ofV8CpCEsVJDde7V
CYBqWlYftExLNMgkScRavztNnYAXTSfLe45Uk8BN1JNkGPJV0JMNyAr0qqe6dsC8AjGhAQyz91Pu
AweJcu2T0Qtl1xzhlmJ9ZhyRTPaKLMpAHmhBD5QZP1aeNFoi+KEBKUB/r4lFfkpD9dbBa1EBrr96
3HH3mm2v/ULS7nrsY0Sx9f2Zt7E7cH0qUG8amroC31IMHTZrgyMk6YCtppbLjB4rNUzyibLcwgzZ
Cb0o+/2AIskvCTckrryidkFIIvEbIldzKLa6ZJ/S7m1Bywf2ZQYgCJY3tOpC4o++yjBrP9dxPC2J
9eX1rtVB9ODaFjosQVyWgYLFn8HzugjhPOans3iuoXQqWRTbw9VRdJTAbN718jRqMXw8/XoW9et0
zyWOhG0w7Y0Wf/+sKXMFLpGe/mTYxJPIn+VlkbZx/OD77hsOuXaHIn4VlHfNSBc/1HlcOlGsjy/s
pCJS4ldQrFvySjOg5LJz7dD6sBd6ERKcOAXlMnzkuV17nGL4zCyz17FRVwm4/NoqUvb05i3Igb7M
VuPXTny/cl68SKdUtf37l8xjMqVpA3dSqIMx17hx9YtczAaeiCyq3p18o6+dC0WkmfPZFKnjNclx
lObm9zy8k/zZxBAw+bHEYC68WfpBGZCWxmy9D7t2ze9GiejX0Z3ih10II6yaCOQbgZtyu3Bxvj4b
0nuPnvlZZe8dPIlYJQvpEAwYjF7KcMWzj2QpJABdeLH/ot9xkJVEQcC+j+qy9jUVhzyqDCn75fFq
/Ap8BhBH5TNNKgPUwc70K/VN5vf++6dj5HFJEPFSPCX0NXJRno2A7lj7WU1VhXxnpNSrxCY6CcIR
5GjC/O4rxjvmxpBaba8p8lvjq1048a3+/XPV7EwXbXgsSJHQSJmgLiGTDv0Wr1RgyARlX758HJlG
C5XJvKxWSn5deuJkVoqM8DtXxl9dVyvpMwL5dIuCJMGybno9oBfzAVAONQSz028YmVCmKgamWCv8
KNlXMyqb/QwuuJ6r43QNJIwZIlQINnbqZE3xNw3IIYCMCxj51sszm1+Oaz+xFsWPsODJ6fFWtQgv
o29FQDssdA/MOGnSqP3P9ohJKhKD47mu+zMSYbyTgFo2UNstZhd77Tm9r4w2JhxhJuoKeo+2JgZZ
6RbkS28KTolStA5jaT06pqe7LnQzpTQuimshsVqkOwj59+8K0gUf4DGV54Vrh42l242dStSzEId2
gl9Iudypfqx5+KLX6lIjesBpkl7s4JVxU8lXQl+6yKJgAvp//8hyS1h6z97HB/7SdNW+SScGn1/Q
TkJ08crhpMt+5coihk0TyJC0ykzvZdnGX7ivxnRLd5OEifOEuyBRli+GJNueHy+Xsa9ru57KD9c0
UYKX5Dfv1ofdLWzVfBIHwiFvzPZtPIYjzALa06tM++9GB4xRE2qjAarhwVjLpjTQZouAN/eiY4KG
0IxQpdk9aD8j2LsemzJZs3406i+UtL3SrjBO3TQaKZSlvwKCG9Tz5fWfe1UYjLN852wlABNq0AGI
w8dmiphHNRZzdueiuyXJ9FlZGJaeLSPtntTi5WWhwJDOt9O38EqNMbgrAzPrv59oJdgqmW+MJZbS
qpIYgyzzNWqKLHvqQk31Iot7n+ZCs1DPRgkf6BIOBigYUSrPCgFAcQGvIeiFrJQ10+DXRX84IlHg
2Jb3BiwE0FjDkEOhTe2+eryzTxqB2SGKIi28VO/chAolHJqA8GXV0RiKalgG8xSJt5LCr8trSWU8
YnZlLdo1KYp9zRxj6MLChnY26hPRBVxHRs21vXql2TKASlYb4TuA/QZf8THh79V01UoJazIIibuz
mdo2WduirYZPBgSpY+btZVZa3sLrtQ2/HTint2VCe1jeO4cqUvt3wDFlrOoYIq9MA6MXbR0h16gX
7I0aREWs9/ywJ08Qsx9Vc/otmeBQSzV2M9Vbnm94+J7wR4KJNNTg75SXR8DEDAQzrfEC2ZnZgAut
j8mHUkkcyQN/KBeEZx8uuz7CUPnbSYinMhDnl6L1k3En5AnBF9RV0LLBKQzTTjplBgkS+Q76VK2h
90LCDiQ0vxW0c+fLFnE1xzrlDlGgB1SRwMpRptvgocN3Rs8xvIP0Y+4mJF0iiTSrdYUFK4xnQFzu
hbPsYwPePg/ohcBa5GEjM+RC1iXSgw3Y3kW7KNFI1mOhNWW8Eveazfgg52qrmymxyql/AnggoHv/
ArGpM9kdsvM8PAo4EHC5X0SgBD07cNthknwsHzzTcxaOlyuDoTRyYG8FfYktQA0zYcm2UsAXyBjO
FIxe+BMybkLGjkTDp/RMaJGaty1f5KNHXzQjwT/nIvCQ6qfPReGs5pYew+qtGR86GHgegakTxm4+
xoo4aLdNo8Kn5i0vkdIk0RvUowEXs71QjymAplBY93u2dicorAyJmLivSWV/q/E1EggMGBe7oI2d
oQnO1PGue3yFOgVjF7WxDDbBm9rDExzAVOJRFuwFU4OneE3q8Yq+zoSimKwjRHETlwiSE8mmvqhH
OcZkONi9G8Kbr0xJ0QQDxAfRUQ8CmGWEx3iYNEYoVuhNpyUtyJpQhnQdaf3beGkwXNbfsG/Wf6MM
GQ8IYqvj4wENwX4X23RGU5ZzY4/YhKXkjmYDDDs4AfoRyuBmrDIJU594jQ2O+Tl2SJ3fyTvM6afr
eqLzwB+418VXAgF9Q99MHaaEsuEt9OTjbDUijEor7NcSmQBLkU2mLqyzpLbQ3bihbZGdF53OyErW
7omzniqBwYoKFMUDfgsPDvgDi+nBTEo5lk6PlPl2HPEbTLbMOBJOS0xBVEYfM2L9WLBei8p2qgb0
zp/DleWsYNJPKtXrc0jAtaXG2cKimMEbSTwNNsO9DJ5pGC5YaMlIjJUlVFrYjUSDFfbE2g0398cy
FFQ1mb0dftPqdkoiE346gGrWWPU6QWCGfgOTM4Wis029UoFYV6TwYZ+siHp1F886iq0e7405+Mbj
sfjaB9uC84l5L6pVDpnAiQkYb9AToYLug31R7NDiaEPfNVaK7DiTJIc+MNx/jdHoDDqZdp4Ld9Om
Y0Z4wZCgIFm5qOlKG2R4Xc6Ip/StIaALNr0kx50aKWbdkOkCzlDbuFxSq4upAtNb9NqcK8kqI+ho
d4YhGgDOKR4OiS2Cq+lb427yTB1//wRPndxkQ1VaID0V9oBAL/06Gt4oIBbIbzolAl0jW/apShFR
Xq3dH5niigKeNFBOU4LfWWyfoQwQPZA+oPYNg7RMl0KaLWLmWijVksa5BkmJJwPEdFgl4b8sLlhE
ICrrB4mRCEVamtWT3ktb+uZF/KohEoqXv3/sUVLMsPr6AtXSYTMZXQfEFNuKw+NZ3LRDp00OaE34
asJGq8+kYvELq5iQ5zcm/9HTtDV9/TnSPDjBXHhvmfwf3mEVcVICnEQLslPAb0iBBr9bFh6c/lPi
DBcAf1HP/mJi4vBSxOR29DGUySOPfQtGKfDP//7hxG9qkZTZi4qNFce66yAjlvqLBHEuIIXLxvhY
85fMvIckuBR5+3xl/feDGe3IDExi/HxL1orBDrziAHEVmFQhU/9aDn/T7n380Es69u2jKVDkiZD3
JJUpOTyCvMqDmrEjVLqyZiPsnEqBl36s12HHObB6Q4B2oxAgnqSHMmpL/fTzAiAlQd+rEolJLjF2
yiqJ7Vz2ItPmDDtsiZrtosZxD+k224IQxdkiikT1rJgHAnoB6P3JdVccJZlUuNuyORTsNc2VJjj7
HUHo6spnKh3STLYdyB9D5IK/eG6e2TOLp9g63Ry1K03beK9/a/MzcqnVh5FQqfq3yHlpLsv59b7f
AKPBpyKeuGE01YJjvC5A8rt/vJLdUEKcVuCLbjRTn5Y5yfKAAaPX8NmH9921PJnXY1c2AXAJTdfb
upDPi3ntBIobh5YPp6DqPzddyk34IFi8JUeD4BMypYyJ8uv+gDqGAHOhro58LKKeSPJ4Ud8xLlbG
7yqiqySvNgTOF61P54J6F7qs5enPwsJbzCdb9XeNPDQ0c4hHRF5RTW/137/0+/B5jCcfIKR9Lq1b
dZGjjqp8r+kowDZxlCvTEIo/wa/UYHf1QBxE57F7yY0thOzxNFCtPVOG2HKgb8zPE15AE/aLS/3s
UJgfXKrOgIwngtTZldcmpxXm1sdcDxOFE9mM0Qma4riYsnnlpy2LMS9X9fkRlOzvH7oPy8b87gVF
3Pqo14ro5MMlvhc07ACrCYawVghKSgVIDRqLLHTtJJVozh5Iq8rN8UVh+pHqn7EjGeBZ3HbBiaov
hEmzthFX/Rf0CCLq9/I4aonpIdTOKmO1bg8Vn0G3Cw/c0Xv5bWPgkkwUHfkaredD/4jg0+TY6Eqt
waVZeE8NLVgayiTKwao/T2Fg3nmFhI3YnIdDz6ENn9XUl9qaje2X8fqGBKE02r/+RG49aA3g9amm
rU1tbW7oQUUB0yv28NlVbBP9x5kARaZ5SFfqG73g9fukSyA814FinfCdnqMHFIHW3sJ0FOoprEDf
vhcwWSXdLLrUvQMqJTnkm2x/ahC3ChoY7xTBYfk1JVq0an0BEVxUMN8iYObEny6/TLX3DOAzGOv8
718NWXtqR/HX9tvzhxAZLkGGSn+BeRGC11UvkXU9ZuU+kErGFJOrNFYBiu33S+hOFCGEUe0motD7
He+Avl3CGcH8y4dI4buSM7m8WLtAqseRRIKgYT/4fGfywj/LaByeAA2hTDnDNK6drSc24EUh44Mu
9ZTtATiED+reZrzv+VrqUJI0/0wzuSqyb6nCnVmVFmb0fU+XF6YMS9ViWhoBqo+txypMrOv4F+SF
JOUAyMCBL/zYBkOr4XBcIB7uwQ7TiXqi1Y5MfATR9vqyewlwdTekuLTjhux9SsfgGvCYYPVfUgDX
D2PnI46Op/737/PMnqGvRtTQvAN5TYR9I+2Zysatcs8w5q4BusQGMoiez2QSZfhivgZqVFooYzD7
s/Kbb4KuyLQN3e5KxVdvloVLqkn49nj4Suqfo3pulh8aBMbQ5jaXhZJFtYfZ/W5wRH+ddkl3OdGF
HL4DJ1U1hESkEgQy+DREC0yG4h+Dp4z+JL/NrXq+yLej9tpwUV74X90apfB6814OXls5+K29S/TQ
9/yNghL6xvsb+W85z0CfogtPqKFJxx2c3FWhfYuqUtbTgzqHs/XneW02oWszi4EbU5fTNjLlDR9p
u66c7ps4wuaqsWu+KBftCZLRvJaX5DyI5F2gclPu4+c3nrUSB5Pim7mbSKwgZjMidp/+eH/scjjH
RGOg0t5qhJws3tsiAr+o1WFAXuBEbk0cY/wyV7Ovtjk2XmmPkUlYVq7MUvHR4upeJZM3mrfvGpFI
FcOE7cejf6e393E4tYr9KWOzyQCpws/qg61Xf7woLlOh0lN7qLnyKm+MSaAGNFAw3GJZFFBscm+i
XUD8XdLgnIDe7XybuwTQSij6xZtU/f07McdMpguTHmYnlUSnDMmZFOc4KnpsnKcXJ90BrlUjLfNp
4jV7TvxrLwqNMw6ewJ8Yq4YdbP7WOFIB9668yioUGqKLS5GXaEOXfjrujH2gzyk2cMiYIybir/DU
7HUfHWWIj+EtJhJnbPe+ClvnmHZ0St2mVaBvo1+8na9P6H4wDlbWU6eTjc3KErYdJBBLvFl7XH/5
nKkOhZ2Zk/Yt+hV8xkjQ8ZQcd0nkaxlA1JUG9++fGCRHx/eEJXHhl9xHCvlR8uDGR/fsB25gpUkL
JDEpUGeEfdWVcFzAleY1oOWjtRq9Nq/leWQii0AVcOfgBQbl0FmFsA/jUvpo6r0Ix8rj4t0oNc2d
S322lyA1+GdMZn5Mfm+nnTFFVsPlTRfR5HWo8v+H1fz9A1Ht6WhzBb6GgEnu+kiU8xhjcXVkOYyf
zf89F7dHZPUQumD4QIEDs0+swYnj4dAOY7jWJjmk8H6LfePilDWOD3VzHJUjGztuEKdacyCVtEQF
yz3W4H6Z1TixURWKMwkAfyNhaIZE6+xaOYnKMciodyXgp5nRJtXgEjovONCC3LUhTzKsXKmxph52
UX/xxkvACDQJdXQ4bIo6pHGzYzD0ZlvCDiz4knpQgLn8df7+DUw4nXuBat+MJfQ9OAP/NWCB0y2V
M/iTVfLTgiktmCJxWiYaXUd6h2QpIfDVNcRQM2Cgh827fOKdKCdhRPm4deUxo8YZ4g7Jzd3SdjBc
1ioLi2/lqFDtyp6tKCaO1L3GSX9hPVoHV4hjrDelibvO9zvOC5CqKvAT7VJyLuvtS4RkHvUqtlPS
B52UFciZtv70zd6RcG2caCq819GETcCqcasJY8I7Afvh4k13L8n7+1eMi4zLgApC47U4fQfyMSQk
nsTpgw3GxCgPHmmvL1MCXXGBDk2QRnFeV7aA/h1T0XQkpJCGxpqpESh57k9qMMjX4A4oFHbxB/lA
hUsvnsqx63NZzMvxlix0QMuPYDRv1/xQ2PU9tjyWaVAcHN5nOJR6RNcYkKrdoSrJfQ0ezMXf7FL3
qojVOm0ENSeT4KxYTviLedZ3BUMdzpMLI16oMbX26JudHLw8zp/Mkm7GHrIBDRqIY5IAigPJB7PX
s0/XU/pM0mTDOwPgM3yLiLuofajxoJF+fbBOCEXFq9iftkRjYc9t6NjZCupNwBfuikUNozbF56v+
N1rw99J4yN7Ic1lGt/q8ujPcxEJ1mxOrzYII6OaUumNxfMVZMDdyzoJ5lWdFgHnKs+FyCiSOfWJo
xaNTTEVDFtOz7GzyrtoKNK/CLPlDuZwjEJzUoJpaVc5vNj/jE8jQeNFh9GqOcbyratT8xEaiOOIR
BS3a4loUGyIRPlCs3zkjpm/tyAb+UK6iVYZkYn3O+9N5ymHaGJ7k8YM+hU4cjjAywAhpY5wp6jX4
gakoB2lZ1u72xjOb8+e7Vg3jaOtDsk0BD7DqRxZyjwOtQfP7sS0lIS5kqSMtfgh9ggfgC/+NHaSE
LG1aENeRyeVHeGc4uAIQErmu0KyHVulLZzY0Anmu3U6FTdlee2cqLIbSYu25v0xaBo3w/fv3dpxZ
EqHQEXC7+/q9pX0Rz3C+R9oVIzMTVo5Nv+egPQ1ERuMxmTpVWH7kG0zcb9V+xjhhP/Kq3ZWswKyn
sESOxfF1Ip8qWSFTU50rdGT05QhDLIF42BUo5SiitTjxsJT0oTRtR8ACSR3vnlvk3+ShVpiEI+SB
dmPwcX2xLlXwoyO5hraZSwlXVqkM3+VWdgZYO9XIucrz3iH9JFHgRkxdrZ3vJKG6VGqSZTjC49yh
ANXI1OgmmcKh2aQIH8IZG/d776VbXWhYE6M1oS8yrX0VA9QNmGUWW88R0YgzqtJZA4N6adI5xOXg
/lfR6MF6Yag+2cwDHIDO+sRNGVvf9VWyPt1syiVYLMp+31UC8xgpx8W/NGeU1h5oSGALnHLX48Sh
isoVwJZd1OqDSND24cmdfp8wpFqvD2Gl3WKOXFWiwssT1eMgqc39jBtIW6I9sgoO6dir2kx6DvHC
HtWyJxH279+lNdmY9QR0STDhSG1dgTnkY6pNf9ZhT4Bl6t9OGslA9UIqEdktwsOmkxvWk54pzq21
OyXm/VL+Zd1vPOeXxHS/J+71Eo5pO/C4ULwFt++snOqh8PaFNg7ioI0FD9UQ1GCXJ4oznIISiags
htQxjp26kQ08y6kXc/IyQjph/q72//ZhiQczaMfPYPlkLwZtXm9G2MS6e4Q/yQMpXLfvmonUwKRO
JUBjJ49W683hXR1CJdnXwn5ZMbGpWYucgWTTBw7TuD6Eb9dz0pqQluz6jWKw8dvzWbQjd+EreQp1
gSIOcGPJxbyDq3gFpF3HjeSPlIX4UtVbvD7rD6OPcTRqX7xCpqPCg7fFST168K3umFt2YIm+eMSl
Gow8qkE0lHR+j80uu/diI/g5nKJfSAtCnu1vra/N7bLb/EimoUv7rmatWd7G2s1vdlg1gIiqtFe0
LBBicQJ38jGKTdwWBYgFSJUhXaiZcSFqBP9BO+5Kbh0TADLCMxN9ewgn3AApdVg7zjvPae8Ya+pN
BfMjmQ26UHX30yBls/P1vRf7vLWU0xCKabXYj4MNfq0uzH09Y6ru1SQZJXVoyoxeYv1XTOpKMFik
v6b2Q0ZbYU/AdKKnhai6ArYkHXmlNY4kCQM4mmF2k1rfAnuF4/EYkvFVarE0rkd1RZ6bJ3EI4ZNj
rtnafNm1M5DwpPEnNaFsf5L3s5qYqJSgkCoBr0N5rNEnnaRxj1o9Ftnws4nX4RXEPBC3JLkoBEUS
c7au7X5HmvDyHCdWrlUv2AfKAe4Um0Awbg4DhsnTDdKfygs1iPdo6BIO1GnauRKJHq+ss4/aSjL/
rZSMT1cHPg9Z38HF/Cu4V77W1/0UFLc66aGsQuJQ+Kfs3IZJUH/qIr/GbUUrZn9ANc+7ArRfGwMl
vmPS1mQ6aCbmOx6CMAx9/zmBgKf9/TukJl1cMlgAqmpa1z26DCqo2p5L51ib1ywClRy7+ft89W+P
+PYN7pf3eQdmA704GYF8w52Y0v0xq3e/gdJgkzk9Iko8wQ7xoJKKKKOW0LPpavXP4erDS8xWIRTc
GUkH8xSpVEYEhZScg0sr7Bxw3S8pK21t9d611Nho0jK75B7l5jG/40qoxojcyCuBD5FG4nUPCP4U
kRY2cmnPp3Ok9XOrKOJtQajca4n5X03u/9b8TD7AOExkrRlnfqvJmn0jHWScv4NUCwtkAKOhZQHU
UAw/qvEw2J2NZT1T7xZT5/dZJHdB55frvXsHjN6lv9D3xWWeH/asjr6RThsAgfoQ884y76Pj2TCq
yG/N2N/ozJQL6cQ1DF+iSvhjDvYxzYfYyvErCCT5nlk9LOreiCxMde9gQraIGmWx2QT4e1dkNdmz
q0IjxEnzLo8uJtr8QhOfdkYEBBk3dif7HIjEyQwTkKpquN2xEYUUrtfz/m7VLPqG6gskNg4Nl0t9
CNcIMbygYaQWL3tr10DkiIoLWPpZZHlnsnpBcQX4v4Bq7lrH4YaAW8ztBTvgYgH/ooLrJ4dQZ4e/
ngaDZiMG08GHptbwrq8MFIHzqcKdPqV7VW0qDyAeMh0YIV0upRCIBg0WQV9T6gq4FQ6Bo1oB+toP
j+pgWx8tL4bC07T5OVH8WPbou65Tf4xoVSOEOVZ0bzlDvfz9A+HNcjDVSUnb8PavJU93fYRHYwv8
0BX3yh9H71MDjATHnNGYvLPWuxfo3nfJCpYpOhCAoC1XykFg1k8bNLtr1n/C4rVYdLttBIM8kbBj
yKefbHLVxWdhUt1z8TxMJF4NI73hj4bEZDzAtmI6/D7C5PuDpk4GyCFnj+4lJRADDM5HSZnj0fdU
ST0kmtcQQXhpE47jAEECIxfzvjpiZKwjYBBIf0NayLX42L5nj91rl+9V1pD+bRY++9UIlIjG9NPX
j1ZeYYcQIuCA7PlIXJwPx3GJFjRsYOGZyhFr986wtYq6mLKXPpPGrGYEuIxlJSKzJEzW9xSYD+wC
EzBZMCC+hcld9Ac/6bX9KE2D6tGiTZdSvNvOUXfJSVii28VGWmQ2OBqRm8d7nrbmSAvSNdBd+WKf
mXzXqQnuuk3C4oy1OzALYEyYtDpWDjIHV7mWkDpXa8fFWWFyj+RUmLeLBlYGZlb9m85VPp7qmRyC
1l8DTGXiME6XBHwdJoqjomD9YGHy+blr6wU2CbLs9pGn2V4BMUi/wzjvqsuCOYER0ip01tkBXipi
jA0m67cj9jGyPNdGvRw0BP8M9tHsbSuZBtehuTtxmRoSNFS59gjkARtYgJ+srBbpvWbb/bjttlCi
aFO7NqDFOaDVXSkTtW/GkDKpyRftF9Z4ZZLvlGTS+YlAgeBlsA0uvYA7ChMlKUlTkAE9FZU2Uqvc
itePxIgtwDpSm8kauvzm+Bx6XlVXzuhMgrV6kMzKaHFLVXunHfrCHPmekfq9F5N+siUghy8CKMSl
0uZ4AObO3SGdAQmqT3JP5xzV+PbtrDlrh3c5SBfGD35szDdTqAhANa/Tm5ewbmVytiMN+pRg7HWA
RYphHmOtvIZsyeoIHoVByl9HNjHiBzJdjYhNHUlADqRbqCFR4crFrySnZ5K13ePe7S0UjHHXaXRk
oCbHW+XsLD6AYzwYctSmyhY7vjmfJI3K2Ju8z29RzclhO0Cyly2h7H8130ccHQGnrcyLSuwW+Oni
ABj8vt8f6HZtOWgi0MHIqtuQNlrsnpreF7JCp2wdpchgkgNz0oYy9QEf7656fpmI8srPOKJmeO+j
JHp/+MERs78XNI5hXPZJeUyHi5s0SlfvXZrrUHVN55+EdV3TD3p+/VUxx/AuUkPI7zTvP94uUXF7
MxLIlvcsyn/I050cEHFdFh/IPcEy/s1AWtQ94c0x9jawtxL9vuVQiJgtZnVmqYWMUWBRsQb5fr/Q
IeLfP0jb826GgO6roxyJ45Q+VlYKZ3doXgWzPk6QT/kCATQ310Cja1X+CBcb9q4KvIrHHRHEk/39
zO7Tqe5Vr4pDJFYfvR6Fe40jm/ExYMhERSA8WTHB5tPJxhb2TXUulqlLxw9ch425u7ORFw7sK95b
eYf3N8vfVaoaC/pGrDXF0V37buQipicnlcG9CUYYNfyohp3kaGplAfD+ozYBYQcRaVs+/ZnOu4qr
MTZo/r6r5f39+5RWbdKYBJKjKeq2zQjAgE0w30thzLS2R6tmnEI3Zj1Pw5uMrHENnkgnm2KCffQ0
jkYngpu0wP1XueJT7Nhv7NGgcgLhXcZCY6F2SibpRHyQBJe9+2PlQrmr/ttDl5vk86QveTax90cE
fuuHz/B+zteyGwbaLd4jrZmnUZ8Q4UWRTd8Te9uVQt914H+Y1Kl/kuk+t08FmcSETUw6jUMu1Yfr
MXcBjKwxtV6tJ4UC6eM7xmVDHWGKHlPnJOISUi6j5iSNaGhRAfOpUz1FpYU2vaR+dskC4RFs1sRT
Wp9h4RJ3zfLjZieqO+6KRikBMG8fwa0YbZx50nZvv1bSb23DQ2QBRD66T2BLUHi0YGq+eWa0z+LX
xsjXUwI7S420wx96Dlzy7x8gJkDk/pmtsMnurBhf4W8Zs8d/P0sKoiGNTthLLtE54qLYywYq6Rku
tbjLYkYOxCbcU8U8IMcP+u+fS8CDnO2MCMmSh4O5ENqxbcUlVYIR3MVa4VykGY9eMC6yxrTeT3Gb
oPOG2B2Rtj6wysYLE3v1fulof//e0IWW3kuasZEL143dQGB2vh/5TSGt5EAQ5ogY/nUcWeBHgLm8
p1LDfR5ZD+UZsWYCaN97tdKW+/ea7Qrl9DwGFqXsjbMQVZi0JiDRErPfZZcXNoU31b2fxeHnbMBU
Nnjr5HGhCEDuvcIdLYIEuvkWtLTcb+7S97o5/aj/KHHNYjFmcwX86pHsrn1paB4C5nyMmaIrqXz+
OOj1Q0NPH1wYdNWgLjv54cLlAHZo4/4AxtsEFSDrv2AN+JITop8xaz1tSGh0H7/ARUDITUJAh8QT
Mol2z2mDEtEhe5SfBQzxjvzMxv5KoYmZLAGoZeJ/0GBSn/KIavs6OdPpfYfktXHPHau8GuVLU1RM
EG2tZgISeT/4zZgV+BpTl47eoYLFXIP6WNLvfVKYQe/DRJAQbGvNoWUnMZonPtPb5ocEsC2PnQ79
ZxdAGev/qvf0gLaRw23OCa6B3qE8ZS/rU1YEF/r7l4PZWu84CEHYL2w9oTpL4RccZZI2Z9t+0Tb9
gRw7qZrJRemwt1A2AujFIQxcG5Zmd8ZgHIpoUH8A7RY0g5qOg9MX8uVm4mjPbRN237ouERZkl4+c
owl9SnedovgYB38PkpzwVILhagEkBhb0fRHJ7SNs0SdoN9e/IgZ9LAe1ugUyQhE5JO4xT1LJ8ltt
hjr6IgEF4lDcGTacwqcA1zIshf5Gn14LrY75KpnnaAsh8PoWpKDaglFPngJkjM3uNaCTQKKSl/Eh
ICq7UwLMVA+SxOHfYnc39TmA+QzK03TEUklDjZ9KDzJ+CO7UnGxKnicjbGcJNYcf5X3Di3KOgh5T
m9bSvLXg+qNSr47uBEpeleRNwC9racuLmtbtISirSeSR5fIEDEavC2tr5/0Q4TMAZUYXJ9nb4bFx
Fkqs99a2bnyY1D661MT+mHPUF05zX2qWjwDD0zzr59V73jUWPkECSNXyKkBlP3L74WMDxpdgncpc
w6ScrnPYMC9HmuXKBb3AMQfgNfg+l45fIRLlnN3Zv5Ppk+517+NOb7bUmwukxC+NzDu7aRUElI+w
13zapk8n/brg3iuztN6uvlFrdMo3gM6F20fHPC5qLVy63RfUw520bu+TJhJCBEp+EOTHctxVdDSg
W7LTKlgQh03qfRM3xEDLJ509QIfMWJMH1K/WXBQZtbdjTMHImiRnbRJ23rv18cJa4SwCsmx9x8/9
oiP4kNUqGs6kAm3h0mUr2edjyKjT4CqPkOp5p+pI6lDRrzp7XMLAYV4ouKe/fzHzbTyJDJErGCcn
cVUnGyLQROzJ4UvXd+8oXx9TJxvYBqk114V7DSWWyvQT+aScd/xSbP6/dw7reFepGgQLh2O7EFDo
resdDf+XUcNwST6DM158Ei642koajnEtqQgF4NPHkJ5lgfWOeekB2ahVXcbjcgJGyoBmcYDdYIMU
TzHLibf6dXSQLJO9J9OT+LwLNf62TfqlCENICuQEZrCdVou8ULx3nBAmfJoRscQK8fsUMy8duJ70
AkBQDnMk7NwXiDQPAOlCG8gH0HAvGBi+ygrRDXRA7U9gmVmgQ78FXMXisV9/hOaJ64Fn6c6Lm2j4
0eI9mkB+/zQJ7j25k0lhkgNogpIbBZPnzwB1+nORBlf7IoQq16Ta+aYhGzpjMguSeoAjrb9/fpad
kFGRc8XjWwNfGHmhqnsAORMu6Bmui/Ndr9RzE8bSY8yls4gOnHLjIixbH+Beqe30D+l+MsWD8YY/
7QMYdqtIuF7Rk0fuIDB+dWeI4WE31FSsCHhu+6RxELXtYMFb7YxUoElzNJKhSiZd37TYfQNW92tA
+B1WpufvBGzqCASY5ZsJPV+cI2GeXAvst2yILIkCRPvig/3O4pUwxiylz025bITC+mWg1d+FvHg4
BNoLddQV5/DboRY8tRlgWlPs1iAzVAkxoD5UgATizGnrRBycJ/qTCC6edh2QQFsl8zBb8awNh1yE
xsP8frKdPoGrJ1s31Gjcx8oQ6zYwfCe9bNIxAtbiQ+HbUZ+2QCeNC54UR5IHCO9fY+azj256+An4
CPhx3gCX6cVvz9o1mJ+4IXvmuLeU47zuWlxLe2ADugB2KYlIBjMrenYtKl9jD9EzY+WsLEAjg3VK
1IZj13/vt9jkq3Y1To6fgObhQVdiFhYda3oAbhlIiMkWbi50rSrneXJjT8ISOUhYIJT2Ca+Dwb4C
A7QFtruFN927lqT+2vvTmTilj5MBpJlfFQ6o5njtiaeAVNkfyFdqqjoja1xOO4Ns2G09OuqmkokV
3JskLSwxMeEV8PpPxeWLAtLrOnqGsgx74mTJL0kffDc7drqDaETgx6jqXEPMmfNN+zZVaQmEjyld
3PD6FbFZDa4NO8btzibouG/NPs2PQ95HUX3Wt5N6vmFPkJ/WIzz0sK1o2vo5+/Z778wUFgbEoEXi
td0E4RfK3ZEBUjqAPpW228V2zZJLBT/1Q/PxQPTb7Hhbx/tqlCWjQ/38Yd05dNaPRqGkNpJji2wK
a3gVeADQZoR9rKUVAEYay0QwHn215ZbU5ZI19jCg5xcGaLn0V9A7XI468+iGDfRan1rR46t33+XW
TmpQXAnWG+uWiQ61q9R9ks7wm+ysEaTODdFw+aEQWpQd4pO0DhXrdPrTdFM9U4na4t3VuX02lULg
OhEYc5bP7Ax5qWjQOxNoNxzaJnQ6c7dIYxnD1m0ZUlkQBrqxeYeXUw3cAb/5dvEunDjofPt67WTi
NpfWPB0DNhroscvDXa3qh/z9a+oFyE8SAZLa3mG6oZkGYdOPQYOxwncsmX7w9MTkdbSubGOP0Jbw
98wPDrCg3xRfA2EhH22DfjnIgX//DBVE9h9zdM/DGNFQzZCCmVSkMtPt6kFOUOlKv4PBOcavAu/X
wyBem9831tDIwNbyOytQr2bXdDT6+yeiewh905rhLA8qpNrj0DH7NRjQ0s2VnRVQvMZS8LcajdC5
T2ADMZwcJ2HghmtBX0sCvjD7uIT1PuUn4Q5ecowznM+m9ODv7qbmqIWJjb+CZlGRsfI0EknMKV4b
J4LfGi68x8ZtGRUbWGSI0XKQ5AJweXGfDeHt30oedE3LK/IzlFkSvuUGEPsvFOVJaUSQ3rY9/nQX
PB2dFvfcuVHj3nsDt2TshIhMqQ1oi/++8IsD6aNdUCscUbcDRNdhbzDK7fF+GXz0SYsRKACr0Ad0
iAP1IDZr3+xhw6t6GcB4pkyWybpDg91hEsb/zhFQbSlcJxyT5lqumuxbB/qe2FV8td+g3kpHQqsP
tR5LK5lglKhu5op3WmJf9p4QmBprQ2syvEe84P9OXXlbC+dmAlChJ8ib5OECTVu0Z4ZeFQbVzhce
s8lGD9ZzJxZLAhfNpGVjTwaJx81mXDC2tA8e/ag3yKei9Yq3t/GbnemmPpDTTxJ+wihkNIDa5UEa
kv2qnyjQTHYl+7NgyuxeKkX63mPweemIzuvivd/vfN3pQzHEurmf7/46CuREkFL5s0J4JWlPKctN
QZjOSS5wAEb6J5MbpA9Gz9ZQfSh7pxuoZ4JLY+cUPdeDdpMA4kBXCZSUfcMlDyejqpDg5ru5+AKQ
0oOY58PcaU6y3dwN2kFPlTBcBZ8sW4y51C1nxdfuxDPjrox9BVHuAJcoKGa9kxBIvG/Kpoi7tomS
Dv4bc+QzyB7Xi/2kB4XQyPYj3Gl6gz6sm3skc6FAAaMia0BcvFrlm1OzipA8J5WwfJO+znYfrmqO
rEDySUd/4wXRDNgAWNdIsUwqoMRgPpXuVtj2GTsvH1nfHNkQ5IUSdCHok1ppA5SPKZd4m7yJ2XoO
DNTviVNymDb4JMbiAzUyG319WwD7CxrNeaA9YedWAq743OrZPGAkZ5r/O2wHoCDTj6+fT7CWE5GM
CRnmMFM/m1JGRNZDnfn1GTX2JWQjrGu1OCyTsWNOCBQ/8GCYLGYBqU1E6ALAhcOeSOfRkhT5+egM
8/JAqMYr4DcaOg/SlsH1VE5OgU4dSNjUz8ADM4T6edDXT3YANf9VeAGkCnccuHcFfGljZ6toBJq1
Qemx8LZ8kkMtX+zx+tJ6WZ7fK1e1z6UGptQFFcLx+ahmAqXMlC6E3g6S+Erwkpr99DKc/JrvlwgO
+yWVkrsUVhYpzDu31w/VM+tiNzE2xjKp2pPqw6JqB+ILjHjR6OpXzvj1/dQ9L/K18eYScc+BKe08
WhPfAhqGgkv00Pa/7yzNj01A4L8o40fOd5rDDe4naWPUImLijuyDIZnPCUYISVrQN/Yhnf6w9DdM
ZleAP0L3MoHuWhhoZttbXRj/eKPrCwYCGqTrWmEfHBxDuojP7XsftwJ5cUrZf/82kE0hP/sCFORT
MpZuLvlQvJX9OsQJGEREr5PktRV7U3xU4Khs6w40Dtb034qsjUBdp6bJL9F4AyD896oiU2rZ0yPR
UXi7WBgjkCZg6w69q2rjES0CnpNQuS4Bl2ol0ccqmozHXdsUS6SgB3nJlT/Cm4KB11vdj8McKc3w
iP2hJi1+fej53xlerVIRLGkhwvc/l7ufuGcg0lO9Dsb+BRVo99hXxAGSWC2dMpr4fW3okb7XDpNB
jqEJutOLgX2w7kg4RlT5+GQ/2AOa1xFw9oJn7Vx4giPSSOYQ/bUBUb92mDrdNI/0+vH37356kb2d
74JTj35bOmfEiRZkXpNoZDagvj0vJ6mbcFl+oONrJRvOnREmbSgfQemy/jrSVZtAl0CmAIqEf2zC
svZIksi3lyrZt/uKHAEk4Im82G8TZgkLR/dEvaSf+/lfSe+x6yoTbu32l/Tdw+7TIJkkbf2SMRlM
zj2iyTlf/am5T2tpWUwMVfWO8QxMVa3OhGNLvrkpWo/HYZT2FzDopwq1vStB1ceFRq+UJoHMAfNa
oILONJ34OeuBJb9KnsDX2+8gbaa3GRtkkgy1LPt7VFrxjFcWZOg2BLorzmKqM8gLDUVKp6o7D9Zn
JIr9olX37uP/nvhwamp2lil37ZcmHX2/jiGkrZN4gLQU3Mcl+e2tIgCYH+DQN/MCVLPYzYOfhuII
hN7U1wLjBH8OMC8YpDLmo/Lg+Ld3Rjq9dprH1OwS+78XTof6b79cpmoM16NGzLJPqD0ARWtVDfRt
o+bngSIgAD58lQAZoOoe/d013ecquSm7q8ye+KlMpFEbyUY7OQRYxOt5fKl4plwGg/4N9M05sixf
8X2y+r/XUavwJXvaIn4meP74xkoB0iFTUtl1QP3c/79+bzLmn+mgurAxleGQZ525QRijFuCnBhck
tDxP7zqk+Nkp3/xRSYT62ncbopt5LHozhxqvRctRqXeibDkapuRUnpyIqpofSu2o7Q/oR23SGlwb
waka4vTfv+rlr0Qc3pOHNaOEaT+775e/vQNdguqCevMSJJiCCgHoB+EQcJlTPSSuM3BQq5Ic/j3N
i3nCzfphdogPSdbm1hYNbWHqbDaS14fCrPddTbJ0nZ2DH/Sab/SmH4zCnJeHYtKZHrY4JqNn8Lem
KtDeLZBUxzYEwIhkP630Pjn0xz8Boq0xNLweNS5DANjrvJFYo8vWdCcEvbdoEMgeHs3Rh9KIwGxt
X/37/RRjiIgJyW7FrHTG7nTGw+wtP9Rwom22/riOnzJscVo4g6+9M55iKEEhK33jXXks6K/K9Z4o
pwU4tv5WRQPJJ2K+cjklJiyh7zgEbl2H77gkk/76br/rIodvTJW+kqk6wiBV5v7thplHKLpCwd87
BeezeDn1AuPtl5H6d44SEWcTZm75ibQBpxzOYudPxnjk329dVTBvaz9vr4c4COwF77YY3uEeBuBM
QKK1v/3nUP9vNblPbdvMfcCtXM1diEJlU15KqKi4Hl6w9uhBGtQr7LmCjsEYGHPQm5RuIvsFJ/mh
jGa9SZBbJX5YuN/f+khH61ym+0tAtjq8WlcgRYuk9F4k1by07sgC0qMdEA2XP7oeENPyig43vYKv
0XJzqqABOWsffF0Pg783/ebNovx99OecEqrQI5uKUT7MXdfDQTbkZS60I9xJ7OUu0JMH6OEoEYrH
pP0F8guRkiA75FDRdDW4tu9YutUKV6ehW77Gc36aepk9Pw6mLH5ywzmQgFZyGPPYZMoPuTmYaxWj
ju881Rz8NutS2JkBUV4gUf/tSjA9YbjEA5z1vrGn/hLU5BNaS0rMTw7ySto8aKrltGl0UsLUEnoZ
COoTbTMweR5KqFFK4TcUs2kGqY1/In/CJP9vWfgjFDySJuwlrY7Mv0Ujdoi/3X0+jXQsenG1Mfn5
KpktFMf/7VX4Evt5TaZVLWdJFdC/HYjIIQJ0EZViR7cdJXevD/SeR5/A2HJkAd+TI55vAGJyN1IB
aZ+LulZMYKRbK8y8voRu7FZ9vnBDWYA+dTW5Yw5vbgBygqsnQXyCyi7/cz7iztC/t16GFTKhyEHm
DDJvETgSyBOIPpCfCGSZdLZAUWlKaP7NGOUUPPPPfQR/pnZpJeFqRDK4xxzI1lLd15hM3ksF5fg5
ClCd2YE4/KrmwnK0w7cIeQvIkNI2B0JYkGWWZVGZayfI/rFgBt6GYHuwdb5XDToAJZa+2YNYB6nd
C3t9cpLxyeXM3V6JMG3FNTJrW0msW762jhpQTQgzxnP+LFlke5tbXIwbBkrTJbtTAVhB5EQWg0Lr
i+QKJ8mElEUmN5BGqkL114BWkuUEoIFgaM3+3hYOg1e+UmjAeq8u+80tedxr4LW35APcsiCbeFTq
aaGiAyF+UFMa/Zvzuxo0WqnDrI/CQoWm4T8fIj2BvhmQgEhxrh36T3CrcCVKlWRVmVkqqN673NoW
P/Pi/Ge7NhYAuHBKxNptZFdfmIJeE31geUHCuBRshvLfP8qLt3QnOFs4tEcT/moPEPM3kB4c5Pt5
U4OVoOjQyD5ziFHGJ8B8Cvub774CKYcMB5+6YL+IcKeEFaRdrV+lLSPTbXvCfbeKBCtuEL3goH7j
5wRCkH7j3XIzGREjeSNwUqAgDtDm7tflPd/dritFwgnH3N/O6WpzTJNb5cnNDMzNKdjO377LtD9v
Exbc88z0sww5Y8B6TCx4UNxPe6DTgAddsedoaqh+FRJ3KUz+CIhr2bwsXaKio291IdSvGSB9Rnyn
hfLUEOdNVjSaO/teXSRE1P0IRKaM2SAalQqbwZLf8acPaTQ8lMED7YbuiKzFwWV2X1iRjCGvvEPv
sDAyehWAD4NNJilHQ6nuPXr8kmMLZ4TU/M8F1F+bs2xqizAhgUn6Nkgfmza8Z//lY5mdLPMgTbHS
tEbs1fRGqHs58/utNNqMoPQ8zRvBivnr/bTV1adqED69/0lKN4gVongG4AtXkOpt9ngc2lXa9beo
I4uEPlLuSWXKqAfbHymMaSKZegBK6chn9XpM6FlQ5ZcA7ZCU53x0LjrdPZMDwk+DILKHh7xNgLo0
Udl0ePhpgEPp9iIXm4hnwgHZBjge9CTNIxOhe4wCGbIqYfHHkiXY0j/lsXnKn2eV3u1RtK9+Fuan
VqaQEXIGt2gL7jQhuvPesU6eshht1EdrBQwVS4KU5Dt/+km61fDHZK/QtGuP+ZsbGyr5O2nLkTJD
syYeA6O3Cf0U8Xw6x2ZdBUkj899v4Gmh4tSE46d4bNLwNs5gFVwnz+IR6Qny7Ajlb401O0SwBNwE
imTHy3dw7DDUonu0kQoXEhe3/ot+s2dYtpwo4d7yrB6+x5++uzhDw28No6dfLhZPSbE+/N8/XWgo
myhQPOSStP1SPzP9vfOpHHN8oBxi2RkOwk344fCUl9a3jzvrK1vLNHuHuEw5sPXsvEpVw6Lj4E6D
dLXOKiwGT6O6paxgKZcuWi3oWgcfZzrEB+EWMp8dTSbJMxkt+ElhUIfg2yoqgi2t/VBPfqwM87cu
wVqbx+vdPAkFvcPzACDUUpWWahj+Ed5B0+FpzmDf1qaOn75J2i3kk0WchfETCONYP7a0Nqdw2Cct
/61eKOHTWaV5eDPbeaVZ6b7ccsdh05DuV9zdxeCyntZL6fwcMl9Wl6I9gQizyUOpNDo09eZTV59V
7rEZf08wqGENl28z3eWbcKnoecGW2Sw9ZW9j+eKf5hhGHo+WiFMZqeUpcqTSQfi+zoGxoxbKpxOo
HLj2BoaAA34g/N4F0AYWSe8kx2EXFG7bTh+PYLyyH2c+ynZSq/7SkdttzEQiOUbKly6Lt0cdyTfH
Qj8dv/DCPkCdQpZAnnB+JMxUFv4xUp6Ol6rF21cdXhAnSbX9tCTNMMeCwR+lbGifcWeAKq4229/o
/TzwQCKqU4Z/OyGednl/8cdMNWqm7Q1cE/WoDUYXUzzS6OzC8kzrjXGYTod9h0bLr58NBbRwTOYa
UCRMP2VR1TtdBbAGrs3Pdzyt0Z5KiCVZ3hsU0h+MAXXb3DhDMMSWfIPneO3LQ136kWGrFBIXHk11
vvdn/BtzCC2UI9WX999TUOhdmeNM99uIF8bLXXnM5I1+LaNgMPvh1rfnUfHH5zDWv37G2iVzjjbk
zRytvYlQFUYxRkNOAcwDaK/dfKRXpmZsdcWJDkbp+WwZQ0I/KWWr8HkQeGeQsITNwknLV6HmEgzR
aaRAmM42LYs8yxNUkMJ1W5789y8imETB2IIkWZRCXY1lyt8Pf0kJ3qhwx5KvqaW1vfSMlzBSIs43
942N9EuJ1d/Tx83W9ytcyo6NV38zu1dg2C7c2iuP+um01YV+qKlfRsjlQVMxfy/vLpIpMkWn8Us9
VBWUScYXdYjPkSfFx2m8wcBf4eqGz/U3dyyfr4yHC3wtofY+TPCB7g8UhknOMRbYG8LD3IaTEGJe
g/a8wFiSE+mw4J+y7ZTam3GNmDBMsM/293TFy2uBoTaCPrGbZeHqSIa9jPz09eWzYm2eE4oNV9kF
5CNC7JN05JW/CsTY3qYttU+yhHxKTHj52BcgfNztWebnH+uLgvbVgHLpYG0mvRAI7xnQA/QKW1i4
MX4fZCUHSczEwA/LxIkE5RvHfDHSxGXRKI/UAaSaw8a5MSVyBpsOcvKZGFuxlLtbBkcpPWqH7wjq
vOAVz+OF+uAHnt5cO7Mmjvdpn88pj/1g+ohDxEr+3Ll8CSnEsCJJvJDpAv+1MASZGWZEB/6L5EFO
Qz8z4lKKzjf8bwSl8blfcoaP7YrjkLgtOCJF883s9H//DhKnr9TOqzKRt7OM05xLyY5eU9osMJ5Z
S1N66KzUYekJ7vR0dbM8HEM7sgflX+cyla8t9Cj8A/75c5mPxDCQb86DIWHJ0XWlZJpPinaGMhcJ
ZMFNwWB13JZGd2gwujE5U0LTUUg+RfbMKw+POcUrtPj7DKhl0uA6lFTNAV1oM1AHTvcsPT4llkPa
s53I6z3aR3QIB73Bz/ZC7B4uNLznOqR6QdIXR2Gyh8BZF+JvvgwD4WjIwGTAkDneTCk+gXrtDhBD
IwokPnMw0DxlLKg8kGSZQsdkmDxk3CMzQdDSZFUlsTopsrD+2+9DyDU4nqHApyMYZj6vc4NhwKL4
+8nJ4jAH6UophoKYuLKM41MXElvjS8ZtBQ7BxvAt4ZSCEWY1JRQCfWqEMWVh8KbacFRSBJldughn
DIS827LaC04E9nYNryhUX8xhB5SXn9/qoWgYZM33DclH0vhNcx6B9Ke9U5lFBz67uB6rOFOQ3Ncs
8rIaKZeJ30xmvnqFoYNJYqCrv5OwqDBiAJ1GS/BDlPhBV6YUE0xZHuHfKsqXR3OFPA9R8aA5oT/5
C47zKKE6iEItu+G9vEnXVIFWUWfoWa52mCqJHPnAX8jIXW6+ElOGnuO0B6n92xfbSEZoL3CcGkwf
E3OUOhkqbHbFx0DGDR0sODx1h53VMfFix3YlZO5+KaEFNS6JYtRlYGjBqxlVBsmoYdojXBCCZjbb
eF9HBHCMbY2F8ELoiQgfu0GWOMQPXkUH3RDrDmmoHyZru1rKuEJtpUSvCQrRXiP/5hn1g0X7zaB9
/x6gLPf8lGg2SFJ0zI4hi8zqB2GHL52blkuUPsc7Pcx+KhhI5qj0OHbZuAXe0XXYvMHZcArXi7VY
8EEhrnsMpoyMD/G3L7k1gTO4dGTu85N16FTyMDLnHfWsfGXs4VwpQ6qRuQNT+FiFCYoABywMKv+a
O83YaFdegP1LToPoFj1orDKpk2LEV73hqw8Bhyi7JUxLBZW04GgE/At/4za80zseg7d+K0Dfsn1s
/IR83C4YnYl4EW2ch7BNotWg3fDSrCsJhNWXw9YEtbD1FFr79W4RCEZsHXnEZrjF+BldmiMOYLw5
6YjGH6Y/yPdc1iRBS4LWnL1F28oxXmKNUzyybjQ9Zs3GFOqAA7fY8s64TcXO1QCW2StLc48qYem/
f/BzLffRdszPedhOpymO7nWK22JAZMnqfzUkYQ9hd+yhU0fUmN8jdg/h2uhiMnmVICuDLTC/3WEX
9W9tYbne35OiJCOSh/qOWcJPm8xg7TYQSnVdUIjWGbrh+Lmfyn5J2iatDoign6bPgn6BJRBycled
BlRlQGWFQIbhvU3AEGGewHt9Ln5TZqOTVSemv+TY3w7aeNSALPjzVPQnX/20xLmedYwa4ylFZbyo
KLy7BcL2tw8UnxQ/v3eilVx6VGD2b42IhsOv3ubQWVukxwntIrPhuCzY6JdQ4pEHxyZJEQKr5RVr
KXgwBLoGfYHRe+AnnRcSp3fMAoSlaPl8QxIKCItEC/J+VtRi2vDHMuOc+Oio+XoiCCoOr+h39WwP
yh2TRsjUWq6AvuFT2AZ2UWBPaxYto/by77BS/o3454aiZUXTvJiPXxQWfcg8KL8paQ0WWvetYh3+
zI2bQ5V52kfv40DJtepkuOpnDb3EihdG+biOaWoR6al5f0hO9mYxQcLvbKCx4G9zvNQEw+8QGuPU
O0Z5CmFY/bRnLRVwcKcok1VoWulou/7IaFcRZ4O5Q/jcuj6eRAnoafp0sSmyJVqNzm+JK+Us7PtF
6damSFLFxhyfcYrePucXaMgZPtq5EdLSoYuQ2AtI3nagsn2M2Kuo9m2Uf0AmaT+7e+vIJ3q+XRgf
IwKK496TYPUnfiVCRYgmfvrvn5lO2oMKq0hUsfZiEeWdGS9ZHcUXoWCeJfIgTuvR5LQEej2XL6ge
2zpWbpCWlcNOo4ZMbGfGKqYZMwMaPEgGoymDdKVErP1eKKdDPyfJSrJLfD+KeMtQFryptUKR7yl6
gQ1gmN1kF++HfehirUA6Pg7GM+s8kLP4dvC+99uVn76DkbP5YrVbH4P7fvRJg0OR6M8eDep9Xwez
zM4fgSbFOFu6EZJlCuKOutqQhO3GrLz/+xcvCNs2172kaUMTccyLc1fmUfTbFK4lTtk9nP7qsG6c
2sDvUs31ef95HEg5VLcSF2y/P1AepNcUhMAXbMXluh+uEY61Oq8u+ltycZuxJ+36WTn7+qOL2ea9
FAKBzSCt1I/TdTEf42IXG8VwByyIxcJ9Khonx//9U50Mfu46UcSUck8dN7RrHSoPzVb++0Oub7EV
Fv6tPaKx156ImjlKIl5na75bhNBvY9f5rlMQOCUX/r0t3NKiTPFQz12/UuoK0dn43k/yvRLcOvHN
T6xjRubdv0XnSNImtmAhNrjnp9z/8ovAUXTcTShJntQGUluHv2olBbRq5dPMJYsp+VzXdWpEG5Hi
KknSqsm19evU9g6zSy5ZCFOEH2uQ+ZfIKRG3GxlT2XpQtaDd0EDQNR+oLz+U84pM/W3vS0qlJIZp
QWG6qVj1WoKQmmr0bDWHrVYpDrbHisiXh/mrGoPEruny+cgAtfClFvcrxonlJWhlMrxtqIGmokM7
Wd1Q079zcwgh2enLeesfyhfYQIt1LixArkFtgdUsX3NnYfMMb0AAObwtAXo5nto6MYZaurx89OTT
9urfk18+2XZLRAW3VBh2d5HPst3rNIrzd9Jig6epJ8ScJFX5+BVw8fX3xloXMd1H/9Zpo2/NJ/AD
N6zzRoD6rSVbeXyxadpapO88klV1ReIxy+hdirFuWklK34OUMmU3TulMXJDaxAazXoBE4bp8Prst
fzk7ezv4DMWmGxS0D+kukOn9Bdk+HI4iFMjo4Xv0pydnbTSmZCnPUnKm9fl76h5ThOXfKGcEdZsr
ptIj8lnqgfPnRez3K+0Exv/y/enfEtL112zJKoEN+uDOEDlYpk8FT4wvbUX2NiDV7lWQ9azHuEeS
czcY5BCvMRe8uA0bIxhvOOh7jv1zDkZmDFTKnuRrTbIj6bhnRVNvG1bt5SkFY685UHJXJ+cmvORI
KDqBgX+59zmdzdcZ2Tq3zzJVTRGkao0iLgV3T7Dvg4cy0lhorH1WeLE6lHagFG6aq/034wCqog66
zNKh+zQaVFYRR/gXtbGCZRLfeDc18bwKfX8MPjinS5nGTumBC4wnWU0h+YW6udC0R9bV3xxPBtKi
+o5satYlpjbL97lARBlJMOUbuPYqcxXrBVoUZ/ktRc5dlClO7S219ggUymvG8eqSY9SbcNcYuMwp
HorGH9JHMiw1FR/1HbbDgGc75Sx6znjrRwgU72CrJYkgM/yi1pzIbjPJfFjwAsCZgPohv3BXinoD
hF86ohh3jhTmkHCbfZj66M83I4SzzMzQw0hAxeVDXz7x3YuVhggVg3tUVubHhSDBr/Y4T8iPsE2D
24M7zczxE/7legk5a19YkPqcLgnHmxTLzedr1HbkiKWbRhFT6SwV2iszKV0R73cBOAUT2XeBNThl
8wogB+LLudq3+qzs0PKsrFCeYndPz4s+8aMqkETG/UNkXu547HAgn+FNoG5E4K4VE5b1+uyLiI/8
Jwrf2sQBX6CW9EWgfRGjEr+zk8ZexDtiYuNsXl0oNUA4NP+1JOjvVaU29eaRHV5UIxXpyA6LE1EW
pVzZL3Fwf/sDRslxzYj2fjYpH4WJVGtvyDedCcc0QGoUdZTP0Lopam3kolNvGZvSAsblh/gIbboN
Ql3HBBu5SlZ/QC0gRep+3nnBf+B4yLkx+rHKNzKbNG901o3E82+fkFwEQ/FdvCda9dDHnbI8yQuq
I1x9o0uGP25bS+UGtNvQzZdIB807PPp0d7HHUr7Js4a/uELyJNEpocVmxEaxeko2tfM/LYVp/MZv
thLPfgzdjEw51uySVASys44tpT7KxsJZZ42oOYCBoqD1+svvQv07g9zuPBU7yae2grEb9+Uj24qn
VJYr2IJmeu6lCQxEvqH8V/55PVpgGtFQ9HfkQBQdyqf99G40wn1KnwBtUc6kfGe5PnW7sfL1ib74
gpEOwomECWLtmpcPFuBfjEQT4FnPsf+Y0Z+MMavvhRd3aOrCmxs7frLiUnp/USlFpU4xJEocyZro
kagwTqVpIfws3oQS/S6npp2nHUBlDebLW5NjjOosX6Ay+sXvoLtUWcaeg1hsvV1+WgpxJOIyO8r1
X1jaH32HkC3SSPzr8yvuP1Br3l/DD0Gd1kElVJzzBjciuIL+xggDcxw2IiAqVop33Kk/pOF6Ro7R
3LOWjaw+dnGtYXG3NaSAPHNcW5Wo7TSJgFRnDdi9PGgDvDLUzQUkwxCMVM5jb1Ls3XKGJzBJb5IA
hOsamp/i292UwLrtpnu6cQbo++UUM495JCD8cpvwHUuIPhzdT+PRFJuiE0T05CAOxmxKePZck6yq
k5qw4LrudneuXzAcd/bOEeLJ65XsBe8FWumy/vvnDL66sf6GaZcYI/pCpvPsOALPKxyW9+0kxSbv
QC4Y4gtLtyrIyGIfMZO6slGyJPHZ/RZ/EVYW6Tfgp4uwsU2atcbrHJOuI5W1y7xf9xDtIH/pbBOv
6QmchY9aktRZdtAm0VMlPS7m9ItrNUzv44HRfBZUfQWYnPXrb5IFpt2H4hzpeHTXqmeEAjek3Har
SEOFVftk9W8C9Sy5qsSU89wSnb6ywazU7fhTJry557QGNDj2wHsLs9Efh+pm/6Npey9MiNdWqqB5
h64ognZUU/1O2AhGisIQKWDuDzM3X2R+i5k1DsEcou79LIDf6lVIgxVpf+UBMv+nBLDf6MmT5OT7
1ti937qXpHBmGT5OUt2WpS5XsHqJbLJURnjfNMD8kRf7t+/nGqhT/fVpMEa8b3dzoRUr9Z9x6tzK
kb/vDZOj5nvc7VPrc6brQ7lIK/HLo7nEymLtYK4rcI1YNnqQ89YHeP1zLzEhY7X2ZQFK4W/KqX+E
PQJcSt3xU4UCmx5U3/vqQPx4HHEIdVZ41VE3/yvVtB0Tb0MT6b5dCjDeAFTMT+MGa+y2+X1k49jP
nTJNrz0Wc3SrTtr+fpVIF8lVv1/OZES/nxR4mr5Fu5OofEkBaW0PXk25FZztpUHr9w6Dja3FM65Q
GQ3v13rAKYEDb8il6ryX4pbkElvDJPcwip/B7U6HILEc6NW3X0xfSUTH0QbpIwuzfraCOpiK6ooc
FP7hdVBzR/mqPr3qU211Fgx34rvpkm+0co3+BBSaV91zS0JSqLcoBp/KIzRjA/wWqPPy2DHoMeCb
Tx4Da/5tPTTt0xQXdalE4vek9Ufm8lmJRhIW+eAXbl7Oxw2PDR3kRX5EhxAqqDXIWYPg5g/i6y1m
G4UupF3ojcR2n+vvFQpR7eVCBeddDxHC1+hRAjlvkojt2Kg+GFDdW+QW4Tvo49xNf/sZ+SKaVTOh
ZFP+zeV6OycjP0fk4+KMyvWHBjmn/5rtuisWM4uHvlEVxarzlVmvB5Fz4/noPysuOqt+RtALxmin
X90757uY4i41P5/rQyoUHjoUPsMlm4uMtHCUr+fXH+sRKffWpzJumSHGQ2T9e0I0jsZDMBhoN7Jd
HVgp8ZTqUsVMQSwmhbQ5DSFIShADQ4ZYSqJeQLyXUvJCUe4DoosODP3QGK89nIKAe9gAMbnjQLvV
6LqePNadjORqGCFkebgHvKJZnusey67tdTqRUSPtJrdjnl4WAo7p3xvox8xGxTNRuRL+XNRNi7/Z
06W9Vxqy+wHrzI9jKU6CXbOSWF2wxGcRJvh9h7eyvVFsMUu2HKOWl2B2cQ/ZQL4Q17peX3RBBobP
36rdCu5AXK5Nfjmn1vt4rRP6bTH8l2TsBknDL4+eVGtDiQzcXTQOkesUq0AIKjnwmOj9LTfnB3wx
Jde2/bdaZjJE2yg+4dCzK7aT9Vsfv7+w22oLDAR9hIIz0YIknD6HPEHugsGWP1Buw8WTXI/yyGj9
yxWIH5qAWhAqXsfGZ1+/T+xXKTuKooW2SRSel8NOCkjoWaToQ4wKF7eoSo9ZOKHzClOfdqkERxzT
3Vjfbv2lex4kIzGDjw2TuMSnpson0ZO6BVziGqFXr3f7dJX/1En8eKa4Tc68JI5xEdk4iCVqSrNr
kxgiVVwaAMABuT7zGqvLg8B+kdUP92pbENN5+rVBVRQaKQNAlrCXxxfh13QQXP/OgVABjea1zz50
rYW0sdXoROrDHwGQgz5swDGyPHeuZiUzymu3eHsvJVL9lC3q6/JArBmtpfTVfCrd8pwxVN/LxC3A
HwoTB3LwzQbKW/Opl8HZrISTk4smGvz9Ie/lDFxiKpo3Fu2/Jo0tn5YsjorP17zz/qdrrJD+2xjk
fu3qVMeVJ2W8YMYmwhJm9jeHHVHvwKj0eaW1L+Uhc49FECqOverUAiK8H+jFiN9RCd9ZVaLBwfqc
VknxacrcSjiyXthOjQsn0KC/lcfeW7t5XIRxy/OrBPuzGIhLKMLLs81r5cPwKPKgJDquSjRgWKbt
+PWa1EFIBN/eSWqrS67LHRU0+NtXUfviLjey3nC064ZGxVrgERi1/NoQ6PCrvmvyCW30DnASFcxT
brZg1l+CJv5N9bs6b0WlROscD9HEnAV9ivit/jNj3FceO3EzzVaHLGevCIp2eD02DqY0RucLO6To
TkLY10PVeS9sAqmdapqg5up38zuPzvZvjY51DkK3cAmRLX7EpItPft+MsECmIZwYpEAcvCYMvgRx
afFR+BnjwTUNWf5BTtTg0I8W0oKdrqCkUR+0m1BsFmlHRJVBQbjUtvIqjmBLskgda00xyRtTQQIb
hF+H5xEM2VIMnHziGJwVHebV4lX8WV8wQfGKavz3TzJstn7jDxy+qfdnpIvXO5s4JJruERfrD995
KBwUGa7jVLoii09Jb+4TpjMTANxYXG6tOmTSsxfMEvd//3hZcXlcGXsCI+0OUzTPGBrNeUjPbZRZ
dy2/pjs+Hhzbe/i9GheRK7+DY5045+x5DbMXJvzWO7XUDFCNTLy6b0A7sPhbdx25y/7JQDJCsAEc
nH6FMHx5ecVZRJGXeFnDfr8iomzblBSKYTye1rW4kH9wrYgC7i1pU2YxITF/Ofd5rw08jWvh/24L
JFOJk7Vf+Ir/VvGTRsu33T7TX77KwQMbxPLLkY1syX7MzXsGs7wlcG1l+2OfVr6tbMoWlXs1rlxk
RMyOcgYymmlPKnsshtiK7nmfGT2LAXcdnRjfiM02AjBZyaCXrl6y+m8djMFtk8+3+0GJP+tpKnm/
ANmXLalXRZm7Lr5RzfEot6vYViXwNpqo2EaGv92V2OLocTn9zSuMhPynzv/753GsNiqzFx9GaL6P
SXcvtPEBGT4ebdvbT3OUbXY3wrd+RqJLdvi1XSurXef7bsjQ6tHLX2yHpMcgB4my8eb8Kek5jvdc
zZEtQ9Vz5jl0lJ1gdvbJiI+GlGULoIGNcvbzf1w+Uz0Ec6yqx0hSmylbxtVWYS3whbr6Rth0Yv6H
sLN8dXg6+2hNy7qGrjgRkXjFBSvPE9WrH67vNEcwUWcnAv0Nyd6Hz/37xU6t/Xr1Hv7751rPTJuw
TcM4j/7GB92c1ZMLiLnLDYBU+36hseBoRIkF2xIzA+595ndErxvQtHesOzGnm1ZFsNf9tz6SPNWA
IU5+8g07Xpc+tQouCEcgpyP54B2h4VnnnGG2B6skh3ak9TXV1g3h1cixrVRmUzTg2S3hCQIF5FBm
SvponWlkHs/xdcu8yhz5RnLivIUP/1leme0cmjfm+TO8Im18VC0P1SVlQayklwdxuNlIsuYzq8AB
d7mnkSE8s4r1585Ga0+dcEW28uImEClz0yuEJNQW1K4rTbdMFEEfMYTLd+Py4sFvaOWeAPO8tvff
uyvJbqzUwomBuLih3H+7abauEdvixta/i3xtq6PIRfS3oy5CZ29R6BGgGvbHrTElWaXBqzhfN993
x7+o//5Ns3ix+9k15ORULwSJZZ0ScZn4hkmjdhGKkI36ETvv2wv2iGDFrNoQcSS/Zpnsq30dKUWL
cfyxx+MHCH/vDCQDsT17Zir4bkcXf3dYpfsRa8W0TU2FRTXackqgCogu3mRQF7Tn7D+LSEYOiMfm
YAhPN17MWS7Q3t2KHXM3/Qj9weMBq6Z2ZiUqkf6MFDlQa2qaoE/An02x5M/vZ+Xbwx1OKAtD2E0E
gttvVJQ86dOG+n//LA1GlNsOR422c/V+vqaC5XimjLCR1QxgUXmR2V/RYDICGXWjiEjnxMEBP1+q
4BRPNGiIPKupPCP1z081p+WPrseSYX5qRkNhStEpmu5OlCB1/PTsrWom4tk8Zv8Rb3cgR/lyyapW
W+CkVSyOrWAcUUPR0t9uDlbD0cSludbaVByOWU6LLgHGeyYIZBF5PbhZvL7v3ZdgDnvn3e/Ut1xg
MdQeqJSxJJNmiHfKy5L4NoFaAkhA6z7MDXCIXw1p4/VwKpo0ceP5om8ijq8vkl0pMV68zuaxQB9S
WYHO4iep8VBJTFo12VQhn78VAmXylP2KjzylSzQm2d+d7t0oarXfG2nenhW6kx2V4rviunshth2F
D5RY6//j9IVFbMITZsPqOsdIAFsaNcCCunScCXMuVVepT4r+QGpAALxAABsaZmD/ni8tuf4TNeMg
x0XN15i2EU941ONNXGpZiSJOPD4YvVRnaGXTU9HYMce8OIlvpWpOJpNXoylJuFgqePcem8cyOMYp
ykczByirgiz2WS73VNdfn9wo/b6DC4wQGhhdd7uM/hGI73dD8w/5MHIjTPlIHrzraNn3dmCopZ8D
YB0Iol7anqgZsLBo6JG9wBpSMs0yy3gKktEoLg239fHaCE7cc9+l9V7WVr32tdTpLviwxhPXNlw2
M6UEz4di242vkQaVGWP2oMN5vcVFkJIs7weQPqIPdQzefPdBX10fw9ra1uhdQGPyYsvzGdkJWVSp
5KdJv+/w1z0b0Fo3REv3F6abJUhslvIKTvCUFSh5lmuQhf9u2/n+rfsS4PkPXdw3UunMmWE/IFR3
Ev284LXPkfm6CdfsfrI13LUaOqn4e7Gq+PV+KH4j9J+fRplINtXYRP78MQ6fq00YHzfISlsuFRM5
ztm1ZvuB2K8ImdCXRZ+/CTCoSixfR8wbAuP6ysT/FhEp//uXy/3Ee3vgRPX1eXr7V4QcUlFuPNZT
lLiK8OFiV5XwESNNiOmpDVQROu1Mk8fLxSdiIEm760jcDLOAohvYwq/39QkKYvbsLK6+/gRAqKQx
o1w7PZDRWI143QgSP7LCUk2qH8qKM7k+42yHG1KUQ5tT13lh8xeM3oGSO8bJmA3bYxQTl+9q22MV
yeWqy5nrnX5tDfOS8fw3Agyt7r/L5wtlrDCBQg2YW75kv3piIro4yKfpqo6UjTDfuWM0rE59S7wm
DghGr/sTt33d6h2gahls976m9HYEU2/kautbAMA2xe10ESNzXioV3QS+EOnkopyq4vhOG/mxbgv4
fldBK9nQrcu1MGzL/a7JqfMcnUf77Rq48cKId+4cg2ZgLiuILcsCJ+wF+L9/n/Ms4yb4bEbknYVh
zCtJz8LMQrcj+V7HIwirJUTbRhonUk9F4+8ZI9sa03I+Fjp/Fgv5h8sYkqkpuNMOlJzyt4COelZw
DhDfjGfR2SjfqfRv2O+z3DlugDaBE8buR1c+PO0oRjGY98f0ki6yDxezRC/hTRzkrHd/ZvJeHCmj
1n0WWYnitVaCR02hubJ7k57DxfvrtTt1gHCZ2oPoeTuM8jiJ/Nsp9T0Nol/8VKeQ0L8kjr09v1u0
VF1RvVc+/aZ0n9W43U12vUwTChyyQpAXS7mOyI9bYQVzHTEvzcL0eytB+yG1Qfk0tlgpwn//kGZY
frWMvryTU2OxUPhLR0+45pAiJMShJuZa3nL7WLhoHUm3f0nSlO+h8D2xcQ1jhR88iJa1YMlL0Ket
V6gsrKhIBUykteexKVYr1hPxrfHiPcvxNbk8HDiVsVgN8fuF9K8hyjc6PonTeTMyNY15CaR7t6/m
v3/istV1ZpFKAb7u7u2htr8ssBaunHKo/o7f/Nse6WtTEBRkrCFSCFR4beq0neqwhs5RWzLaTXTr
eTK4U0bUSZx74oBfWZ5Ep/5T5Ky33AGBAFHN34Zx/HQ/+PE75hBGz5QXShBPhh+9FJNHsrs/0KE/
dLVYAeibpITOYE8xESn7MV8JNpHkD1RjF46fdqgYKH+/mq2Ci7Nu9kcj+6P0KwM4UnLHszDkSf7b
l0hhk+pPLV0+XuTZFfbfZj99jLq2irZ0ze38Jh8MSXw0VotprnvcV0me6HK28yXPgEbUxNZjsVQE
y7qxx2pISAN96sdxPt3wr6xI6xFfzw8Lnh9opzT0a/TGGMSO+XHsPrmKYvD3w9zVjmMEa/5Ck25N
zUCghesH0VkW9b9/vcyqFqK5CD/C73Z4i7NhYHDcnFeMUsa4toY2Of1PEXpTkNMOqPd1b6zTgRGy
rOWvbcNlwZetfyV/a6xBU9D6iNZW786bdumlFg9ipr6dTLzaytcM14/sTurPwuEIMKkR2CxwXgt6
+7f37K4yeBTLJPHe7jZQcgvr3YmNff8yAdJHDukNNapdjNgTWtzJuWrvOXk+mqJ2OqyC8VdNYigl
Dq/gx4aOF/ppW46QIwWTwAi5HXDwNY5z4HXfkl+VsvvK2FyHhOJ9A7GZ4F+wiZnjH/EOQjZUQenq
+oFEGIwCHDiIebwbnwnqmxfI9U4aJfErC90HYl4GF0jnzfRsrn1f431EV3Kx8xPYk8ecPepNgDZj
SGYIJA+6CzgND4Q0GwJCsnTTuf/e6KCdc0tGipLdfiwlGwwiCo2Ql7p70VvRiikaUqJX62K2EECW
lzP61t/+sS3nqiCC9R87FUgjbf0O3GkC+wNw36CWPnliPUKuyJ8bmxZK8PnvC2m1ZlNqmQIJCxJf
Ry0qfjPGqfJ80MAOKyzakKf3pTxS2lH/eweD/E2OUyWB0+X87Wh4mtd0InhBNS2YtTojo2aj3HVy
hILQ1zP1oICe0K2hdmQFKYZJHBzdJVqGdIBnFbTBRvkQqAK7BbVwiJ+ezr6tcg5mn5cXHqRmWar1
j3hRkjltdP1cifMETMhGQef8rppVJ6wSAudvV/dnD5BK/QT97PRrmozZpI2D6xzHJEqud20RGLEj
J69AhbEwO1sI2QJd11/AHhxF/cXm0NhxWSNKKkLg2jp1TEkZW76ndrlWb5d/QtjWJtL3XHs/Dkh+
W9Bws/XdZtLBW37ctjJ5r4JHjuLst/tWFJ1UcugDlLzGEcIVm7TIgCy+vstgKxq96dELfZcfsQVV
1SbRYJBKO6QKDBdU6NPQZBGRJlnklF/ggF4zuv0FJePfzsKCx9MvZKpAPaYqIlFD2r5buXjhQWxj
3aGs7u87W4ailiIbp/xd/9WD8FcPHIui+7azniCShkAVwGWkoP86zmfuR171ql5s3z+j7SBm2AuM
onIG6kPJNlNZT2xvfPVF+1XJLvTt9p5fwLAQxIbajmU+on789++lzGjaEYcah7L+LWZHOUbO6aWF
lAOc33kZPXrj/3Ts45obfhdwXlwqCEofiplKy5/0IdM+3myMKmg3JQ+WpNMd1fEfLwRQAkJhGKeB
4yqv3O5EjkueXf+aq/gl6t5A5bJXhNSjQa6aXFlfNI5QRp6i0i2j/vatOGe6rRWJ/6yywXqZPVmk
7UxLMnVTfWjAswLkzH6fPGLxW5NXwBPYFKkqgk4LF6w/OU0+9SSQ3gk8K6lPyIlf0GZRn6br7HxB
x2qrShY78kN4p17zaeYlvV+oqYFkC1Rr5uO2v3NDw1kksScN51hmdjj0Hf/NqKqUNBalX+/0suXU
7enIKwSZUBuz3febjQ7mSDcw//szsY7KW7EcPo9TXNvY3b4LvhsBI8afKn8AyahuZXkK+FhZvPc+
Kes08231yRRv/rrhsNfON6pgD4VsWwzFTTkTL8bB4WpqzVFN1F6Wim3lOvpy/WlIS7vrwCEjnCBM
occlqLGcRbPY26bSdtDQ8TwEGHO9TnpLcg6ZRbp5HPl7qL8QFDnoDDF86tfGgI7AZUBrv6aDR1of
SmbA4V8a9SL4KisMhswLZvTADNmf9/5fWBiX/v/99+9//ud/3+ta9GlXF+v/wOCT/4XtIhuPYrm5
ZEv+3/8HNEJce8XNAAA=#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2020 v5.7.172
     Generated on:       2/25/2022 8:54 AM
     Generated by:       Admin
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2020
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-wintoolbox_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formWindowsOptimizationT = New-Object 'System.Windows.Forms.Form'
	$tabcontrol1 = New-Object 'System.Windows.Forms.TabControl'
	$tabpage1 = New-Object 'System.Windows.Forms.TabPage'
	$buttonDiskDefragUtility = New-Object 'System.Windows.Forms.Button'
	$buttonFixWindows11PlayStor = New-Object 'System.Windows.Forms.Button'
	$buttonEnableGodMode = New-Object 'System.Windows.Forms.Button'
	$AddTakeOwnershipMenu = New-Object 'System.Windows.Forms.Button'
	$RemoveTakeOwnershipMenu = New-Object 'System.Windows.Forms.Button'
	$textbox90 = New-Object 'System.Windows.Forms.TextBox'
	$DisableWin10Explorer = New-Object 'System.Windows.Forms.Button'
	$EnableWin10Ribbon = New-Object 'System.Windows.Forms.Button'
	$buttonDisableWindows10Expl = New-Object 'System.Windows.Forms.Button'
	$buttonEnableWindows10Explo = New-Object 'System.Windows.Forms.Button'
	$textbox89 = New-Object 'System.Windows.Forms.TextBox'
	$DisableBackgroundApps = New-Object 'System.Windows.Forms.Button'
	$RemoveWindows10XBoot = New-Object 'System.Windows.Forms.Button'
	$CompactOS = New-Object 'System.Windows.Forms.Button'
	$Windows10XBootAnimat = New-Object 'System.Windows.Forms.Button'
	$EnableMSIMode = New-Object 'System.Windows.Forms.Button'
	$BypassTPM20 = New-Object 'System.Windows.Forms.Button'
	$AMDGpuTweaks = New-Object 'System.Windows.Forms.Button'
	$DefaultTaskbar = New-Object 'System.Windows.Forms.Button'
	$NVIDIAGpuTweaks = New-Object 'System.Windows.Forms.Button'
	$SmallTaskbar = New-Object 'System.Windows.Forms.Button'
	$NetworkTweaks = New-Object 'System.Windows.Forms.Button'
	$DefaultContextMenu = New-Object 'System.Windows.Forms.Button'
	$EnableNet35 = New-Object 'System.Windows.Forms.Button'
	$OldContextMenu = New-Object 'System.Windows.Forms.Button'
	$textbox12 = New-Object 'System.Windows.Forms.TextBox'
	$textbox75 = New-Object 'System.Windows.Forms.TextBox'
	$textbox19 = New-Object 'System.Windows.Forms.TextBox'
	$textbox18 = New-Object 'System.Windows.Forms.TextBox'
	$textbox17 = New-Object 'System.Windows.Forms.TextBox'
	$textbox16 = New-Object 'System.Windows.Forms.TextBox'
	$textbox14 = New-Object 'System.Windows.Forms.TextBox'
	$textbox13 = New-Object 'System.Windows.Forms.TextBox'
	$textbox10 = New-Object 'System.Windows.Forms.TextBox'
	$textbox9 = New-Object 'System.Windows.Forms.TextBox'
	$textbox8 = New-Object 'System.Windows.Forms.TextBox'
	$textbox7 = New-Object 'System.Windows.Forms.TextBox'
	$textbox6 = New-Object 'System.Windows.Forms.TextBox'
	$textbox5 = New-Object 'System.Windows.Forms.TextBox'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$textbox2 = New-Object 'System.Windows.Forms.TextBox'
	$textbox3 = New-Object 'System.Windows.Forms.TextBox'
	$textbox4 = New-Object 'System.Windows.Forms.TextBox'
	$EnableNFS = New-Object 'System.Windows.Forms.Button'
	$RemoveStartupProgram = New-Object 'System.Windows.Forms.Button'
	$WindowsSearchAndTask = New-Object 'System.Windows.Forms.Button'
	$LaptopNumlockFix = New-Object 'System.Windows.Forms.Button'
	$FixWhitelistedApps = New-Object 'System.Windows.Forms.Button'
	$YourPhoneAppFIx = New-Object 'System.Windows.Forms.Button'
	$RepairHardDrive = New-Object 'System.Windows.Forms.Button'
	$FixNetworkProblems = New-Object 'System.Windows.Forms.Button'
	$SystemFileChecker = New-Object 'System.Windows.Forms.Button'
	$RepairWindowsImage = New-Object 'System.Windows.Forms.Button'
	$ApplyTweaks = New-Object 'System.Windows.Forms.Button'
	$EnableClipboardHisto = New-Object 'System.Windows.Forms.Button'
	$DisableClipboardHist = New-Object 'System.Windows.Forms.Button'
	$DisableLocationTrack = New-Object 'System.Windows.Forms.Button'
	$DisableCortana = New-Object 'System.Windows.Forms.Button'
	$EnableLocationTRacki = New-Object 'System.Windows.Forms.Button'
	$DisableActionCenter = New-Object 'System.Windows.Forms.Button'
	$Hide = New-Object 'System.Windows.Forms.Button'
	$EnableCortanaSearch = New-Object 'System.Windows.Forms.Button'
	$Show = New-Object 'System.Windows.Forms.Button'
	$EnableBackgroundApps = New-Object 'System.Windows.Forms.Button'
	$LightMode = New-Object 'System.Windows.Forms.Button'
	$DisableHibernation = New-Object 'System.Windows.Forms.Button'
	$DarkMode = New-Object 'System.Windows.Forms.Button'
	$EnableHibernation = New-Object 'System.Windows.Forms.Button'
	$SetTimeToUTCDualBoot = New-Object 'System.Windows.Forms.Button'
	$CleanTempFilesAndLog = New-Object 'System.Windows.Forms.Button'
	$AppearanceVisualFX = New-Object 'System.Windows.Forms.Button'
	$EnableActionCenter = New-Object 'System.Windows.Forms.Button'
	$PerformanceVisualFX = New-Object 'System.Windows.Forms.Button'
	$DisableMemoryCompres = New-Object 'System.Windows.Forms.Button'
	$EnableMemoryCompress = New-Object 'System.Windows.Forms.Button'
	$tabpage6 = New-Object 'System.Windows.Forms.TabPage'
	$buttonUnistallEdge = New-Object 'System.Windows.Forms.Button'
	$buttonRevertRegistryChange = New-Object 'System.Windows.Forms.Button'
	$textbox88 = New-Object 'System.Windows.Forms.TextBox'
	$InstallOnedrive = New-Object 'System.Windows.Forms.Button'
	$textbox87 = New-Object 'System.Windows.Forms.TextBox'
	$EnableEdgePDF = New-Object 'System.Windows.Forms.Button'
	$textbox86 = New-Object 'System.Windows.Forms.TextBox'
	$buttonDebloatWithBlocklist = New-Object 'System.Windows.Forms.Button'
	$DebloatAll = New-Object 'System.Windows.Forms.Button'
	$ReinstallAllBloatwar = New-Object 'System.Windows.Forms.Button'
	$textbox84 = New-Object 'System.Windows.Forms.TextBox'
	$UnsintallOnedrive = New-Object 'System.Windows.Forms.Button'
	$DisableEdgePDF = New-Object 'System.Windows.Forms.Button'
	$UnpinTitilesFromStar = New-Object 'System.Windows.Forms.Button'
	$RemoveBloatwareRegKe = New-Object 'System.Windows.Forms.Button'
	$textbox85 = New-Object 'System.Windows.Forms.TextBox'
	$tabpage3 = New-Object 'System.Windows.Forms.TabPage'
	$textbox103 = New-Object 'System.Windows.Forms.TextBox'
	$textbox102 = New-Object 'System.Windows.Forms.TextBox'
	$textbox101 = New-Object 'System.Windows.Forms.TextBox'
	$textbox100 = New-Object 'System.Windows.Forms.TextBox'
	$textbox99 = New-Object 'System.Windows.Forms.TextBox'
	$textbox98 = New-Object 'System.Windows.Forms.TextBox'
	$textbox97 = New-Object 'System.Windows.Forms.TextBox'
	$textbox96 = New-Object 'System.Windows.Forms.TextBox'
	$textbox95 = New-Object 'System.Windows.Forms.TextBox'
	$textbox94 = New-Object 'System.Windows.Forms.TextBox'
	$textbox93 = New-Object 'System.Windows.Forms.TextBox'
	$textbox92 = New-Object 'System.Windows.Forms.TextBox'
	$buttonActivateMSOffice = New-Object 'System.Windows.Forms.Button'
	$buttonActivateWindows = New-Object 'System.Windows.Forms.Button'
	$textbox91 = New-Object 'System.Windows.Forms.TextBox'
	$WindowsUpdateReset = New-Object 'System.Windows.Forms.Button'
	$Low = New-Object 'System.Windows.Forms.Button'
	$textbox49 = New-Object 'System.Windows.Forms.TextBox'
	$EnableWindowsUpdates = New-Object 'System.Windows.Forms.Button'
	$DisableWindowsUpdate = New-Object 'System.Windows.Forms.Button'
	$textbox71 = New-Object 'System.Windows.Forms.TextBox'
	$textbox72 = New-Object 'System.Windows.Forms.TextBox'
	$textbox73 = New-Object 'System.Windows.Forms.TextBox'
	$DefaultSetting = New-Object 'System.Windows.Forms.Button'
	$SecurityUpdatesOnly = New-Object 'System.Windows.Forms.Button'
	$textbox74 = New-Object 'System.Windows.Forms.TextBox'
	$RemoveMalware = New-Object 'System.Windows.Forms.Button'
	$RemoveViruses = New-Object 'System.Windows.Forms.Button'
	$textbox62 = New-Object 'System.Windows.Forms.TextBox'
	$textbox63 = New-Object 'System.Windows.Forms.TextBox'
	$textbox64 = New-Object 'System.Windows.Forms.TextBox'
	$textbox65 = New-Object 'System.Windows.Forms.TextBox'
	$textbox66 = New-Object 'System.Windows.Forms.TextBox'
	$textbox67 = New-Object 'System.Windows.Forms.TextBox'
	$textbox68 = New-Object 'System.Windows.Forms.TextBox'
	$textbox69 = New-Object 'System.Windows.Forms.TextBox'
	$textbox70 = New-Object 'System.Windows.Forms.TextBox'
	$High = New-Object 'System.Windows.Forms.Button'
	$tabpage8 = New-Object 'System.Windows.Forms.TabPage'
	$buttonUnistallGooglePlaySt = New-Object 'System.Windows.Forms.Button'
	$buttonInstallGooglePlaySto = New-Object 'System.Windows.Forms.Button'
	$textbox104 = New-Object 'System.Windows.Forms.TextBox'
	$buttonGithub = New-Object 'System.Windows.Forms.Button'
	$textbox76 = New-Object 'System.Windows.Forms.TextBox'
	$textbox77 = New-Object 'System.Windows.Forms.TextBox'
	$textbox78 = New-Object 'System.Windows.Forms.TextBox'
	$textbox79 = New-Object 'System.Windows.Forms.TextBox'
	$textbox80 = New-Object 'System.Windows.Forms.TextBox'
	$textbox81 = New-Object 'System.Windows.Forms.TextBox'
	$textbox83 = New-Object 'System.Windows.Forms.TextBox'
	$textbox82 = New-Object 'System.Windows.Forms.TextBox'
	$GeforceExperience = New-Object 'System.Windows.Forms.Button'
	$IntelDriverSupportAs = New-Object 'System.Windows.Forms.Button'
	$GoogleChrome = New-Object 'System.Windows.Forms.Button'
	$FireFox = New-Object 'System.Windows.Forms.Button'
	$Ventoy = New-Object 'System.Windows.Forms.Button'
	$7zip = New-Object 'System.Windows.Forms.Button'
	$StartIsBack = New-Object 'System.Windows.Forms.Button'
	$VLC = New-Object 'System.Windows.Forms.Button'
	$Blender = New-Object 'System.Windows.Forms.Button'
	$PaintNET = New-Object 'System.Windows.Forms.Button'
	$OpenShell = New-Object 'System.Windows.Forms.Button'
	$DirectX = New-Object 'System.Windows.Forms.Button'
	$Cleanmgr = New-Object 'System.Windows.Forms.Button'
	$VisualC = New-Object 'System.Windows.Forms.Button'
	$LibreOffice = New-Object 'System.Windows.Forms.Button'
	$XNAFramework40 = New-Object 'System.Windows.Forms.Button'
	$GreenShot = New-Object 'System.Windows.Forms.Button'
	$OpenAl = New-Object 'System.Windows.Forms.Button'
	$balenaEtcher = New-Object 'System.Windows.Forms.Button'
	$Audacity = New-Object 'System.Windows.Forms.Button'
	$Java = New-Object 'System.Windows.Forms.Button'
	$Discord = New-Object 'System.Windows.Forms.Button'
	$PhysX = New-Object 'System.Windows.Forms.Button'
	$OBSStudio = New-Object 'System.Windows.Forms.Button'
	$Everything = New-Object 'System.Windows.Forms.Button'
	$AMDRyzenChipsetDrive = New-Object 'System.Windows.Forms.Button'
	$SumatraPDF = New-Object 'System.Windows.Forms.Button'
	$Rufus = New-Object 'System.Windows.Forms.Button'
	$FoxitReader = New-Object 'System.Windows.Forms.Button'
	$WinRAR = New-Object 'System.Windows.Forms.Button'
	$IDM = New-Object 'System.Windows.Forms.Button'
	$MediaPlayerClassic = New-Object 'System.Windows.Forms.Button'
	$GPUZ = New-Object 'System.Windows.Forms.Button'
	$PowerToys = New-Object 'System.Windows.Forms.Button'
	$CPUZ = New-Object 'System.Windows.Forms.Button'
	$WindowsTerminal = New-Object 'System.Windows.Forms.Button'
	$Vivaldi = New-Object 'System.Windows.Forms.Button'
	$Brave = New-Object 'System.Windows.Forms.Button'
	$Edge = New-Object 'System.Windows.Forms.Button'
	$BleachBit = New-Object 'System.Windows.Forms.Button'
	$Notepad = New-Object 'System.Windows.Forms.Button'
	$MicrosoftSilverLight = New-Object 'System.Windows.Forms.Button'
	$UTorrent = New-Object 'System.Windows.Forms.Button'
	$ImageGlass = New-Object 'System.Windows.Forms.Button'
	$CCleaner = New-Object 'System.Windows.Forms.Button'
	$VSCode = New-Object 'System.Windows.Forms.Button'
	$Gimp = New-Object 'System.Windows.Forms.Button'
	$VSCodium = New-Object 'System.Windows.Forms.Button'
	$ShareX = New-Object 'System.Windows.Forms.Button'
	$AdobeReaderDC = New-Object 'System.Windows.Forms.Button'
	$Opera = New-Object 'System.Windows.Forms.Button'
	$IrfanView = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	$ErrorActionPreference = 'silentlycontinue'
	If (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]'Administrator'))
	{
		Start-Process powershell.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
		Exit
	}
	$formWindowsOptimizationT_Load = {
		Write-Host "
  __        __ _         _____            _    ___              
  \ \      / /(_) _ __  |_   _|___   ___ | |  |   \   ___  __  __ 
   \ \ /\ / / | ||  _ \   | | / _ \ / _ \| |  |  _/  / _ \ \ \/ /
    \ V  V /  | || | | |  | || (_) | (_) | |_ |   \ | (_) | >  <  
     \_/\_/   |_||_| |_|  |_| \___/ \___/|___||___/  \___/ /_/\_\
_______________________________________________________________________                                                
"
		Write-Host "Initializing..." -ForegroundColor Green
		Write-Host "Instaling Chocolatey"
		Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
		choco install chocolatey-core.extension
		Write-Host "Finished Instaling Chocolatey"
		Write-Host "Checking winget..."
		
		# Check if winget is installed
		if (Test-Path ~\AppData\Local\Microsoft\WindowsApps\winget.exe)
		{
			Write-Host "Winget Already Installed."
		}
		else
		{
			# Installing winget from the Microsoft Store
			Write-Host "Installing winget..."
			Start-Process "ms-appinstaller:?source=https://aka.ms/getwinget"
			$nid = (Get-Process AppInstaller).Id
			Wait-Process -Id $nid
			Write-Host "Winget Installed"
		}
	    Write-Host "Toolbox Is Ready For Use!"
	}
	
	$ApplyTweaks_Click = {
		Write-Host "Creating Restore Point In Case Something Bad Happens..."
		Enable-ComputerRestore -Drive "C:\"
		REG ADD "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore" /V "SystemRestorePointCreationFrequency" /T REG_DWORD /D 0 /F
		Checkpoint-Computer -Description "WinToolbox" -RestorePointType "MODIFY_SETTINGS"
		Write-Host 'Restore Point has been Created' -ForegroundColor green
	    Write-Host "Disabling Aero Shake..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "DisallowShaking" -Type DWord -Value 1
		Write-Host "Done!"
		Write-Host "Disabling accessibility keys prompts..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\StickyKeys" -Name "Flags" -Type String -Value "506"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\ToggleKeys" -Name "Flags" -Type String -Value "58"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\Keyboard Response" -Name "Flags" -Type String -Value "122"
		Write-Host "Done!"
		   if((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Services\NlaSvc\Parameters\Internet") -ne $true) {  New-Item "HKLM:\SYSTEM\CurrentControlSet\Services\NlaSvc\Parameters\Internet" -force -ea SilentlyContinue };
	    New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Services\NlaSvc\Parameters\Internet' -Name 'EnableActiveProbingl' -Value 1 -PropertyType DWord -Force -ea SilentlyContinue;
		Write-Host "Disable Game DVR and Game Bar"
	    Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" "AllowgameDVR" 0
		Write-Host "Done!"
		Write-Host "Hiding People icon..."
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People" -Name "PeopleBand" -Type DWord -Value 0
		Write-Host "Disable Xbox Game Tips ..."
		
		if ((Get-AppxPackage -Name Microsoft.XboxGamingOverlay) -or (Get-AppxPackage -Name Microsoft.GamingApp))
		{
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\GameBar -Name ShowStartupPanel -PropertyType DWord -Value 0 -Force
		}
		Write-Host "Disable Teams Autostart ..."
		if (Get-AppxPackage -Name MicrosoftTeams)
		{
			if (-not (Test-Path -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask"))
			{
				New-Item -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask" -Force
			}
			New-ItemProperty -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask" -Name State -PropertyType DWord -Value 1 -Force
		}
		Write-Host "Hide OneDrive File Explorer Ad ..."
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name ShowSyncProviderNotifications -PropertyType DWord -Value 0 -Force
		Write-Host "Disable Snap Assist ..."
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name SnapAssist -PropertyType DWord -Value 0 -Force
		Write-Host "Disable Snap Assist Flyout ..."
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name EnableSnapAssistFlyout -PropertyType DWord -Value 0 -Force
	
	Write-Host "Disabling Telemetry..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\ProgramDataUpdater" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Autochk\Proxy" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\Consolidator" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\UsbCeip" 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\DiskDiagnostic\Microsoft-Windows-DiskDiagnosticDataCollector" 
		Write-Host "Disabling SmartScreen Filter..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableSmartScreen" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter" -Name "EnabledV9" -Type DWord -Value 0
		Write-Host "Disabling Bing Search in Start Menu..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "BingSearchEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "CortanaConsent" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "DisableWebSearch" -Type DWord -Value 1
		Write-Host "Disabling Application suggestions..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "ContentDeliveryAllowed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "OemPreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEverEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SilentInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338387Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338388Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353698Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SystemPaneSuggestionsEnabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type DWord -Value 1
		Write-Host "Disabling Activity History..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableActivityFeed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "PublishUserActivities" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "UploadUserActivities" -Type DWord -Value 0
		Write-Host "Disabling automatic Maps updates..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\Maps" -Name "AutoUpdateEnabled" -Type DWord -Value 0
		Write-Host "Disabling Feedback..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Name "NumberOfSIUFInPeriod" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClient" -ErrorAction SilentlyContinue 
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload" -ErrorAction SilentlyContinue 
		Write-Host "Disabling Tailored Experiences..."
		If (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableTailoredExperiencesWithDiagnosticData" -Type DWord -Value 1
		Write-Host "Disabling Advertising ID..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" -Name "DisabledByGroupPolicy" -Type DWord -Value 1
		Write-Host "Disabling Cortana..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -Type DWord -Value 0
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type DWord -Value 1
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Force 
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Name "HarvestContacts" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -Type DWord -Value 0
	Write-Host "Disable Cortana Autostart ..."
		if (Get-AppxPackage -Name Microsoft.549981C3F5F10)
		{
			if (-not (Test-Path -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId"))
			{
				New-Item -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Force
			}
			New-ItemProperty -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Name State -PropertyType DWord -Value 1 -Force
		}
		Write-Host "$($EnableStatus[0]) Show me the windows welcome experience after updates..."
		Write-Host "Removing and Refreshing Local Policies..."
		Remove-Item -Recurse -Force "$env:WinDir\System32\GroupPolicy" 
		Remove-Item -Recurse -Force "$env:WinDir\System32\GroupPolicyUsers" 
		secedit /configure /cfg "$env:WinDir\inf\defltbase.inf" /db defltbase.sdb /verbose 
		gpupdate /force
		Write-Host "Disabling Telemetry and Services"
		###This is a template which will block and disable telemetry features of the following apps: ###
		###- Block Google Chrome Software Reporter Tool
		# The Software Reporter Tool (also known as Chrome Cleanup Tool and Software Removal Tool, the executable file is software_reporter_tool.exe), is a tool that Google distributes with the Google Chrome web browser. 
		# It is a part of Google Chrome's Clean up Computer feature which scans your computer for harmful software. If this tool finds any harmful app or extension which can cause problems, it removes them from your computer. 
		# Anything that interferes with a user's browsing experience may be removed by the tool.
		# Its disadvantages, high CPU load or privacy implications, may be reason enough to block it from running. This script will disable the software_reporter_tool.exe in a more cleaner way using Image File Execution Options Debugger value. 
		# Setting this value to an executable designed to kill processes disables it. Chrome won't re-enable it with almost each update. Next to this, it will also be disabled per default in Registry.
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name ChromeCleanupEnabled -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name ChromeCleanupReportingEnabled -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name MetricsReportingEnabled -Type String -Value 0 -Force
		# This will disable the software_reporter_tool.exe in a more cleaner way using Image File Execution Options Debugger value. 
		# Setting this value to an executable designed to kill processes disables it. Chrome won't re-enable it with almost each update. 
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\software_reporter_tool.exe"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\software_reporter_tool.exe" -Force | Out-Null
			Write-Output "Google Chrome Software Reporter Tool has been successfully blocked."
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\software_reporter_tool.exe" -Name "Debugger" -Type String -Value %windir%\System32\taskkill.exe -Force
		
		###- Disable Mozilla Firefox telemetry
		# Firefox 75 comes with a new telemetry agent that sends information about your operating system and your default browser to Firefox every day. 
		# The information collected is sent as a background telemetry ping every 24 hours to Mozilla.
		# Mozilla has introduced a Windows group policy that prevents the default-browser-agent.exe executable from sending your default browser info. 
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Mozilla\Firefox" -Name DisableTelemetry -Type DWord -Value 1 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Mozilla\Firefox" -Name DisableDefaultBrowserAgent -Type DWord -Value 1 -Force
		
		###- Disable CCleaner Monitoring
		# Since Avast acquired Piriform, the popular system cleaning software CCleaner has become bloated with malware, bundled PUPs(potentially unwanted programs), and an alarming amount of pop-up ads.
		# If you're highly dependent on CCleaner you can disable with this script the CCleaner Active Monitoring ("Active Monitoring" feature has been renamed with v5.46 to "Smart Cleaning"), 
		# automatic Update check and download function, trial offer notifications, the new integrated Software Updater and the privacy option to "Help Improve CCleaner by sending anonymous usage data".
		Stop-Process -name CCleaner*
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name Monitoring -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name HelpImproveCCleaner -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name SystemMonitoring -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name UpdateAuto -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name UpdateCheck -Type String -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name CheckTrialOffer -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name (Cfg)GetIpmForTrial -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name (Cfg)SoftwareUpdater -Type String -Value 0 -Force
		New-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name (Cfg)SoftwareUpdaterIpm -Type String -Value 0 -Force
		Get-ScheduledTask -TaskName "CCleaner Update" | Disable-ScheduledTask
		
		###- Disable Dropbox Update service
		# This will disable Dropbox auto update service
		Get-ScheduledTask -TaskName "DropboxUpdateTaskMachineCore" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "DropboxUpdateTaskMachineUA" | Disable-ScheduledTask
		
		###- Disable Google Update service
		# This will disable Google update service
		Get-ScheduledTask -TaskName "GoogleUpdateTaskMachineCore" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "GoogleUpdateTaskMachineUA" | Disable-ScheduledTask
		
		###- Disable Media Player telemetry
		# This will disable Media Player telemetry
		New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\MediaPlayer\Preferences" -Name UsageTracking -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name PreventCDDVDMetadataRetrieval -Type DWord -Value 1 -Force
		New-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name PreventMusicFileMetadataRetrieval -Type DWord -Value 1 -Force
		New-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name PreventRadioPresetsRetrieval -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WMDRM" -Name DisableOnline -Type DWord -Value 1 -Force
		Set-Service WMPNetworkSvc -StartupType Disabled
		
		###- Disable Microsoft Office telemetry
		# This will disable Microsoft Office telemetry (supports Microsoft Office 2013 and 2016)
		Get-ScheduledTask -TaskName "OfficeTelemetryAgentFallBack2016" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "OfficeTelemetryAgentLogOn2016" | Disable-ScheduledTask
		New-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\osm" -Name Enablelogging -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\osm" -Name EnableUpload -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\osm" -Name Enablelogging -Type DWord -Value 0 -Force
		New-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\osm" -Name EnableUpload -Type DWord -Value 0 -Force
		###
		###Requires -RunSilent
		wmic service where name='SysMain'  call ChangeStartmode Disabled
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		# Remove "News and Interest" from taskbar
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Feeds" -Name "ShellFeedsTaskbarViewMode" -Type DWord -Value 2
		# Remove "Meet Now" button from taskbar
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force 
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		
		Write-Host "Removing AutoLogger file and restricting directory..."
		$autoLoggerDir = "$env:PROGRAMDATA\Microsoft\Diagnosis\ETLLogs\AutoLogger"
		If (Test-Path "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl")
		{
			Remove-Item "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl"
		}
		icacls $autoLoggerDir /deny SYSTEM:`(OI`)`(CI`)F 
		Write-Host "Hide Settings Suggested Content ..."
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name SubscribedContent-338393Enabled -PropertyType DWord -Value 0 -Force
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name SubscribedContent-353694Enabled -PropertyType DWord -Value 0 -Force
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name SubscribedContent-353696Enabled -PropertyType DWord -Value 0 -Force
		Write-Host "Disable Whats New In Windows ..."
		if (-not (Test-Path -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\UserProfileEngagement))
		{
			New-Item -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\UserProfileEngagement -Force
		}
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\UserProfileEngagement -Name ScoobeSystemSettingEnabled -PropertyType DWord -Value 0 -Force
		Write-Host "setting smb optimizations"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "DisableBandwidthThrottling" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "FileInfoCacheEntriesMax" -Type "DWORD" -Value 1024 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "DirectoryCacheEntriesMax" -Type "DWORD" -Value 1024 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "FileNotFoundCacheEntriesMax" -Type "DWORD" -Value 2048 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type "DWORD" -Value 20 -Force
		Set-SmbServerConfiguration -EnableMultiChannel $true -Force
		Set-SmbServerConfiguration -MaxChannelPerSession 16 -Force
		Set-SmbServerConfiguration -ServerHidden $False -AnnounceServer $False -Force
		Set-SmbServerConfiguration -EnableLeasing $false -Force
		Set-SmbClientConfiguration -EnableLargeMtu $true -Force
		Set-SmbClientConfiguration -EnableMultiChannel $true -Force
	    Write-Host "Disabling Error reporting..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Windows Error Reporting\QueueReporting" 
		Write-Host "Applying SVCHost Tweaks ..."
		$ram = (Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum / 1kb
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value $ram -Force
		Write-Host "Optimizing Services..."
		$servicesDisable = @(
			"AJRouter",
			"ALG",
			"AppMgmt",
			"CscService", # Offline Files
			"diagnosticshub.standardcollector.service",
			"dmwappushservice",
			"HomeGroupListener",
			"HomeGroupProvider",
			"TrkWks",
			"WSearch",
			"IKEEXT",
			"PcaSvc", #Compatibility Mode
			#"wcncsvc", # Laptops and other wireless computers need this service for connecting to wireless networks. Desktops that don't have a wireless card do not need this service.
			"WerSvc",
			"WMPNetworkSvc", #Delete this line if you use OBS-NDI
			"BthHFSrv",
			"PeerDistSvc",
			"MapsBroker", #Delete this line if you use in start menu widgets who use bing maps or whatever
			"Ifsvc",
			"HvHost",
			"Dnscache",
			"SSDPSRV",
			"upnphost",
			"pla",
			"SharedAccess",
			"SysMain",
			"TapiSrv",
			"WebClient",
			"tzautoupdate",
			"RemoteRegistry",
			"RemoteAccess",
			"WbioSrvc",
			"lfsvc",
			"ndu",
			"NetTcpPortSharing",
			"CDPSvc",
			"TabletInputService", # Delete this line if you are using laptop touch screens and tablets
			"WdiServiceHost",
			"PhoneSvc",
			"SmsRouter",
			"DPS",
			"iphlpsvc", #Delete if you are using IPv6 translation
			"stisvc",
			"DusmSvc",
			"IpxlatCfgSvc",
			"wlpasvc",
			"MSiSCSI",
			"irmon", #File transfer via infrared devices.
			"NaturalAuthentication",
			"Netlogon", #Delete this line if you are using  a domain controller environment.
			"NcdAutoSetup",
			"SEMgrSvc", #Delete this line if you are using NFC but Near Field Communication is a mobile phone technology. Not needed on desktops and tablets.
			"SessionEnv", # Windows RDP
			"TermService", # Windows RDP
			"UmRdpService", # Windows RDP
			"RpcLocator",
			"RetailDemo",
			"SensorDataService",
			"SensrSvc",
			"SensorService",
			"shpamsvc",
			"SNMPTRAP",
			"StorSvc",
			"FrameServer", #Delete if you are using webcam, could be needed to capture webcam frames. at the moment no problems for streaming
			"wisvc", #Delete this line if you want beta testing new versions of Windows via the Insider program.
			"icssvc", #Delete this line if you are using Mobile Network Connection (3G, 4G, LTE, Etc). Keep this line on devices without those options.
			"WinRM",
			"workfolderssvc",
			"EntAppSvc",
			"DiagTrack", #Feedback and Diagnostics
			"NfsClnt",
			"WFDSConSvc",
			"WwanSvc",
			"fhsvc", #delete this line if you are using Windows Backup, Used by Windows Backup.
			"SDRSVC",
			"SecurityHealthService", # Windows Defender Security Center Service
			"Sense", # Windows Defender Advanced Threat Protection Service
			"WdNisSvc", # Windows Defender Antivirus Network Inspection Service
	        "WinDefend", # Windows Defender Antivirus Service
			"wscsvc", # Security Center
			"WdiSystemHost",
			"diagsvc",
			"wlidsvc", #Delete if using MS account to log in to computer.
			"BDESVC", #Delete line if you are using storage encryption or if not uncomment it
			"BthAvctpSvc", #Delete line if you are using Bluetooth Audio Device or Wireless Headphones or if not uncomment it
			#"RmSvc", #Delete line if you are using wifi card and bluetooth or if not uncomment it
			"bthserv", #Delete line if you are using bluetooth devices or if not uncomment it
			#"WlanSvc", #Delete line if you are using wifi card or if not uncomment it
			"lmhosts", #Delete line if you are using shared files in your network (NAS and others ...) or if not uncomment it
			"Browser" #Delete line if you are using Network discovery of systems on local network or if not uncomment it
			"WpcMonSvc", #Delete line if you are using parental controls or if not uncomment it
			"seclogon", #Need validation | some disable it others not
			"wuauserv", #WINDOWS UPDATE I personally recommend not to disable this service
			"XboxGipSvc", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"xbgm", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"XblAuthManager", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"XblGameSave", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"XboxNetApiSvc", #Delete this line if using any XBOX console PC to Console functions or if not uncomment it
			"vmickvpexchange", #Delete this line if you use hyper-v or if not uncomment it
			"vmicguestinterface", #Delete this line if you use hyper-v or if not uncomment it
			"vmicshutdown", #Delete this line if you use hyper-v or if not uncomment it
			"vmicheartbeat", #Delete this line if you use hyper-v or if not uncomment it
			"vmcompute", #Delete this line if you use hyper-v or if not uncomment it
			"vmicvmsession", #Delete this line if you use hyper-v or if not uncomment it
			"vmicrdv", #Delete this line if you use hyper-v or if not uncomment it
			"vmictimesync", #Delete this line if you use hyper-v or if not uncomment it
			"vmms", #Delete this line if you use hyper-v or if not uncomment it
			"vmicvss", #Delete this line if you use hyper-v or if not uncomment it
			"CertPropSvc", #Delete this line if you use Smart Card login or if not uncomment it
			"SCardSvr", #Delete this line if you use Smart Card login or if not uncomment it
			"ScDeviceEnum", #Delete this line if you use Smart Card login or if not uncomment it
			"SCPolicySvc", #Delete this line if you use Smart Card login or if not uncomment it
			"Spooler" # Need validation | some disable it others not | print spooler
			"Fax",
			"MixedRealityOpenXRSvc",
			"W32Time",
			"spectrum" # New Virtual Reality Service
			"FontCache3.0.0.0",
			"FontCache",
			"Wecsvc",
			"EventLog",
			"TokenBroker",
			"UevAgentService",
			"Themes",
			"LanmanServer",
			"NcbService",
			"AppVClient",
			"InstallService",
			"ssh-agent"
		)
		foreach ($service in $servicesDisable)
		{
			Write-Host "Stoping service ${service}"
			Stop-Service -Name $service -ErrorAction 'silentlycontinue'
			Write-Host "Change the type of startup to Disabled for the service ${service}"
			Set-Service -Name $service -StartupType Disabled -ErrorAction 'silentlycontinue'
			Write-Host "Change the value of the key ${service} in the registry"
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\${service}" -Name "Start" -Force -Value 4 -ErrorAction 'silentlycontinue'
		}
		
		$servicesDemand = @(
			"BITS",
			"IKEEXT"
		)
		
		foreach ($service in $servicesDemand)
		{
			Write-Host "Stoping service ${service}"
			Stop-Service -Name $service -ErrorAction 'silentlycontinue'
			Write-Host "Change the type of startup to Manual for the service ${service}"
			Set-Service -Name $service -StartupType Manual -ErrorAction 'silentlycontinue'
			Write-Host "Change the value of the key ${service} in the registry"
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\${service}" -Name "Start" -Force -Value 3 -ErrorAction 'silentlycontinue'
		}
		wmic service where name='wisvc'  call ChangeStartmode Disabled
	
		wmic service where name='icssvc'  call ChangeStartmode Disabled
	
		wmic service where name='Fax'  call ChangeStartmode Disabled
		
		wmic service where name='SessionEnv'  call ChangeStartmode Disabled
	
		wmic service where name='TermService'  call ChangeStartmode Disabled
	
		wmic service where name='bthserv'  call ChangeStartmode Disabled
	
		wmic service where name='TabletInputService'  call ChangeStartmode Disabled
	
		wmic service where name='DiagTrack'  call ChangeStartmode Disabled
		
		wmic service where name='DPS'  call ChangeStartmode Disabled
	
		wmic service where name='DoSvc'  call ChangeStartmode Disabled
	
		wmic service where name='WpnService'  call ChangeStartmode Disabled
	
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name BingSearchEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name CortanaConsent -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Search" -Name BingSearchEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Search" -Name CortanaConsent -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name AllowCortana -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\" -Name "Search" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Search" -Name BingSearchEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\FirewallRules" -Name "{2765E0F4-2918-4A46-B9C9-43CDD8FCBA2B}" -Type "String" -Value "BlockCortana|Action=Block|Active=TRUE|Dir=Out|App=C:\windows\systemapps\microsoft.windows.cortana_cw5n1h2txyewy\searchui.exe|Name=Search and Cortana application|AppPkgId=S-1-15-2-1861897761-1695161497-2927542615-642690995-327840285-2659745135-2630312742|" -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\" -Name "AU" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name NoAutoUpdate -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name AUOptions -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name ScheduledInstallDay -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name ScheduledInstallTime -Type "DWORD" -Value 3 -Force
		New-Item -Path "HKLM:\Software\Microsoft\PolicyManager\current\device\" -Name "Update" -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "ContentDeliveryAllowed" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "OemPreInstalledAppsEnabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEnabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEverEnabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SilentInstalledAppsEnabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338387Enabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338388Enabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353698Enabled" -Type "DWORD" -Value 0 -Force
		New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SystemPaneSuggestionsEnabled" -Type "DWORD" -Value 0 -Force
		If (!(Test-Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent" -Force 
		}
		New-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type "DWORD" -Value 1 -Force
		Write-Host "Disabling NVDIA Telemetry..."
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\Global\FTS" -Name EnableRID44231 -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\Global\FTS" -Name EnableRID64640 -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\Global\FTS" -Name EnableRID66610 -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\NVIDIA Corporation\NvControlPanel2\Client" -Force
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\NvControlPanel2\Client" -Name OptInOrOutPreference -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\services\NvTelemetryContainer" -Name Start -Type "DWORD" -Value 4 -Force
		Set-ItemProperty -Path "HKLM:\Software\NVIDIA Corporation\Global\Startup\SendTelemetryData" -Name 0 -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\nvlddmkm\Global\Startup" -Name "SendTelemetryData" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\services\NvTelemetryContainer" -Name "Start" -Type "DWORD" -Value 4 -Force
		Stop-Service NvTelemetryContainer
		Set-Service NvTelemetryContainer -StartupType Disabled
		#Delete NVIDIA residual telemetry files
		Remove-Item -Recurse $env:systemdrive\System32\DriverStore\FileRepository\NvTelemetry*.dll
		Remove-Item -Recurse "$env:ProgramFiles\NVIDIA Corporation\NvTelemetry" 
		Write-Host "Disabling Gamebar..."
		If (!(Test-Path "HKLM:\Software\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\GameDVR" -Force 
		}
		New-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\current\device\Update" -Name ExcludeWUDriversInQualityUpdate -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\default\Update" -Name ExcludeWUDriversInQualityUpdate -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKLM:\Software\Microsoft\PolicyManager\default\Update\" -Name "ExcludeWUDriversInQualityUpdates" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\default\Update\ExcludeWUDriversInQualityUpdates" -Name Value -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\WindowsUpdate\UX\Settings" -Name ExcludeWUDriversInQualityUpdate -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate" -Name ExcludeWUDriversInQualityUpdate -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\WMDRM" -Name DisableOnline -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Edge" -Name BlockThirdPartyCookies -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Edge" -Name AutofillCreditCardEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Edge" -Name SyncDisabled -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\MicrosoftEdge\Main" -Name AllowPrelaunch -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\MicrosoftEdge\" -Name "TabPreloader" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\MicrosoftEdge\TabPreloader" -Name AllowTabPreloading -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\" -Name "MicrosoftEdge.exe" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\MicrosoftEdge.exe" -Name Debugger -Type "String" -Value "%windir%\System32\taskkill.exe" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Edge" -Name BackgroundModeEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft" -Name DoNotUpdateToEdgeWithChromium -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\GameDVR" -Name AllowgameDVR -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name GameDVR_Enabled -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\System\" -Name "GameConfigStore" -Force
		Set-ItemProperty -Path "HKLM:\System\GameConfigStore" -Name GameDVR_Enabled -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\CurrentControlSet\" -Name "Control" -Force
		Set-ItemProperty -Path "HKLM:\Software\CurrentControlSet\Control" -Name SvcHostSplitThresholdInKB -Type "DWORD" -Value 04000000 -Force
		New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\" -Name "GameDVR" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\GameDVR" -Name AppCaptureEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\GameDVR" -Name HistoricalCaptureEnabled -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\" -Name "GameDVR" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\GameDVR" -Name AppCaptureEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLm:\Software\Microsoft\Windows\CurrentVersion\GameDVR" -Name HistoricalCaptureEnabled -Type "DWORD" -Value 0 -Force
		Write-Host "Disabling 3rd Party Telemetry..."
	
		Write-HOst "Disabling Logitech Gaming service...."
		Stop-Service "LogiRegistryService"
		Set-Service "LogiRegistryService" -StartupType Disabled
		Write-Host "Disabling Razer Game Scanner Service..."
		Stop-Service "Razer Game Scanner Service"
		Set-Service  "Razer Game Scanner Service" -StartupType Disabled
		Write-Host "Disabling Visual Studio Code Telemetry..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\VSCommon\14.0\SQM" -Name "OptIn" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\VSCommon\15.0\SQM" -Name "OptIn" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\VSCommon\16.0\SQM" -Name "OptIn" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\14.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\15.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\16.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\14.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\15.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\16.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\VisualStudio\Telemetry" -Name TurnOffSwitch -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\VisualStudio\Feedback" -Name "DisableFeedbackDialog" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\VisualStudio\Feedback" -Name "DisableEmailInput" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\VisualStudio\Feedback" -Name "DisableScreenshotCapture" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\VisualStudio\Telemetry" -Name "TurnOffSwitch" -Type "DWORD" -Value 1 -Force
		Stop-Service "VSStandardCollectorService150"
		Set-Service "VSStandardCollectorService150" -StartupType Disabled
		
		Write-Host "Disabling Google Chrome Telemetry..."
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name "ChromeCleanupEnabled" -Type "String" -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name "ChromeCleanupReportingEnabled" -Type "String" -Value 0 -Force
		New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Name "MetricsReportingEnabled" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "DisallowRun" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\DisallowRun" -Name "1" -Type "String" -Value "software_reporter_tool.exe" /f
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\software_reporter_tool.exe" -Name Debugger -Type "String" -Value "%windir%\System32\taskkill.exe" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Google\Chrome" -Name "ChromeCleanupEnabled" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Google\Chrome" -Name "ChromeCleanupReportingEnabled" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Google\Chrome" -Name "MetricsReportingEnabled" -Type "String" -Value 0 -Force
		#Disable Windows Password Reveal Option
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CredUI" -Name DisablePasswordReveal -Type "DWORD" -Value 1 -Force
		#Disable storing sensitive data in Acrobat Reader DC
		Set-ItemProperty -Path "HKCU:\Software\Adobe\Adobe ARM\1.0\ARM" -Name "iCheck" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" -Name "cSharePoint" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bToggleAdobeDocumentServices" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bToggleAdobeSign" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bTogglePrefSync" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bToggleWebConnectors" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bAdobeSendPluginToggle" -Type "String" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockdown\cServices" -Name "bUpdater" -Type "String" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Adobe\Adobe ARM\1.0\ARM" -Name "iCheck" -Type "String" -Value 0 -Force
		
		#Disable Adobe Acrobat Update Service
		Set-Service "Adobe Acrobat Update Task" -StartupType Disabled
		Set-Service "Adobe Flash Player Updater" -StartupType Disabled
		Set-Service "adobeflashplayerupdatesvc" -StartupType Disabled
		Set-Service "adobeupdateservice" -StartupType Disabled
		Set-Service "AdobeARMservice" -StartupType Disabled
		
		#Disable CCleaner Health Check
		Stop-Process -Force -Force -Name ccleaner.exe
		Stop-Process -Force -Force -Name ccleaner64.exe
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "HomeScreen" -Type "String" -Value 2 -Force
		
		#Disable CCleaner Monitoring && more
		Stop-Process -Force -Force -Name "IMAGENAME eq CCleaner*"
		schtasks /Change /TN "CCleaner Update" /Disable
		Get-ScheduledTask -TaskName "CCleaner Update" | Disable-ScheduledTask
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "Monitoring" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "HelpImproveCCleaner" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "SystemMonitoring" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "UpdateAuto" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "UpdateCheck" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Piriform\CCleaner" -Name "CheckTrialOffer" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)HealthCheck" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)QuickClean" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)QuickCleanIpm" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)GetIpmForTrial" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)SoftwareUpdater" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Piriform\CCleaner" -Name "(Cfg)SoftwareUpdaterIpm" -Type "DWORD" -Value 0 -Force
		
		#Disable Dropbox Update service
		Set-Service dbupdate -StartupType Disabled
		Set-Service dbupdatem -StartupType Disabled
		Get-ScheduledTask -TaskName "DropboxUpdateTaskMachineCore" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "DropboxUpdateTaskMachineUA" | Disable-ScheduledTask
		schtasks /Change /TN "DropboxUpdateTaskMachineCore" /Disable
		schtasks /Change /TN "DropboxUpdateTaskMachineUA" /Disable
		
		#Disable Google update service
		Get-ScheduledTask -TaskName "GoogleUpdateTaskMachineCore" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "GoogleUpdateTaskMachineUA" | Disable-ScheduledTask
		schtasks /Change /TN "GoogleUpdateTaskMachineCore" /Disable
		schtasks /Change /TN "GoogleUpdateTaskMachineUA" /Disable
		
		#Disable Media Player Telemetry
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\MediaPlayer\Preferences" -Name "UsageTracking" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventCDDVDMetadataRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventMusicFileMetadataRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventRadioPresetsRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\WMDRM" -Name "DisableOnline" -Type "DWORD" -Value 1 -Force
		Set-Service WMPNetworkSvc -StartupType Disabled
		
		#Disable Microsoft Office Telemetry
		Get-ScheduledTask -TaskName "OfficeTelemetryAgentFallBack2016" | Disable-ScheduledTask
		Get-ScheduledTask -TaskName "OfficeTelemetryAgentLogOn2016" | Disable-ScheduledTask
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Office\15.0\osm" -Name "Enablelogging" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Office\15.0\osm" -Name "EnableUpload" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Office\16.0\osm" -Name "Enablelogging" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Office\16.0\osm" -Name "EnableUpload" -Type "DWORD" -Value 0 -Force
		
		#Disable Mozilla Firefox Telemetry
		Set-ItemProperty -Path "HKLM:\Software\Policies\Mozilla\Firefox" -Name "DisableTelemetry" -Type "DWORD" -Value 1 -Force
		#Disable default browser agent reporting policy
		Set-ItemProperty -Path "HKLM:\Software\Policies\Mozilla\Firefox" -Name "DisableDefaultBrowserAgent" -Type "DWORD" -Value 1 -Force
		#Disable default browser agent reporting services
		schtasks.exe /change /disable /tn "\Mozilla\Firefox Default Browser Agent 308046B0AF4A39CB"
		schtasks.exe /change /disable /tn "\Mozilla\Firefox Default Browser Agent D2CEEC440E2074BD"
		
		Import-Module -DisableNameChecking $PSScriptRoot\..\lib\Mkdir -Force .psm1
		Import-Module -DisableNameChecking $PSScriptRoot\..\lib\take-own.psm1
		
		Write-Host "Defuse Windows search settings"
		Set-WindowsSearchSetting -EnableWebResultsSetting $false
		
		Write-Host "Set general privacy options"
		#"Let websites provide locally relevant content by accessing my language list"
		Set-ItemProperty "HKCU:\Control Panel\International\User Profile" "HttpAcceptLanguageOptOut" 1
		#Locaton aware printing (changes default based on connected network)
		Mkdir "HKCU:\Printers\Defaults" -Force
		New-Item -Path "HKCU:\Printers\" -Name "Defaults" -Force
		Set-ItemProperty "HKCU:\Printers\Defaults" "NetID" "{00000000-0000-0000-0000-000000000000}"
		#"Send Microsoft info about how I write to help us improve typing and writing in the future"
		Mkdir "HKCU:\Software\Microsoft\Input\TIPC" -Force
		Set-ItemProperty "HKCU:\Software\Microsoft\Input\TIPC" "Enabled" 0
		#"Let apps use my advertising ID for experiencess across apps"
		Mkdir -Force "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo" "Enabled" 0
		#"Turn on SmartScreen Filter to check web content"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\AppHost" "EnableWebContentEvaluation" 0
		
		Write-Host "Disable synchronisation of settings"
		#These only apply if you log on using Microsoft account
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync" "BackupPolicy" 0x3c
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync" "DeviceMetadataUploaded" 0
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync" "PriorLogons" 1
		$groups = @(
			"Accessibility"
			"AppSync"
			"BrowserSettings"
			"Credentials"
			"DesktopTheme"
			"Language"
			"PackageState"
			"Personalization"
			"StartLayout"
			"Windows"
		)
		foreach ($group in $groups)
		{
			Mkdir -Force "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync\Groups\$group"
			Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\SettingSync\Groups\$group" "Enabled" 0
		}
		
		Write-Host "Set privacy policy accepted state to 0"
		#Prevents sending speech, inking and typing samples to MS (so Cortana
		#can learn to recognise you)
		Mkdir -Force "HKCU:\Software\Microsoft\Personalization\Settings"
		Set-ItemProperty "HKCU:\Software\Microsoft\Personalization\Settings" "AcceptedPrivacyPolicy" 0
		
		Write-Host "Do not scan contact informations"
		#Prevents sending contacts to MS (so Cortana can compare speech etc samples)
		Mkdir -Force "HKCU:\Software\Microsoft\InputPersonalization\TrainedDataStore"
		Set-ItemProperty "HKCU:\Software\Microsoft\InputPersonalization\TrainedDataStore" "HarvestContacts" 0
		
		Write-Host "Inking and typing settings"
		#Handwriting recognition personalization
		Mkdir -Force "HKCU:\Software\Microsoft\InputPersonalization"
		Set-ItemProperty "HKCU:\Software\Microsoft\InputPersonalization" "RestrictImplicitInkCollection" 1
		Set-ItemProperty "HKCU:\Software\Microsoft\InputPersonalization" "RestrictImplicitTextCollection" 1
		
		Write-Host "Disable background access of default apps"
		foreach ($key in (Get-ChildItem "HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications"))
		{
			Set-ItemProperty ("HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications\" + $key.PSChildName) "Disabled" 1
		}
		
		Write-Host "Denying device access"
		#Disable sharing information with unpaired devices
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\LooselyCoupled" "Type" "LooselyCoupled"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\LooselyCoupled" "Value" "Deny"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\LooselyCoupled" "InitialAppValue" "Unspecified"
		
		Write-Host "Disable location sensor"
		Mkdir -Force "HKCU:\Software\Microsoft\Windows NT\CurrentVersion\Sensor\Permissions\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}"
		Set-ItemProperty "HKCU:\Software\Microsoft\Windows NT\CurrentVersion\Sensor\Permissions\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" "SensorPermissionState" 0
		
		Write-Host "Disable submission of Windows Defender findings (w/ elevated privileges)"
		Takeown-Registry("HKEY_LOCAL_MACHINE\Software\Microsoft\Windows Defender\Spynet")
		Set-ItemProperty "HKLM:\Software\Microsoft\Windows Defender\Spynet" "SpyNetReporting" 0 #write-protected even after takeown ?!
		Set-ItemProperty "HKLM:\Software\Microsoft\Windows Defender\Spynet" "SubmitSamplesConsent" 0
		
		Write-Host "Do not share wifi networks"
		$user = New-Object System.Security.Principal.NTAccount($env:UserName)
		$sid = $user.Translate([System.Security.Principal.SecurityIdentifier]).value
		Mkdir -Force ("HKLM:\Software\Microsoft\WcmSvc\wifinetworkmanager\features\" + $sid)
		Set-ItemProperty ("HKLM:\Software\Microsoft\WcmSvc\wifinetworkmanager\features\" + $sid) "FeatureStates" 0x33c
		Set-ItemProperty "HKLM:\Software\Microsoft\WcmSvc\wifinetworkmanager\features" "WiFiSenseCredShared" 0
		Set-ItemProperty "HKLM:\Software\Microsoft\WcmSvc\wifinetworkmanager\features" "WiFiSenseOpen" 0
		#Disable PowerShell 7+ Telemetry
		$POWERSHELL_Telemetry_OPTOUT = $true
		[System.Environment]::SetEnvironmentVariable('POWERSHELL_Telemetry_OPTOUT', 1, [System.EnvironmentVariableTarget]::Machine)
		Write-Host $POWERSHELL_Telemetry_OPTOUT
		
		#Disable NET Core CLI Telemetry
		$DOTNET_CLI_Telemetry_OPTOUT = $true
		[System.Environment]::SetEnvironmentVariable('DOTNET_CLI_Telemetry_OPTOUT', 1, [System.EnvironmentVariableTarget]::Machine)
		Write-Host $DOTNET_CLI_Telemetry_OPTOUT
		
		#Disable Office Telemetry
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\Common\ClientTelemetry" -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\ClientTelemetry" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\Common\ClientTelemetry" -Name "DisableTelemetry" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\ClientTelemetry" -Name "DisableTelemetry" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\Common\ClientTelemetry" -Name "VerboseLogging" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\ClientTelemetry" -Name "VerboseLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Outlook\Options\Mail" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Outlook\Options\Mail" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Outlook\Options\Mail" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Outlook\Options\Mail" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Outlook\Options\Calendar" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Outlook\Options\Calendar" -Name "EnableCalendarLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Outlook\Options\Calendar" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Outlook\Options\Calendar" -Name "EnableCalendarLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Word\Options" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Word\Options" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Word\Options" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Word\Options" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\OSM" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\OSM" -Name "EnableLogging" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\15.0\OSM" -Name "EnableUpload" -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\OSM" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\OSM" -Name "EnableLogging" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Office\16.0\OSM" -Name "EnableUpload" -Type "DWORD" -Value 0 -Force
		Write-Host "Optimizing Scheduled Tasks..."
		#Disable Office Telemetry Agent
		schtasks /Change /TN "\Microsoft\Windows\Maps\MapsUpdateTask" /disable
		schtasks /Change /TN "\Microsoft\Windows\Maps\MapsToastTask" /disable
		schtasks /Change /TN "\Microsoft\Windows\HelloFace\FODCleanupTask" /Disable
		schtasks /change /TN "Microsoft\Office\OfficeTelemetryAgentFallBack" /DISABLE
		schtasks /change /TN "Microsoft\Office\OfficeTelemetryAgentFallBack2016" /DISABLE
		schtasks /change /TN "Microsoft\Office\OfficeTelemetryAgentLogOn" /DISABLE
		schtasks /change /TN "Microsoft\Office\OfficeTelemetryAgentLogOn2016" /DISABLE
		#Disable Office Subscription Heartbeat
		schtasks /change /TN "Microsoft\Office\Office 15 Subscription Heartbeat" /DISABLE
		schtasks /change /TN "Microsoft\Office\Office 16 Subscription Heartbeat" /DISABLE
		#Disable Office feedback
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Common\Feedback" -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\Feedback" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Common\Feedback" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common\Feedback" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		#Disable Office Customer Experience Improvement Program
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Common" -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\15.0\Common" -Name "QMEnable" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Office\16.0\Common" -Name "QMEnable" -Type "DWORD" -Value 0 -Force
		
		#Breaks Windows Account Logon - While not recommended many people still use it
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\services\wlidsvc" -Name Start -Type "DWORD" -Value 4 -Force
		#Set-Service wlidsvc -StartupType Disabled
		
		#Disable Visual Studio Code Telemetry
		New-Item -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\14.0\SQM" -Force
		New-Item -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\15.0\SQM" -Force
		New-Item -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\16.0\SQM" -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\14.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\15.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\VSCommon\16.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Microsoft\VSCommon\14.0\SQM" -Force
		New-Item -Path "HKLM:\Software\Microsoft\VSCommon\15.0\SQM" -Force
		New-Item -Path "HKLM:\Software\Microsoft\VSCommon\16.0\SQM" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\14.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\15.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\VSCommon\16.0\SQM" -Name OptIn -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKCU:\Software\Microsoft\VisualStudio\Telemetry" -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\Feedback" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\VisualStudio\Telemetry" -Name TurnOffSwitch -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\Feedback" -Name DisableFeedbackDialog -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\Feedback" -Name DisableEmailInput -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\VisualStudio\Feedback" -Name DisableScreenshotCapture -Type "DWORD" -Value 1 -Force
		Stop-Service "VSStandardCollectorService150"
		Set-Service  "VSStandardCollectorService150" -StartupType Disabled
		
		#Disable Unnecessary Windows Services
		Stop-Service "MessagingService"
		Set-Service "MessagingService" -StartupType Disabled
		Stop-Service "PimIndexMaintenanceSvc"
		Set-Service "PimIndexMaintenanceSvc" -StartupType Disabled
		Stop-Service "RetailDemo"
		Set-Service "RetailDemo" -StartupType Disabled
		Stop-Service "MapsBroker"
		Set-Service "MapsBroker" -StartupType Disabled
		Stop-Service "DoSvc"
		Set-Service "DoSvc" -StartupType Disabled
		Stop-Service "OneSyncSvc"
		Set-Service "OneSyncSvc" -StartupType Disabled
		Stop-Service "UnistoreSvc"
		Set-Service "UnistoreSvc" -StartupType Disabled
		Write-Host "$($EnableStatus[0]) 'Get fun facts and tips, etc. on lock screen'..."
		
		$ContentDeliveryManagerDisableOnZero = @(
			"SubscribedContent-310093Enabled"
			"SubscribedContent-314559Enabled"
			"SubscribedContent-314563Enabled"
			"SubscribedContent-338387Enabled"
			"SubscribedContent-338388Enabled"
			"SubscribedContent-338389Enabled"
			"SubscribedContent-338393Enabled"
			"SubscribedContent-353698Enabled"
			"RotatingLockScreenOverlayEnabled"
			"RotatingLockScreenEnabled"
			# Prevents Apps from re-installing
			"ContentDeliveryAllowed"
			"FeatureManagementEnabled"
			"OemPreInstalledAppsEnabled"
			"PreInstalledAppsEnabled"
			"PreInstalledAppsEverEnabled"
			"RemediationRequired"
			"SilentInstalledAppsEnabled"
			"SoftLandingEnabled"
			"SubscribedContentEnabled"
			"SystemPaneSuggestionsEnabled"
		)
		
		Write-Warning " From Path: [$PathToCUContentDeliveryManager]."
		ForEach ($Name in $ContentDeliveryManagerDisableOnZero)
		{
			Write-Host "$($EnableStatus[0]) $($Name): $Zero."
			Set-ItemProperty -Path "$PathToCUContentDeliveryManager" -Name "$Name" -Type DWord -Value $Zero
		}
		
		Write-Host " Disabling 'Suggested Content in the Settings App'..."
		If (Test-Path "$PathToCUContentDeliveryManager\Subscriptions")
		{
			Remove-Item -Path "$PathToCUContentDeliveryManager\Subscriptions" -Recurse
		}
		
		Write-Host "$($EnableStatus[0]) 'Show Suggestions' in Start..."
		If (Test-Path "$PathToCUContentDeliveryManager\SuggestedApps")
		{
			Remove-Item -Path "$PathToCUContentDeliveryManager\SuggestedApps" -Recurse
		}
		
		
		
		Write-Host "$($EnableStatus[0]) Let apps use my advertising ID..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo" -Name "Enabled" -Type DWord -Value $Zero
		If (!(Test-Path "$PathToLMPoliciesAdvertisingInfo"))
		{
			New-Item -Path "$PathToLMPoliciesAdvertisingInfo" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesAdvertisingInfo" -Name "DisabledByGroupPolicy" -Type DWord -Value $One
		
		Write-Host "$($EnableStatus[0]) 'Let websites provide locally relevant content by accessing my language list'..."
		Set-ItemProperty -Path "HKCU:\Control Panel\International\User Profile" -Name "HttpAcceptLanguageOptOut" -Type DWord -Value $One
		
		
		
		# [@] (0 = Decline, 1 = Accept)
		Write-Host "$($EnableStatus[0]) Online Speech Recognition..."
		If (!(Test-Path "$PathToCUOnlineSpeech"))
		{
			New-Item -Path "$PathToCUOnlineSpeech" -Force
		}
		Set-ItemProperty -Path "$PathToCUOnlineSpeech" -Name "HasAccepted" -Type DWord -Value $Zero
		
		
		
		Set-ItemProperty -Path "$PathToCUInputPersonalization\TrainedDataStore" -Name "HarvestContacts" -Type DWord -Value $Zero
		Set-ItemProperty -Path "$PathToCUInputPersonalization" -Name "RestrictImplicitInkCollection" -Type DWord -Value $One
		Set-ItemProperty -Path "$PathToCUInputPersonalization" -Name "RestrictImplicitTextCollection" -Type DWord -Value $One
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -Type DWord -Value $Zero
		
		
		# [@] (0 = Security (Enterprise only), 1 = Basic Telemetry, 2 = Enhanced Telemetry, 3 = Full Telemetry)
		Write-Host "$($EnableStatus[0]) telemetry..."
		Set-ItemProperty -Path "$PathToLMPoliciesTelemetry" -Name "AllowTelemetry" -Type DWord -Value $Zero
		Set-ItemProperty -Path "$PathToLMPoliciesTelemetry2" -Name "AllowTelemetry" -Type DWord -Value $Zero
		Set-ItemProperty -Path "$PathToLMPoliciesTelemetry" -Name "AllowDeviceNameInTelemetry" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) send inking and typing data to Microsoft..."
		If (!(Test-Path "$PathToCUInputTIPC"))
		{
			New-Item -Path "$PathToCUInputTIPC" -Force
		}
		Set-ItemProperty -Path "$PathToCUInputTIPC" -Name "Enabled" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) Tailored Experiences..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" -Name "TailoredExperiencesWithDiagnosticDataEnabled" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) View diagnostic data..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Diagnostics\DiagTrack\EventTranscriptKey" -Name "EnableEventTranscript" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) feedback frequency..."
		If (!(Test-Path "$PathToCUSiufRules"))
		{
			New-Item -Path "$PathToCUSiufRules" -Force
		}
		If ((Test-Path "$PathToCUSiufRules\PeriodInNanoSeconds"))
		{
			Remove-ItemProperty -Path "$PathToCUSiufRules" -Name "PeriodInNanoSeconds"
		}
		Set-ItemProperty -Path "$PathToCUSiufRules" -Name "NumberOfSIUFInPeriod" -Type DWord -Value $Zero
		
		
		
		Write-Host "$($EnableStatus[0]) Activity History..."
		$ActivityHistoryDisableOnZero = @(
			"EnableActivityFeed"
			"PublishUserActivities"
			"UploadUserActivities"
		)
		
		Write-Warning " From Path: [$PathToLMActivityHistory]."
		ForEach ($Name in $ActivityHistoryDisableOnZero)
		{
			Write-Host "$($EnableStatus[0]) $($Name): $Zero."
			Set-ItemProperty -Path "$PathToLMActivityHistory" -Name "$ActivityHistoryDisableOnZero" -Type DWord -Value $Zero
		}
		
		
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "EnableStatus" -Type DWord -Value $Zero
		
		
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userNotificationListener" -Name "Value" -Value "Deny"
		
		
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\appDiagnostics" -Name "Value" -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\appDiagnostics" -Name "Value" -Value "Deny"
		
		
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userAccountInformation" -Name "Value" -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userAccountInformation" -Name "Value" -Value "Deny"
		
		
		
		# Disable sharing information with unpaired devices
		Write-Host " Denying device access..."
		If (!(Test-Path "$PathToCUDeviceAccessGlobal\LooselyCoupled"))
		{
			New-Item -Path "$PathToCUDeviceAccessGlobal\LooselyCoupled" -Force
		}
		Set-ItemProperty -Path "$PathToCUDeviceAccessGlobal\LooselyCoupled" -Name "Value" -Value "Deny"
		ForEach ($key in (Get-ChildItem "$PathToCUDeviceAccessGlobal"))
		{
			If ($key.PSChildName -EQ "LooselyCoupled")
			{
				continue
			}
			Write-Host "$($EnableStatus[1]) Setting $($key.PSChildName) value to 'Deny'..."
			Set-ItemProperty -Path ("$PathToCUDeviceAccessGlobal\" + $key.PSChildName) -Name "Value" -Value "Deny"
		}
		
		
		
		Write-Host "$($EnableStatus[0]) Background Apps..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" -Name "GlobalUserDisabled" -Type DWord -Value $One
		Set-ItemProperty -Path "$PathToCUSearch" -Name "BackgroundAppGlobalToggle" -Type DWord -Value $Zero
		
		
		
		If (!(Test-Path "$PathToLMPoliciesWindowsUpdate"))
		{
			New-Item -Path "$PathToLMPoliciesWindowsUpdate" -Force
		}
		# [@] (2 = Notify before download, 3 = Automatically download and notify of installation)
		# [@] (4 = Automatically download and schedule installation, 5 = Automatic Updates is required and users can configure it)
		Write-Host " Disabling Automatic Download and Installation of Windows Updates..."
		Set-ItemProperty -Path "$PathToLMPoliciesWindowsUpdate" -Name "AUOptions" -Type DWord -Value 2
		
		# [@] (0 = Enable Automatic Updates, 1 = Disable Automatic Updates)
		Write-Host "$($EnableStatus[1]) Automatic Updates..."
		Set-ItemProperty -Path "$PathToLMPoliciesWindowsUpdate" -Name "NoAutoUpdate" -Type DWord -Value $Zero
		
		# [@] (0 = Every day, 1~7 = The days of the week from Sunday (1) to Saturday (7) (Only valid if AUOptions = 4))
		Write-Host "Setting Scheduled Day to Every day..."
		Set-ItemProperty -Path "$PathToLMPoliciesWindowsUpdate" -Name "ScheduledInstallDay" -Type DWord -Value 0
		
		# [@] (0-23 = The time of day in 24-hour format)
		Write-Host " Setting Scheduled time to 03h00m..."
		Set-ItemProperty -Path "$PathToLMPoliciesWindowsUpdate" -Name "ScheduledInstallTime" -Type DWord -Value 3
		
		Write-Host "[=] Enabling automatic driver updates..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" -Name "SearchOrderConfig" -Type DWord -Value 1
		
		Write-Host "$($EnableStatus[1]) Change Windows Updates to 'Notify to schedule restart'..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "UxOption" -Type DWord -Value $One
		
		# [@] (0 = Off, 1 = Local Network only, 2 = Local Network private peering only)
		# [@] (3 = Local Network and Internet,  99 = Simply Download mode, 100 = Bypass mode)
		Write-Host "$($EnableStatus[1]) Restricting Windows Update P2P downloads for Local Network only..."
		If (!(Test-Path "$PathToLMDeliveryOptimizationCfg"))
		{
			New-Item -Path "$PathToLMDeliveryOptimizationCfg" -Force
		}
		Set-ItemProperty -Path "$PathToLMDeliveryOptimizationCfg" -Name "DODownloadMode" -Type DWord -Value $One
		
		
		
		Write-Host "Enabling Automatic Recommended Troubleshooting, then notify me..."
		if (!(Test-Path "$PathToLMWindowsTroubleshoot"))
		{
			New-Item -Path "$PathToLMWindowsTroubleshoot" -Force
		}
		Set-ItemProperty -Path "$PathToLMWindowsTroubleshoot" -Name "UserPreference" -Type DWord -Value 3
		
		Write-Host "$($EnableStatus[0]) Windows Spotlight Features..."
		Write-Host "$($EnableStatus[0]) Third Party Suggestions..."
		Write-Host "$($EnableStatus[0]) More Telemetry Features..."
		
		$CloudContentDisableOnOne = @(
			"DisableWindowsSpotlightFeatures"
			"DisableWindowsSpotlightOnActionCenter"
			"DisableWindowsSpotlightOnSettings"
			"DisableWindowsSpotlightWindowsWelcomeExperience"
			"DisableTailoredExperiencesWithDiagnosticData" # Tailored Experiences
			"DisableThirdPartySuggestions"
		)
		
		Write-Warning " From Path: [$PathToCUPoliciesCloudContent]."
		ForEach ($Name in $CloudContentDisableOnOne)
		{
			Write-Host "$($EnableStatus[0]) $($Name): $One."
			Set-ItemProperty -Path "$PathToCUPoliciesCloudContent" -Name "$Name" -Type DWord -Value $One
		}
		If (!(Test-Path "$PathToCUPoliciesCloudContent"))
		{
			New-Item -Path "$PathToCUPoliciesCloudContent" -Force
		}
		Set-ItemProperty -Path "$PathToCUPoliciesCloudContent" -Name "ConfigureWindowsSpotlight" -Type DWord -Value 2
		Set-ItemProperty -Path "$PathToCUPoliciesCloudContent" -Name "IncludeEnterpriseSpotlight" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) Apps Suggestions..."
		If (!(Test-Path "$PathToLMPoliciesCloudContent"))
		{
			New-Item -Path "$PathToLMPoliciesCloudContent" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesCloudContent" -Name "DisableThirdPartySuggestions" -Type DWord -Value $One
		Set-ItemProperty -Path "$PathToLMPoliciesCloudContent" -Name "DisableWindowsConsumerFeatures" -Type DWord -Value $One
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -Type DWord -Value $One
		If (!(Test-Path "$PathToLMPoliciesSQMClient"))
		{
			New-Item -Path "$PathToLMPoliciesSQMClient" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesSQMClient" -Name "CEIPEnable" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppCompat" -Name "AITEnable" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppCompat" -Name "DisableUAR" -Type DWord -Value $One
		
		# Details: https://docs.microsoft.com/pt-br/windows-server/remote/remote-desktop-services/rds-vdi-recommendations-2004#windows-system-startup-event-traces-autologgers
		Write-Host "$($EnableStatus[0]) some startup event traces (AutoLoggers)..."
		If (!(Test-Path "$PathToLMAutoLogger\AutoLogger-Diagtrack-Listener"))
		{
			New-Item -Path "$PathToLMAutoLogger\AutoLogger-Diagtrack-Listener" -Force
		}
		Set-ItemProperty -Path "$PathToLMAutoLogger\AutoLogger-Diagtrack-Listener" -Name "Start" -Type DWord -Value $Zero
		Set-ItemProperty -Path "$PathToLMAutoLogger\SQMLogger" -Name "Start" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) 'WiFi Sense: HotSpot Sharing'..."
		If (!(Test-Path "$PathToLMPoliciesToWifi\AllowWiFiHotSpotReporting"))
		{
			New-Item -Path "$PathToLMPoliciesToWifi\AllowWiFiHotSpotReporting" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesToWifi\AllowWiFiHotSpotReporting" -Name "value" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) 'WiFi Sense: Shared HotSpot Auto-Connect'..."
		If (!(Test-Path "$PathToLMPoliciesToWifi\AllowAutoConnectToWiFiSenseHotspots"))
		{
			New-Item -Path "$PathToLMPoliciesToWifi\AllowAutoConnectToWiFiSenseHotspots" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesToWifi\AllowAutoConnectToWiFiSenseHotspots" -Name "value" -Type DWord -Value $Zero
		
		
		
		Write-Host "$($EnableStatus[0]) Game Bar & Game DVR..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\ApplicationManagement\AllowGameDVR" -Name "value" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\GameDVR" -Name "AppCaptureEnabled" -Type DWord -Value $Zero
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value $Zero
		If (!(Test-Path "$PathToLMPoliciesGameDVR"))
		{
			New-Item -Path "$PathToLMPoliciesGameDVR" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesGameDVR" -Name "AllowGameDVR" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[1]) game mode..."
		Set-ItemProperty -Path "$PathToCUGameBar" -Name "AllowAutoGameMode" -Type DWord -Value $One
		Set-ItemProperty -Path "$PathToCUGameBar" -Name "AutoGameModeEnabled" -Type DWord -Value $One
		
		
		
		Write-Host "Enable Hardware Accelerated GPU Scheduling... (Windows 10 20H1+ - Needs Restart)"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "HwSchMode" -Type DWord -Value 2
		
		# Show Task Manager details - Applicable to 1607 and later - Although this functionality exist even in earlier versions, the Task Manager's behavior is different there and is not compatible with this tweak
		Write-Host "$($EnableStatus[1]) Showing task manager details..."
		$taskmgr = Start-Process -WindowStyle Hidden -FilePath taskmgr.exe -PassThru
		Do
		{
			Start-Sleep -Milliseconds 100
			$preferences = Get-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -ErrorAction SilentlyContinue
		}
		Until ($preferences)
		Stop-Process $taskmgr
		$preferences.Preferences[28] = 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -Type Binary -Value $preferences.Preferences
		Set-ItemProperty -Path "$PathToLMPrefetchParams" -Name "EnableSuperfetch" -Type DWord -Value $Zero
		
		Write-Host "$($EnableStatus[0]) Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value $Zero
		
		Write-Host " Disabling Ndu High RAM Usage..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\Ndu" -Name "Start" -Type DWord -Value 4
		
		# Details: https://www.tenforums.com/tutorials/94628-change-split-threshold-svchost-exe-windows-10-a.html
		# Will reduce Processes number considerably on > 4GB of RAM systems
		Write-Host "Setting SVCHost to match RAM size..."
		$Ram = (Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum / 1kb
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value $Ram
		
		Write-Host "Unlimiting your network bandwidth for all your system..." # Based on this Chris Titus video: https://youtu.be/7u1miYJmJ_4
		If (!(Test-Path "$PathToLMPoliciesPsched"))
		{
			New-Item -Path "$PathToLMPoliciesPsched" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesPsched" -Name "NonBestEffortLimit" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 0xffffffff
		
		# [@] (2 = Disable, 4 = Enable)
		Write-Host " Enabling Windows Store apps Automatic Updates..."
		If (!(Test-Path "$PathToLMPoliciesWindowsStore"))
		{
			New-Item -Path "$PathToLMPoliciesWindowsStore" -Force
		}
		If ((Get-Item "$PathToLMPoliciesWindowsStore").GetValueNames() -like "AutoDownload")
		{
			Remove-ItemProperty -Path "$PathToLMPoliciesWindowsStore" -Name "AutoDownload"
		}
		# Code from: https://www.reddit.com/r/PowerShell/comments/5iarip/set_proxy_settings_to_automatically_detect/?utm_source=share&utm_medium=web2x&context=3
		Write-Host "Fixing Edge slowdown by NOT Automatically Detecting Settings..."
		$key = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Connections'
		$data = (Get-ItemProperty -Path $key -Name DefaultConnectionSettings).DefaultConnectionSettings
		$data[8] = 3
		Set-ItemProperty -Path $key -Name DefaultConnectionSettings -Value $data
	
		Write-Host "Stopping and disabling Superfetch service..."
		Stop-Service "SysMain" -WarningAction SilentlyContinue
		Set-Service "SysMain" -StartupType Disabled
		Write-Host "Done!"
		Write-Host "Optimizing SSD..."
		fsutil behavior set DisableLastAccess 1
		fsutil behavior set EncryptPagingFile 0
		Write-Host "Apply Regedit..."
		Import-Module BitsTransfer
		Start-BitsTransfer -Source "https://download1639.mediafire.com/bnhbc7z29zgg/ktdqjcwj13ebyvm/RegistryTweaks.bat" -Destination "$env:USERPROFILE\Downloads\RegistryTweaks.bat"
		powershell -executionpolicy bypass "$env:USERPROFILE\Dowloads\RegistryTweaks.bat"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 4294967295
		Write-Host "Disabling Xbox features..."
		Get-AppxPackage "Microsoft.XboxApp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxIdentityProvider" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.XboxSpeechToTextOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxGameOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Xbox.TCUI" | Remove-AppxPackage
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"
		}
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "GPU Priority" -Type DWord -Value 8
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "Priority" -Type DWord -Value 6
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "Scheduling Category" -Type String -Value "High"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "SFIO Priority" -Type String -Value "High"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\PriorityControl" -Name "IRQ8Priority" -Type DWord -Value 1
		Write-Host "Forcing RAW Mouse Input and Disabling Enhance Pointer Precision..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSpeed" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold1" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold2" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSensitivity" -Type String -Value "10"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseHoverTime" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseTrails" -Type String -Value "0"
		$checkscreenscale = [Math]::round([DPI]::scaling(), 2) * 100
		if ($checkscreenscale -eq "100")
		{
			Write-Host "Windows screen scale is Detected as 100%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,0C,00,00,00,00,00,80,99,19,00,00,00,00,00,40,66,26,00,00,00,00,00,00,33,33,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "125")
		{
			Write-Host "Windows screen scale is Detected as 125%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,00,00,10,00,00,00,00,00,00,00,20,00,00,00,00,00,00,00,30,00,00,00,00,00,00,00,40,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "150")
		{
			Write-Host "Windows screen scale is Detected as 150%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,30,33,13,00,00,00,00,00,60,66,26,00,00,00,00,00,90,99,39,00,00,00,00,00,C0,CC,4C,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "175")
		{
			Write-Host "Windows screen scale is Detected as 175%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,60,66,16,00,00,00,00,00,C0,CC,2C,00,00,00,00,00,20,33,43,00,00,00,00,00,80,99,59,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "200")
		{
			Write-Host "Windows screen scale is Detected as 200%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,90,99,19,00,00,00,00,00,20,33,33,00,00,00,00,00,B0,CC,4C,00,00,00,00,00,40,66,66,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "225")
		{
			Write-Host "Windows screen scale is Detected as 225%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,1C,00,00,00,00,00,80,99,39,00,00,00,00,00,40,66,56,00,00,00,00,00,00,33,73,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "250")
		{
			Write-Host "Windows screen scale is Detected as 250%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,00,00,20,00,00,00,00,00,00,00,40,00,00,00,00,00,00,00,60,00,00,00,00,00,00,00,80,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "300")
		{
			Write-Host "Windows screen scale is Detected as 300%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,60,66,26,00,00,00,00,00,C0,CC,4C,00,00,00,00,00,20,33,73,00,00,00,00,00,80,99,99,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "350")
		{
			Write-Host "Windows screen scale is Detected as 350%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,2C,00,00,00,00,00,80,99,59,00,00,00,00,00,40,66,86,00,00,00,00,00,00,33,B3,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		else
		{
			Write-Host "HOUSTON WE HAVE A PROBLEM! screen scale is not set to traditional value, nothing has been set!"
		}
		$errpref = $ErrorActionPreference #save actual preference
		Write-Host "Disabling High Precision Event Timer..."
		$ErrorActionPreference = "silentlycontinue"
		Invoke-WebRequest -Uri "https://git.io/JkrLn" -OutFile "$Env:windir\system32\SetTimerResolutionService.exe" -ErrorAction SilentlyContinue
		New-Service -name "SetTimerResolutionService" -BinaryPathName "$Env:windir\system32\SetTimerResolutionService.exe" -StartupType Automatic -ErrorAction SilentlyContinue
		bcdedit /set x2apicpolicy Enable
		bcdedit /set configaccesspolicy Default
		bcdedit /set MSI Default
		bcdedit /set usephysicaldestination No
		Fsutil behavior query memoryusage
		Fsutil behavior set memoryusage 2
		bcdedit /set usefirmwarepcisettings No
		bcdedit /deletevalue useplatformclock
		bcdedit /set disabledynamictick yes
		bcdedit /set useplatformtick Yes
		bcdedit /set tscsyncpolicy Enhanced
		bcdedit /timeout 10
		bcdedit /set nx optout
		bcdedit /set bootux disabled
		bcdedit /set disabledynamictick yes
		bcdedit /set useplatformtick yes
		bcdedit /set useplatformclock false
		bcdedit /set tscsyncpolicy enhanced
		bcdedit /set x2apicpolicy enable
		wmic path Win32_PnPEntity where "name='High precision event timer'" call disable
		Write-Host "Disabling display and sleep mode timeouts..."
		powercfg /X monitor-timeout-ac 0
		powercfg /X monitor-timeout-dc 0
		powercfg /X standby-timeout-ac 0
		powercfg /X standby-timeout-dc 0
		Write-Host "Enabling Gaming Mode..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "AllowAutoGameMode" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "AutoGameModeEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "ShowStartupPanel" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "GamePanelStartupTipIndex" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "UseNexusForGameBarEnabled" -Type DWord -Value 0
		Write-Host "Enabling HAGS..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "HwSchMode" -Type DWord -Value 2
		Write-Host "Enabling and Activating Bitsum Highest Performance Power Plan..."
		Invoke-WebRequest -Uri "https://git.io/JsWhn" -OutFile "$Env:windir\system32\Bitsum-Highest-Performance.pow" -ErrorAction SilentlyContinue
		powercfg -import "$Env:windir\system32\Bitsum-Highest-Performance.pow" e6a66b66-d6df-666d-aa66-66f66666eb66
		powercfg -setactive e6a66b66-d6df-666d-aa66-66f66666eb66
		Write-Host "Disabling Core Parking on current PowerPlan Ultimate Performance..."
		powercfg -attributes SUB_PROCESSOR CPMINCORES -ATTRIB_HIDE
		Powercfg -setacvalueindex scheme_current sub_processor CPMINCORES 100
		Powercfg -setactive scheme_current
		Write-Host "Disabling DMA memory protection and cores isolation..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		bcdedit /set vsmlaunchtype Off
		bcdedit /set vm No
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE" -Name "DisableExternalDMAUnderLock" -Type DWord -Value 0
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "EnableVirtualizationBasedSecurity" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "HVCIMATRequired" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disabling Process and Kernel Mitigations..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		ForEach ($v in (Get-Command -Name "Set-ProcessMitigation").Parameters["Disable"].Attributes.ValidValues) { Set-ProcessMitigation -System -Disable $v.ToString() -ErrorAction SilentlyContinue }
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "DisableExceptionChainValidation" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "KernelSEHOPEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "EnableCfg" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disabling drivers get paged into virtual memory..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "DisablePagingExecutive" -Type DWord -Value 1
		Write-Host "Enabling big system memory caching to improve microstuttering..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "LargeSystemCache" -Type DWord -Value 1
		Write-Host "Forcing contiguous memory allocation in the DirectX Graphics Kernel..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "DpiMapIommuContiguous" -Type DWord -Value 1
		Write-Host "Forcing Windows to stop tolerating high DPC/ISR latencies..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatencyCheckEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceDefault" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceFSVP" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyTolerancePerfOverride" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceScreenOffIR" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceVSyncEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "RtlCapabilityCheckLatency" -Type DWord -Value 1
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleShortTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleVeryLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceMemory" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContextMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceOther" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceTimerPeriod" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MaxIAverageGraphicsLatencyInOneBucket" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MiracastPerfTrackGraphicsLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorRefreshLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "TransitionLatency" -Type DWord -Value 1
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Decreasing mouse and keyboard buffer sizes..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\mouclass\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\mouclass\Parameters" -Name "MouseDataQueueSize" -Type DWord -Value 0x00000010
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\kbdclass\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\kbdclass\Parameters" -Name "KeyboardDataQueueSize" -Type DWord -Value 0x00000010
		$ErrorActionPreference = $errpref #restore previous preference
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		$NetworkIDS = @(
			(Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\*").PSChildName
		)
		foreach ($NetworkID in $NetworkIDS)
		{
			Write-Host "Disabling Nagles Algorithm..."
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\$NetworkID" -Name "TcpAckFrequency" -Type DWord -Value 1
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\$NetworkID" -Name "TCPNoDelay" -Type DWord -Value 1
		}
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Fixing White Games Shortcuts created by game launchers...."
		choco Installing -y setuserfta
		Start-Sleep -s 5
		Push-Location
		Set-Location "$env:ProgramData\chocolatey\lib\setuserfta\tools\SetUserFTA\"
		SetUserFTA.exe del .url
		SetUserFTA.exe .url, InternetShortcut
		Pop-Location
		choco unInstalling -y setuserfta
		Write-Host "Applying PC Optimizations..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 4294967295
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name FeatureSettingsOverride -Type "DWORD" -Value 72 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name FeatureSettingsOverrideMask -Type "DWORD" -Value 3 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Virtualization" -Name MinVmVersionForCpuBasedMitigations -Type "String" -Value "1.0" -Force
		Write-Host "Disabling Xbox features..."
		Get-AppxPackage "Microsoft.XboxApp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxIdentityProvider" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.XboxSpeechToTextOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxGameOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Xbox.TCUI" | Remove-AppxPackage
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Stopping and disabling Unessessary Services For Gaming..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Stop-Service "wisvc" -WarningAction SilentlyContinue
		Set-Service "wisvc" -StartupType Disabled
		Stop-Service "MapsBroker" -WarningAction SilentlyContinue
		Set-Service "MapsBroker" -StartupType Disabled
		Stop-Service "UmRdpService" -WarningAction SilentlyContinue
		Set-Service "UmRdpService" -StartupType Disabled
		Stop-Service "TrkWks" -WarningAction SilentlyContinue
		Set-Service "TrkWks" -StartupType Disabled
		Stop-Service "TermService" -WarningAction SilentlyContinue
		Set-Service "TermService" -StartupType Disabled
		Stop-Service "PcaSvc" -WarningAction SilentlyContinue
		Set-Service "PcaSvc" -StartupType Disabled
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disable Xbox Game Tips ..."
		if ((Get-AppxPackage -Name Microsoft.XboxGamingOverlay) -or (Get-AppxPackage -Name Microsoft.GamingApp))
		{
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\GameBar -Name ShowStartupPanel -PropertyType DWord -Value 0 -Force
		}
		Write-Host "Disable Audit Process ..."
		auditpol /set /subcategory:"{0CCE922B-69AE-11D9-BED3-505054503030}" /success:disable /failure:disable
		Write-Host "Applying Latency Tweaks..."
		#Increase Diffie-Hellman key (DHK) exchange to 4096-bit
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" -Force -Name ServerMinKeyBitLength -Type "DWORD" -Value 0x00001000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" -Force -Name ClientMinKeyBitLength -Type "DWORD" -Value 0x00001000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" -Force -Name Enabled -Type "DWORD" -Value 0x00000001
		
		#Disable RC2 cipher
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 40/128" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 56/128" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 128/128" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 40/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 56/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 128/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable RC4 cipher
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 128/128" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 64/128" -Force  
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 56/128" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 40/128" -Force  
		New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 128/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 64/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 56/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 40/128" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable DES cipher
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\DES 56" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\DES 56/56" -Force  
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\DES 56" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\DES 56/56" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable 3DES (Triple DES) cipher
	    New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" -Force  
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" -Force -Name Enabled -Type "DWORD" -Value 0x00000000       
		
		#Disable MD5 hash function
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\MD5" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\MD5" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable SHA1
		#New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\SHA" -Force
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\SHA" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Disable null cipher
		#New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\NULL" -Force
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\NULL" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		
		#Force not to respond to renegotiation requests
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL" -Force -Name AllowInsecureRenegoClients -Type "DWORD" -Value 0x00000000
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL" -Force -Name AllowInsecureRenegoServers -Type "DWORD" -Value 0x00000000
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL" -Force -Name DisableRenegoOnServer -Type "DWORD" -Value 0x00000001
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL" -Force -Name UseScsvForTls -Type "DWORD" -Value 0x00000001
		
		#Disable SSL v2
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Server" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Client" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		
		#Disable SSL v3
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Server" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Client" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		
		#Enable TLS 1.0
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client" -Force -Name Enabled -Type "DWORD" -Value 0x00000000
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0x00000001
		
		#Enable DTLS 1.0
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.0\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable TLS 1.1
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable DTLS 1.1
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Server" -Force -Name Enabled -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.1\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable TLS 1.2
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable TLS 1.3
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable DTLS 1.3
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Server" -Force
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Client" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Server" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Server" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Client" -Force -Name Enabled -Type "DWORD" -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\DTLS 1.3\Client" -Force -Name DisabledByDefault -Type "DWORD" -Value 0
		
		#Enable Strong Authentication for .NET applications (TLS 1.2)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v2.0.50727" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v2.0.50727" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v3.0" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v3.0" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v4.0.30319" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v4.0.30319" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v2.0.50727" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v2.0.50727" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v3.0" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v3.0" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v4.0.30319" -Force -Name SchUseStrongCrypto -Type "DWORD" -Value 0x00000001
		Set-ItemProperty -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v4.0.30319" -Force -Name SystemDefaultTlsVersions -Type "DWORD" -Value 0x00000001
		Write-Host "SMB Optimizations"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "DisableBandwidthThrottling" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "FileInfoCacheEntriesMax" -Type "DWORD" -Value 1024 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "DirectoryCacheEntriesMax" -Type "DWORD" -Value 1024 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" -Name "FileNotFoundCacheEntriesMax" -Type "DWORD" -Value 2048 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type "DWORD" -Value 20 -Force
		Set-SmbServerConfiguration -EnableMultiChannel $true -Force
		Set-SmbServerConfiguration -MaxChannelPerSession 16 -Force
		Set-SmbServerConfiguration -ServerHidden $False -AnnounceServer $False -Force
		Set-SmbServerConfiguration -EnableLeasing $false -Force
		Set-SmbClientConfiguration -EnableLargeMtu $true -Force
		Set-SmbClientConfiguration -EnableMultiChannel $true -Force
		#Do not let apps on other devices open and message apps on this device, and vice versa
		New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\CDP" -Name RomeSdkChannelUserAuthzPolicy -PropertyType DWord -Value 1 -Force
		#Turn off Windows Location Provider
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableWindowsLocationProvider" -Type "DWORD" -Value "1" -Force
		#Turn off location scripting
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocationScripting" -Type "DWORD" -Value "1" -Force
		#Turn off location
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocation" -Value "1" -Type "DWORD" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Value "0" -Type "DWORD" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "Value" -Type "String" -Value "Deny" -Force
		#Deny app access to location
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Value "Deny" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Value "0" -Type "DWORD" -Force
		#Deny app access to motion data
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\activity" -Name "Value" -Value "Deny" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessMotion" -Type "DWORD" -Value 2 -Force
		#Deny app access to phone
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessPhone" -Type "DWORD" -Value 2 -Force
		#Deny app access to trusted devices
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{C1D23ACC-752B-43E5-8448-8D0E519CD6D6}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessTrustedDevices" -Type "DWORD" -Value 2 -Force
		#Deny app sync with devices (unpaired, beacons, TVs etc.)
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsSyncWithDevices" -Type "DWORD" -Value 2 -Force
		#Deny app access to diagnostics info about your other apps
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\appDiagnostics" -Name "Value" -Value "Deny" -Type "String" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsGetDiagnosticInfo" -Type "DWORD" -Value 2 -Force
		#Deny app access to your contacts
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\contacts" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{7D7E8402-7C54-4821-A34E-AEEFD62DED93}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessContacts" -Type "DWORD" -Value 2 -Force
		#Deny app access to Notifications
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userNotificationListener" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{52079E78-A92B-413F-B213-E8FE35712E72}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessNotifications" -Type "DWORD" -Value 2 -Force
		#Deny app access to Calendar
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\appointments" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{D89823BA-7180-4B81-B50C-7E471E6121A3}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessCalendar" -Type "DWORD" -Value 2 -Force
		#Deny app access to call history
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\phoneCallHistory" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{8BC668CF-7728-45BD-93F8-CF2B3B41D7AB}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessCallHistory" -Type "DWORD" -Value 2 -Force
		#Deny app access to email
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\email" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{9231CB4C-BF57-4AF3-8C55-FDA7BFCC04C5}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessEmail" -Type "DWORD" -Value 2 -Force
		#Deny app access to tasks
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\userDataTasks" -Name "Value" -Value "Deny" -Type "String" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessTasks" -Type "DWORD" -Value 2 -Force
		#Deny app access to messaging (SMS / MMS)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\chat" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{992AFA70-6F47-4148-B3E9-3003349C1548}" -Type "String" -Name "Value" -Value "DENY" -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{21157C1F-2651-4CC1-90CA-1F28B02263F6}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessMessaging" -Type "DWORD" -Value 2 -Force
		#Deny app access to radios
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\radios" -Name "Value" -Value "Deny" -Type "String" -Force
		#For older Windows (before 1903)
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{A8804298-2D5F-42E3-9531-9C8C39EB29CE}" -Type "String" -Name "Value" -Value "DENY" -Force
		#Using GPO (re-activation through GUI is not possible)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessRadios" -Type "DWORD" -Value 2 -Force
		#Deny app access to bluetooth devices
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\bluetoothSync" -Name "Value" -Value "Deny" -Type "String" -Force
		#Disable device metadata retrieval (breaks auto updates)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -Type "DWORD" -Value 1 -Force
		#Do not include drivers with Windows Updates
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ExcludeWUDriversInQualityUpdate" -Type "DWORD" -Value 1 -Force
		#Prevent Windows Update for device driver search
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" -Name "SearchOrderConfig" -Type "DWORD" -Value 0 -Force
		#Disable Customer Experience Improvement (CEIP/SQM)
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\SQMClient\Windows" -Name "CEIPEnable" -Type "DWORD" -Value "0" -Force
		#Disable Application Impact Telemetry (AIT)
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\AppCompat" -Name "AITEnable" -Type "DWORD" -Value "0" -Force
		#Disable diagnostics telemetry
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\DiagTrack" -Name "Start" -Type "DWORD" -Value 4 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\dmwappushsvc" -Name "Start" -Type "DWORD" -Value 4 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\dmwappushservice" -Name "Start" -Type "DWORD" -Value 4 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\diagnosticshub.standardcollector.service" -Name "Start" -Type "DWORD" -Value 4 -Force
		Stop-Service "DiagTrack"
		Set-Service "DiagTrack" -StartupType Disabled
		Stop-Service "dmwappushservice"
		Set-Service "dmwappushservice" -StartupType Disabled
		Stop-Service "diagnosticshub.standardcollector.service"
		Set-Service "diagnosticshub.standardcollector.service" -StartupType Disabled
		Stop-Service "diagsvc"
		Set-Service "diagsvc" -StartupType Disabled
		#Disable Customer Experience Improvement Program
		schtasks /change /TN "\Microsoft\Windows\Customer Experience Improvement Program\Consolidator" /DISABLE
		schtasks /change /TN "\Microsoft\Windows\Customer Experience Improvement Program\KernelCeipTask" /DISABLE
		schtasks /change /TN "\Microsoft\Windows\Customer Experience Improvement Program\UsbCeip" /DISABLE
		#Disable Webcam Telemetry (devicecensus.exe)
		schtasks /change /TN "Microsoft\Windows\Device Information\Device" /DISABLE
		# Disable Application Experience (Compatibility Telemetry)
		schtasks /change /TN "Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser" /DISABLE
		schtasks /change /TN "Microsoft\Windows\Application Experience\ProgramDataUpdater" /DISABLE
		schtasks /change /TN "Microsoft\Windows\Application Experience\StartupAppTask" /DISABLE
		schtasks /change /TN "Microsoft\Windows\Application Experience\AitAgent" /DISABLE
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\CompatTelRunner.exe" -Name "Debugger" -Type "String" -Value "%windir%\System32\taskkill.exe" -Force
		#Disable telemetry in data collection policy
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Value 0 -Type "DWORD" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "AllowTelemetry" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "LimitEnhancedDiagnosticDataWindowsAnalytics" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type "DWORD" -Value 0 -Force
		#Disable license telemetry
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows NT\CurrentVersion\Software Protection Platform" -Name "NoGenTicket" -Type "DWORD" -Value "1" -Force
		#Disable error reporting
		#Disable Windows Error Reporting (WER)
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type "DWORD" -Value "1" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type "DWORD" -Value "1" -Force
		#DefaultConsent / 1 - Always ask (default) / 2 - Parameters only / 3 - Parameters and safe data / 4 - All data
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\Windows Error Reporting\Consent" -Name "DefaultConsent" -Type "DWORD" -Value "0" -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\Windows Error Reporting\Consent" -Name "DefaultOverrideBehavior" -Type "DWORD" -Value "1" -Force
		#Disable WER sending second-level data
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\Windows Error Reporting" -Name "DontSendAdditionalData" -Type "DWORD" -Value "1" -Force
		#Disable WER crash dialogs, popups
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\Windows Error Reporting" -Name "LoggingDisabled" -Type "DWORD" -Value "1" -Force
		schtasks /Change /TN "Microsoft\Windows\ErrorDetails\EnableErrorDetailsUpdate" /Disable
		schtasks /Change /TN "Microsoft\Windows\Windows Error Reporting\QueueReporting" /Disable
		#Disable Windows Error Reporting Service
		Stop-Service "WerSvc"
		Set-Service "WerSvc" -StartupType Disabled
		Stop-Service "wercplsupport"
		Set-Service "wercplsupport" -StartupType Disabled
		#Disable all settings sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableSyncOnPaidNetwork" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\SettingSync" -Name "SyncPolicy" -Type "DWORD" -Value 5 -Force
		#Disable Application Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableApplicationSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableApplicationSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable App Sync Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableAppSyncSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableAppSyncSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable App Sync Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableAppSyncSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableAppSyncSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Desktop Theme Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableDesktopThemeSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableDesktopThemeSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Personalization Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisablePersonalizationSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisablePersonalizationSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Start Layout Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableStartLayoutSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableStartLayoutSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Web Browser Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableWebBrowserSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableWebBrowserSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Windows Setting Sync
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableWindowsSettingSync" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\SettingSync" -Name "DisableWindowsSettingSyncUserOverride" -Type "DWORD" -Value 1 -Force
		#Disable Windows Insider Service
		Stop-Service "wisvc"
		Set-Service "wisvc" -StartupType Disabled
		#Do not let Microsoft try features on this build
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\PreviewBuilds" -Name "EnableExperimentation" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\PreviewBuilds" -Name "EnableConfigFlighting" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\System\AllowExperimentation" -Name "value" -Type "DWORD" -Value 0 -Force
		#Disable getting preview builds of Windows
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\PreviewBuilds" -Name "AllowBuildPreview" -Type "DWORD" -Value 0 -Force
		#Remove "Windows Insider Program" from Settings
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsSelfHost\UI\Visibility" -Name "HideInsiderPage" -Type "DWORD" -Value "1" -Force
		#Disable ad customization with Advertising ID
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" -Name "DisabledByGroupPolicy" -Type "DWORD" -Value 1 -Force
		#Disable targeted tips
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableSoftLanding" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsSpotlightFeatures" -Type "DWORD" -Value "1" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type "DWORD" -Value "1" -Force
		#Turn Off Suggested Content in Settings app
		New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -PropertyType "DWord" -Value "0" -Force
		New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-310093Enabled" -PropertyType "DWord" -Value "0" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338393Enabled" -Value "0" -Type "DWORD" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353694Enabled" -Value "0" -Type "DWORD" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353696Enabled" -Value "0" -Type "DWORD" -Force
		#Disable cortana
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\Experience\AllowCortana" -Name "value" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "CortanaEnabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "CortanaEnabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name "CanCortanaBeEnabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" -Name BingSearchEnabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCloudSearch" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortanaAboveLock" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowSearchToUseLocation" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "ConnectedSearchUseWeb" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name "CortanaConsent" -Value 0 -Type "DWORD" -Force
		#Disable web search in search bar
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name DisableWebSearch -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name "BingSearchEnabled" -Value 0 -Type "DWORD" -Force
		#Disable search web when searching pc
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name ConnectedSearchUseWeb -Type "DWORD" -Value 0 -Force
		#Disable search indexing encrypted items / stores
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name AllowIndexingEncryptedStoresOrItems -Type "DWORD" -Value 0 -Force
		#Disable location based info in searches
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name AllowSearchToUseLocation -Type "DWORD" -Value 0 -Force
		#Disable language detection
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name AlwaysUseAutoLangDetection -Type "DWORD" -Value 0 -Force
		#Opt out from Windows privacy consent
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -Type "DWORD" -Value 0 -Force
		#Disable cloud speech recognation
		New-Item -Path "HKCU:\Software\Microsoft\Speech_OneCore\Settings\OnlineSpeechPrivacy" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Speech_OneCore\Settings\OnlineSpeechPrivacy" -Name "HasAccepted" -Type "DWORD" -Value 0 -Force
		#Disable text and handwriting collection
		New-Item -Path "HKCU:\Software\Policies\Microsoft\InputPersonalization" -Force
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Windows\HandwritingErrorReports" -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\HandwritingErrorReports" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\HandwritingErrorReports" -Name "PreventHandwritingErrorReports" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\HandwritingErrorReports" -Name "PreventHandwritingErrorReports" -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Windows\TabletPC" -Force
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\TabletPC" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\TabletPC" -Name "PreventHandwritingDataSharing" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\TabletPC" -Name "PreventHandwritingDataSharing" -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Force
		New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\InputPersonalization" -Name "AllowInputPersonalization" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Name "HarvestContacts" -Type "DWORD" -Value 0 -Force
		#Disable Windows feedback
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Name "NumberOfSIUFInPeriod" -Type "DWORD" -Value 0 -Force
		reg delete "HKCU\SOFTWARE\Microsoft\Siuf\Rules" -Name "PeriodInNanoSeconds" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type "DWORD" -Value 1 -Force
		#Disable Wi-Fi sense
		New-Item -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting" -Name "value" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowAutoConnectToWiFiSenseHotspots" -Name "value" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WcmSvc\wifinetworkmanager\config" -Name "AutoConnectAllowedOEM" -Type "DWORD" -Value 0 -Force
		#Disable App Launch Tracking
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "Start_TrackProgs" -Value 0 -Type "DWORD" -Force
		#Disable Activity Feed
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableActivityFeed" -Value "0" -Type "DWORD" -Force
		#Disable feedback on write (sending typing info)
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Input\TIPC" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Input\TIPC" -Name "Enabled" -Type "DWORD" -Value 0 -Force
		#Disable Windows DRM internet access
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WMDRM" -Name "DisableOnline" -Type "DWORD" -Value 1 -Force
		#Disable game screen recording
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type "DWORD" -Value 0 -Force
		#Disable Auto Downloading Maps
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps" -Name "AllowUntriggeredNetworkTrafficOnSettingsPage" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps" -Name "AutoDownloadAndUpdateMapData" -Type "DWORD" -Value 0 -Force
		#Disable Website Access of Language List
		Set-ItemProperty -Path "HKCU:\Control Panel\International\User Profile" -Name "HttpAcceptLanguageOptOut" -Type "DWORD" -Value 1 -Force
		#Disable Inventory Collector
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppCompat" -Name "DisableInventory" -Type "DWORD" -Value 1 -Force
		#Do not send Watson events
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Reporting" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Reporting" -Name "DisableGenericReports" -Type "DWORD" -Value 1 -Force
		#Disable Malicious Software Reporting tool diagnostic data
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MRT" -Name "DontReportInfectionInformation" -Type "DWORD" -Value 1 -Force
		#Disable local setting override for reporting to Microsoft MAPS
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "LocalSettingOverrideSpynetReporting" -Type "DWORD" -Value 0 -Force
		#Turn off Windows Defender SpyNet reporting
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -Type "DWORD" -Value 0 -Force
		#Do not send file samples for further analysis
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -Type "DWORD" -Value 2 -Force
		#Disable live tile data collection
		New-Item -Path "HKCU:\Software\Policies\Microsoft\MicrosoftEdge\Main" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\MicrosoftEdge\Main" -Name "PreventLiveTileDataCollection" -Type "DWORD" -Value 1 -Force
		#Disable MFU tracking
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Windows\EdgeUI" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\EdgeUI" -Name "DisableMFUTracking" -Type "DWORD" -Value 1 -Force
		#Disable recent apps
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\EdgeUI" -Name "DisableRecentApps" -Type "DWORD" -Value 1 -Force
		#Turn off backtracking
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\EdgeUI" -Name "TurnOffBackstack" -Type "DWORD" -Value 1 -Force
		#Disable Search Suggestions in Edge
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\SearchScopes" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\SearchScopes" -Name "ShowSearchSuggestionsGlobal" -Type "DWORD" -Value 0 -Force
		#Disable Geolocation in Internet Explorer
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Internet Explorer\Geolocation" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Internet Explorer\Geolocation" -Name "PolicyDisableGeolocation" -Type "DWORD" -Value 1 -Force
		#Disable Internet Explorer InPrivate logging
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Safety\PrivacIE" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Safety\PrivacIE" -Name "DisableLogging" -Type "DWORD" -Value 1 -Force
		#Disable Internet Explorer CEIP
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\SQM" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\SQM" -Name "DisableCustomerImprovementProgram" -Type "DWORD" -Value 0 -Force
		#Disable calling legacy WCM policies
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings" -Name "CallLegacyWCMPolicies" -Type "DWORD" -Value 0 -Force
		#Do not send Windows Media Player statistics
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\MediaPlayer\Preferences" -Name "UsageTracking" -Type "DWORD" -Value 0 -Force
		#Disable metadata retrieval
		New-Item -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventCDDVDMetadataRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventMusicFileMetadataRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -Name "PreventRadioPresetsRetrieval" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WMDRM" -Name "DisableOnline" -Type "DWORD" -Value 1 -Force
		#Disable dows Media Player Network Sharing Service
		Stop-Service "WMPNetworkSvc"
		Set-Service "WMPNetworkSvc" -StartupType Disabled
		#Disable lock screen camera
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization" -Name "NoLockScreenCamera" -Type "DWORD" -Value 1 -Force
		#Disable remote Assistance
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowFullControl" -Type "DWORD" -Value 0 -Force
		#Disable AutoPlay and AutoRun
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoDriveTypeAutoRun" -Type "DWORD" -Value 255 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoAutorun" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "NoAutoplayfornonVolume" -Type "DWORD" -Value 1 -Force
		#Disable Windows Installer Always install with elevated privileges
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer" -Name "AlwaysInstallElevated" -Type "DWORD" -Value 0 -Force
		#Refuse less secure authentication
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa" -Name "LmCompatibilityLevel" -Type "DWORD" -Value 5 -Force
		#Disable the Windows Connect Now wizard
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WCN\UI" -Name "DisableWcnUi" -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "DisableFlashConfigRegistrar" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "DisableInBand802DOT11Registrar" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "DisableUPnPRegistrar" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "DisableWPDRegistrar" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars" -Name "EnableRegistrars" -Type "DWORD" -Value 0 -Force
		#Disable online tips
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "AllowOnlineTips" -Type "DWORD" -Value 0 -Force
		#Turn off Internet File Association service
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoInternetOpenWith" -Type "DWORD" -Value 1 -Force
		#Turn off the "Order Prints" picture task
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoOnlinePrintsWizard" -Type "DWORD" -Value 1 -Force
		#Disable the file and folder Publish to Web option
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoPublishingWizard" -Type "DWORD" -Value 1 -Force
		#Prevent downloading a list of providers for wizards
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoWebServices" -Type "DWORD" -Value 1 -Force
		#Do not keep history of recently opened documents
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoRecentDocsHistory" -Type "DWORD" -Value 1 -Force
		#Clear history of recently opened documents on exit
		New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "ClearRecentDocsOnExit" -Type "DWORD" -Value 1 -Force
		#Disable lock screen app notifications
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "DisableLockScreenAppNotifications" -Type "DWORD" -Value 1 -Force
		#Disable Live Tiles push notifications
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "NoTileApplicationNotification" -Type "DWORD" -Value 1 -Force
		#Turn off "Look For An App In The Store" option
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "NoUseStoreOpenWith" -Type "DWORD" -Value 1 -Force
		#Do not show recently used files in Quick Access
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name "ShowRecent" -Value 0 -Type "DWORD" -Force
		reg delete "HKLM\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\HomeFolderDesktop\NameSpace\DelegateFolders\{3134ef9c-6b18-4996-ad04-ed5912e00eb5}" /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\HomeFolderDesktop\NameSpace\DelegateFolders\{3134ef9c-6b18-4996-ad04-ed5912e00eb5}" /f
		#Disable Sync Provider Notifications
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ShowSyncProviderNotifications" -Value 0 -Type "DWORD" -Force
		#Enable camera on/off OSD notifications
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\OEM\Device\Capture" -Name "NoPhysicalCameraLED" -Value 1 -Type "DWORD" -Force
		
		#Windows Defender Privacy Options
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Defender\Reporting" -Name "DisableGenericRePorts" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Defender\Spynet" -Name "LocalSettingOverrideSpynetReporting" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -Type "DWORD" -Value 2 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\MRT" -Name "DontReportInfectionInformation" -Type "DWORD" -Value 1 -Force
		#Remove the automatic start item for OneDrive from the default user profile registry hive
		Write-Host "remove onedrive automatic start"
		Remove-Item -Path "C:\\Windows\\ServiceProfiles\\NetworkService\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\OneDrive.lnk" -Force
		Start-Process C:\\Windows\\System32\\Reg.exe -ArgumentList "Load HKLM\\Temp C:\\Users\\Default\\NTUSER.DAT" -Wait
		Start-Process C:\\Windows\\System32\\Reg.exe -ArgumentList "Delete HKLM\\Temp\\Software\\Microsoft\\Windows\\CurrentVersion\\Run -Name OneDriveSetup -Force" -Wait
		Start-Process C:\\Windows\\System32\\Reg.exe -ArgumentList "Unload HKLM\\Temp"
		#Disable Cortana
		Write-Host "disabling cortona"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name AllowCortana -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name AllowSearchToUseLocation -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name DisableWebSearch -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Windows Search" -Name ConnectedSearchUseWeb -Type "DWORD" -Value 0 -Force
		#Disable Device Metadata Retrieval
		Write-Host "Disable Device Metadata Retrieval"
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\" -Name "Device Metadata" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Device Metadata" -Name PreventDeviceMetadataFromNetwork -Type "DWORD" -Value 1 -Force
		#Disable Find My Device
		Write-Host "Disable Find My Device"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\FindMyDevice" -Name AllowFindMyDevice -Type "DWORD" -Value 0 -Force
		#Disable Font Streaming
		Write-Host "Disable Font Streaming"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\System" -Name EnableFontProviders -Type "DWORD" -Value 0 -Force
		#Disable Insider Preview Builds
		Write-Host "Disable Insider Preview Builds"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\PreviewBuilds" -Name AllowBuildPreview -Type "DWORD" -Value 0 -Force
		Write-Host "IE Optimizations"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\PhishingFilter" -Name EnabledV9 -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\" -Name "Geolocation" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\Geolocation" -Name PolicyDisableGeolocation -Type "DWORD" -Value 1 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\CurrentVersion\Explorer\" -Name "AutoComplete" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CurrentVersion\Explorer\AutoComplete" -Name AutoSuggest -Type "String" -Value no -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer" -Name AllowServicePoweredQSA -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\" -Name "Suggested Sites" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\Suggested Sites" -Name Enabled -Type "DWORD" -Value 0 -Force
		New-Item -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\" -Name "FlipAhead" -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\FlipAhead" -Name Enabled -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\Feeds" -Name BackgroundSyncStatus -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name AllowOnlineTips -Type "DWORD" -Value 0 -Force
		#Restrict License Manager
		#Write-Host "Restrict License Manager"
		#Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Services\LicenseManager" -Name Start -Type "DWORD" -Value 4 -Force
		#Disable Live Tiles
		Write-Host "Disable Live Tiles"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -Name NoCloudApplicationNotification -Type "DWORD" -Value 1 -Force
		#Disable Windows Mail App
		Write-Host "Disable Windows Mail App"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows Mail" -Name ManualLaunchAllowed -Type "DWORD" -Value 0 -Force
		#Disable Network Connection Status Indicator
		#Write-Host "Disable Network Connection Status Indicator"
		#Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\NetworkConnectivityStatusIndicator" -Name NoActiveProbe -Type "DWORD" -Value 1 -Force
		#Disable Offline Maps
		Write-Host "Disable Offline Maps"
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Maps" -Name AutoDownloadAndUpdateMapData -Type "DWORD" -Value 0 -Force
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Maps" -Name AllowUntriggeredNetworkTrafficOnSettingsPage -Type "DWORD" -Value 0 -Force
		#SMB Hardening
		Write-Host "SMB Hardening"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters" -Name "RestrictNullSessAccess" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "RestrictAnonymousSAM" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" "RequireSecuritySignature" -Value 256 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\LSA" -Name "RestrictAnonymous" -Type "DWORD" -Value 1 -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa" -Name "NoLMHash" -Type "DWORD" -Value 1 -Force
		Disable-WindowsOptionalFeature -Online -FeatureName "SMB1Protocol" -NoRestart
		Disable-WindowsOptionalFeature -Online -FeatureName "SMB1Protocol-Client" -NoRestart
		Disable-WindowsOptionalFeature -Online -FeatureName "SMB1Protocol-Server" -NoRestart
		Set-SmbClientConfiguration -RequireSecuritySignature $True -Force
		Set-SmbClientConfiguration -EnableSecuritySignature $True -Force
		Set-SmbServerConfiguration -EncryptData $True -Force
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		Write-Host "Finished Applying Gaming Tweaks!"
		Write-Host "Disabling Fast Startup..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power" -Name "HiberbootEnabled" -Type DWord -Value 0
		Write-Host "Disabling Telemetry..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\ProgramDataUpdater"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Autochk\Proxy"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\Consolidator"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\UsbCeip"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\DiskDiagnostic\Microsoft-Windows-DiskDiagnosticDataCollector"
		Write-Host "Disabling Application suggestions..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "ContentDeliveryAllowed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "OemPreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEverEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SilentInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338387Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338388Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353698Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SystemPaneSuggestionsEnabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type DWord -Value 1
		Write-Host "Disabling Activity History..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableActivityFeed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "PublishUserActivities" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "UploadUserActivities" -Type DWord -Value 0
		Write-Host "Disabling Location Tracking..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Type String -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Type DWord -Value 0
		Write-Host "Disabling automatic Maps updates..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\Maps" -Name "AutoUpdateEnabled" -Type DWord -Value 0
		Write-Host "Disabling Feedback..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Name "NumberOfSIUFInPeriod" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClient" -ErrorAction SilentlyContinue
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload" -ErrorAction SilentlyContinue
		Write-Host "Disabling Tailored Experiences..."
		If (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableTailoredExperiencesWithDiagnosticData" -Type DWord -Value 1
		Write-Host "Disabling Advertising ID..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" -Name "DisabledByGroupPolicy" -Type DWord -Value 1
		Write-Host "Disabling Error reporting..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Windows Error Reporting\QueueReporting"
		Write-Host "Stopping and disabling Diagnostics Tracking Service..."
		Stop-Service "DiagTrack" -WarningAction SilentlyContinue
		Set-Service "DiagTrack" -StartupType Disabled
		Write-Host "Stopping and disabling WAP Push Service..."
		Stop-Service "dmwappushservice" -WarningAction SilentlyContinue
		Set-Service "dmwappushservice" -StartupType Disabled
		Write-Host "Enabling F8 boot menu options..."
		bcdedit /set `{current`} bootmenupolicy Legacy
		Write-Host "Disabling Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value 0
		Write-Host "Disabling Storage Sense..."
		Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy" -Recurse -ErrorAction SilentlyContinue
		Write-Host "Stopping and disabling Superfetch service..."
		Stop-Service "SysMain" -WarningAction SilentlyContinue
		Set-Service "SysMain" -StartupType Disabled
		Write-Host "Showing task manager details..."
		$taskmgr = Start-Process -WindowStyle Hidden -FilePath taskmgr.exe -PassThru
		Do
		{
			Start-Sleep -Milliseconds 100
			$preferences = Get-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -ErrorAction SilentlyContinue
		}
		Until ($preferences)
		Stop-Process $taskmgr
		$preferences.Preferences[28] = 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -Type Binary -Value $preferences.Preferences
		Write-Host "Showing file operations details..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager" -Name "EnthusiastMode" -Type DWord -Value 1
		Write-Host "Hiding Task View ..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ShowTaskView" -Type DWord -Value 0
		Write-Host "Hiding People icon..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People" -Name "PeopleBand" -Type DWord -Value 0
		# Update 10 : Commented out this part of the code, because some people might not like it
		#Write-Host "Showing all tray icons..."
		#Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "EnableAutoTray" -Type DWord -Value 0
		Write-Host "Enabling NumLock after startup..."
		If (!(Test-Path "HKU:"))
		{
			New-PSDrive -Name HKU -PSProvider Registry -Root HKEY_USERS
		}
		Set-ItemProperty -Path "HKU:\.DEFAULT\Control Panel\Keyboard" -Name "InitialKeyboardIndicators" -Type DWord -Value 2147483650
		Add-Type -AssemblyName System.Windows.Forms
		If (!([System.Windows.Forms.Control]::IsKeyLocked('NumLock')))
		{
			$wsh = New-Object -ComObject WScript.Shell
			$wsh.SendKeys('{NUMLOCK}')
		}
		Write-Host "Changing default Explorer view to This PC..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "LaunchTo" -Type DWord -Value 1
		Write-Host "Hiding 3D Objects icon from This PC..."
		Remove-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}" -Recurse -ErrorAction SilentlyContinue
		#Network Tweaks (Most of the tweaks were provided to me by emilwojcik93) | https://github.com/emilwojcik93/sc-cmd#introduction
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type DWord -Value 20 # Causes problems with Mapped Drives and File Sharing Programs!
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "SizReqBuf" -Type DWord -Value 17424
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name DefaultTTL -Value 64
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name TCP1323Opts -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name MaxFreeTcbs -Value 65536
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name MaxUserPort -Value 65534
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name GlobalMaxTcpWindowSize -Value 65535
		#SVCHost Tweak
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value 4194304
		Write-Host "Disable News and Interests"
		if (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		#Remove news and interest from taskbar
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Feeds" -Name "ShellFeedsTaskbarViewMode" -Type DWord -Value 2
		#Remove meet now  from taskbar
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		
		Write-Host "Removing AutoLogger file and restricting directory..."
		$autoLoggerDir = "$env:PROGRAMDATA\Microsoft\Diagnosis\ETLLogs\AutoLogger"
		If (Test-Path "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl")
		{
			Remove-Item "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl"
		}
		icacls $autoLoggerDir /deny SYSTEM:`(OI`)`(CI`)F
		
		#Disable LockScreen
		If (!(Test-Path "HKLM:\Software\Policies\Microsoft\Windows\Personalization"))
		{
			New-Item -Path "HKLM:\Software\Policies\Microsoft\Windows\Personalization"
		}
		Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\Personalization" -Name "NoLockScreen" -Type DWord -Value 1
		Write-Host "Lock Screen has been disabled"
		
		#Disable Advertising ID
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo" -Name "Enabled" -Type DWord -Value 0
		Write-Host "Advertising ID has been disabled"
		
		#Disable SmartScreen
		if (!(Test-Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer"))
		{
			New-Item -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Force
		}
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name "SmartScreenEnabled" -Type String -Value "Off"
		if (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AppHost"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AppHost" -Force
		}
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\AppHost" -Name "EnableWebContentEvaluation" -Value 0
		Write-Host "SmartScreen has been disabled"
		
		#Disable File History
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\FileHistory"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\FileHistory" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\FileHistory" -Name "Disabled" -Type DWord -Value 1
		
		#Disable Hand Writing Reports
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\HandwritingErrorReports"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\HandwritingErrorReports" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\HandwritingErrorReports" -Name "PreventHandwritingErrorReports" -Type DWord -Value 1
		
		#Disable Location Tracking...
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocation" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocationScripting" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableSensors" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableWindowsLocationProvider" -Type DWord -Value 1
		
		#Disable Auto Map Downloading/Updating
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Maps" -Name "AutoDownloadAndUpdateMapData" -Type DWord -Value 0
		
		# Disable Application Notifications / This might break some notifications like Windows Defender ones!
		# Thanks Niecks#2591 for reporting
		# Line to remove it : Remove-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "NoTileApplicationNotification" -Force 
		
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings" -Force
		}
		Get-ChildItem -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings" -ErrorAction SilentlyContinue | ForEach-Object {
			Set-ItemProperty -Path $_.PsPath -Name "Enabled" -Type DWord -Value 0
			Set-ItemProperty -Path $_.PsPath -Name "LastNotificationAddedTime" -Type QWord -Value "0"
		}
		
		#Disable Windows Feeds
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		
		#Disable Game DVR
		if (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		
		#Disable Keyboard BS
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\StickyKeys" -Name "Flags" -Value "506"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\Keyboard Response" -Name "Flags" -Value "122"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\ToggleKeys" -Name "Flags" -Value "58"
		
		#Disable Mitigations
		Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management' -Name FeatureSettingsOverride -Value 3
		Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management' -Name FeatureSettingsOverrideMask -Value 3
		
		Write-Host "Disabling some services and scheduled tasks"
		
		$Services = @(
			"*xbox*" # Xbox Services
			"*Xbl*" # Xbox Services
			"XboxNetApiSvc" # Xbox Services
			"LanmanWorkstation" # Causes problems with Mapped Drives and File Sharing Programs!
			"workfolderssvc" # Causes problems with Mapped Drives and File Sharing Programs!
			"WSearch" # Windows Search
			"PushToInstall" # Needed for Microsoft Store
			"icssvc" # Mobile Hotspot
			"MixedRealityOpenXRSvc" # Mixed Reality
			"WMPNetworkSvc" # Windows Media Player Sharing
			"LicenseManager" # License Manager for Microsoft Store
			"wisvc" # Insider Program
			"WerSvc" # Error Reporting
			"WalletService" # Wallet Service
			"lmhosts" # TCP/IP NetBIOS Helper
			"SysMain" # SuperFetch - Safe to disable if you have a SSD
			"svsvc" # Spot Verifier
			"sppsvc" # Software Protection
			"SCPolicySvc" # Smart Card Removal Policy
			"ScDeviceEnum" # Smart Card Device Enumeration Service
			"SCardSvr" # Smart Card
			"LanmanServer" # Server # Causes problems with Mapped Drives and File Sharing Programs!
			"SensorService" # Sensor Service
			"RetailDemo" # Retail Demo Service
			"RemoteRegistry" # Remote Registry
			"UmRdpService" # Remote Desktop Services UserMode Port Redirector
			"TermService" # Remote Desktop Services
			"SessionEnv" # Remote Desktop Configuration
			"RasMan" # Remote Access Connection Manager
			"RasAuto" # Remote Access Auto Connection Manager
			"TroubleshootingSvc" # Recommended Troubleshooting Service
			#"RmSvc" # Radio Management Service (Might be needed for laptops)
			"QWAVE" # Quality Windows Audio Video Experience
			"wercplsupport" # Problem Reports Control Panel Support
			"Spooler" # Print Spooler
			"PrintNotify" # Printer Extensions and Notifications
			"PhoneSvc" # Phone Service
			"SEMgrSvc" # Payments and NFC/SE Manager
			"WpcMonSvc" # Parental Controls
			"CscService" # Offline Files
			"InstallService" # Microsoft Store Install Service
			"SmsRouter" # Microsoft Windows SMS Router Service
			"smphost" # Microsoft Storage Spaces SMP
			"NgcCtnrSvc" # Microsoft Passport Container
			"MsKeyboardFilter" # Microsoft Keyboard Filter ... thanks (.AtomRadar treasury ♛#8267) for report. 
			"cloudidsvc" # Microsoft Cloud Identity Service
			"wlidsvc" # Microsoft Account Sign-in Assistant
			"*diagnosticshub*" # Microsoft (R) Diagnostics Hub Standard Collector Service
			"iphlpsvc" # IP Helper - Might break some VPN Clients
			"lfsvc" # Geolocation Service
			"fhsvc" # File History Service
			"Fax" # Fax
			"embeddedmode" # Embedded Mode
			"MapsBroker" # Downloaded Maps Manager
			"TrkWks" # Distributed Link Tracking Client
			"WdiSystemHost" # Diagnostic System Host
			"WdiServiceHost" # Diagnostic Service Host
			"DPS" # Diagnostic Policy Service
			"diagsvc" # Diagnostic Execution Service
			"DusmSvc" # Data Usage
			"VaultSvc" # Credential Manager
			"AppReadiness" # App Readiness
			"BITS" # Background Intelligent Transfer Service
			"DiagTrack" # Connected User Experiences and Telemetry
			"diagnosticshub.standardcollector.service" # Microsoft (R) Diagnostics Hub Standard Collector Service
			"dmwappushservice" # Device Management Wireless Application Protocol (WAP)
			"GraphicsPerfSvc" # Graphics performance monitor service
			"HomeGroupListener" # HomeGroup Listener
			"HomeGroupProvider" # HomeGroup Provider
			"lfsvc" # Geolocation Service
			"MapsBroker" # Downloaded Maps Manager
			"ndu" # Windows Network Data Usage Monitoring Driver
			"NvContainerLocalSystem" # NVIDIA LocalSystem Container (GeForce Experience / NVIDIA Telemetry)
			"PcaSvc" # Program Compatibility Assistant (PCA)
			"RemoteAccess" # Routing and Remote Access
			"RemoteRegistry" # Remote Registry
			"SysMain" # SysMain / Superfetch (100% Disk on HDDs)
			"TrkWks" # Distributed Link Tracking Client
			"WbioSrvc" # Windows Biometric Service (required for Fingerprint reader / facial detection)
			"WSearch" # Windows Search (100% Disk on HDDs)
			
			
			
			"DPS" # Diagnostic Policy Service
			"NetTcpPortSharing" # Net.Tcp Port Sharing Service
			"SharedAccess" # Internet Connection Sharing (ICS)
			"stisvc" # Windows Image Acquisition (WIA)
			#"WlanSvc" # WLAN AutoConfig
			"Wecsvc" # Windows Event Collector
			"WerSvc" # Windows Error Reporting Service
			"wscsvc" # Windows Security Center Service
			"WdiServiceHost" # Diagnostic Service Host
			"WdiSystemHost" # Diagnostic System Host
			"WMPNetworkSvc" # Windows Media Player Network Sharing Service (Miracast / Wi-Fi Direct)
			
			# [DIY] If you don't use Bluetooth devices
			
			"BTAGService" # Bluetooth Audio Gateway Service
			"bthserv" # Bluetooth Support Service
			
			# [DIY] If you don't use a Printer
			
			"Spooler" # Print Spooler
			"PrintNotify" # Printer Extensions and Notifications
			
			# [DIY] If you don't use Xbox Live and Games
			
			"XblAuthManager" # Xbox Live Auth Manager
			"XblGameSave" # Xbox Live Game Save Service
			"XboxGipSvc" # Xbox Accessory Management Service
			"XboxNetApiSvc" # Xbox Live Networking Service
			
			
			"WdNisSvc"
		)
		
		#Disable Services listed above
		foreach ($Service in $Services)
		{
			Get-Service -Name $Service -ErrorAction SilentlyContinue | Set-Service -StartupType Disabled
			if ($Service.Status -match "Run")
			{
				Stop-Service -Name $Service -Force -ErrorAction SilentlyContinue
				Write-Host "Stopping $Service"
				
			}
		}
		
		
		
		#Disable Delivery Optimization
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\DoSvc" -Name Start -Value 4
		#Disable WinHTTP Web Proxy Auto-Discovery Service (Please do not disable this, this will fuck up Windows Explorer)
		#Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WinHttpAutoProxySvc" -Name Start -Value 4
		
		[Array] @(
			"\Microsoft\Windows\ApplicationData\CleanupTemporaryState"
			"\Microsoft\Windows\ApplicationData\DsSvcCleanup"
			"\Microsoft\Windows\AppxDeploymentClient\Pre-stagedappcleanup"
			"\Microsoft\Windows\Autochk\Proxy"
			"\Microsoft\Windows\BrokerInfrastructure\BgTaskRegistrationMaintenanceTask"
			"\Microsoft\Windows\capabilityaccessmanager\maintenancetasks"
			"\Microsoft\Windows\Chkdsk\ProactiveScan"
			"\Microsoft\Windows\Chkdsk\SyspartRepair"
			"\Microsoft\Windows\Clip\LicenseValidation"
			"\Microsoft\Windows\CloudExperienceHost\CreateObjectTask"
			"\Microsoft\Windows\CustomerExperienceImprovementProgram\Consolidator"
			"\Microsoft\Windows\CustomerExperienceImprovementProgram\UsbCeip"
			"\Microsoft\Windows\Defrag\ScheduledDefrag"
			"\Microsoft\Windows\DeviceInformation\Device"
			"\Microsoft\Windows\DeviceInformation\DeviceUser"
			"\Microsoft\Windows\DeviceSetup\MetadataRefresh"
			"\Microsoft\Windows\ExploitGuard\ExploitGuardMDMpolicyRefresh"
			"\Microsoft\Windows\Feedback\Siuf\DmClient"
			"\Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload"
			"\Microsoft\Windows\FileHistory\FileHistory*"
			"\Microsoft\Windows\Location\Notifications"
			"\Microsoft\Windows\Location\WindowsActionDialog"
			"\Microsoft\Windows\Maps\MapsToastTask"
			"\Microsoft\Windows\Maps\MapsUpdateTask"
			"\Microsoft\Windows\MemoryDiagnostic\ProcessMemoryDiagnosticEvents"
			"\Microsoft\Windows\MemoryDiagnostic\RunFullMemoryDiagnostic"
			"\Microsoft\Windows\MUI\LPRemove"
			"\Microsoft\Windows\Multimedia\SystemSoundsService"
			"\Microsoft\Windows\OfflineFiles\BackgroundSynchronization"
			"\Microsoft\Windows\OfflineFiles\LogonSynchronization"
			"\Microsoft\Windows\Printing\EduPrintProv"
			"\Microsoft\Windows\Printing\PrinterCleanupTask"
			"\Microsoft\Windows\PushToInstall\LoginCheck"
			"\Microsoft\Windows\PushToInstall\Registration"
			"\Microsoft\Windows\RetailDemo\CleanupOfflineContent"
			"\Microsoft\Windows\Servicing\StartComponentCleanup"
			"\Microsoft\Windows\Setup\SetupCleanupTask"
			"\Microsoft\Windows\SharedPC\AccountCleanup"
			"\Microsoft\Windows\UNP\RunUpdateNotificationMgr"
			"\Microsoft\Windows\WindowsErrorReporting\QueueReporting"
			"\Microsoft\XblGameSave\XblGameSaveTask"
		) | ForEach-Object{
			Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue
			Write-Host "Task `"$($_)`" was disabled"
		}
		
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching")) { New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power")) { New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling")) { New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKCU:\System\GameConfigStore")) { New-Item -Path "HKCU:\System\GameConfigStore" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKCU:\Control Panel\Desktop")) { New-Item -Path "HKCU:\Control Panel\Desktop" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1")) { New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1" -Force -ErrorAction SilentlyContinue }
		if (!(Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c")) { New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c" -Force -ErrorAction SilentlyContinue }
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching' -Name 'SearchOrderConfig' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power' -Name 'HiberbootEnabled' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling' -Name 'PowerThrottlingOff' -Value 1 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_Enabled' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_FSEBehaviorMode' -Value 2 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'Win32_AutoGameModeDefaultProfile' -Value ([byte[]](0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)) -PropertyType Binary -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'Win32_GameModeRelatedProcesses' -Value ([byte[]](0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)) -PropertyType Binary -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_HonorUserFSEBehaviorMode' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_DXGIHonorFSEWindowsCompatible' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_EFSEFeatureFlags' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'MenuShowDelay' -Value '0' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'WaitToKillAppTimeout' -Value '5000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'HungAppTimeout' -Value '4000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'AutoEndTasks' -Value '1' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'LowLevelHooksTimeout' -Value 4096 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'WaitToKillServiceTimeout' -Value 8192 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1' -Name 'Attributes' -Value 2 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'DCSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'DCSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		
		Stop-Process Explorer.exe -Force
		
		#Disables Windows Feedback Experience
		Write-Host "Disabling DiagTrack Service ..."
		# Connected User Experiences and Telemetry
		Get-Service -Name DiagTrack | Stop-Service -Force
		Get-Service -Name DiagTrack | Set-Service -StartupType Disabled
		
		# Block connection for the Unified Telemetry Client Outbound Traffic
		Get-NetFirewallRule -Group DiagTrack | Set-NetFirewallRule -Enabled False -Action Block
		Write-Host "Setting Minimal Diagnostic Data Level ..."
		if (Get-WindowsEdition -Online | Where-Object -FilterScript { $_.Edition -like "Enterprise*" -or $_.Edition -eq "Education" })
		{
			# Diagnostic data off
			New-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection -Name AllowTelemetry -PropertyType DWord -Value 0 -Force
		}
		else
		{
			# Send required diagnostic data
			New-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection -Name AllowTelemetry -PropertyType DWord -Value 1 -Force
		}
		New-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection -Name MaxTelemetryAllowed -PropertyType DWord -Value 1 -Force
		
		New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Diagnostics\DiagTrack -Name ShowedToastAtLevel -PropertyType DWord -Value 1 -Force
		
		Write-Host "Disabling Windows Feedback Experience program"
		$Advertising = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		If (Test-Path $Advertising)
		{
			Set-ItemProperty $Advertising Enabled -Value 0
		}
		
		#Stops Cortana from being used as part of your Windows Search Function
		Write-Host "Stopping Cortana from being used as part of your Windows Search Function"
		$Search = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		If (Test-Path $Search)
		{
			Set-ItemProperty $Search AllowCortana -Value 0
		}
		
		#Disables Web Search in Start Menu
		Write-Host "Disabling Bing Search in Start Menu"
		$WebSearch = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		Set-ItemProperty "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" BingSearchEnabled -Value 0
		If (!(Test-Path $WebSearch))
		{
			New-Item $WebSearch
		}
		Set-ItemProperty $WebSearch DisableWebSearch -Value 1
		
		#Stops the Windows Feedback Experience from sending anonymous data
		Write-Host "Stopping the Windows Feedback Experience program"
		$Period = "HKCU:\Software\Microsoft\Siuf\Rules"
		If (!(Test-Path $Period))
		{
			New-Item $Period
		}
		Set-ItemProperty $Period PeriodInNanoSeconds -Value 0
		
		# Took from: https://docs.microsoft.com/pt-br/windows-server/remote/remote-desktop-services/rds-vdi-recommendations#task-scheduler
		$DisableScheduledTasks = @(
			"\Microsoft\Office\OfficeTelemetryAgentLogOn"
			"\Microsoft\Office\OfficeTelemetryAgentFallBack"
			"\Microsoft\Office\Office 15 Subscription Heartbeat"
			"\Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser"
			"\Microsoft\Windows\Application Experience\ProgramDataUpdater"
			"\Microsoft\Windows\Application Experience\StartupAppTask"
			"\Microsoft\Windows\Autochk\Proxy"
			"\Microsoft\Windows\Customer Experience Improvement Program\Consolidator" # Recommended state for VDI use
			"\Microsoft\Windows\Customer Experience Improvement Program\KernelCeipTask" # Recommended state for VDI use
			"\Microsoft\Windows\Customer Experience Improvement Program\Uploader"
			"\Microsoft\Windows\Customer Experience Improvement Program\UsbCeip" # Recommended state for VDI use
			"\Microsoft\Windows\Defrag\ScheduledDefrag" # Recommended state for VDI use
			"\Microsoft\Windows\DiskDiagnostic\Microsoft-Windows-DiskDiagnosticDataCollector"
			"\Microsoft\Windows\Location\Notifications" # Recommended state for VDI use
			"\Microsoft\Windows\Location\WindowsActionDialog" # Recommended state for VDI use
			"\Microsoft\Windows\Maintenance\WinSAT" # Recommended state for VDI use
			"\Microsoft\Windows\Maps\MapsToastTask" # Recommended state for VDI use
			"\Microsoft\Windows\Maps\MapsUpdateTask" # Recommended state for VDI use
			"\Microsoft\Windows\Mobile Broadband Accounts\MNO Metadata Parser" # Recommended state for VDI use
			"\Microsoft\Windows\Power Efficiency Diagnostics\AnalyzeSystem" # Recommended state for VDI use
			"\Microsoft\Windows\Retail Demo\CleanupOfflineContent" # Recommended state for VDI use
			"\Microsoft\Windows\Shell\FamilySafetyMonitor" # Recommended state for VDI use
			"\Microsoft\Windows\Shell\FamilySafetyRefreshTask" # Recommended state for VDI use
			"\Microsoft\Windows\Shell\FamilySafetyUpload"
			"\Microsoft\Windows\Windows Media Sharing\UpdateLibrary" # Recommended state for VDI use
		)
		
		ForEach ($ScheduledTask in $DisableScheduledTasks)
		{
			Disable-ScheduledTask -TaskName $ScheduledTask -ErrorAction SilentlyContinue
			Write-Host "Task `"$($ScheduledTask)`" was disabled"
		}
		#Prevents bloatware applications from returning and removes Start Menu suggestions               
		Write-Host "Adding Registry key to prevent bloatware apps from returning"
		$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		$registryOEM = "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager"
		If (!(Test-Path $registryPath))
		{
			New-Item $registryPath
		}
		Set-ItemProperty $registryPath DisableWindowsConsumerFeatures -Value 1
		
		If (!(Test-Path $registryOEM))
		{
			New-Item $registryOEM
		}
		Set-ItemProperty $registryOEM  ContentDeliveryAllowed -Value 0
		Set-ItemProperty $registryOEM  OemPreInstalledAppsEnabled -Value 0
		Set-ItemProperty $registryOEM  PreInstalledAppsEnabled -Value 0
		Set-ItemProperty $registryOEM  PreInstalledAppsEverEnabled -Value 0
		Set-ItemProperty $registryOEM  SilentInstalledAppsEnabled -Value 0
		Set-ItemProperty $registryOEM  SystemPaneSuggestionsEnabled -Value 0
		
		#Preping mixed Reality Portal for removal    
		Write-Host "Setting Mixed Reality Portal value to 0 so that you can uninstall it in Settings"
		$Holo = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic"
		If (Test-Path $Holo)
		{
			Set-ItemProperty $Holo  FirstRunSucceeded -Value 0
		}
		
		#Disables Wi-fi Sense
		Write-Host "Disabling Wi-Fi Sense"
		$WifiSense1 = "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting"
		$WifiSense2 = "HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowAutoConnectToWiFiSenseHotspots"
		$WifiSense3 = "HKLM:\SOFTWARE\Microsoft\WcmSvc\wifinetworkmanager\config"
		If (!(Test-Path $WifiSense1))
		{
			New-Item $WifiSense1
		}
		Set-ItemProperty $WifiSense1  Value -Value 0
		If (!(Test-Path $WifiSense2))
		{
			New-Item $WifiSense2
		}
		Set-ItemProperty $WifiSense2  Value -Value 0
		Set-ItemProperty $WifiSense3  AutoConnectAllowedOEM -Value 0
		
		#Disables live tiles
		Write-Host "Disabling live tiles"
		$Live = "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications"
		If (!(Test-Path $Live))
		{
			New-Item $Live
		}
		Set-ItemProperty $Live  NoTileApplicationNotification -Value 1
		
		#Turns off Data Collection via the AllowTelemtry key by changing it to 0
		Write-Host "Turning off Data Collection"
		$DataCollection1 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection"
		$DataCollection2 = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
		$DataCollection3 = "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection"
		If (Test-Path $DataCollection1)
		{
			Set-ItemProperty $DataCollection1  AllowTelemetry -Value 0
		}
		If (Test-Path $DataCollection2)
		{
			Set-ItemProperty $DataCollection2  AllowTelemetry -Value 0
		}
		If (Test-Path $DataCollection3)
		{
			Set-ItemProperty $DataCollection3  AllowTelemetry -Value 0
		}
		
		#Disabling Location Tracking
		Write-Host "Disabling Location Tracking"
		$SensorState = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}"
		$LocationConfig = "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration"
		If (!(Test-Path $SensorState))
		{
			New-Item $SensorState
		}
		Set-ItemProperty $SensorState SensorPermissionState -Value 0
		If (!(Test-Path $LocationConfig))
		{
			New-Item $LocationConfig
		}
		Set-ItemProperty $LocationConfig Status -Value 0
		
		#Disables People icon on Taskbar
		Write-Host "Disabling People icon on Taskbar"
		$People = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People'
		If (Test-Path $People)
		{
			Set-ItemProperty $People -Name PeopleBand -Value 0
		}
		
		#Disables scheduled tasks that are considered unnecessary 
		Write-Host "Disabling scheduled tasks"
		Get-ScheduledTask  XblGameSaveTaskLogon | Disable-ScheduledTask
		Get-ScheduledTask  XblGameSaveTask | Disable-ScheduledTask
		Get-ScheduledTask  Consolidator | Disable-ScheduledTask
		Get-ScheduledTask  UsbCeip | Disable-ScheduledTask
		Get-ScheduledTask  DmClient | Disable-ScheduledTask
		Get-ScheduledTask  DmClientOnScenarioDownload | Disable-ScheduledTask
		
		Write-Host "Stopping and disabling Diagnostics Tracking Service"
		#Disabling the Diagnostics Tracking Service
		Stop-Service "DiagTrack"
		Set-Service "DiagTrack" -StartupType Disabled
		
		
		Write-Host "Removing CloudStore from registry if it exists"
		$CloudStore = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\CloudStore'
		If (Test-Path $CloudStore)
		{
			Stop-Process Explorer.exe -Force
			Remove-Item $CloudStore -Recurse -Force
			Start-Process Explorer.exe -Wait
		}
		Write-Host "Disabling Cortana"
		$Cortana1 = "HKCU:\SOFTWARE\Microsoft\Personalization\Settings"
		$Cortana2 = "HKCU:\SOFTWARE\Microsoft\InputPersonalization"
		$Cortana3 = "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore"
		If (!(Test-Path $Cortana1))
		{
			New-Item $Cortana1
		}
		Set-ItemProperty $Cortana1 AcceptedPrivacyPolicy -Value 0
		If (!(Test-Path $Cortana2))
		{
			New-Item $Cortana2
		}
		Set-ItemProperty $Cortana2 RestrictImplicitTextCollection -Value 1
		Set-ItemProperty $Cortana2 RestrictImplicitInkCollection -Value 1
		If (!(Test-Path $Cortana3))
		{
			New-Item $Cortana3
		}
		Set-ItemProperty $Cortana3 HarvestContacts -Value 0
		
		Write-Host "Disabling Telemetry..."
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "AllowTelemetry" -Type DWord -Value 0
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Application Experience\ProgramDataUpdater"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Autochk\Proxy"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\Consolidator"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Customer Experience Improvement Program\UsbCeip"
		Disable-ScheduledTask -TaskName "Microsoft\Windows\DiskDiagnostic\Microsoft-Windows-DiskDiagnosticDataCollector"
		Write-Host "Disabling Wi-Fi Sense..."
		If (!(Test-Path "HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting"))
		{
			New-Item -Path "HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting" -Force
		}
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting" -Name "Value" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowAutoConnectToWiFiSenseHotspots" -Name "Value" -Type DWord -Value 0
		Write-Host "Disabling Application suggestions..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "ContentDeliveryAllowed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "OemPreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "PreInstalledAppsEverEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SilentInstalledAppsEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338387Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338388Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-338389Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SubscribedContent-353698Enabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" -Name "SystemPaneSuggestionsEnabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableWindowsConsumerFeatures" -Type DWord -Value 1
		Write-Host "Disabling Activity History..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableActivityFeed" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "PublishUserActivities" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "UploadUserActivities" -Type DWord -Value 0
		# Keep Location Tracking commented out if you want the ability to locate your device
		Write-Host "Disabling Location Tracking..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Type String -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Type DWord -Value 0
		Write-Host "Disabling automatic Maps updates..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\Maps" -Name "AutoUpdateEnabled" -Type DWord -Value 0
		Write-Host "Disabling Feedback..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Siuf\Rules" -Name "NumberOfSIUFInPeriod" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection" -Name "DoNotShowFeedbackNotifications" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClient" -ErrorAction SilentlyContinue
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload" -ErrorAction SilentlyContinue
		Write-Host "Disabling Tailored Experiences..."
		If (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" -Name "DisableTailoredExperiencesWithDiagnosticData" -Type DWord -Value 1
		Write-Host "Disabling Advertising ID..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" -Name "DisabledByGroupPolicy" -Type DWord -Value 1
		Write-Host "Disabling Error reporting..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting" -Name "Disabled" -Type DWord -Value 1
		Disable-ScheduledTask -TaskName "Microsoft\Windows\Windows Error Reporting\QueueReporting"
		Write-Host "Restricting Windows Update P2P only to local network..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config" -Name "DODownloadMode" -Type DWord -Value 1
		Write-Host "Stopping and disabling Diagnostics Tracking Service..."
		Stop-Service "DiagTrack" -WarningAction SilentlyContinue
		Set-Service "DiagTrack" -StartupType Disabled
		Write-Host "Stopping and disabling WAP Push Service..."
		Stop-Service "dmwappushservice" -WarningAction SilentlyContinue
		Set-Service "dmwappushservice" -StartupType Disabled
		Write-Host "Enabling F8 boot menu options..."
		bcdedit /set `{current`} bootmenupolicy Legacy
		Write-Host "Stopping and disabling Home Groups services..."
		Stop-Service "HomeGroupListener" -WarningAction SilentlyContinue
		Set-Service "HomeGroupListener" -StartupType Disabled
		Stop-Service "HomeGroupProvider" -WarningAction SilentlyContinue
		Set-Service "HomeGroupProvider" -StartupType Disabled
		Write-Host "Disabling Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value 0
		Write-Host "Disabling Storage Sense..."
		Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy" -Recurse -ErrorAction SilentlyContinue
		Write-Host "Stopping and disabling Superfetch service..."
		Stop-Service "SysMain" -WarningAction SilentlyContinue
		Set-Service "SysMain" -StartupType Disabled
		Write-Host "Disabling Hibernation..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Session Manager\Power" -Name "HibernteEnabled" -Type Dword -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" -Name "ShowHibernateOption" -Type Dword -Value 0
		Write-Host "Showing task manager details..."
		$taskmgr = Start-Process -WindowStyle Hidden -FilePath taskmgr.exe -PassThru
		Do
		{
			Start-Sleep -Milliseconds 100
			$preferences = Get-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -ErrorAction SilentlyContinue
		}
		Until ($preferences)
		Stop-Process $taskmgr
		$preferences.Preferences[28] = 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\TaskManager" -Name "Preferences" -Type Binary -Value $preferences.Preferences
		Write-Host "Showing file operations details..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager" -Name "EnthusiastMode" -Type DWord -Value 1
		Write-Host "Hiding People icon..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People" -Name "PeopleBand" -Type DWord -Value 0
		Write-Host "Hide tray icons..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "EnableAutoTray" -Type DWord -Value 1
		Write-Host "Enabling NumLock after startup..."
		If (!(Test-Path "HKU:"))
		{
			New-PSDrive -Name HKU -PSProvider Registry -Root HKEY_USERS
		}
		Set-ItemProperty -Path "HKU:\.DEFAULT\Control Panel\Keyboard" -Name "InitialKeyboardIndicators" -Type DWord -Value 2147483650
		Add-Type -AssemblyName System.Windows.Forms
		If (!([System.Windows.Forms.Control]::IsKeyLocked('NumLock')))
		{
			$wsh = New-Object -ComObject WScript.Shell
			$wsh.SendKeys('{NUMLOCK}')
		}
		
		Write-Host "Changing default Explorer view to This PC..."
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "LaunchTo" -Type DWord -Value 1
		
		Write-Host "Hiding 3D Objects icon from This PC..."
		Remove-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}" -Recurse -ErrorAction SilentlyContinue
		
		# Network Tweaks
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type DWord -Value 20
		
		# Group svchost.exe processes
		$ram = (Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum / 1kb
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value $ram -Force
		
		#Write-Host "Installing Windows Media Player..."
		#Enable-WindowsOptionalFeature -Online -FeatureName "WindowsMediaPlayer" -NoRestart -WarningAction SilentlyContinue 
		
		Write-Host "Disable News and Interests"
		
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		# Remove "News and Interest" from taskbar
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Feeds" -Name "ShellFeedsTaskbarViewMode" -Type DWord -Value 2
		
		# remove "Meet Now"  from taskbar
		
		If (!(Test-Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer"))
		{
			New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force
		}
		
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		
		Write-Host "Removing AutoLogger file and restricting directory..."
		$autoLoggerDir = "$env:PROGRAMDATA\Microsoft\Diagnosis\ETLLogs\AutoLogger"
		If (Test-Path "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl")
		{
			Remove-Item "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl"
		}
		icacls $autoLoggerDir /deny SYSTEM:`(OI`)`(CI`)F
		
		Write-Host "Stopping and disabling Diagnostics Tracking Service..."
		Stop-Service "DiagTrack"
		Set-Service "DiagTrack" -StartupType Disabled
		
		Write-Host "Showing known file extensions..."
		Write-Host "Tweaking For Less Ram Usage..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "HideFileExt" -Type DWord -Value 0
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching") -ne $true) { New-Item "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKCU:\System\GameConfigStore") -ne $true) { New-Item "HKCU:\System\GameConfigStore" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKCU:\Control Panel\Desktop") -ne $true) { New-Item "HKCU:\Control Panel\Desktop" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c") -ne $true) { New-Item "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c" -force -ea SilentlyContinue };
		if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender") -ne $true) { New-Item "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -force -ea SilentlyContinue };
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control' -Name 'SvcHostSplitThresholdInKB' -Value 67108864 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control' -Name 'WaitToKillServiceTimeout' -Value '2000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile' -Name 'NetworkThrottlingIndex' -Value -1 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile' -Name 'SystemResponsiveness' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Priority' -Value 6 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Audio' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Priority' -Value 5 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Capture' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'BackgroundPriority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'Scheduling Category' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\DisplayPostProcessing' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Priority' -Value 4 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Distribution' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Background Only' -Value 'False' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Priority' -Value 6 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Scheduling Category' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'SFIO Priority' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Background Only' -Value 'False' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'BackgroundPriority' -Value 4 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Priority' -Value 3 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Playback' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Background Only' -Value 'False' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Priority' -Value 1 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'Scheduling Category' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Pro Audio' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Background Only' -Value 'True' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Priority' -Value 5 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'Scheduling Category' -Value 'Medium' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Window Manager' -Name 'SFIO Priority' -Value 'Normal' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Affinity' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Background Only' -Value 'False' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Clock Rate' -Value 10000 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'GPU Priority' -Value 8 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Priority' -Value 6 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'Scheduling Category' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games' -Name 'SFIO Priority' -Value 'High' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching' -Name 'SearchOrderConfig' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power' -Name 'HiberbootEnabled' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling' -Name 'PowerThrottlingOff' -Value 1 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_Enabled' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_FSEBehaviorMode' -Value 2 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'Win32_AutoGameModeDefaultProfile' -Value ([byte[]](0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)) -PropertyType Binary -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'Win32_GameModeRelatedProcesses' -Value ([byte[]](0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)) -PropertyType Binary -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_HonorUserFSEBehaviorMode' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_DXGIHonorFSEWindowsCompatible' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\System\GameConfigStore' -Name 'GameDVR_EFSEFeatureFlags' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power' -Name 'HibernateEnabledDefault' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'MenuShowDelay' -Value '0' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'WaitToKillAppTimeout' -Value '5000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'HungAppTimeout' -Value '4000' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'AutoEndTasks' -Value '1' -PropertyType String -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'LowLevelHooksTimeout' -Value 4096 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKCU:\Control Panel\Desktop' -Name 'WaitToKillServiceTimeout' -Value 8192 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\943c8cb6-6f93-4227-ad87-e9a3feec08d1' -Name 'Attributes' -Value 2 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'DCSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\2a737441-1930-4402-8d77-b2bebba308a3\d4e98f31-5ffe-4ce1-be31-1b38b384c009\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e' -Name 'DCSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		New-ItemProperty -LiteralPath 'HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\54533251-82be-4824-96c1-47b60b740d00\3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb\DefaultPowerSchemeValues\8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c' -Name 'ACSettingIndex' -Value 0 -PropertyType DWord -Force -ea SilentlyContinue;
		#New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender' -Name 'DisableAntiSpyware' -Value 1 -PropertyType DWord -Force -ea SilentlyContinue;
		
		
		# Service tweaks to Manual 
		
		$services = @(
			"diagnosticshub.standardcollector.service" # Microsoft (R) Diagnostics Hub Standard Collector Service
			"DiagTrack" # Diagnostics Tracking Service
			"DPS"
			"dmwappushservice" # WAP Push Message Routing Service (see known issues)
			"lfsvc" # Geolocation Service
			"MapsBroker" # Downloaded Maps Manager
			"NetTcpPortSharing" # Net.Tcp Port Sharing Service
			"RemoteAccess" # Routing and Remote Access
			"RemoteRegistry" # Remote Registry
			"SharedAccess" # Internet Connection Sharing (ICS)
			"TrkWks" # Distributed Link Tracking Client
			#"WbioSrvc"                                     # Windows Biometric Service (required for Fingerprint reader / facial detection)
			#"WlanSvc"                                      # WLAN AutoConfig
			"WMPNetworkSvc" # Windows Media Player Network Sharing Service
			"wscsvc" # Windows Security Center Service
			"WSearch" # Windows Search
			"XblAuthManager" # Xbox Live Auth Manager
			"XblGameSave" # Xbox Live Game Save Service
			"XboxNetApiSvc" # Xbox Live Networking Service
			"XboxGipSvc" #Disables Xbox Accessory Management Service
			"WerSvc" #disables windows error reporting
			"Spooler" #Disables your printer
			"Fax" #Disables fax
			"fhsvc" #Disables fax histroy
			"gupdate" #Disables google update
			"gupdatem" #Disable another google update
			"stisvc" #Disables Windows Image Acquisition (WIA)
			"AJRouter" #Disables (needed for AllJoyn Router Service)
			"MSDTC" # Disables Distributed Transaction Coordinator
			"WpcMonSvc" #Disables Parental Controls
			"PhoneSvc" #Disables Phone Service(Manages the telephony state on the device)
			"PrintNotify" #Disables Windows printer notifications and extentions
			"PcaSvc" #Disables Program Compatibility Assistant Service
			"WPDBusEnum" #Disables Portable Device Enumerator Service
			#"LicenseManager"                               #Disable LicenseManager(Windows store may not work properly)
			"seclogon" #Disables  Secondary Logon(disables other credentials only password will work)
			"SysMain" #Disables sysmain
			"lmhosts" #Disables TCP/IP NetBIOS Helper
			"wisvc" #Disables Windows Insider program(Windows Insider will not work)
			"FontCache" #Disables Windows font cache
			"RetailDemo" #Disables RetailDemo whic is often used when showing your device
			"ALG" # Disables Application Layer Gateway Service(Provides support for 3rd party protocol plug-ins for Internet Connection Sharing)
			"BFE" #Disables Base Filtering Engine (BFE) (is a service that manages firewall and Internet Protocol security)
			"BrokerInfrastructure" #Disables Windows infrastructure service that controls which background tasks can run on the system.
			"SCardSvr" #Disables Windows smart card
			"EntAppSvc" #Disables enterprise application management.
			"BthAvctpSvc" #Disables AVCTP service (if you use  Bluetooth Audio Device or Wireless Headphones. then don't disable this)
			#"FrameServer"                                   #Disables Windows Camera Frame Server(this allows multiple clients to access video frames from camera devices.)
			"Browser" #Disables computer browser
			"BthAvctpSvc" #AVCTP service (This is Audio Video Control Transport Protocol service.)
			#"BDESVC"                                        #Disables bitlocker
			"iphlpsvc" #Disables ipv6 but most websites don't use ipv6 they use ipv4     
			"edgeupdate" # Disables one of edge update service  
			"MicrosoftEdgeElevationService" # Disables one of edge  service 
			"edgeupdatem" # disbales another one of update service (disables edgeupdatem)                          
			"SEMgrSvc" #Disables Payments and NFC/SE Manager (Manages payments and Near Field Communication (NFC) based secure elements)
			#"PNRPsvc"                                      # Disables peer Name Resolution Protocol ( some peer-to-peer and collaborative applications, such as Remote Assistance, may not function, Discord will still work)
			#"p2psvc"                                       # Disbales Peer Name Resolution Protocol(nables multi-party communication using Peer-to-Peer Grouping.  If disabled, some applications, such as HomeGroup, may not function. Discord will still work)
			#"p2pimsvc"                                     # Disables Peer Networking Identity Manager (Peer-to-Peer Grouping services may not function, and some applications, such as HomeGroup and Remote Assistance, may not function correctly.Discord will still work)
			"PerfHost" #Disables  remote users and 64-bit processes to query performance .
			"BcastDVRUserService_48486de" #Disables GameDVR and Broadcast   is used for Game Recordings and Live Broadcasts
			"CaptureService_48486de" #Disables ptional screen capture functionality for applications that call the Windows.Graphics.Capture API.  
			"cbdhsvc_48486de" #Disables   cbdhsvc_48486de (clipboard service it disables)
			#"BluetoothUserService_48486de"                  #disbales BluetoothUserService_48486de (The Bluetooth user service supports proper functionality of Bluetooth features relevant to each user session.)
			"WpnService" #Disables WpnService (Push Notifications may not work )
			#"StorSvc"                                       #Disables StorSvc (usb external hard drive will not be reconised by windows)
			"RtkBtManServ" #Disables Realtek Bluetooth Device Manager Service
			"QWAVE" #Disables Quality Windows Audio Video Experience (audio and video might sound worse)
			#Hp services
			"HPAppHelperCap"
			"HPDiagsCap"
			"HPNetworkCap"
			"HPSysInfoCap"
			"HpTouchpointAnalyticsService"
			#hyper-v services
			"HvHost"
			"vmickvpexchange"
			"vmicguestinterface"
			"vmicshutdown"
			"vmicheartbeat"
			"vmicvmsession"
			"vmicrdv"
			"vmictimesync"
			# Services which cannot be disabled
			#"WdNisSvc"
		)
		
		foreach ($service in $services)
		{
			Write-Host "Setting $service StartupType to Disable"
			Get-Service -Name $service -ErrorAction SilentlyContinue | Set-Service -StartupType Disable
		}
		
		
		$services = @(
			"diagnosticshub.standardcollector.service" # Microsoft (R) Diagnostics Hub Standard Collector Service
			"DiagTrack" # Diagnostics Tracking Service
			"dmwappushservice" # WAP Push Message Routing Service (see known issues)
			"lfsvc" # Geolocation Service
			"MapsBroker" # Downloaded Maps Manager
			"NetTcpPortSharing" # Net.Tcp Port Sharing Service
			"RemoteAccess" # Routing and Remote Access
			"RemoteRegistry" # Remote Registry
			"SharedAccess" # Internet Connection Sharing (ICS)
			"TrkWks" # Distributed Link Tracking Client
			"WbioSrvc" # Windows Biometric Service (required for Fingerprint reader / facial detection)
			#"WlanSvc" # WLAN AutoConfig
			"WMPNetworkSvc" # Windows Media Player Network Sharing Service
			"wscsvc" # Windows Security Center Service
			"WSearch" # Windows Search
			"XblAuthManager" # Xbox Live Auth Manager
			"XblGameSave" # Xbox Live Game Save Service
			"XboxNetApiSvc" # Xbox Live Networking Service
			"XboxGipSvc" #Disables Xbox Accessory Management Service
			"WerSvc" #disables windows error reporting
			"Spooler" #Disables your printer
			"Fax" #Disables fax
			"fhsvc" #Disables fax histroy
			"gupdate" #Disables google update
			"gupdatem" #Disable another google update
			"stisvc" #Disables Windows Image Acquisition (WIA)
			"AJRouter" #Disables (needed for AllJoyn Router Service)
			"MSDTC" # Disables Distributed Transaction Coordinator
			"WpcMonSvc" #Disables Parental Controls
			"PhoneSvc" #Disables Phone Service(Manages the telephony state on the device)
			"PrintNotify" #Disables Windows printer notifications and extentions
			"PcaSvc" #Disables Program Compatibility Assistant Service
			"WPDBusEnum" #Disables Portable Device Enumerator Service
			"LicenseManager" #Disable LicenseManager(Windows store may not work properly)
			"seclogon" #Disables  Secondary Logon(disables other credentials only password will work)
			"SysMain" #Disables sysmain
			"lmhosts" #Disables TCP/IP NetBIOS Helper
			"wisvc" #Disables Windows Insider program(Windows Insider will not work)
			"FontCache" #Disables Windows font cache
			"RetailDemo" #Disables RetailDemo whic is often used when showing your device
			"ALG" # Disables Application Layer Gateway Service(Provides support for 3rd party protocol plug-ins for Internet Connection Sharing)
			"BFE" #Disables Base Filtering Engine (BFE) (is a service that manages firewall and Internet Protocol security)
			"BrokerInfrastructure" #Disables Windows infrastructure service that controls which background tasks can run on the system.
			"SCardSvr" #Disables Windows smart card
			"EntAppSvc" #Disables enterprise application management.
			"BthAvctpSvc" #Disables AVCTP service (if you use  Bluetooth Audio Device or Wireless Headphones. then don't disable this)
			"FrameServer" #Disables Windows Camera Frame Server(this allows multiple clients to access video frames from camera devices.)
			"Browser" #Disables computer browser
			"BthAvctpSvc" #AVCTP service (This is Audio Video Control Transport Protocol service.)
			"BDESVC" #Disables bitlocker
			"iphlpsvc" #Disables ipv6 but most websites don't use ipv6 they use ipv4     
			"edgeupdate" # Disables one of edge update service  
			"MicrosoftEdgeElevationService" # Disables one of edge  service 
			"edgeupdatem" # disbales another one of update service (disables edgeupdatem)                          
			"SEMgrSvc" #Disables Payments and NFC/SE Manager (Manages payments and Near Field Communication (NFC) based secure elements)
			"PNRPsvc" # Disables peer Name Resolution Protocol ( some peer-to-peer and collaborative applications, such as Remote Assistance, may not function, Discord will still work)
			"p2psvc" # Disbales Peer Name Resolution Protocol(nables multi-party communication using Peer-to-Peer Grouping.  If disabled, some applications, such as HomeGroup, may not function. Discord will still work)
			"p2pimsvc" # Disables Peer Networking Identity Manager (Peer-to-Peer Grouping services may not function, and some applications, such as HomeGroup and Remote Assistance, may not function correctly.Discord will still work)
			"PerfHost" #Disables  remote users and 64-bit processes to query performance .
			"BcastDVRUserService_48486de" #Disables GameDVR and Broadcast   is used for Game Recordings and Live Broadcasts
			"CaptureService_48486de" #Disables ptional screen capture functionality for applications that call the Windows.Graphics.Capture API.  
			"cbdhsvc_48486de" #Disables   cbdhsvc_48486de (clipboard service it disables)
			"BluetoothUserService_48486de" #disbales BluetoothUserService_48486de (The Bluetooth user service supports proper functionality of Bluetooth features relevant to each user session.)
			"WpnService" #Disables WpnService (Push Notifications may not work )
			"StorSvc" #Disables StorSvc (usb external hard drive will not be reconised by windows)
			"RtkBtManServ" #Disables Realtek Bluetooth Device Manager Service
			"QWAVE" #Disables Quality Windows Audio Video Experience (audio and video might sound worse)
			#Hp services
			"HPAppHelperCap"
			"HPDiagsCap"
			"HPNetworkCap"
			"HPSysInfoCap"
			"HpTouchpointAnalyticsService"
			#hyper-v services
			"HvHost"
			"vmickvpexchange"
			"vmicguestinterface"
			"vmicshutdown"
			"vmicheartbeat"
			"vmicvmsession"
			"vmicrdv"
			"vmictimesync"
			Services which cannot be disabled
			"WdNisSvc"
		)
		
		foreach ($service in $services)
		{
			# -ErrorAction SilentlyContinue is so it doesn't write an error to stdout if a service doesn't exist
			
			Write-Host "Setting $service StartupType to disabled"
			Get-Service -Name $service -ErrorAction SilentlyContinue | Set-Service -StartupType Disabled
			
			$running = Get-Service -Name $service -ErrorAction SilentlyContinue | Where-Object { $_.Status -eq 'Running' }
			if ($running)
			{
				Write-Host "Stopping $service"
				Stop-Service -Name $service
			}
		}
		
		Write-Host "Disabling Windows 10 News and Interests Feed..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" -Name "EnableFeeds" -Type DWord -Value 0
		Write-Host "Running O&O Shutup with My Custom Settings"
		Import-Module BitsTransfer
		Start-BitsTransfer -Source "https://raw.githubusercontent.com/paint29/Windows-Optimization-Toolbox/main/ooshutup10.cfg" -Destination ooshutup10.cfg
		Start-BitsTransfer -Source "https://dl5.oo-software.com/files/ooshutup10/OOSU10.exe" -Destination OOSU10.exe
		.\OOSU10.exe ooshutup10.cfg
		Write-Host "Disabling power throttling..."
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power\PowerThrottling" -Name "PowerThrottlingOff" -Type DWord -Value 1
		Write-Host "Stopping and disabling Diagnostics Tracking Service..."
		Stop-Service "DiagTrack" -WarningAction SilentlyContinue
		Set-Service "DiagTrack" -StartupType Disabled
		Write-Host "Stopping and disabling WAP Push Service..."
		Stop-Service "dmwappushservice" -WarningAction SilentlyContinue
		Set-Service "dmwappushservice" -StartupType Disabled
		Write-Host "Setting Processor scheduling..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\PriorityControl" -Name "Win32PrioritySeparation" -Type DWord -Value 0x00000026
		Write-Host "Disabling aero shake..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "DisallowShaking" -Type DWord -Value 0
		Write-Host "Show BSOD details instead of the sad smiley..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\CrashControl" -Name "DisplayParameters" -Type DWord -Value 1
		New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "NoTileApplicationNotification" -Type DWord -Value 1
		Write-Host "Setting Wallpaper Quality to 100%..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "JPEGImportQuality" -Type DWord -Value 100
		Write-Host "Disabling search history..."
		New-Item -Path "HKCU:\Software\Policies\Microsoft\Windows\Explorer" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\Explorer" -Name "DisableSearchBoxSuggestions" -Type DWord -Value 1
		Write-Host "Disabling - Shortcut Word..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "link" -Type Binary -Value ([byte[]](0, 0, 0, 0))
		Write-Host "Disabling Mouse Keys Keyboard Shortcut..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\MouseKeys" -Name "Flags" -Type String -Value "186"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\MouseKeys" -Name "MaximumSpeed" -Type String -Value "40"
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility\MouseKeys" -Name "TimeToMaximumSpeed" -Type String -Value "3000"
		Write-Host "Disabling Windows Transparency..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "EnableTransparency" -Type DWord -Value 0
		Write-Host "Turning Off Safe Search..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\SearchSettings" -Name "SafeSearchMode" -Type DWord -Value 0
		Write-Host "Disabling Cloud Search..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCloudSearch" -Type DWord -Value 0
		Write-Host "Disabling Device History..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Search" -Name "DeviceHistoryEnabled" -Type DWord -Value 0
		Write-Host "Disabling Windows Remote Assistance..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowFullControl" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Remote Assistance" -Name "fAllowToGetHelp" -Type DWord -Value 0
		Write-Host "Disabling Search Histroy..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\SearchSettings" -Name "IsDeviceSearchHistoryEnabled" -Type DWord -Value 0
		Write-Host "Disabling Microsoft MeetNow..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "HideSCAMeetNow" -Type DWord -Value 1
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Adding SVCHost Tweak..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value 4194304
		Write-Host "Enabling Quality of Life Tweaks..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\UserProfileEngagement" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\UserProfileEngagement" -Name "ScoobeSystemSettingEnabled" -Type DWord -Value 0 -ErrorAction SilentlyContinue #disable annoying Get even more out of Windows
		Set-ItemProperty -Path "HKCU:\Control Panel\Accessibility" -Name "DynamicScrollbars" -Type DWord -Value 0 #disable Hide Scroll bars
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "SmoothScroll" -Type DWord -Value 0 #disable smooth scrolling 
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoInstrumentation" -Type DWord -Value 1 #disable microsoft usertracking
		Remove-ItemProperty -Path "HKCU:\Software\Policies\Microsoft\Windows\Explorer" -Name "TaskbarNoMultimon" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "TaskbarNoMultimon" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "MMTaskbarMode" -Type DWord -Value 2 #Show taskbar s only on taskbar where window is open
		$ErrorActionPreference = $errpref #restore previous preference
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type DWord -Value 20
		Write-Host "Finished Applying Windows Tweaks"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Applying Windows Tweaks!', 'Windows Optimization Toolbox')
	}
	
	
	
	
	
	
	
	$DisableActionCenter_Click = {
		
		Write-Host "Disabling Action Center..."
		If (!(Test-Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer"
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "DisableNotificationCenter" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "ToastEnabled" -Type DWord -Value 0
		Write-Host "Finished Disabling Action Center"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Action Center!', 'Windows Optimization Toolbox')
	}
	
	$EnableActionCenter_Click = {
		
		Write-Host "Enabling Action Center..."
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "DisableNotificationCenter" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\PushNotifications" -Name "ToastEnabled" -ErrorAction SilentlyContinue
		Write-Host "Finished Enabling Action Center"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Action Center!', 'Windows Optimization Toolbox')
	}
	
	
	$EnableCortanaSearch_Click = {
		Write-Host "Enable Cortana Autostart ..."
		if (Get-AppxPackage -Name Microsoft.549981C3F5F10)
		{
			if (-not (Test-Path -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId"))
			{
				New-Item -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Force
			}
			New-ItemProperty -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Name State -PropertyType DWord -Value 2 -Force
		}
		Write-Host "Enabling Cortana..."
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -ErrorAction SilentlyContinue
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type DWord -Value 0
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Name "HarvestContacts" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -ErrorAction SilentlyContinue
		Write-Host "Finished Enabling Cortana"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Cortana!', 'Windows Optimization Toolbox')
	}
	
	$DisableBackgroundApps_Click = {
		
		Write-Host "Disabling Background application access..."
		Get-ChildItem -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" -Exclude "Microsoft.Windows.Cortana*" | ForEach-Object {
			Set-ItemProperty -Path $_.PsPath -Name "Disabled" -Type DWord -Value 1
			Set-ItemProperty -Path $_.PsPath -Name "DisabledByUser" -Type DWord -Value 1
		}
		Write-Host "Finished Disabling Background Apps"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Background Apps!', 'Windows Optimization Toolbox')
	}
	
	$EnableBackgroundApps_Click = {
		
		Write-Host "Enabling Background application access..."
		Get-ChildItem -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" | ForEach-Object {
			Remove-ItemProperty -Path $_.PsPath -Name "Disabled" -ErrorAction SilentlyContinue
			Remove-ItemProperty -Path $_.PsPath -Name "DisabledByUser" -ErrorAction SilentlyContinue
		}
		Write-Host "Finished Enabling Background Apps"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Background Apps!', 'Windows Optimization Toolbox')
	}
	
	$DisableHibernation_Click = {
		Write-Host "Disabling Hibernation..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Session Manager\Power" -Name "HibernteEnabled" -Type Dword -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" -Name "ShowHibernateOption" -Type Dword -Value 0
		Write-Host "Finished Disabling Hibernation"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Hibernation!', 'Windows Optimization Toolbox')
	}
	
	$EnableHibernation_Click = {
		Write-Host "Enabling Hibernation..."
		Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Session Manager\Power" -Name "HibernteEnabled" -Type Dword -Value 1
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" -Name "ShowHibernateOption" -Type Dword -Value 1
		Write-Host "Finished Enabling Hibernation"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Hibernation!', 'Windows Optimization Toolbox')
	}
	
	$CleanTempFilesAndLog_Click = {
		Write-Host "Cleaning Temp folders & Flush DNS + Reset IP..."
		#Delete "windows.old" folder
		#Cmd.exe /c Cleanmgr /sageset:65535 
	
		Write-Verbose "Removing .tmp, .etl, .evtx, thumbcache*.db, *.log files not in use"
		Get-ChildItem -Path c:\ -Include *.tmp, *.dmp, *.etl, *.evtx, thumbcache*.db, *.log -File -Recurse -Force -ErrorAction SilentlyContinue | Remove-Item -ErrorAction SilentlyContinue
		#Delete "RetailDemo" content (if it exits)
		Write-Verbose "Removing Retail Demo content (if it exists)"
		Get-ChildItem -Path $env:ProgramData\Microsoft\Windows\RetailDemo\* -Recurse -Force -ErrorAction SilentlyContinue | Remove-Item -Recurse -ErrorAction SilentlyContinue
		#Delete not in-use anything in the C:\Windows\Temp folder
		Write-Verbose "Removing all files not in use in $env:windir\TEMP"
		Remove-Item -Path $env:windir\Temp\* -Recurse -Force -ErrorAction SilentlyContinue
		#Clear out Windows Error Reporting (WER) report archive folders
		Write-Verbose "Cleaning up WER report archive"
		Remove-Item -Path $env:ProgramData\Microsoft\Windows\WER\Temp\* -Recurse -Force -ErrorAction SilentlyContinue
		Remove-Item -Path $env:ProgramData\Microsoft\Windows\WER\ReportArchive\* -Recurse -Force -ErrorAction SilentlyContinue
		Remove-Item -Path $env:ProgramData\Microsoft\Windows\WER\ReportQueue\* -Recurse -Force -ErrorAction SilentlyContinue
		#Delete not in-use anything in your $env:TEMP folder
		Write-Verbose "Removing files not in use in $env:TEMP directory"
		Remove-Item -Path $env:TEMP\* -Recurse -Force -ErrorAction SilentlyContinue
		#Clear out ALL visible Recycle Bins
		Write-Verbose "Clearing out ALL Recycle Bins"
		Clear-RecycleBin -Force -ErrorAction SilentlyContinue
		#Clear out BranchCache cache
		Write-Verbose "Clearing BranchCache cache"
		Clear-BCCache -Force -ErrorAction SilentlyContinue
		#Clear volume backups (shadow copies)
		vssadmin delete shadows /all /quiet
		#Empty trash bin
		Powershell -Command "$bin = (New-Object -ComObject Shell.Application).NameSpace(10);$bin.items() | ForEach { Write-Host "Deleting $($_.Name) from Recycle Bin"; Remove-Item $_.Path -Recurse -Force}"
		#Delete controversial default0 user
		net user defaultuser0 /delete 2>nul
		#Clear thumbnail cache
		Remove-Item /f /s /q /a $env:LocalAppData\Microsoft\Windows\Explorer\*.db
		#Clear Windows temp files
		Remove-Item /f /q $env:localappdata\Temp\*
		Remove-Item /s /q "$env:WINDIR\Temp"
		Remove-Item /s /q "$env:TEMP"
		#Clear main telemetry file
		takeown /f "$env:ProgramData\Microsoft\Diagnosis\ETLLogs\AutoLogger\AutoLogger-Diagtrack-Listener.etl" /r -Value y
		icacls "$env:ProgramData\Microsoft\Diagnosis\ETLLogs\AutoLogger\AutoLogger-Diagtrack-Listener.etl" /grant administrators:F /t
		Write-Host"" > "$env:ProgramData\Microsoft\Diagnosis\ETLLogs\AutoLogger\AutoLogger-Diagtrack-Listener.etl"
		Write-Host Clear successful: "$env:ProgramData\Microsoft\Diagnosis\ETLLogs\AutoLogger\AutoLogger-Diagtrack-Listener.etl"
		#Clear Distributed Transaction Coordinator logs
		Remove-Item /f /q $env:SystemRoot\DtcInstall.log
		#Clear Optional Component Manager and COM+ components logs
		Remove-Item /f /q $env:SystemRoot\comsetup.log
		#Clear Pending File Rename Operations logs
		Remove-Item /f /q $env:SystemRoot\PFRO.log
		#Clear Windows Deployment Upgrade Process Logs
		Remove-Item /f /q $env:SystemRoot\setupact.log
		Remove-Item /f /q $env:SystemRoot\setuperr.log
		#Clear Windows Setup Logs
		Remove-Item /f /q $env:SystemRoot\setupapi.log
		Remove-Item /f /q $env:SystemRoot\Panther\*
		Remove-Item /f /q $env:SystemRoot\inf\setupapi.app.log
		Remove-Item /f /q $env:SystemRoot\inf\setupapi.dev.log
		Remove-Item /f /q $env:SystemRoot\inf\setupapi.offline.log
		#Clear Windows System Assessment Tool logs
		Remove-Item /f /q $env:SystemRoot\Performance\WinSAT\winsat.log
		#Clear Password change events
		Remove-Item /f /q $env:SystemRoot\debug\PASSWD.LOG
		#Clear user web cache database
		Remove-Item /f /q $env:LocalAppData\Microsoft\Windows\WebCache\*.*
		#Clear system temp folder when noone is logged in
		Remove-Item /f /q $env:SystemRoot\ServiceProfiles\LocalService\AppData\Local\Temp\*.*
		#Clear DISM (Deployment Image Servicing and Management) Logs
		Remove-Item /f /q  $env:SystemRoot\Logs\CBS\CBS.log
		Remove-Item /f /q  $env:SystemRoot\Logs\DISM\DISM.log
		#Clear Server-initiated Healing Events Logs
		Remove-Item /f /q "$env:SystemRoot\Logs\SIH\*"
		#Common Language Runtime Logs
		Remove-Item /f /q "$env:LocalAppData\Microsoft\CLR_v4.0\UsageTraces\*"
		Remove-Item /f /q "$env:LocalAppData\Microsoft\CLR_v4.0_32\UsageTraces\*"
		#Network Setup Service Events Logs
		Remove-Item /f /q "$env:SystemRoot\Logs\NetSetup\*"
		#Disk Cleanup tool (Cleanmgr.exe) Logs
		Remove-Item /f /q "$env:SystemRoot\System32\LogFiles\setupcln\*"
		#Clear Windows update and SFC scan logs
		Remove-Item /f /q $env:SystemRoot\Temp\CBS\*
		#Clear Windows Update Medic Service logs
		takeown /f $env:SystemRoot\Logs\waasmedic /r -Value y
		icacls $env:SystemRoot\Logs\waasmedic /grant administrators:F /t
		Remove-Item /s /q $env:SystemRoot\Logs\waasmedic
		#Clear Cryptographic Services Traces
		Remove-Item /f /q $env:SystemRoot\System32\catroot2\dberr.txt
		Remove-Item /f /q $env:SystemRoot\System32\catroot2.log
		Remove-Item /f /q $env:SystemRoot\System32\catroot2.jrs
		Remove-Item /f /q $env:SystemRoot\System32\catroot2.edb
		Remove-Item /f /q $env:SystemRoot\System32\catroot2.chk
		#Windows Update Events Logs
		Remove-Item /f /q "$env:SystemRoot\Logs\SIH\*"
		#Windows Update Logs
		Remove-Item /f /q "$env:SystemRoot\Traces\WindowsUpdate\*"
		#Clear Internet Explorer traces
		Remove-Item /f /q "$env:LocalAppData\Microsoft\Windows\INetCache\IE\*"
		reg delete "HKCU\SOFTWARE\Microsoft\Internet Explorer\TypedURLs" /va /f
		reg delete "HKCU\SOFTWARE\Microsoft\Internet Explorer\TypedURLsTime" /va /f
		Remove-Item /s /q "$env:LocalAppData\Microsoft\Internet Explorer"
		Remove-Item /s /q "$env:APPDATA\Microsoft\Windows\Cookies"
		Remove-Item /s /q "$env:USERPROFILE\Cookies"
		Remove-Item /s /q "$env:USERPROFILE\Local Settings\Traces"
		Remove-Item /s /q "$env:LocalAppData\Temporary Internet Files"
		Remove-Item /s /q "$env:LocalAppData\Microsoft\Windows\Temporary Internet Files"
		Remove-Item /s /q "$env:LocalAppData\Microsoft\Windows\INetCookies\PrivacIE"
		Remove-Item /s /q "$env:LocalAppData\Microsoft\Feeds Cache"
		Remove-Item /s /q "$env:LocalAppData\Microsoft\InternetExplorer\DOMStore"
		#Clear Google Chrome traces
		Remove-Item /f /q "$env:LocalAppData\Google\Software Reporter Tool\*.log"
		Remove-Item /s /q "$env:USERPROFILE\Local Settings\Application Data\Google\Chrome\User Data"
		Remove-Item /s /q "$env:LocalAppData\Google\Chrome\User Data"
		Remove-Item /s /q "$env:LocalAppData\Google\CrashReports\""
    Remove-Item /s /q "$env:LocalAppData\Google\Chrome\User Data\Crashpad\reports\""
		#Clear Opera traces
		Remove-Item /s /q "$env:USERPROFILE\AppData\Local\Opera\Opera"
		Remove-Item /s /q "$env:APPDATA\Opera\Opera"
		Remove-Item /s /q "$env:USERPROFILE\Local Settings\Application Data\Opera\Opera"
		#Clear Safari traces
		Remove-Item /s /q "$env:USERPROFILE\AppData\Local\Apple Computer\Safari\Traces"
		Remove-Item /s /q "$env:APPDATA\Apple Computer\Safari"
		Remove-Item /q /s /f "$env:USERPROFILE\AppData\Local\Apple Computer\Safari\Cache.db"
		Remove-Item /q /s /f "$env:USERPROFILE\AppData\Local\Apple Computer\Safari\WebpageIcons.db"
		Remove-Item /s /q "$env:USERPROFILE\Local Settings\Application Data\Apple Computer\Safari\Traces"
		Remove-Item /q /s /f "$env:USERPROFILE\Local Settings\Application Data\Apple Computer\Safari\Cache.db"
		Remove-Item /q /s /f "$env:USERPROFILE\Local Settings\Application Data\Safari\WebpageIcons.db"
		#Clear Listary indexes
		Remove-Item /f /s /q $env:APPDATA\Listary\UserData > nul
		#Clear Java cache
		Remove-Item /s /q "$env:APPDATA\Sun\Java\Deployment\cache"
		#Clear Flash traces
		Remove-Item /s /q "$env:APPDATA\Macromedia\Flash Player"
		#Clear Steam dumps, logs and traces
		Remove-Item /f /q %ProgramFiles(x86)%\Steam\Dumps
		Remove-Item /f /q %ProgramFiles(x86)%\Steam\Traces
		Remove-Item /f /q %ProgramFiles(x86)%\Steam\appcache\*.log
		#Clear Visual Studio telemetry and feedback data
		Remove-Item /s /q "$env:APPDATA\vstelemetry" 2>nul
		Remove-Item /s /q "$env:LocalAppData\Microsoft\VSApplicationInsights" 2>nul
		Remove-Item /s /q "$env:ProgramData\Microsoft\VSApplicationInsights" 2>nul
		Remove-Item /s /q "$env:TEMP\Microsoft\VSApplicationInsights" 2>nul
		Remove-Item /s /q "$env:TEMP\VSFaultInfo" 2>nul
		Remove-Item /s /q "$env:TEMP\VSFeedbackPerfWatsonData" 2>nul
		Remove-Item /s /q "$env:TEMP\VSFeedbackVSRTCLogs" 2>nul
		Remove-Item /s /q "$env:TEMP\VSRemoteControl" 2>nul
		Remove-Item /s /q "$env:TEMP\VSTelem" 2>nul
		Remove-Item /s /q "$env:TEMP\VSTelem.Out" 2>nul
		#Clear Dotnet CLI telemetry
		Remove-Item /s /q "$env:USERPROFILE\.dotnet\TelemetryStorageService" 2>nul
		#Clear regedit last key
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Applets\Regedit" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Regedit" /va /f
		#Clear regedit favorites
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Applets\Regedit\Favorites" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Regedit\Favorites" /va /f
		#Clear list of recent programs opened
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\LastVisitedPidlMRU" /va /f
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\LastVisitedPidlMRULegacy" /va /f
		#Clear Adobe Media Browser MRU
		reg delete "HKCU\Software\Adobe\MediaBrowser\MRU" /va /f
		#Clear MSPaint MRU
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Applets\Paint\Recent File List" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Paint\Recent File List" /va /f
		#Clear Wordpad MRU
		reg delete "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Wordpad\Recent File List" /va /f
		#Clear Map Network Drive MRU MRU
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Map Network Drive MRU" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Map Network Drive MRU" /va /f
		#Clear Windows Search Assistant history
		reg delete "HKCU\Software\Microsoft\Search Assistant\ACMru" /va /f
		#Clear list of Recent Files Opened, by Filetype
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs" /va /f
		reg delete "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs" /va /f
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\OpenSaveMRU" /va /f
		#Clear windows media player recent files and urls
		reg delete "HKCU\Software\Microsoft\MediaPlayer\Player\RecentFileList" /va /f
		reg delete "HKCU\Software\Microsoft\MediaPlayer\Player\RecentURLList" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\MediaPlayer\Player\RecentFileList" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\MediaPlayer\Player\RecentURLList" /va /f
		#Clear Most Recent Application's Use of DirectX
		reg delete "HKCU\Software\Microsoft\Direct3D\MostRecentApplication" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Direct3D\MostRecentApplication" /va /f
		#Clear Windows Run MRU & typedpaths
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" /va /f
		reg delete "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\TypedPaths" /va /f
		#Clear recently accessed files
		Remove-Item /f /q "$env:APPDATA\Microsoft\Windows\Recent\AutomaticDestinations\*"
		#Clear user pins
		Remove-Item /f /q "$env:APPDATA\Microsoft\Windows\Recent\CustomDestinations\*"
		#Clear regedit last key
		reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Applets\Regedit" /va /f
		reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Applets\Regedit" /va /f
		cmd /c 'netsh winsock reset '
		cmd /c 'netsh int ip reset '
		cmd /c 'ipconfig /release '
		cmd /c 'ipconfig /renew '
		cmd /c 'ipconfig /flushdns '
		cmd /c 'echo Flush DNS + IP Reset Completed Successfully!'
		cmd /c 'echo Clearing Temp folders....'
		cmd /c 'del /f /s /q %systemdrive%\*.tmp '
		cmd /c 'del /f /s /q %systemdrive%\*._mp '
		cmd /c 'del /f /s /q %systemdrive%\*.log '
		cmd /c 'del /f /s /q %systemdrive%\*.gid '
		cmd /c 'del /f /s /q %systemdrive%\*.chk '
		cmd /c 'del /f /s /q %systemdrive%\*.old '
		cmd /c 'del /f /s /q %systemdrive%\recycled\*.* '
		cmd /c 'del /f /s /q %windir%\*.bak '
		cmd /c 'del /f /s /q %windir%\prefetch\*.* '
		cmd /c 'del /f /q %userprofile%\cookies\*.* '
		cmd /c 'del /f /q %userprofile%\recent\*.* '
		cmd /c 'del /f /s /q %userprofile%\Local Settings\Temporary Internet Files\*.* '
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Get-ChildItem -Path "$env:temp" -Exclude "dmtmp" | ForEach-Object ($_) {
			"CLEANING :" + $_.fullname
			Remove-Item $_.fullname -Force -Recurse
			"CLEANED... :" + $_.fullname
		}
		$ErrorActionPreference = $errpref #restore previous preference
		cmd /c 'del /f /s /q %userprofile%\recent\*.* '
		cmd /c 'del /f /s /q %windir%\Temp\*.* '
		cmd /c 'echo Temp folders Cleared Successfully!'
		Write-Host 'Clearing CleanMgr.exe automation settings.'
		Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\*' -Name StateFlags0001 -ErrorAction SilentlyContinue | Remove-ItemProperty -Name StateFlags0001 -ErrorAction SilentlyContinue
		
		Write-Host 'Enabling Update Cleanup. This is done automatically in Windows 10 via a scheduled task.'
		New-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\Update Cleanup' -Name StateFlags0001 -Value 2 -PropertyType DWord
		
		Write-Host 'Cleaning Temp Files...'
		New-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\Temporary Files' -Name StateFlags0001 -Value 2 -PropertyType DWord
		Write-Host 'Starting CleanMgr.exe...'
		###This will use classic Disk clean-up utility aka Cleanmgr.exe to clear unnecessary files from your computer's hard disk instead of Microsoft's replacement "Storage Sense app" which is part of the Settings app.###
		###This script will use command-line options to specify that Cleanmgr.exe cleans up all areas expect Recycle Bin and Previous Windows Installations.###
		###Requires -RunSilent
		
		Requires -RunAsAdministrator
		
		$SageSet = "StateFlags0099"
		$Base = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\"
		$Locations = @(
			"Active Setup Temp Folders"
			"BranchCache"
			"Downloaded Program Files"
			"GameNewsFiles"
			"GameStatisticsFiles"
			"GameUpdateFiles"
			"Internet Cache Files"
			"Memory Dump Files"
			"Offline Pages Files"
			"Old ChkDsk Files"
			"D3D Shader Cache"
			"Delivery Optimization Files"
			"Diagnostic Data Viewer database files"
			"Previous Installations"
			"Recycle Bin"
			"Service Pack Cleanup"
			"Setup Log Files"
			"System error memory dump files"
			"System error minidump files"
			"Temporary Files"
			"Temporary Setup Files"
			"Temporary Sync Files"
			"Thumbnail Cache"
			"Update Cleanup"
			"Upgrade Discarded Files"
			"User file versions"
			"Windows Defender"
			"Windows Error Reporting Archive Files"
			"Windows Error Reporting Queue Files"
			"Windows Error Reporting System Archive Files"
			"Windows Error Reporting System Queue Files"
			"Windows ESD installation files"
			"Windows Upgrade Log Files"
		)
		
		# -ea silentlycontinue will supress error messages
		ForEach ($Location in $Locations)
		{
			Set-ItemProperty -Path $($Base + $Location) -Name $SageSet -Type DWORD -Value 2 -ea silentlycontinue | Out-Null
		}
		
		# Do the clean-up. Have to convert the SageSet number
		$Args = "/sagerun:$([string]([int]$SageSet.Substring($SageSet.Length - 4)))"
		Start-Process -Wait "$env:SystemRoot\System32\cleanmgr.exe" -ArgumentList $Args
		
		# Remove the Stateflags
		ForEach ($Location in $Locations)
		{
			Remove-ItemProperty -Path $($Base + $Location) -Name $SageSet -Force -ea silentlycontinue | Out-Null
		}
		Write-Host "Finished Cleaning Temp And Log Files"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Cleaning Temp And Log Files!', 'Windows Optimization Toolbox')
		
		
	}
	
	$SecurityUpdatesOnly_Click = {
		Write-Host "Improving Windows Update to delay Feature updates and only install Security Updates"
		Write-Host "Disabling automatic download and installation of Windows updates"
		New-FolderForced -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU" "NoAutoUpdate" 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU" "AUOptions" 2
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU" "ScheduledInstallDay" 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\WindowsUpdate\AU" "ScheduledInstallTime" 3
		
		Write-Host "Disable seeding of updates to other computers via Group Policies"
		New-FolderForced -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeliveryOptimization"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeliveryOptimization" "DODownloadMode" 0
		
		#echo "Disabling automatic driver update"
		#sp "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" "SearchOrderConfig" 0
		
		$objSID = New-Object System.Security.Principal.SecurityIdentifier "S-1-1-0"
		$EveryOne = $objSID.Translate([System.Security.Principal.NTAccount]).Value
		
		
		Write-Host "Disable 'Updates are available' message"
		
		takeown /F "$env:WinDIR\System32\MusNotification.exe"
		icacls "$env:WinDIR\System32\MusNotification.exe" /deny "$($EveryOne):(X)"
		takeown /F "$env:WinDIR\System32\MusNotificationUx.exe"
		icacls "$env:WinDIR\System32\MusNotificationUx.exe" /deny "$($EveryOne):(X)"
		$UpdatesPath = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings"
		If (!(Get-ItemProperty $UpdatesPath  BranchReadinessLevel)) { New-ItemProperty -Path $UpdatesPath -Name "BranchReadinessLevel" -Type DWord -Value 20 }
		Set-ItemProperty -Path $UpdatesPath -Name "BranchReadinessLevel" -Type DWord -Value 20
		If (!(Get-ItemProperty $UpdatesPath  DeferFeatureUpdatesPeriodInDays)) { New-ItemProperty -Path $UpdatesPath -Name "DeferFeatureUpdatesPeriodInDays" -Type DWord -Value 365 }
		Set-ItemProperty -Path $UpdatesPath -Name "DeferFeatureUpdatesPeriodInDays" -Type DWord -Value 365
		If (!(Get-ItemProperty $UpdatesPath  DeferQualityUpdatesPeriodInDays)) { New-ItemProperty -Path $UpdatesPath -Name "DeferQualityUpdatesPeriodInDays" -Type DWord -Value 4 }
		Set-ItemProperty -Path $UpdatesPath -Name "DeferQualityUpdatesPeriodInDays" -Type DWord -Value 4
		If (!(Get-ItemProperty $UpdatesPath  ActiveHoursEnd)) { New-ItemProperty -Path $UpdatesPath -Name "ActiveHoursEnd" -Type DWord -Value 2 }
		Set-ItemProperty -Path $UpdatesPath -Name "ActiveHoursEnd" -Type DWord -Value 2
		If (!(Get-ItemProperty $UpdatesPath  DeferQualityUpdatesPeriodInDays)) { New-ItemProperty -Path $UpdatesPath -Name "ActiveHoursStart" -Type DWord -Value 8 }
		Set-ItemProperty -Path $UpdatesPath -Name "ActiveHoursStart" -Type DWord -Value 8
		Write-Host "Restricting Windows Update P2P only to local network..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config" -Name "DODownloadMode" -Type DWord -Value 1
		Write-Host "Improving Windows Update to delay Feature updates and only Installing Security Updates"
		### Fix Windows Update to delay feature updates and only update at certain times
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "BranchReadinessLevel" -Type DWord -Value 16 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "BranchReadinessLevel" -Type DWord -Value 16 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "DeferFeatureUpdates" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "DeferFeatureUpdates" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "DeferQualityUpdates" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "DeferQualityUpdates" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "DeferFeatureUpdatesPeriodInDays" -Type DWord -Value 45d -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "DeferFeatureUpdatesPeriodInDays" -Type DWord -Value 45d -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "DeferQualityUpdatesPeriodInDays" -Type DWord -Value 7d -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "DeferQualityUpdatesPeriodInDays" -Type DWord -Value 7d -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "PauseFeatureUpdatesStartTime" -Type String -Value "" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "PauseFeatureUpdatesStartTime" -Type String -Value "" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "PauseQualityUpdatesStartTime" -Type String -Value "" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "PauseQualityUpdatesStartTime" -Type String -Value "" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ActiveHoursEnd" -Type DWord -Value 2 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "ActiveHoursEnd" -Type DWord -Value 2 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ActiveHoursStart" -Type DWord -Value 8 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" -Name "ActiveHoursStart" -Type DWord -Value 8 -ErrorAction SilentlyContinue
		Write-Host "Disabling driver offering through Windows Update..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -Type DWord -Value 1
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DontPromptForWindowsUpdate" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DontSearchWindowsUpdate" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DriverUpdateWizardWuSearchEnabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ExcludeWUDriversInQualityUpdate" -Type DWord -Value 1
		Write-Host "Disabling Windows Update automatic restart..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "NoAutoRebootWithLoggedOnUsers" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "AUPowerManagement" -Type DWord -Value 0
		Write-Host "Disabled driver offering through Windows Update"
		
		Write-Host "Adjusting visual effects for performance..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "DragFullWindows" -Type String -Value 0
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Type String -Value 200
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Type Binary -Value ([byte[]](144, 18, 3, 128, 16, 0, 0, 0))
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop\WindowMetrics" -Name "MinAnimate" -Type String -Value 0
		Set-ItemProperty -Path "HKCU:\Control Panel\Keyboard" -Name "KeyboardDelay" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewAlphaSelect" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewShadow" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "TaskbarAnimations" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" -Name "VisualFXSetting" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\DWM" -Name "EnableAeroPeek" -Type DWord -Value 0
		Write-Host "Adjusted visual effects for performance"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
		
	}
	
	$Low_Click = {
		Write-Host "Disabling Windows Defender via Group Policies"
		New-FolderForced -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender" "DisableAntiSpyware" 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender" "DisableRoutinelyTakingAction" 1
		New-FolderForced -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender\Real-Time Protection"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows Defender\Real-Time Protection" "DisableRealtimeMonitoring" 1
		
		Write-Host "Disabling Windows Defender Services"
		Takeown-Registry("HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WinDefend")
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WinDefend" "Start" 4
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WinDefend" "AutorunsDisabled" 3
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WdNisSvc" "Start" 4
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\WdNisSvc" "AutorunsDisabled" 3
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Sense" "Start" 4
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Sense" "AutorunsDisabled" 3
		
		Write-Host "Removing Windows Defender context menu item"
		Set-Item "HKLM:\SOFTWARE\Classes\CLSID\{09A47860-11B0-4DA5-AFA5-26D86198A780}\InprocServer32" ""
		
		Write-Host "Removing Windows Defender GUI / tray from autorun"
		Remove-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" "WindowsDefender" -ea 0
		gpupdate /force /target:computer
		Write-Host "Done!"
		Write-Host "Disabling Windows Defender Cloud..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Force 
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -Type DWord -Value 2
		Write-Host "Lowering UAC level..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "ConsentPromptBehaviorAdmin" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "PromptOnSecureDesktop" -Type DWord -Value 0
		Write-Host "Disabling SMB 1.0 protocol..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		Write-Host "Disabling SMB Server..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		Set-SmbServerConfiguration -EnableSMB2Protocol $false -Force
		Write-Host "Disabling LLMNR..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" -Name "EnableMulticast" -Type DWord -Value 0
		Write-Host "Disabling Microsoft Windows Defender and related Processes..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile" -Name "EnableFirewall" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name "DisableAntiSpyware" -Type DWord -Value 1
		If ([System.Environment]::OSVersion.Version.Build -eq 14393)
		{
			Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -Name "WindowsDefender" -ErrorAction SilentlyContinue
		}
		ElseIf ([System.Environment]::OSVersion.Version.Build -ge 15063)
		{
			Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -Name "SecurityHealth" -ErrorAction SilentlyContinue
		}
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -Type DWord -Value 2
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name "PUAProtection" -ErrorAction SilentlyContinue
		Set-MpPreference -EnableControlledFolderAccess Disabled -ErrorAction SilentlyContinue
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Cache Maintenance"
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Cleanup"
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Scheduled Scan"
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Verification"
		
		Write-Host "Disabling Microsoft Software Protection Platform Service and related Processes..."
		Disable-ScheduledTask -TaskName "\Microsoft\Windows\SoftwareProtectionPlatform\SvcRestartTask"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\sppsvc" -Name "Start" -Type DWord -Value 4 -ErrorAction SilentlyContinue
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	
	$High_Click = {
		Write-Warning "if you already use another antivirus, nothing will happen."
		
		Write-Host "Ensure your Windows Defender is ENABLED."
		Set-MpPreference -DisableRealtimeMonitoring $false -Force
		
		Write-Host "Enabling Microsoft Defender Exploit Guard network protection..."
		Set-MpPreference -EnableNetworkProtection Enabled -Force
		
		Write-Host "Enabling detection for potentially unwanted applications and block them..."
		Set-MpPreference -PUAProtection Enabled -Force
		
		# Details: https://techcommunity.microsoft.com/t5/storage-at-microsoft/stop-using-smb1/ba-p/425858
		Write-Host "Disabling SMB 1.0 protocol..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force
		
		# Enable strong cryptography for .NET Framework (version 4 and above) - https://stackoverflow.com/a/47682111
		Write-Host "Enabling .NET strong cryptography..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\.NETFramework\v4.0.30319" -Name "SchUseStrongCrypto" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v4.0.30319" -Name "SchUseStrongCrypto" -Type DWord -Value 1
		
		Write-Host "[-][Security] Disabling Autoplay..."
		Set-ItemProperty -Path "$PathToCUExplorer\AutoplayHandlers" -Name "DisableAutoplay" -Type DWord -Value 1
		
		Write-Host "[-][Security] Disabling Autorun for all Drives..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -Name "NoDriveTypeAutoRun" -Type DWord -Value 255
		
		Write-Host "[-][Security] Disabling Search for App in Store for Unknown Extensions..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -Name "NoUseStoreOpenWith" -Type DWord -Value 1
		
		Write-Host "Enabling Show file extensions in Explorer..."
		Set-ItemProperty -Path "$PathToCUExplorerAdvanced" -Name "HideFileExt" -Type DWord -Value 0
		
		# Details: https://docs.microsoft.com/pt-br/windows/security/identity-protection/user-account-control/user-account-control-group-policy-and-registry-key-settings
		Write-Host "Raising UAC level..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "ConsentPromptBehaviorAdmin" -Type DWord -Value 5
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "PromptOnSecureDesktop" -Type DWord -Value 1
		
		# Details: https://support.microsoft.com/en-us/help/4072699/january-3-2018-windows-security-updates-and-antivirus-software.
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" -Force
		}
		If ($CPU.contains("Intel" -or "ARM"))
		{
			Write-Host "Enabling Meltdown (CVE-2017-5754) compatibility flag..."
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" -Name "cadca5fe-87d3-4b96-b7fb-a231484277cc" -Type DWord -Value 0
		}
		else
		{
			Write-Host "[-][Security] Your processor doesn't need Meltdown (CVE-2017-5754) compatibility flag..."
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" -Name "cadca5fe-87d3-4b96-b7fb-a231484277cc" -Type DWord -Value 1
		}
		
		Write-Host "Enabling 'SmartScreen' for Microsoft Edge..."
		If (!(Test-Path "$PathToLMPoliciesEdge\PhishingFilter"))
		{
			New-Item -Path "$PathToLMPoliciesEdge\PhishingFilter" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesEdge\PhishingFilter" -Name "EnabledV9" -Type DWord -Value 1
		
		# Details: https://forums.malwarebytes.com/topic/246740-new-potentially-unwanted-modification-disablemrt/
		Write-Host "Enabling offer Malicious Software Removal Tool via Windows Update..."
		If (!(Test-Path "$PathToLMPoliciesMRT"))
		{
			New-Item -Path "$PathToLMPoliciesMRT" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesMRT" -Name "DontOfferThroughWUAU" -Type DWord -Value 0
		
		Write-Host "Enabling 'SmartScreen' for Store Apps..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppHost" -Name "EnableWebContentEvaluation" -Type DWord -Value 1
		
		
		Write-Host "Disabling Windows Script Host (execution of *.vbs scripts and alike)..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows Script Host\Settings" -Name "Enabled" -Type DWord -Value 0
		
		# Consumes more RAM - Make Windows Defender run in Sandbox Mode (MsMpEngCP.exe and MsMpEng.exe will run on background)
		# Details: https://www.microsoft.com/security/blog/2018/10/26/windows-defender-antivirus-can-now-run-in-a-sandbox/
		Write-Host "Enabling Windows Defender Sandbox mode..."
		setx /M MP_FORCE_USE_SANDBOX 1 # Restart the PC to apply the changes, 0 to Revert
		Write-Host "Raising UAC level..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "ConsentPromptBehaviorAdmin" -Type DWord -Value 5
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "PromptOnSecureDesktop" -Type DWord -Value 1
		Write-Host "Enabling SMB 1.0 protocol..."
		Set-SmbServerConfiguration -EnableSMB1Protocol $true -Force
		Write-Host "Enabling SMB Server..."
		Set-SmbServerConfiguration -EnableSMB2Protocol $true -Force
		Write-Host "Enabling LLMNR..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" -Name "EnableMulticast" -ErrorAction SilentlyContinue
		Write-Host "Enabling Microsoft Windows Defender and related Processes..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile" -Name "EnableFirewall" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name "DisableAntiSpyware" -ErrorAction SilentlyContinue
		If ([System.Environment]::OSVersion.Version.Build -eq 14393)
		{
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -Name "WindowsDefender" -Type ExpandString -Value "`"%ProgramFiles%\Windows Defender\MSASCuiL.exe`""
		}
		ElseIf ([System.Environment]::OSVersion.Version.Build -ge 15063)
		{
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -Name "SecurityHealth" -Type ExpandString -Value "%windir%\system32\SecurityHealthSystray.exe"
		}
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SpynetReporting" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet" -Name "SubmitSamplesConsent" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name "PUAProtection" -Type DWord -Value 1
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Cache Maintenance"
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Cleanup"
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Scheduled Scan"
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\Windows Defender\Windows Defender Verification"
		Set-MpPreference -EnableControlledFolderAccess Disabled -ErrorAction SilentlyContinue
		Write-Host "Enabling Microsoft Software Protection Platform Service and related Processes..."
		Enable-ScheduledTask -TaskName "\Microsoft\Windows\SoftwareProtectionPlatform\SvcRestartTask"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\sppsvc" -Name "Start" -Type DWord -Value 2 -ErrorAction SilentlyContinue
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	$NetworkTweaks_Click = {
		Write-Host "Optimizing Network and applying Tweaks for no throttle and maximum speed!..."
		If (!(Test-Path "$PathToLMPoliciesPsched"))
		{
			New-Item -Path "$PathToLMPoliciesPsched" -Force
		}
		Set-ItemProperty -Path "$PathToLMPoliciesPsched" -Name "NonBestEffortLimit" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 0xffffffff
		Write-Host "Setting current network profile to private..."
		Set-NetConnectionProfile -NetworkCategory Private
		Write-Host "Setting unknown networks profile to private..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24" -Name "Category" -Type DWord -Value 1
		Write-Host "Optimizing Network and applying Tweaks for no throttle and maximum speed!..."
		int ipv4 set glob defaultcurhoplimit=65
		int ipv6 set glob defaultcurhoplimit=65
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Psched" -ErrorAction SilentlyContinue
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\QoS" -ErrorAction SilentlyContinue
		New-Item -Path "HKLM:\SOFTWARE\Microsoft\MSMQ\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Internet Explorer\MAIN\FeatureControl\FEATURE_MAXCONNECTIONSPER1_0SERVER" -Name "explorer.exe" -Type DWord -Value 10
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Internet Explorer\MAIN\FeatureControl\FEATURE_MAXCONNECTIONSPERSERVER" -Name "explorer.exe" -Type DWord -Value 10
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\ServiceProvider" -Name "LocalPriority" -Type DWord -Value 4
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\ServiceProvider" -Name "HostsPriority" -Type DWord -Value 5
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\ServiceProvider" -Name "DnsPriority" -Type DWord -Value 6
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\ServiceProvider" -Name "NetbtPriority" -Type DWord -Value 7
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Psched" -Name "NonBestEffortlimit" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\QoS" -Name "Do not use NLA" -Type String -Value "1"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "Size" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" -Name "IRPStackSize" -Type DWord -Value 20
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name "MaxUserPort" -Type DWord -Value 65534
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name "TcpTimedWaitDelay" -Type DWord -Value 30
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -Name "DefaultTTL" -Type DWord -Value 64
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\MSMQ\Parameters" -Name "TCPNoDelay" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Control\Lsa" -Name "LmCompatibilityLevel" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Dnscache\Parameters" -Name "EnableAutoDoh" -Type DWord -Value 2
		Set-NetTCPSetting -SettingName internet -EcnCapability disabled
		Set-NetOffloadGlobalSetting -Chimney disabled
		Set-NetTCPSetting -SettingName internet -Timestamps disabled
		Set-NetTCPSetting -SettingName internet -MaxSynRetransmissions 2
		Set-NetTCPSetting -SettingName internet -NonSackRttResiliency disabled
		Set-NetTCPSetting -SettingName internet -InitialRto 2000
		Set-NetTCPSetting -SettingName internet -MinRto 300
		Set-NetTCPSetting -SettingName Internet -AutoTuningLevelLocal normal
		Set-NetTCPSetting -SettingName internet -ScalingHeuristics disabled
		netsh int tcp set supplemental internet congestionprovider=ctcp
		Set-NetOffloadGlobalSetting -ReceiveSegmentCoalescing enabled
		Set-NetOffloadGlobalSetting -ReceiveSideScaling enabled
		Disable-NetAdapterLso -Name *
		Disable-NetAdapterChecksumOffload -Name *
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Energy-Efficient Ethernet" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Energy Efficient Ethernet" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Energy Efficient Ethernet" -DisplayValue "Off" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Ultra Low Power Mode" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "System Idle Power Saver" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Green Ethernet" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Power Saving Mode" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Gigabit Lite" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "EEE" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Advanced EEE" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "ARP Offload" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "NS Offload" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Idle Power Saving" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Flow Control" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Interrupt Moderation" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Reduce Speed On Power Down" -DisplayValue "Disabled" -ErrorAction SilentlyContinue
		Set-NetAdapterAdvancedProperty -Name * -DisplayName "Interrupt Moderation Rate" -DisplayValue "Off" -ErrorAction SilentlyContinue
		netsh int tcp set heuristics disabled
		netsh int tcp set global rss=enabled
		netsh int tcp set global chimney=enabled
		netsh int tcp set global autotuninglevel=normal
		netsh int tcp set global congestionprovider=ctcp
		netsh int tcp set global ecncapability=disabled
		netsh int tcp set global timestamps=disabled
		netsh int ipv4 set subinterface "Local Area Connection" mtu=80 store=persistent
		netsh int tcp set global rsc=enabled
		netsh int tcp set heuristics disabled
		netsh int tcp set global dca=enabled
		netsh int tcp set global netdma=enabled
		netsh int tcp set global congestionprovider=ctcp
		netsh int tcp set global nonsackrttresiliency=disabled
		netsh int tcp set supplemental template=custom icw=10
		netsh int tcp set heuristics disabled
		netsh interface ip delete arpcache
		netsh winsock reset catalog
		netsh int ip reset c:resetlog.txt
		netsh int ip reset C:\tcplog.txt
		netsh winsock reset catalog
		netsh interface ip delete arpcache
		netsh winsock reset catalog
		netsh int ip reset c:resetlog.txt
		netsh int ip reset C:\tcplog.txt
		netsh winsock reset catalog
		netsh interface ipv4 set subinterface "Local Area Connection" mtu=150 store=persistent
		netsh interface ipv4 set subinterface "Internet" mtu=80 store=persistent
		netsh int ip reset c:resetlog.txt
		netsh int ip reset C:\tcplog.txt
		netsh int tcp set global autotuninglevel=normal
		netsh int tcp set global chimney=enabled
		netsh int tcp set global dca=enabled
		netsh int tcp set global netdma=disabled
		netsh int tcp set global congestionprovider=ctcp
		netsh int tcp set global ecncapability=disabled
		netsh int tcp set heuristics disabled
		netsh int tcp set global rss=enabled
		netsh int tcp set global fastopen=enabled
		netsh int tcp set global nonsackrttresiliency=disabled
		netsh int tcp set global rsc=enabled
		$ErrorActionPreference = $errpref #restore previous preference
		if ((Get-CimInstance -ClassName Win32_ComputerSystem).PCSystemType -ne 2)
		{
			$adapters = Get-NetAdapter -Physical | Get-NetAdapterPowerManagement | Where-Object -FilterScript { $_.AllowComputerToTurnOffDevice -ne "Unsupported" }
			foreach ($adapter in $adapters)
			{
				$adapter.AllowComputerToTurnOffDevice = "Disabled"
				$adapter | Set-NetAdapterPowerManagement
			}
		}
		Start-Sleep -s 5
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Applying Network Tweaks!', 'Windows Optimization Toolbox')
	}
	
	
	$NVIDIAGpuTweaks_Click = {
		#TODO: Place custom script here
		Write-Host "Applying Nvidia Latency Tweaks..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "D3PCLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "F1TransitionLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LOWLATENCY" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "Node3DLowLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "PciLatencyTimerControl" -Type DWord -Value "0x00000020"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMDeepL1EntryLatencyUsec" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RmGspcMaxFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RmGspcMinFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RmGspcPerioduS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMLpwrEiIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMLpwrGrIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMLpwrGrRgIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "RMLpwrMsIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "VRDirectFlipDPCDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "VRDirectFlipTimingMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "VRDirectJITFlipMsHybridFlipDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "vrrCursorMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "vrrDeflickerMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "vrrDeflickerMaxUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "D3PCLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "F1TransitionLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LOWLATENCY" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "Node3DLowLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "PciLatencyTimerControl" -Type DWord -Value "0x00000020"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMDeepL1EntryLatencyUsec" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RmGspcMaxFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RmGspcMinFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RmGspcPerioduS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMLpwrEiIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMLpwrGrIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMLpwrGrRgIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "RMLpwrMsIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "VRDirectFlipDPCDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "VRDirectFlipTimingMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "VRDirectJITFlipMsHybridFlipDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "vrrCursorMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "vrrDeflickerMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "vrrDeflickerMaxUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "D3PCLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "F1TransitionLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LOWLATENCY" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "Node3DLowLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "PciLatencyTimerControl" -Type DWord -Value "0x00000020"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMDeepL1EntryLatencyUsec" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RmGspcMaxFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RmGspcMinFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RmGspcPerioduS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMLpwrEiIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMLpwrGrIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMLpwrGrRgIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "RMLpwrMsIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "VRDirectFlipDPCDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "VRDirectFlipTimingMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "VRDirectJITFlipMsHybridFlipDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "vrrCursorMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "vrrDeflickerMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "vrrDeflickerMaxUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "D3PCLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "F1TransitionLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LOWLATENCY" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "Node3DLowLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "PciLatencyTimerControl" -Type DWord -Value "0x00000020"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMDeepL1EntryLatencyUsec" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RmGspcMaxFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RmGspcMinFtuS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RmGspcPerioduS" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMLpwrEiIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMLpwrGrIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMLpwrGrRgIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "RMLpwrMsIdleThresholdUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "VRDirectFlipDPCDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "VRDirectFlipTimingMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "VRDirectJITFlipMsHybridFlipDelayUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "vrrCursorMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "vrrDeflickerMarginUs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "vrrDeflickerMaxUs" -Type DWord -Value 1
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Applying NVIDIA GPU Tweaks!', 'Windows Optimization Toolbox')
	}
	
	$GamingTweaks_Click = {
		#TODO: Place custom script here
		Write-Host "Apply Gaming Optimization Fixs..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 4294967295
		Write-Host "Disabling Xbox features..."
		Get-AppxPackage "Microsoft.XboxApp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxIdentityProvider" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.XboxSpeechToTextOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxGameOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Xbox.TCUI" | Remove-AppxPackage
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"
		}
		
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "GPU Priority" -Type DWord -Value 8
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "Priority" -Type DWord -Value 6
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "Scheduling Category" -Type String -Value "High"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" -Name "SFIO Priority" -Type String -Value "High"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\PriorityControl" -Name "IRQ8Priority" -Type DWord -Value 1
		Write-Host "Forcing RAW Mouse Input and Disabling Enhance Pointer Precision..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSpeed" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold1" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseThreshold2" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSensitivity" -Type String -Value "10"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseHoverTime" -Type String -Value "0"
		Set-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseTrails" -Type String -Value "0"
		
		
		$checkscreenscale = [Math]::round([DPI]::scaling(), 2) * 100
		if ($checkscreenscale -eq "100")
		{
			Write-Host "Windows screen scale is Detected as 100%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,0C,00,00,00,00,00,80,99,19,00,00,00,00,00,40,66,26,00,00,00,00,00,00,33,33,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "125")
		{
			Write-Host "Windows screen scale is Detected as 125%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,00,00,10,00,00,00,00,00,00,00,20,00,00,00,00,00,00,00,30,00,00,00,00,00,00,00,40,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "150")
		{
			Write-Host "Windows screen scale is Detected as 150%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,30,33,13,00,00,00,00,00,60,66,26,00,00,00,00,00,90,99,39,00,00,00,00,00,C0,CC,4C,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "175")
		{
			Write-Host "Windows screen scale is Detected as 175%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,60,66,16,00,00,00,00,00,C0,CC,2C,00,00,00,00,00,20,33,43,00,00,00,00,00,80,99,59,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "200")
		{
			Write-Host "Windows screen scale is Detected as 200%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,90,99,19,00,00,00,00,00,20,33,33,00,00,00,00,00,B0,CC,4C,00,00,00,00,00,40,66,66,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "225")
		{
			Write-Host "Windows screen scale is Detected as 225%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,1C,00,00,00,00,00,80,99,39,00,00,00,00,00,40,66,56,00,00,00,00,00,00,33,73,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "250")
		{
			Write-Host "Windows screen scale is Detected as 250%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,00,00,20,00,00,00,00,00,00,00,40,00,00,00,00,00,00,00,60,00,00,00,00,00,00,00,80,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "300")
		{
			Write-Host "Windows screen scale is Detected as 300%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,60,66,26,00,00,00,00,00,C0,CC,4C,00,00,00,00,00,20,33,73,00,00,00,00,00,80,99,99,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		elseif ($checkscreenscale -eq "350")
		{
			Write-Host "Windows screen scale is Detected as 350%, Applying Mouse Fix for it..."
			$YourInputX = "00,00,00,00,00,00,00,00,C0,CC,2C,00,00,00,00,00,80,99,59,00,00,00,00,00,40,66,86,00,00,00,00,00,00,33,B3,00,00,00,00,00"
			$YourInputY = "00,00,00,00,00,00,00,00,00,00,38,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,A8,00,00,00,00,00,00,00,E0,00,00,00,00,00"
			$RegPath = 'HKCU:\Control Panel\Mouse'
			$hexifiedX = $YourInputX.Split(',') | ForEach-Object { "0x$_" }
			$hexifiedY = $YourInputY.Split(',') | ForEach-Object { "0x$_" }
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseXCurve" -Type Binary -Value (([byte[]]$hexifiedX))
			Set-ItemProperty -Path "$RegPath" -Name "SmoothMouseYCurve" -Type Binary -Value (([byte[]]$hexifiedY))
		}
		else
		{
			Write-Host "HOUSTON WE HAVE A PROBLEM! screen scale is not set to traditional value, nothing has been set!"
		}
		Write-Host "Disabling High Precision Event Timer..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Invoke-WebRequest -Uri "https://git.io/JkrLn" -OutFile "$Env:windir\system32\SetTimerResolutionService.exe" -ErrorAction SilentlyContinue
		New-Service -name "SetTimerResolutionService" -BinaryPathName "$Env:windir\system32\SetTimerResolutionService.exe" -StartupType Automatic -ErrorAction SilentlyContinue
		bcdedit /set x2apicpolicy Enable
		bcdedit /set configaccesspolicy Default
		bcdedit /set MSI Default
		bcdedit /set usephysicaldestination No
		Fsutil behavior query memoryusage
		Fsutil behavior set memoryusage 2
		bcdedit /set usefirmwarepcisettings No
		bcdedit /deletevalue useplatformclock
		bcdedit /set disabledynamictick yes
		bcdedit /set useplatformtick Yes
		bcdedit /set tscsyncpolicy Enhanced
		bcdedit /timeout 10
		bcdedit /set nx optout
		bcdedit /set bootux disabled
		bcdedit /set disabledynamictick yes
		bcdedit /set useplatformtick yes
		bcdedit /set useplatformclock false
		bcdedit /set tscsyncpolicy enhanced
		bcdedit /set x2apicpolicy enable
		wmic path Win32_PnPEntity where "name='High precision event timer'" call disable
		Write-Host "Disabling display and sleep mode timeouts..."
		powercfg /X monitor-timeout-ac 0
		powercfg /X monitor-timeout-dc 0
		powercfg /X standby-timeout-ac 0
		powercfg /X standby-timeout-dc 0
		Write-Host "Enabling Gaming Mode..."
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "AllowAutoGameMode" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "AutoGameModeEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "ShowStartupPanel" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "GamePanelStartupTipIndex" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\GameBar" -Name "UseNexusForGameBarEnabled" -Type DWord -Value 0
		Write-Host "Enabling HAGS..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "HwSchMode" -Type DWord -Value 2
		Write-Host "Enabling and Activating Bitsum Highest Performance Power Plan..."
		Invoke-WebRequest -Uri "https://git.io/JsWhn" -OutFile "$Env:windir\system32\Bitsum-Highest-Performance.pow" -ErrorAction SilentlyContinue
		powercfg -import "$Env:windir\system32\Bitsum-Highest-Performance.pow" e6a66b66-d6df-666d-aa66-66f66666eb66
		powercfg -setactive e6a66b66-d6df-666d-aa66-66f66666eb66
		Write-Host "Disabling Core Parking on current PowerPlan Ultimate Performance..."
		powercfg -attributes SUB_PROCESSOR CPMINCORES -ATTRIB_HIDE
		Powercfg -setacvalueindex scheme_current sub_processor CPMINCORES 100
		Powercfg -setactive scheme_current
		Write-Host "Disabling DMA memory protection and cores isolation..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		bcdedit /set vsmlaunchtype Off
		bcdedit /set vm No
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\FVE" -Name "DisableExternalDMAUnderLock" -Type DWord -Value 0
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "EnableVirtualizationBasedSecurity" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard" -Name "HVCIMATRequired" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disabling Process and Kernel Mitigations..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		ForEach ($v in (Get-Command -Name "Set-ProcessMitigation").Parameters["Disable"].Attributes.ValidValues) { Set-ProcessMitigation -System -Disable $v.ToString() -ErrorAction SilentlyContinue }
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "DisableExceptionChainValidation" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\kernel" -Name "KernelSEHOPEnabled" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "EnableCfg" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disabling drivers get paged into virtual memory..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "DisablePagingExecutive" -Type DWord -Value 1
		Write-Host "Enabling big system memory caching to improve microstuttering..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "LargeSystemCache" -Type DWord -Value 1
		Write-Host "Forcing contiguous memory allocation in the DirectX Graphics Kernel..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" -Name "DpiMapIommuContiguous" -Type DWord -Value 1
		Write-Host "Forcing Windows to stop tolerating high DPC/ISR latencies..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "ExitLatencyCheckEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceDefault" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceFSVP" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyTolerancePerfOverride" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceScreenOffIR" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "LatencyToleranceVSyncEnabled" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Power" -Name "RtlCapabilityCheckLatency" -Type DWord -Value 1
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleShortTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultD3TransitionLatencyIdleVeryLongTime" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle0MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceIdle1MonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceMemory" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceNoContextMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceOther" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultLatencyToleranceTimerPeriod" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceActivelyUsed" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceMonitorOff" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "DefaultMemoryRefreshLatencyToleranceNoContext" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MaxIAverageGraphicsLatencyInOneBucket" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MiracastPerfTrackGraphicsLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "MonitorRefreshLatencyTolerance" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Power" -Name "TransitionLatency" -Type DWord -Value 1
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Decreasing mouse and keyboard buffer sizes..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\mouclass\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\mouclass\Parameters" -Name "MouseDataQueueSize" -Type DWord -Value 0x00000010
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\kbdclass\Parameters" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\kbdclass\Parameters" -Name "KeyboardDataQueueSize" -Type DWord -Value 0x00000010
		$ErrorActionPreference = $errpref #restore previous preference
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		$NetworkIDS = @(
			(Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\*").PSChildName
		)
		foreach ($NetworkID in $NetworkIDS)
		{
			Write-Host "Disabling Nagles Algorithm..."
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\$NetworkID" -Name "TcpAckFrequency" -Type DWord -Value 1
			Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\$NetworkID" -Name "TCPNoDelay" -Type DWord -Value 1
		}
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Fixing White Games Shortcuts created by game launchers...."
		choco Installing -y setuserfta
		Start-Sleep -s 5
		Push-Location
		Set-Location "$env:ProgramData\chocolatey\lib\setuserfta\tools\SetUserFTA\"
		SetUserFTA.exe del .url
		SetUserFTA.exe .url, InternetShortcut
		Pop-Location
		choco unInstalling -y setuserfta
		Write-Host "Applying PC Optimizations..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Type DWord -Value 4294967295
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Write-Host "Disabling Xbox features..."
		Get-AppxPackage "Microsoft.XboxApp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxIdentityProvider" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.XboxSpeechToTextOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.XboxGameOverlay" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Xbox.TCUI" | Remove-AppxPackage
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -Type DWord -Value 0
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Stopping and disabling Unessessary Services For Gaming..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Stop-Service "wisvc" -WarningAction SilentlyContinue
		Set-Service "wisvc" -StartupType Disabled
		Stop-Service "MapsBroker" -WarningAction SilentlyContinue
		Set-Service "MapsBroker" -StartupType Disabled
		Stop-Service "UmRdpService" -WarningAction SilentlyContinue
		Set-Service "UmRdpService" -StartupType Disabled
		Stop-Service "TrkWks" -WarningAction SilentlyContinue
		Set-Service "TrkWks" -StartupType Disabled
		Stop-Service "TermService" -WarningAction SilentlyContinue
		Set-Service "TermService" -StartupType Disabled
		Stop-Service "PcaSvc" -WarningAction SilentlyContinue
		Set-Service "PcaSvc" -StartupType Disabled
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Disable Xbox Game Tips ..."
		if ((Get-AppxPackage -Name Microsoft.XboxGamingOverlay) -or (Get-AppxPackage -Name Microsoft.GamingApp))
		{
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\GameBar -Name ShowStartupPanel -PropertyType DWord -Value 0 -Force
		}
		Write-Host "Disable Audit Process ..."
		auditpol /set /subcategory:"{0CCE922B-69AE-11D9-BED3-505054503030}" /success:disable /failure:disable
		Write-Host "Finished Applying Gaming Tweaks!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Applying Gaming Tweaks!', 'Windows Optimization Toolbox')
	}
	
	
	$AMDGpuTweaks_Click = {
		#TODO: Place custom script here
		Write-Host "Applying AMD Latency Tweaks..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "LTRMaxNoSnoopLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "KMD_RpmComputeLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "DalUrgentLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "memClockSwitchLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "PP_RTPMComputeF1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "PP_DGBMMMaxTransitionLatencyUvd" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "PP_DGBPMMaxTransitionLatencyGfx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "DalNBLatencyForUnderFlow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "DalDramClockChangeLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRNoSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRMaxSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000" -Name "BGM_LTRMaxNoSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "LTRMaxNoSnoopLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "KMD_RpmComputeLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "DalUrgentLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "memClockSwitchLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "PP_RTPMComputeF1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "PP_DGBMMMaxTransitionLatencyUvd" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "PP_DGBPMMaxTransitionLatencyGfx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "DalNBLatencyForUnderFlow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "DalDramClockChangeLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRNoSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRMaxSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0001" -Name "BGM_LTRMaxNoSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "LTRMaxNoSnoopLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "KMD_RpmComputeLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "DalUrgentLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "memClockSwitchLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "PP_RTPMComputeF1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "PP_DGBMMMaxTransitionLatencyUvd" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "PP_DGBPMMaxTransitionLatencyGfx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "DalNBLatencyForUnderFlow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "DalDramClockChangeLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRNoSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRMaxSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0002" -Name "BGM_LTRMaxNoSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "LTRMaxNoSnoopLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "KMD_RpmComputeLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "DalUrgentLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "memClockSwitchLatency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "PP_RTPMComputeF1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "PP_DGBMMMaxTransitionLatencyUvd" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "PP_DGBPMMaxTransitionLatencyGfx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "DalNBLatencyForUnderFlow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "DalDramClockChangeLatencyNs" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRNoSnoopL1Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRNoSnoopL0Latency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRMaxSnoopLatencyValue" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0003" -Name "BGM_LTRMaxNoSnoopLatencyValue" -Type DWord -Value 1
		[void][System.Windows.Forms.MessageBox]::Show('Finished Appply AMD GPU Tweaks!', 'Windows Optimization Toolbox')
	}
	
	$EnableMSIMode_Click = {
		#TODO: Place custom script here
		New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Enum\$GPUID\Device Parameters\Interrupt Management\MessageSignaledInterruptProperties\" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Enum\$GPUID\Device Parameters\Interrupt Management\MessageSignaledInterruptProperties\" -Name "MSISupported" -Type DWord -Value 1
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling MSI Mode!', 'Windows Optimization Toolbox')
	}
	
	$WindowsUpdateReset_Click = {
		#TODO: Place custom script here
		
		Write-Host "1. Stopping Windows Update Services..."
		Stop-Service -Name BITS
		Stop-Service -Name wuauserv
		Stop-Service -Name appidsvc
		Stop-Service -Name cryptsvc
		
		Write-Host "2. Remove QMGR Data file..."
		Remove-Item "$env:allusersprofile\Application Data\Microsoft\Network\Downloader\qmgr*.dat" -ErrorAction SilentlyContinue
		
		Write-Host "3. Renaming the Software Distribution and CatRoot Folder..."
		Rename-Item $env:systemroot\SoftwareDistribution SoftwareDistribution.bak -ErrorAction SilentlyContinue
		Rename-Item $env:systemroot\System32\Catroot2 catroot2.bak -ErrorAction SilentlyContinue
		
		Write-Host "4. Removing old Windows Update log..."
		Remove-Item $env:systemroot\WindowsUpdate.log -ErrorAction SilentlyContinue
		
		Write-Host "5. Resetting the Windows Update Services to defualt settings..."
		"sc.exe sdset bits D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)"
		"sc.exe sdset wuauserv D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)"
		
		Set-Location $env:systemroot\system32
		
		Write-Host "6. Registering some DLLs..."
		regsvr32.exe /s atl.dll
		regsvr32.exe /s urlmon.dll
		regsvr32.exe /s mshtml.dll
		regsvr32.exe /s shdocvw.dll
		regsvr32.exe /s browseui.dll
		regsvr32.exe /s jscript.dll
		regsvr32.exe /s vbscript.dll
		regsvr32.exe /s scrrun.dll
		regsvr32.exe /s msxml.dll
		regsvr32.exe /s msxml3.dll
		regsvr32.exe /s msxml6.dll
		regsvr32.exe /s actxprxy.dll
		regsvr32.exe /s softpub.dll
		regsvr32.exe /s wintrust.dll
		regsvr32.exe /s dssenh.dll
		regsvr32.exe /s rsaenh.dll
		regsvr32.exe /s gpkcsp.dll
		regsvr32.exe /s sccbase.dll
		regsvr32.exe /s slbcsp.dll
		regsvr32.exe /s cryptdlg.dll
		regsvr32.exe /s oleaut32.dll
		regsvr32.exe /s ole32.dll
		regsvr32.exe /s shell32.dll
		regsvr32.exe /s initpki.dll
		regsvr32.exe /s wuapi.dll
		regsvr32.exe /s wuaueng.dll
		regsvr32.exe /s wuaueng1.dll
		regsvr32.exe /s wucltui.dll
		regsvr32.exe /s wups.dll
		regsvr32.exe /s wups2.dll
		regsvr32.exe /s wuweb.dll
		regsvr32.exe /s qmgr.dll
		regsvr32.exe /s qmgrprxy.dll
		regsvr32.exe /s wucltux.dll
		regsvr32.exe /s muweb.dll
		regsvr32.exe /s wuwebv.dll
		
		Write-Host "7) Removing WSUS client settings..."
		REG DELETE "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate" /v AccountDomainSid /f
		REG DELETE "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate" /v PingID /f
		REG DELETE "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate" /v SusClientId /f
		
		Write-Host "8) Resetting the WinSock..."
		netsh winsock reset
		netsh winhttp reset proxy
		
		Write-Host "9) Delete all BITS jobs..."
		Get-BitsTransfer | Remove-BitsTransfer
		
		Write-Host "10) Attempting to Installing the Windows Update Agent..."
		if ($arch -eq 64)
		{
			wusa Windows8-RT-KB2937636-x64 /quiet
		}
		else
		{
			wusa Windows8-RT-KB2937636-x86 /quiet
		}
		
		Write-Host "11) Starting Windows Update Services..."
		Start-Service -Name BITS
		Start-Service -Name wuauserv
		Start-Service -Name appidsvc
		Start-Service -Name cryptsvc
		
		Write-Host "12) Forcing discovery..."
		wuauclt /resetauthorization /detectnow
		
		Write-Host "Process complete. Please reboot your computer."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Resetting Windows Update!', 'Windows Optimization Toolbox')
		
		
		
	}
	
	$GoogleChrome_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Chrome"
		winget install -e Google.Chrome
		Write-Host "Finished Installing Chrome"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Chrome!', 'Windows Optimization Toolbox')
	}
	
	$Firefox_Click = {
		#TODO: Place custom script here
		Write-Host "Installing FireFox"
		winget install -e Mozilla.Firefox
		Write-Host "Finished Installing FireFox"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing FireFox!', 'Windows Optimization Toolbox')
	}
	
	$VLC_Click = {
		#TODO: Place custom script here
		Write-Host "Installing VLC"
		winget install -e --id VideoLAN.VLC
		Write-Host "Finished Installing VLC"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing VLC!', 'Windows Optimization Toolbox')
	}
	
	$7zip_Click = {
		#TODO: Place custom script here
		Write-Host "7-Zip"
		winget install -e --id 7zip.7zip
		Write-Host "Finished Installing 7-Zip"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing 7-Zip!', 'Windows Optimization Toolbox')
	}
	
	$PowerToys_Click = {
		#TODO: Place custom script here
		Write-Host "Installing PowerToys"
		winget install -e --id Microsoft.PowerToys
		Write-Host "Finished Installing PowerToys"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing PowerToys!', 'Windows Optimization Toolbox')
	}
	
	$OBSStudio_Click = {
		#TODO: Place custom script here
		Write-Host "Installing OBS Studio"
		winget install -e --id OBSProject.OBSStudio
		Write-Host "Finished Installing OBS Studio"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing OBS Studio!', 'Windows Optimization Toolbox')
	}
	
	$Audacity_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Audacity"
		winget install -e --id Audacity.Audacity
		Write-Host "Finished Installing Audacity"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Audacity!', 'Windows Optimization Toolbox')
	}
	
	$Discord_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Discord"
		winget install -e --id Discord.Discord
		Write-Host "Finished Installing Discord"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Discord!', 'Windows Optimization Toolbox')
	}
	
	$MediaPlayerClassic_Click = {
		Write-Host "Installing Media Player Classic"
		#TODO: Place custom script here
		choco Install mpc-hc -y
		Write-Host "Finished Installing Media Player Classic"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Media Player Classic!', 'Windows Optimization Toolbox')
		
	}
	
	
	$Rufus_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Rufus"
		winget install -e --id Rufus.Rufus
		Write-Host "Finished Installing Rufus"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Rufus!', 'Windows Optimization Toolbox')
	}
	
	$WinRaR_Click = {
		#TODO: Place custom script here
		Write-Host "Installing WinRAR"
		winget install -e --id RARLab.WinRAR
		Write-Host "Finished Installing WinRAR"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing WinRAR!', 'Windows Optimization Toolbox')
	}
	
	$WindowsTerminal_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Windows Terminal"
		winget install -e --id Microsoft.WindowsTerminal
		Write-Host "Finished Installing Windows Terminal"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Windows Terminal!', 'Windows Optimization Toolbox')
	}
	
	$Brave_Click = {
		#TODO: Place custom script here
		Write-Host "Install Brave"
		winget install -e BraveSoftware.BraveBrowser
		Write-Host "Finished Installing Brave"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Brave!', 'Windows Optimization Toolbox')
	}
	
	$RepairWindowsImage_Click = {
		#TODO: Place custom script here
		Start-Process -FilePath "${env:Windir}\System32\dism.exe" -ArgumentList '/online /cleanup-image /restorehealth' -Wait -Verb RunAs
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	$SystemFileChecker_Click = {
		#TODO: Place custom script here
		Start-Process -FilePath "${env:Windir}\System32\sfc.exe" -ArgumentList '/scannow' -Wait -Verb RunAs
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	$FixNetworkProblems_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		netsh winsock reset
		netsh winhttp reset proxy
		cmd /c 'netsh winsock reset'
		cmd /c 'netsh int ip reset'
		cmd /c 'ipconfig /release'
		cmd /c 'ipconfig /renew'
		cmd /c 'ipconfig /flushdns'
		Write-Host "Finished All Task!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	
	$XNAFramework40_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Microsoft XNA Framework Redistributable"
		choco Installing xna -y
		Write-Host "Finished Installing Microsoft XNA Framework Redistributable"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Microsoft XNA Framework Redistributable!', 'Windows Optimization Toolbox')
	}
	
	$DirectX_Click = {
		#TODO: Place custom script here
		Write-Host "Installing DirectX"
		choco Installing directx -y
		[System.Media.SystemSounds]::Asterisk.Play()
		Write-Host "Finished installing DirectX"
		[void][System.Windows.Forms.MessageBox]::Show('Finished installing DirectX!', 'Windows Optimization Toolbox')
	}
	
	$VisualC_Click = {
		#TODO: Place custom script here
		Write-Host "Install Visual C++"
		choco Installing vcredist-all -y
		[System.Media.SystemSounds]::Asterisk.Play()
		Write-Host "Finished Installing Visual C++"
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Visual C++!', 'Windows Optimization Toolbox')
	}
	
	
	$OpenAL_Click = {
		#TODO: Place custom script here
		Write-Host "Install OpenAL"
		choco install openal -y
		[System.Media.SystemSounds]::Asterisk.Play()
		Write-Host "Finished Installing OpenAL"
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	
	
	$UnsintallOnedrive_Click = {
		#TODO: Place custom script here
		Write-Host "Unistalling OneDrive..."
		Write-Host  "Kill OneDrive process"
		taskkill.exe /F /IM "OneDrive.exe"
		taskkill.exe /F /IM "explorer.exe"
		Write-Host "Disable OneDrive via Group Policies"
		Mkdir -Force "HKLM:\Software\Wow6432Node\Policies\Microsoft\Windows\OneDrive"
		Set-ItemProperty "HKLM:\Software\Wow6432Node\Policies\Microsoft\Windows\OneDrive" "DisableFileSyncNGSC" 1
		
		Write-Host "Remove Onedrive from explorer sidebar"
		New-PSDrive -PSProvider "Registry" -Root "HKEY_CLASSES_ROOT" -Name "HKCR"
		mkdir -Force "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"
		Set-ItemProperty "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" "System.IsPinnedToNameSpaceTree" 0
		mkdir -Force "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"
		Set-ItemProperty "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" "System.IsPinnedToNameSpaceTree" 0
		Remove-PSDrive "HKCR"
		Write-Host "Removing run hook for new users"
		reg load "hku\Default" "C:\Users\Default\NTUSER.DAT"
		reg delete "HKEY_USERS\Default\Software\Microsoft\Windows\CurrentVersion\Run" /v "OneDriveSetup" /f
		reg unload "hku\Default"
		
		Write-Host "Removing startmenu entry"
		Remove-Item -Force -ErrorAction SilentlyContinue "$env:userprofile\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OneDrive.lnk"
		
		Write-Host "Removing scheduled task"
		Get-ScheduledTask -TaskPath '\' -TaskName 'OneDrive*' -ea SilentlyContinue | Unregister-ScheduledTask -Confirm:$false
		
		Write-Host "Restarting explorer"
		Start-Process "explorer.exe"
		
		Write-Host "Waiting for explorer to complete loading"
		Start-Sleep 10
		
		Write-Host "Removing additional OneDrive leftovers"
		foreach ($item in (Get-ChildItem "$env:WinDir\WinSxS\*onedrive*"))
		{
			Takeown-Folder $item.FullName
			Remove-Item -Recurse -Force $item.FullName
		}
		Write-Host  "Remove OneDrive"
		if (Test-Path "$env:systemroot\System32\OneDriveSetup.exe")
		{
			& "$env:systemroot\System32\OneDriveSetup.exe" /uninstall
		}
		if (Test-Path "$env:systemroot\SysWOW64\OneDriveSetup.exe")
		{
			& "$env:systemroot\SysWOW64\OneDriveSetup.exe" /uninstall
		}
		
		Write-Host  "Removing OneDrive leftovers"
		Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$env:localappdata\Microsoft\OneDrive"
		Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$env:programdata\Microsoft OneDrive"
		Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$env:systemdrive\OneDriveTemp"
		# check if directory is empty before removing:
		If ((Get-ChildItem "$env:userprofile\OneDrive" -Recurse | Measure-Object).Count -eq 0)
		{
			Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$env:userprofile\OneDrive"
		}
		
		Write-Host  "Disable OneDrive via Group Policies"
		force-mkdir "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\OneDrive"
		Set-ItemProperty "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\OneDrive" "DisableFileSyncNGSC" 1
		
		Write-Host  "Remove Onedrive from explorer sidebar"
		New-PSDrive -PSProvider "Registry" -Root "HKEY_CLASSES_ROOT" -Name "HKCR"
		mkdir -Force "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"
		Set-ItemProperty "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" "System.IsPinnedToNameSpaceTree" 0
		mkdir -Force "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"
		Set-ItemProperty "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" "System.IsPinnedToNameSpaceTree" 0
		Remove-PSDrive "HKCR"
		
		# Thank you Matthew Israelsson
		Write-Host  "Removing run hook for new users"
		reg load "hku\Default" "C:\Users\Default\NTUSER.DAT"
		reg delete "HKEY_USERS\Default\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v "OneDriveSetup" /f
		reg unload "hku\Default"
		
		Write-Host  "Removing startmenu entry"
		Remove-Item -Force -ErrorAction SilentlyContinue "$env:userprofile\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OneDrive.lnk"
		
		Write-Host  "Removing scheduled task"
		Get-ScheduledTask -TaskPath '\' -TaskName 'OneDrive*' -ea SilentlyContinue | Unregister-ScheduledTask -Confirm:$false
		
		Write-Host  "Restarting explorer"
		Start-Process "explorer.exe"
		
		Write-Host  "Waiting for explorer to complete loading"
		Start-Sleep 10
		
		Write-Host  "Removing additional OneDrive leftovers"
		foreach ($item in (Get-ChildItem "$env:WinDir\WinSxS\*onedrive*"))
		{
			Takeown-Folder $item.FullName
			Remove-Item -Recurse -Force $item.FullName
		}
		
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\OneDrive"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\OneDrive"
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\OneDrive" -Name "DisableFileSyncNGSC" -Type DWord -Value 1
		%SystemRoot%\SysWOW64\OneDriveSetup.exe /uninstall
		cmd /c 'rd "%UserProfile%\OneDrive" /s /q'
		cmd /c 'rd "%LocalAppData%\Microsoft\OneDrive" /s /q'
		cmd /c 'rd "%ProgramData%\Microsoft OneDrive" /s /q'
		cmd /c 'rd "C:\OneDriveTemp" /s /q'
		cmd /c 'del "%USERPROFILE%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OneDrive.lnk" /s /f /q'
		Stop-Process -Name "OneDrive" -ErrorAction SilentlyContinue
		Start-Sleep -s 2
		$onedrive = "$env:SYSTEMROOT\SysWOW64\OneDriveSetup.exe"
		If (!(Test-Path $onedrive))
		{
			$onedrive = "$env:SYSTEMROOT\System32\OneDriveSetup.exe"
		}
		Start-Process $onedrive "/uninstall" -NoNewWindow -Wait
		Start-Sleep -s 2
		Stop-Process -Name "explorer" -ErrorAction SilentlyContinue
		Start-Sleep -s 2
		Remove-Item -Path "$env:USERPROFILE\OneDrive" -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path "$env:LOCALAPPDATA\Microsoft\OneDrive" -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path "$env:PROGRAMDATA\Microsoft OneDrive" -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path "$env:SYSTEMDRIVE\OneDriveTemp" -Force -Recurse -ErrorAction SilentlyContinue
		If (!(Test-Path "HKCR:"))
		{
			New-PSDrive -Name HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
		}
		Remove-Item -Path "HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path "HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" -Recurse -ErrorAction SilentlyContinue
		Write-Host "Finished Unistalling OneDrive"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Uninstalling OneDrive!', 'Windows Optimization Toolbox')
		
	}
	
	$ReinstallAllBloatwar_Click = {
		#TODO: Place custom script here
		Start-Service "mpssvc" -StartupType Automatic
		Get-AppxPackage -AllUsers | ForEach-Object { Add-AppxPackage -Verbose -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" } $ErrorActionPreference = 'silentlycontinue'
		Write-Host "Re-enabling key to show advertisement information"
		$Advertising = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		If (Test-Path $Advertising)
		{
			Set-ItemProperty $Advertising  Enabled -Value 1
		}
		
		#Enables Cortana to be used as part of your Windows Search Function
		Write-Host "Re-enabling Cortana to be used in your Windows Search"
		$Search = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		If (Test-Path $Search)
		{
			Set-ItemProperty $Search  AllowCortana -Value 1
		}
		
		#Re-enables the Windows Feedback Experience for sending anonymous data
		Write-Host "Re-enabling Windows Feedback Experience"
		$Period = "HKCU:\Software\Microsoft\Siuf\Rules"
		If (!(Test-Path $Period))
		{
			New-Item $Period
		}
		Set-ItemProperty $Period PeriodInNanoSeconds -Value 1
		
		#Enables bloatware applications               
		Write-Host "Adding Registry key to allow bloatware apps to return"
		$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		If (!(Test-Path $registryPath))
		{
			New-Item $registryPath
		}
		Set-ItemProperty $registryPath  DisableWindowsConsumerFeatures -Value 0
		
		#Changes Mixed Reality Portal Key 'FirstRunSucceeded' to 1
		Write-Host "Setting Mixed Reality Portal value to 1"
		$Holo = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic"
		If (Test-Path $Holo)
		{
			Set-ItemProperty $Holo  FirstRunSucceeded -Value 1
		}
		
		#Re-enables live tiles
		Write-Host "Enabling live tiles"
		$Live = "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications"
		If (!(Test-Path $Live))
		{
			New-Item $Live
		}
		Set-ItemProperty $Live  NoTileApplicationNotification -Value 0
		
		#Re-enables data collection
		Write-Host "Re-enabling data collection"
		$DataCollection = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection"
		If (!(Test-Path $DataCollection))
		{
			New-Item $DataCollection
		}
		Set-ItemProperty $DataCollection  AllowTelemetry -Value 1
		
		#Re-enables People Icon on Taskbar
		Write-Host "Enabling People icon on Taskbar"
		$People = "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People"
		If (!(Test-Path $People))
		{
			New-Item $People
		}
		Set-ItemProperty $People  PeopleBand -Value 1
		
		#Re-enables suggestions on start menu
		Write-Host "Enabling suggestions on the Start Menu"
		$Suggestions = "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager"
		If (!(Test-Path $Suggestions))
		{
			New-Item $Suggestions
		}
		Set-ItemProperty $Suggestions  SystemPaneSuggestionsEnabled -Value 1
		
		#Re-enables scheduled tasks that were disabled when running the Debloat switch
		Write-Host "Enabling scheduled tasks that were disabled"
		Get-ScheduledTask XblGameSaveTaskLogon | Enable-ScheduledTask
		Get-ScheduledTask  XblGameSaveTask | Enable-ScheduledTask
		Get-ScheduledTask  Consolidator | Enable-ScheduledTask
		Get-ScheduledTask  UsbCeip | Enable-ScheduledTask
		Get-ScheduledTask  DmClient | Enable-ScheduledTask
		Get-ScheduledTask  DmClientOnScenarioDownload | Enable-ScheduledTask
		
		Write-Host "Re-enabling and starting WAP Push Service"
		#Enable and start WAP Push Service
		Set-Service "dmwappushservice" -StartupType Automatic
		Start-Service "dmwappushservice"
		
		Write-Host "Re-enabling and starting the Diagnostics Tracking Service"
		#Enabling the Diagnostics Tracking Service
		Set-Service "DiagTrack" -StartupType Automatic
		Start-Service "DiagTrack"
		Get-AppxPackage -AllUsers | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		$errpref = $ErrorActionPreference #save actual preference
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -Name "DisableStoreApps" -ErrorAction SilentlyContinue
		Remove-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -Force
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\AppXSvc" -Name "Start" -Type DWord -Value 3 -ErrorAction SilentlyContinue
		Get-AppxPackage -AllUsers "Microsoft.DesktopAppInstaller" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" } -ErrorAction SilentlyContinue
		Get-AppxPackage -AllUsers "Microsoft.WindowsStore" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" } -ErrorAction SilentlyContinue
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Installing default Microsoft applications..."
		Get-AppxPackage -AllUsers "Microsoft.3DBuilder" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.AppConnector" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingFinance" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingNews" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingSports" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingTranslator" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.BingWeather" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.CommsPhone" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.ConnectivityStore" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.GetHelp" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Getstarted" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Messaging" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Microsoft3DViewer" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MicrosoftPowerBIForWindows" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MicrosoftSolitaireCollection" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MicrosoftStickyNotes" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MinecraftUWP" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.MSPaint" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.NetworkSpeedTest" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Office.Sway" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.OneConnect" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.People" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Print3D" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.RemoteDesktop" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.SkypeApp" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Wallet" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsAlarms" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsCamera" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.windowscommunicationsapps" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsFeedbackHub" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsMaps" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsPhone" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Windows.Photos" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsSoundRecorder" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.ZuneMusic" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.ZuneVideo" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Write-Host "Installing default third party applications..."
		Get-AppxPackage -AllUsers "2414FC7A.Viber" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "41038Axilesoft.ACGMediaPlayer" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "46928bounde.EclipseManager" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "4DF9E0F8.Netflix" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "64885BlueEdge.OneCalendar" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "7EE7776C.LinkedInforWindows" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "828B5831.HiddenCityMysteryofShadows" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "89006A2E.AutodeskSketchBook" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "9E2F88E3.Twitter" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "A278AB0D.DisneyMagicKingdoms" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "A278AB0D.MarchofEmpires" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "ActiproSoftwareLLC.562882FEEB491" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "AdobeSystemsIncorporated.AdobePhotoshopExpress" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "CAF9E577.Plex" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "D52A8D61.FarmVille2CountryEscape" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "D5EA27B7.Duolingo-LearnLanguagesforFree" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "DB6EA5DB.CyberLinkMediaSuiteEssentials" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "DolbyLaboratories.DolbyAccess" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Drawboard.DrawboardPDF" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Facebook.Facebook" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "flaregamesGmbH.RoyalRevolt2" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "GAMELOFTSA.Asphalt8Airborne" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "KeeperSecurityInc.Keeper" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "king.com.BubbleWitch3Saga" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "king.com.CandyCrushSodaSaga" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "PandoraMediaInc.29680B314EFC2" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "SpotifyAB.SpotifyMusic" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "WinZipComputing.WinZipUniversal" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Write-Host "Installing Windows Store..."
		Get-AppxPackage -AllUsers "Microsoft.DesktopAppInstaller" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.WindowsStore" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "XINGAG.XING" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Write-Host "Enabling Xbox features..."
		Get-AppxPackage -AllUsers "Microsoft.XboxApp" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.XboxIdentityProvider" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.XboxSpeechToTextOverlay" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.XboxGameOverlay" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -AllUsers "Microsoft.Xbox.TCUI" | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name "GameDVR_Enabled" -Type DWord -Value 1
		Write-Host "Enabling built-in Adobe Flash in IE and Edge..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer" -Name "DisableFlashInIE" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Addons" -Name "FlashPlayerEnabled" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR" -Name "AllowGameDVR" -ErrorAction SilentlyContinue
		Write-Host "Installing Windows Media Player..."
		Enable-WindowsOptionalFeature -Online -FeatureName "WindowsMediaPlayer" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Internet Explorer..."
		Enable-WindowsOptionalFeature -Online -FeatureName "Internet-Explorer-Optional-$env:PROCESSOR_ARCHITECTURE" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Work Folders Client..."
		Enable-WindowsOptionalFeature -Online -FeatureName "WorkFolders-Client" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Linux Subsystem..."
		If ([System.Environment]::OSVersion.Version.Build -eq 14393)
		{
			# 1607 needs developer mode to be enabled
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name "AllowDevelopmentWithoutDevLicense" -Type DWord -Value 1
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name "AllowAllTrustedApps" -Type DWord -Value 1
		}
		Enable-WindowsOptionalFeature -Online -FeatureName "Microsoft-Windows-Subsystem-Linux" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Hyper-V..."
		If ((Get-WmiObject -Class "Win32_OperatingSystem").Caption -like "*Server*")
		{
			Install-WindowsFeature -Name "Hyper-V" -IncludeManagementTools -WarningAction SilentlyContinue
		}
		Else
		{
			Enable-WindowsOptionalFeature -Online -FeatureName "Microsoft-Hyper-V-All" -NoRestart -WarningAction SilentlyContinue
		}
		Write-Host "Installing Microsoft Print to PDF..."
		Enable-WindowsOptionalFeature -Online -FeatureName "Printing-PrintToPDFServices-Features" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Installing Microsoft XPS Document Writer..."
		Enable-WindowsOptionalFeature -Online -FeatureName "Printing-XPSServices-Features" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Adding Default Fax Printer..."
		Add-Printer -Name "Fax" -DriverName "Microsoft Shared Fax Driver" -PortName "SHRFAX:" -ErrorAction SilentlyContinue
		Write-Host "Finished Reinstalling Windows Apps"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Reinstalling Windows Apps!', 'Windows Optimization Toolbox')
	}
	
	$UnpinTitilesFromStar_Click = {
		write-host "Cleaning up the StartMenu Tiles for"
		Set-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -Value '<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  <LayoutOptions StartTileGroupCellWidth="6" />'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  <DefaultLayoutOverride>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    <StartLayoutCollection>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      <defaultlayout:StartLayout GroupCellWidth="6" />'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    </StartLayoutCollection>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  </DefaultLayoutOverride>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    <CustomTaskbarLayoutCollection>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      <defaultlayout:TaskbarLayout>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '        <taskbar:TaskbarPinList>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '          <taskbar:UWA AppUserModelID="Microsoft.MicrosoftEdge_8wekyb3d8bbwe!MicrosoftEdge" />'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '          <taskbar:DesktopApp DesktopApplicationLinkPath="%APPDATA%\Microsoft\Windows\Start Menu\Programs\System Tools\File Explorer.lnk" />'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '        </taskbar:TaskbarPinList>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      </defaultlayout:TaskbarLayout>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    </CustomTaskbarLayoutCollection>'
		Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '</LayoutModificationTemplate>'
		$START_MENU_LAYOUT = @"
<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns:taskbar="http://schemas.microsoft.com/Start/2014/TaskbarLayout" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">
    <LayoutOptions StartTileGroupCellWidth="6" />
    <DefaultLayoutOverride>
        <StartLayoutCollection>
            <defaultlayout:StartLayout GroupCellWidth="6" />
        </StartLayoutCollection>
    </DefaultLayoutOverride>
</LayoutModificationTemplate>
"@
		$layoutFile = "C:\Windows\StartMenuLayout.xml"
		If (Test-Path $layoutFile)
		{
			Remove-Item $layoutFile
		}
		$START_MENU_LAYOUT | Out-File $layoutFile -Encoding ASCII
		$regAliases = @("HKLM", "HKCU")
		foreach ($regAlias in $regAliases)
		{
			$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
			$keyPath = $basePath + "\Explorer"
			IF (!(Test-Path -Path $keyPath))
			{
				New-Item -Path $basePath -Name "Explorer"
			}
			Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 1
			Set-ItemProperty -Path $keyPath -Name "StartLayoutFile" -Value $layoutFile
		}
		Write-Host "Restart Explorer, open the start menu (necessary to load the new layout), and give it a few seconds to process"
		Stop-Process -name explorer
		Start-Sleep -s 3
		$wshell = New-Object -ComObject wscript.shell; $wshell.SendKeys('^{ESCAPE}')
		Start-Sleep -s 3
		Write-Host "Enabling the ability to pin items again"
		foreach ($regAlias in $regAliases)
		{
			$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
			$keyPath = $basePath + "\Explorer"
			Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 0
		}
		Stop-Process -name explorer
		Import-StartLayout -LayoutPath $layoutFile -MountPath $env:SystemDrive\
		Remove-Item $layoutFile
			Write-Host "Finished Unpin Titles From Start Menu"
			[System.Media.SystemSounds]::Asterisk.Play()
			[void][System.Windows.Forms.MessageBox]::Show('Finished Unpin Titles From Start Menu!', 'Windows Optimization Toolbox')
		}
		
	
	
	
	$DisableEdgePDF_Click = {
		#TODO: Place custom script here
		
		Write-Host "Stopping Edge from taking over as the default .PDF viewer"
		$NoPDF = "HKCR:\.pdf"
		$NoProgids = "HKCR:\.pdf\OpenWithProgids"
		$NoWithList = "HKCR:\.pdf\OpenWithList"
		If (!(Get-ItemProperty $NoPDF  NoOpenWith))
		{
			New-ItemProperty $NoPDF NoOpenWith
		}
		If (!(Get-ItemProperty $NoPDF  NoStaticDefaultVerb))
		{
			New-ItemProperty $NoPDF  NoStaticDefaultVerb
		}
		If (!(Get-ItemProperty $NoProgids  NoOpenWith))
		{
			New-ItemProperty $NoProgids  NoOpenWith
		}
		If (!(Get-ItemProperty $NoProgids  NoStaticDefaultVerb))
		{
			New-ItemProperty $NoProgids  NoStaticDefaultVerb
		}
		If (!(Get-ItemProperty $NoWithList  NoOpenWith))
		{
			New-ItemProperty $NoWithList  NoOpenWith
		}
		If (!(Get-ItemProperty $NoWithList  NoStaticDefaultVerb))
		{
			New-ItemProperty $NoWithList  NoStaticDefaultVerb
		}
		$Edge = "HKCR:\AppXd4nrz8ff68srnhf9t5a8sbjyar1cr723_"
		If (Test-Path $Edge)
		{
			Set-Item $Edge AppXd4nrz8ff68srnhf9t5a8sbjyar1cr723_
		}
		Write-Host "Finished Disabling Edge From Taking Over The Default PDF Viewer"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	$RemoveBloatwareRegKe_Click = {
		#TODO: Place custom script here
		
		$Keys = @(
			New-PSDrive  HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
			#Remove Background Tasks
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
			
			#Windows File
			"HKCR:\Extensions\ContractId\Windows.File\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			
			#Registry keys to delete if they aren't uninstalled by RemoveAppXPackage/RemoveAppXProvisionedPackage
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y"
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
			
			#Scheduled Tasks to delete
			"HKCR:\Extensions\ContractId\Windows.PreInstalledConfigTask\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe"
			
			#Windows Protocol Keys
			"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
			"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
			
			#Windows Share Target
			"HKCR:\Extensions\ContractId\Windows.ShareTarget\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
		)
		
		#This writes the output of each key it is removing and also removes the keys listed above.
		ForEach ($Key in $Keys)
		{
			Write-Host "Removing $Key from registry"
			Remove-Item $Key -Recurse
		}
		Write-Host "Finished Removing Bloatware Reg Keys"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Bloatware Reg Keys!', 'Windows Optimization Toolbox')
	}
	
	$RepairHardDrive_Click = {
		#TODO: Place custom script 
		Write-Host "Reparing Hard Drive"
		Start-Process -FilePath "${env:Windir}\System32\CHKDSK.exe" -ArgumentList '/r' -Wait -Verb RunAs
		Write-Host"Finished Reparing Hard Drive"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You Need To Restart To Repair Your Hard Drive!', 'Windows Optimization Toolbox')
	}
	
	$YourPhoneAppFIx_Click = {
		#TODO: Place custom script here
		Write-Host "Reinstalling Your Phone App"
		Add-AppxPackage -DisableDevelopmentMode -Register "$($(Get-AppxPackage -AllUsers "Microsoft.YourPhone").InstallLocation)\AppXManifest.xml"
		Write-Host "Enable needed data collection for Your Phone..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableMmx" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableCdp" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Messaging" -Name "AllowMessageSync" -Type DWord -Value 1
		Write-Host "Allowing Background Apps..."
		Get-ChildItem -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" -Exclude "Microsoft.Windows.Cortana*" | ForEach-Object {
			Remove-ItemProperty -Path $_.PsPath -Name "Disabled" -ErrorAction SilentlyContinue
			Remove-ItemProperty -Path $_.PsPath -Name "DisabledByUser" -ErrorAction SilentlyContinue
		}
		Write-Host "You may need to Reboot and right-click Your Phone app and select repair"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You may need to Reboot and right-click Your Phone app and select repair!', 'Windows Optimization Toolbox')
		
	}
	
	$DisableMemoryCompres_Click = {
		#TODO: Place custom script 
		Disable-MMAgent -mc
		Write-Host "Finished Disabling Memory Compression"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Memory Compression!', 'Windows Optimization Toolbox')
		
	}
	
	$EnableMemoryCompress_Click = {
		#TODO: Place custom script here
		Enable-MMAgent -mc
		Write-Host "Finished Enabling Memory Compression"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Memory Compression!', 'Windows Optimization Toolbox')
	}
	$EnableNet35_Click = {
		#TODO: Place custom script 
		
		Write-Host "Installing Net 3.5"
		Enable-WindowsOptionalFeature -Online -FeatureName "NetFx3"
		Write-Host "Finished Installing Net 3.5"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Net 3.5!', 'Windows Optimization Toolbox')
	}
	
	$Notepad_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Notepad++"
		winget install -e --id Notepad++.Notepad++
		Write-Host "Finished Installing Notepad++"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Notepad++!', 'Windows Optimization Toolbox')
	}
	
	$SetTimeToUTCDualBoot_Click = {
		#TODO: Place custom script here
		Write-Host "Setting BIOS time to UTC..."
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\TimeZoneInformation" -Name "RealTimeIsUniversal" -Type DWord -Value 1
		Write-Host "Finished Setting BIOS time to UTC..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	$FixWhitelistedApps_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		Get-AppxPackage -allusers Microsoft.Paint3D | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -allusers Microsoft.WindowsCalculator | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -allusers Microsoft.WindowsStore | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Get-AppxPackage -allusers Microsoft.Windows.Photos | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Write-Host "Operation Completed Sucessfully!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	
	
	$DefaultSetting_Click = {
		#TODO: Place custom script here
		Write-Host "Enabling driver offering through Windows Update..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Device Metadata" -Name "PreventDeviceMetadataFromNetwork" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DontPromptForWindowsUpdate" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DontSearchWindowsUpdate" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DriverSearching" -Name "DriverUpdateWizardWuSearchEnabled" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -Name "ExcludeWUDriversInQualityUpdate" -ErrorAction SilentlyContinue
		Write-Host "Enabling Windows Update automatic restart..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "NoAutoRebootWithLoggedOnUsers" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -Name "AUPowerManagement" -ErrorAction SilentlyContinue
		Write-Host "Enabled driver offering through Windows Update"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Setting Windows Update To Default Setting!', 'Windows Optimization Toolbox')
		
	}
	
	$UTorrent_Click = {
		#TODO: Place custom script here
		Write-Host "Installing UTorrent..."
		choco install utorrent -y
		Write-Host "Finished Installing UTorrent..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing UTorrent!', 'Windows Optimization Toolbox')
		
	}
	
	
	
	$PerformanceVisualFX_Click = {
		#TODO: Place custom script here
		Write-Host "Adjusting visual effects for performance..."
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "DragFullWindows" -Type String -Value 0
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Type String -Value 200
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Type Binary -Value ([byte[]](144, 18, 3, 128, 16, 0, 0, 0))
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop\WindowMetrics" -Name "MinAnimate" -Type String -Value 0
		Set-ItemProperty -Path "HKCU:\Control Panel\Keyboard" -Name "KeyboardDelay" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewAlphaSelect" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewShadow" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "TaskbarAnimations" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" -Name "VisualFXSetting" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\DWM" -Name "EnableAeroPeek" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "EnableTransparency" -Type DWord -Value 0
		Write-Host "Adjusted visual effects for performance"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Adjusted visual effects for performance!', 'Windows Optimization Toolbox')
	}
	
	$AppearanceVisualFX_Click = {
		#TODO: Place custom script here
		Write-Host "Adjusting visual effects for appearance..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "EnableTransparency" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "DragFullWindows" -Type String -Value 1
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Type String -Value 400
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Type Binary -Value ([byte[]](158, 30, 7, 128, 18, 0, 0, 0))
		Set-ItemProperty -Path "HKCU:\Control Panel\Desktop\WindowMetrics" -Name "MinAnimate" -Type String -Value 1
		Set-ItemProperty -Path "HKCU:\Control Panel\Keyboard" -Name "KeyboardDelay" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewAlphaSelect" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "ListviewShadow" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "TaskbarAnimations" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" -Name "VisualFXSetting" -Type DWord -Value 3
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\DWM" -Name "EnableAeroPeek" -Type DWord -Value 1
		Write-Host "Adjusted visual effects for appearance..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Adjusted visual effects for appearance!', 'Windows Optimization Toolbox')
		
	}
	
	$CCleaner_Click = {
		#TODO: Place custom script here
		Write-Host "Installing CCleaner"
		winget install -e --id Piriform.CCleaner
		Write-Host "Finished Installing CCleaner"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing CCleaner!', 'Windows Optimization Toolbox')
	}
	
	$MicrosoftSilverlight_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Microsoft Silverlight"
		choco install silverlight -y
		Write-Host "Finished Installing Microsoft Silverlight"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Microsoft Silverlight!', 'Windows Optimization Toolbox')
	}
	
	$Opera_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Opera"
		winget install -e Opera.Opera
		Write-Host "Finished Installing Opera"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Opera!', 'Windows Optimization Toolbox')
	}
	
	$Edge_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Edge"
		winget install -e Microsoft.Edge
		Write-Host "Finished Installing Microsoft Edge"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Edge!', 'Windows Optimization Toolbox')
		
	}
	
	$Vivaldi_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Vivaldi"
		winget install -e VivaldiTechnologies.Vivaldi
		Write-Host "Finished Installing Vivaldi"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Vivaldi!', 'Windows Optimization Toolbox')
	}
	
	$BleachBit_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Bleachbit"
		winget install -e --id BleachBit.BleachBit
		Write-Host "Finished Installing Bleachbit"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Bleachbit!', 'Windows Optimization Toolbox')
	}
	
	$CPUZ_Click = {
		#TODO: Place custom script here
		Write-Host "Installing CPU-Z"
		winget install -e --id CPUID.CPU-Z
		Write-Host "Finished Installing CPU-Z"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing CPU-Z!', 'Windows Optimization Toolbox')
		
	}
	
	$GPUZ_Click = {
		#TODO: Place custom script here
		Write-Host "Installing GPU-Z"
		winget install -e --id TechPowerUp.GPU-Z
		Write-Host "Finished Installing GPU-Z"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing GPU-Z!', 'Windows Optimization Toolbox')
	}
	
	$IDM_Click = {
		#TODO: Place custom script here
		Write-Host "Installing IDM"
		winget install -e --id Tonec.InternetDownloadManager
		Write-Host "Finished Installing IDM"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing IDM!', 'Windows Optimization Toolbox')
	}
	
	$Everything_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Everything Search"
		winget install -e --id voidtools.Everything
		Write-Host "Finished Installing Everything Search"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Everything Search!', 'Windows Optimization Toolbox')
	}
	
	$Gimp_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Gimp"
		winget install -e --id GIMP.GIMP
		Write-Host "Finished Installing Gimp"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Gimp!', 'Windows Optimization Toolbox')
	}
	
	$ShareX_Click = {
		#TODO: Place custom script here
		Write-Host "Installing ShareX"
		winget install -e --id ShareX.ShareX
		Write-Host "Finished Installing ShareX"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing ShareX!', 'Windows Optimization Toolbox')
		
	}
	
	$PaintNet_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Paint.NET"
		choco install paint.net -y
		Write-Host "Finished Installing Paint.NET"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Paint.NET!', 'Windows Optimization Toolbox')
		
		
	}
	
	$ImageGlass_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Image Glass"
		winget install -e --id DuongDieuPhap.ImageGlass
		Write-Host "Finished installing Image Glass"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Image Glass!', 'Windows Optimization Toolbox')
		
	}
	
	$VSCodium_Click = {
		#TODO: Place custom script here
		Write-Host "Installing VSCodium"
		winget install -e --id VSCodium.VSCodium
		Write-Host "Finished installing VSCodium"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing VSCodium!', 'Windows Optimization Toolbox')
		
		
	}
	
	$VSCode_Click = {
		#TODO: Place custom script here
		Write-Host "Installing VS Code"
		winget install -e Microsoft.VisualStudioCode --source winget
		Write-Host "Finshed Installing VS Code"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing VS Code!', 'Windows Optimization Toolbox')
		
		
	}
	
	$SumatraPDF_Click = {
		#TODO: Place custom script here
		Write-Host "Installing SumatraPDF"
		winget install -e --id SumatraPDF.SumatraPDF
		Write-Host "Finished Installing SumatraPDF"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Sumatra PDF!', 'Windows Optimization Toolbox')
		
	}
	
	$AdobeReaderDC_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Adobe Reader DC"
		winget install -e Adobe.AdobeAcrobatReaderDC
		Write-Host "Finished Installing Adobe Reader DC"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Adobe Reader DC!', 'Windows Optimization Toolbox')
		
		
	}
	
	$FoxitReader_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Foxit Reader"
		winget install -e --id Foxit.FoxitReader
		Write-Host "Finished installing Foxit Reader"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Foxit Reader!', 'Windows Optimization Toolbox')
		
		
	}
	
	
	
	
	$DisableWindowsUpdate_Click = {
		#TODO: Place custom script here
		# Source: https://github.com/rgl/windows-vagrant/blob/master/disable-windows-updates.ps1
		Set-StrictMode -Version Latest
		$ProgressPreference = 'SilentlyContinue'
		$ErrorActionPreference = 'SilentlyContinue'
		trap
		{
			Write-Host
			Write-Host "ERROR: $_"
			Write-Host (($_.ScriptStackTrace -split '\r?\n') -replace '^(.*)$', 'ERROR: $1')
			Write-Host (($_.Exception.ToString() -split '\r?\n') -replace '^(.*)$', 'ERROR EXCEPTION: $1')
			Write-Host
		
		}
	
	
	# disable automatic updates.
		# XXX this does not seem to work anymore.
		# see How to configure automatic updates by using Group Policy or registry settings
		#     at https://support.microsoft.com/en-us/help/328010
		
		{
			$p, $components = $path -split '[\\/]'
			$components | ForEach-Object {
				$p = "$p\$_"
				if (!(Test-Path $p))
				{
					New-Item -ItemType Directory $p
				}
			}
			$null
		}
		$auPath = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU'
		New-Directory $auPath
		# set NoAutoUpdate.
		# 0: Automatic Updates is enabled (default).
		# 1: Automatic Updates is disabled.
		New-ItemProperty `
						 -Path $auPath `
						 -Name NoAutoUpdate `
						 -Value 1 `
						 -PropertyType DWORD `
						 -Force `
		
		# set AUOptions.
		# 1: Keep my computer up to date has been disabled in Automatic Updates.
		# 2: Notify of download and installation.
		# 3: Automatically download and notify of installation.
		# 4: Automatically download and scheduled installation.
		New-ItemProperty `
						 -Path $auPath `
						 -Name AUOptions `
						 -Value 1 `
						 -PropertyType DWORD `
						 -Force `
		
		
		# disable Windows Update Delivery Optimization.
		# NB this applies to Windows 10.
		# 0: Disabled
		# 1: PCs on my local network
		# 3: PCs on my local network, and PCs on the Internet
		$deliveryOptimizationPath = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config'
		if (Test-Path $deliveryOptimizationPath)
		{
			New-ItemProperty `
							 -Path $deliveryOptimizationPath `
							 -Name DODownloadMode `
							 -Value 0 `
							 -PropertyType DWORD `
							 -Force `
			
		}
		# Service tweaks for Windows Update
		
		$services = @(
			"BITS"
			"wuauserv"
		)
		
		foreach ($service in $services)
		{
			# -ErrorAction SilentlyContinue is so it doesn't write an error to stdout if a service doesn't exist
			
			Write-Host "Setting $service StartupType to Disabled"
			Get-Service -Name $service -ErrorAction SilentlyContinue | Set-Service -StartupType Disabled
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Windows Updates!', 'Windows Optimization Toolbox')
		
	}
	
	$EnableWindowsUpdates_Click = {
		#TODO: Place custom script here
		# Source: https://github.com/rgl/windows-vagrant/blob/master/disable-windows-updates.ps1
		Set-StrictMode -Version Latest
		$ProgressPreference = 'SilentlyContinue'
		$ErrorActionPreference = 'Stop'
		trap
		{
			Write-Host
			Write-Host "ERROR: $_"
			Write-Host (($_.ScriptStackTrace -split '\r?\n') -replace '^(.*)$', 'ERROR: $1')
			Write-Host (($_.Exception.ToString() -split '\r?\n') -replace '^(.*)$', 'ERROR EXCEPTION: $1')
			Write-Host
			Write-Host 'Sleeping for 60m to give you time to look around the virtual machine before self-destruction...'
			Start-Sleep -Seconds (60 * 60)
			Exit 1
		}
		
		# disable automatic updates.
		# XXX this does not seem to work anymore.
		# see How to configure automatic updates by using Group Policy or registry settings
		#     at https://support.microsoft.com/en-us/help/328010
		function New-Directory($path)
		{
			$p, $components = $path -split '[\\/]'
			$components | ForEach-Object {
				$p = "$p\$_"
				if (!(Test-Path $p))
				{
					New-Item -ItemType Directory $p
				}
			}
			$null
		}
		$auPath = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU'
		New-Directory $auPath
		# set NoAutoUpdate.
		# 0: Automatic Updates is enabled (default).
		# 1: Automatic Updates is disabled.
		New-ItemProperty `
						 -Path $auPath `
						 -Name NoAutoUpdate `
						 -Value 0 `
						 -PropertyType DWORD `
						 -Force `
		
		# set AUOptions.
		# 1: Keep my computer up to date has been disabled in Automatic Updates.
		# 2: Notify of download and installation.
		# 3: Automatically download and notify of installation.
		# 4: Automatically download and scheduled installation.
		New-ItemProperty `
						 -Path $auPath `
						 -Name AUOptions `
						 -Value 3 `
						 -PropertyType DWORD `
						 -Force `
		
		
		# disable Windows Update Delivery Optimization.
		# NB this applies to Windows 10.
		# 0: Disabled
		# 1: PCs on my local network
		# 3: PCs on my local network, and PCs on the Internet
		$deliveryOptimizationPath = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config'
		if (Test-Path $deliveryOptimizationPath)
		{
			New-ItemProperty `
							 -Path $deliveryOptimizationPath `
							 -Name DODownloadMode `
							 -Value 0 `
							 -PropertyType DWORD `
							 -Force `
			
		}
		# Service tweaks for Windows Update
		
		$services = @(
			"BITS"
			"wuauserv"
		)
		
		foreach ($service in $services)
		{
			# -ErrorAction SilentlyContinue is so it doesn't write an error to stdout if a service doesn't exist
			
			Write-Host "Setting $service StartupType to Automatic"
			Get-Service -Name $service -ErrorAction SilentlyContinue | Set-Service -StartupType Automatic
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Windows Updates!', 'Windows Optimization Toolbox')
		
	}
	
	
	$DarkMode_Click = {
		#TODO: Place custom script here
		Write-Host "Enabling Dark Mode"
		Write-Host "Enabling Dark Mode"
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Name "AppsUseLightTheme" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Name "SystemUsesLightTheme" -Type DWord -Value 0
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Force
		}
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "AppsUseLightTheme" -Type DWord -Value 0
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "SystemUsesLightTheme" -Type DWord -Value 0
		Stop-Process -name explorer -force
		Write-Host "Enabled Dark Mode"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Dark Mode!', 'Windows Optimization Toolbox')
		
	}
	
	$LightMode_Click = {
		#TODO: Place custom script here
		Write-Host "Switching Back to Light Mode"
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Name "AppsUseLightTheme" -Type DWord -Value 1
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Name "SystemUsesLightTheme" -Type DWord -Value 1
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes" -Force
		}
		if (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "AppsUseLightTheme" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "SystemUsesLightTheme" -Type DWord -Value 1
		Stop-Process -name explorer -force
		Write-Host "Switched Back to Light Mode"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Light Mode!', 'Windows Optimization Toolbox')
		
	}
	
	$ShowTrayIcons_Click = {
		#TODO: Place custom script here
		Write-Host "Showing tray icons..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "EnableAutoTray" -Type DWord -Value 0
		Stop-Process -name explorer -force
		Write-Host "Finished Showing All Tray Icons"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Showing Tray Icons!', 'Windows Optimization Toolbox')
		
	}
	
	$HideTraysIcons_Click = {
		#TODO: Place custom script here
		Write-Host "Hiding tray icons..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "EnableAutoTray" -Type DWord -Value 1
		Stop-Process -name explorer -force
		Write-Host "Done - Hid Tray Icons"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][void][System.Windows.Forms.MessageBox]::Show('Finished Hiding Tray Icons!', 'Windows Optimization Toolbox')
		
	}
	
	$DisableLocationTrack_Click = {
		#TODO: Place custom script here
		Write-Host "Disabling Location Tracking..."
		If (!(Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Type String -Value "Deny"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Type DWord -Value 0
		Write-Host "Finished Disabling Location Tracking!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Location Tracking!', 'Windows Optimization Toolbox')
		
	}
	
	$EnableLocationTRacki_Click = {
		#TODO: Place custom script here
		Write-Host "Enabling Location Provider..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableWindowsLocationProvider" -ErrorAction SilentlyContinue
		Write-Host "Enabling Location Scripting..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocationScripting" -ErrorAction SilentlyContinue
		Write-Host "Enabling Location..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors" -Name "DisableLocation" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "SensorPermissionState" -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\DeviceAccess\Global\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" -Name "Value" -Type String -Value "Allow"
		Write-Host "Allow access to Location..."
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" -Name "Value" -Type String -Value "Allow"
		Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" -Name "Status" -Type DWord -Value "1"
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessLocation" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessLocation_UserInControlOfTheseApps" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessLocation_ForceAllowTheseApps" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" -Name "LetAppsAccessLocation_ForceDenyTheseApps" -ErrorAction SilentlyContinue
		Write-Host "Finished Enabling Location Tracking"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Location Tracking!', 'Windows Optimization Toolbox')
		
	}
	
	$DisableClipboardHist_Click = {
		#TODO: Place custom script here
		Write-Host "Disable Clipboard History..."
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Clipboard" -Name "EnableClipboardHistory" -Type DWord -Value "1"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "AllowClipboardHistory" -Type DWord -Value "1"
		Write-Host "Disabled Clipboard History"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Clipboard History!', 'Windows Optimization Toolbox')
		
	}
	
	$EnableClipboardHisto_Click = {
		#TODO: Place custom script here
		Write-Host "Enable Clipboard History..."
		Remove-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Clipboard" -Name "EnableClipboardHistory" -ErrorAction SilentlyContinue
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "AllowClipboardHistory" -ErrorAction SilentlyContinue
		Write-Host "Enabled Clipboard History"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Clipboard History!', 'Windows Optimization Toolbox')
		
	}
	
	$PhysX_Click = {
		#TODO: Place custom script here
		Write-Host "Installing PhysX"
		choco install physx.legacy -y
		Write-Host "Finished Installing PhysX"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing PhysX!', 'Windows Optimization Toolbox')
		
	}
	
	
	$Java_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Java"
		choco install javaruntime -y
		Write-Host "Finished Installing Java!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing PhysX!', 'Windows Optimization Toolbox')
		
	}
	
	$Restore_Click = {
		#TODO: Place custom script here
		Start-Process rstrui.exe
	}
	
	$LaptopNumlockFix_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		Set-ItemProperty -Path "HKU:\.DEFAULT\Control Panel\Keyboard" -Name "InitialKeyboardIndicators" -Type DWord -Value 0
		Add-Type -AssemblyName System.Windows.Forms
		If (([System.Windows.Forms.Control]::IsKeyLocked('NumLock')))
		{
			$wsh = New-Object -ComObject WScript.Shell
			$wsh.SendKeys('{NUMLOCK}')
		}
		Write-Host "Operation Completed Sucessfully!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
		
	}
	
	
	$WindowsSearchAndTask_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		New-ItemProperty -Path HKCU:Software\Microsoft\Windows\CurrentVersion\Run -Name Ctfmon -Type String -Value C:\Windows\system32\ctfmon.exe -Force
		Write-Host "Enabling Windows Search.."
		Start-Service -Name TabletInputService
		Start-Service -Name WSearch
		Get-AppxPackage -AllUsers | Where-Object { $_.InstallLocation -like "*SystemApps*" } | ForEach-Object { Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" }
		Stop-Process -name explorer -force
		Write-Host "Operation Completed Sucessfully!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	$BalenaEtcher_Click = {
		#TODO: Place custom script here
		Write-Host "Dowloading balenaEtcher"
		winget install -e --id Balena.Etcher
		Write-Host "Finished Dowloading balenaEtcher"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Dowloading balenaEtcher!', 'Windows Optimization Toolbox')
		
	}
	
	$GreenShot_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Greenshot"
		winget install -e --id Greenshot.Greenshot
		Write-Host "Finsihed Installing Greenshot"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finsihed Installing Greenshot!', 'Windows Optimization Toolbox')
		
	}
	
	$CreateARestorePoint_Click = {
		#TODO: Place custom script here
		Write-Host "Creating A Restore Point"
		Enable-ComputerRestore -Drive "C:\"
		REG ADD "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore" /V "SystemRestorePointCreationFrequency" /T REG_DWORD /D 0 /F
		Checkpoint-Computer -Description "Windows Toolbox" -RestorePointType "MODIFY_SETTINGS"
		Write-Host "Finished Creating A Restore Point"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finsihed Creating A Restore Point!', 'Windows Optimization Toolbox')
		
	}
	
	$LibreOffice_Click = {
		#TODO: Place custom script here
		Write-Host "Installing LibreOffice"
		winget install -e --id TheDocumentFoundation.LibreOffice
		Write-Host "Finished Installing LibreOffice"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finsihed Installing LibreOffice!', 'Windows Optimization Toolbox')
		
	}
	
	$IrfanView_Click = {
		#TODO: Place custom script here
		Write-Host "Installing IfranView"
		winget install -e --id IrfanSkiljan.IrfanView
		Write-Host "Finished Installing IfranView"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing IfranView!', 'Windows Optimization Toolbox')
		
	}
	
	$Cleanmgr_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Cleanmgr+"
		choco install cleanmgr-plus
		Write-Host "Finished Installing Cleanmgr+"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Cleanmgr+!', 'Windows Optimization Toolbox')
		
	}
	
	$RemoveStartupProgram_Click = {
		#TODO: Place custom script here
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run32"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\StartupFolder"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run32"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\StartupFolder"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$StartupFolder = "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\RunOnce"
		Remove-Item -Path $StartupFolder -Force -Recurse -ErrorAction SilentlyContinue
		New-Item -Path $StartupFolder -Force -ErrorAction SilentlyContinue
		$Startup = "$env:SystemDrive\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp"
		foreach ($Item in (Get-ChildItem -Path $Startup))
		{
			Remove-Item -Path (Join-Path -Path $Startup -ChildPath $Item)
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Startup Apps!', 'Windows Optimization Toolbox')
	}
	
	
	
	$RemoveViruses_Click = {
		#TODO: Place custom script here
		Start-Process 'https://www.reddit.com/r/TronScript/'
	}
	
	$OldContextMenu_Click = {
		#TODO: Place custom script here
		New-Item -Path "HKCU:\SOFTWARE\Classes\CLSID" -Force
		New-Item -Path "HKCU:\SOFTWARE\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}" -Force
		New-Item -Path "HKCU:\SOFTWARE\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32" -Force -Value ""
		Stop-Process -name explorer -force
		Write-Host "You should now have old context menu"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You should now have old context menu!', 'Windows Optimization Toolbox')
	}
	
	$DefaultContextMenu_Click = {
		#TODO: Place custom script here
		Remove-Item -Path "HKCU:\SOFTWARE\CLASSES\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}" -Force -Recurse
		Stop-Process -name explorer -force
		Write-Host "You should now have new (default) context menu"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You should now have new (default) context menu!', 'Windows Optimization Toolbox')
		
	}
	
	$RemoveTakeOwnershipMenu_Click = {
		#TODO: Place custom script here
		Write-Host "Removing TakeOwnership Menu.."
		Start-Process -FilePath "CMD" -ArgumentList "/c REG DELETE `"HKEY_CLASSES_ROOT\*\shell\TakeOwnership`" /F" -Verb RunAs -WindowStyle Hidden -Wait
		Start-Process -FilePath "CMD" -ArgumentList "/c REG DELETE `"HKEY_CLASSES_ROOT\Directory\shell\TakeOwnership`" /F" -Verb RunAs -WindowStyle Hidden -Wait
		Write-Host "Take Ownership should be removed now!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Take Ownership should be removed now!', 'Windows Optimization Toolbox')
	}
	
	
	$AddTakeOwnershipMenu_Click = {
		#TODO: Place custom script here
		if (!(Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership"))
		{
			Write-Host "Adding 'Take Ownership' to context menu!"
			if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership") -ne $true)
			{
				New-Item "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership" -force -ea SilentlyContinue
			}
			if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership\command") -ne $true)
			{
				New-Item "HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership\command" -force -ea SilentlyContinue
			}
			if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership") -ne $true)
			{
				New-Item "HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership" -force -ea SilentlyContinue
			}
			if ((Test-Path -LiteralPath "HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership\command") -ne $true)
			{
				New-Item "HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership\command" -force -ea SilentlyContinue
			}
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership' -Name '(default)' -Value 'Take Ownership' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership' -Name 'HasLUAShield' -Value '' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership' -Name 'NoWorkingDirectory' -Value '' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership' -Name 'Position' -Value 'middle' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership\command' -Name '(default)' -Value 'powershell -windowstyle hidden -command "Start-Process cmd -ArgumentList ''/c takeown /f \"%1\" && icacls \"%1\" /grant *S-1-3-4:F /c /l'' -Verb runAs' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\*\shell\TakeOwnership\command' -Name 'IsolatedCommand' -Value 'powershell -windowstyle hidden -command "Start-Process cmd -ArgumentList ''/c takeown /f \"%1\" && icacls \"%1\" /grant *S-1-3-4:F /c /l'' -Verb runAs' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name '(default)' -Value 'Take Ownership' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name 'AppliesTo' -Value 'NOT (System.ItemPathDisplay:="C:\Users" OR System.ItemPathDisplay:="C:\ProgramData" OR System.ItemPathDisplay:="C:\Windows" OR System.ItemPathDisplay:="C:\Windows\System32" OR System.ItemPathDisplay:="C:\Program Files" OR System.ItemPathDisplay:="C:\Program Files (x86)")' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name 'HasLUAShield' -Value '' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name 'NoWorkingDirectory' -Value '' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership' -Name 'Position' -Value 'middle' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership\command' -Name '(default)' -Value 'powershell -windowstyle hidden -command "Start-Process cmd -ArgumentList ''/c takeown /f \"%1\" /r /d y && icacls \"%1\" /grant *S-1-3-4:F /c /l /q'' -Verb runAs' -PropertyType String -Force -ea SilentlyContinue;
			New-ItemProperty -LiteralPath 'HKLM:\SOFTWARE\Classes\Directory\shell\TakeOwnership\command' -Name 'IsolatedCommand' -Value 'powershell -windowstyle hidden -command "Start-Process cmd -ArgumentList ''/c takeown /f \"%1\" /r /d y && icacls \"%1\" /grant *S-1-3-4:F /c /l /q'' -Verb runAs' -PropertyType String -Force -ea SilentlyContinue;
			Write-Host "'Take Ownership' is added into context menu!"
		}
		else
		{
			Clear-Host
			Write-Host "Added `"Take Onwership`" added into your context menu!" -ForegroundColor Yellow -BackgroundColor Black
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Added Take Onwership added into your context menu!', 'Windows Optimization Toolbox')
	}
	
	$DefaultTaskbar_Click = {
		#TODO: Place custom script here
		Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name "TaskbarSi" -Force
		Stop-Process -name explorer -force
		Write-Host "Finished Setting Taskbar Size To It's Default Setting!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Setting Taskbar Size To Default Setting!', 'Windows Optimization Toolbox')
	}
	
	$SmallTaskbar_Click = {
		#TODO: Place custom script here
		Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" -Name TaskbarSi -Value 0
		Stop-Process -name explorer -force
		Write-Host "You should have small taskbar now! It might be buggy but you can always revert"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('You should have small taskbar now! It might be buggy but you can always revert.', 'Windows Optimization Toolbox')
	}
	
	
	
	$EnableNFS_Click = {
		#TODO: Place custom script here
		Enable-WindowsOptionalFeature -Online -FeatureName "ServicesForNFS-ClientOnly" -All
		Enable-WindowsOptionalFeature -Online -FeatureName "ClientForNFS-Infrastructure" -All
		Enable-WindowsOptionalFeature -Online -FeatureName "NFS-Administration" -All
		nfsadmin client stop
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\ClientForNFS\CurrentVersion\Default" -Name "AnonymousUID" -Type DWord -Value 0
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\ClientForNFS\CurrentVersion\Default" -Name "AnonymousGID" -Type DWord -Value 0
		nfsadmin client start
		nfsadmin client localhost config fileaccess=755 SecFlavors=+sys -krb5 -krb5i
		Write-Host "NFS is now setup for user based NFS mounts"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('NFS is now setup for user based NFS mounts!', 'Windows Optimization Toolbox')
		
	}
	
	$StarTisBack_Click = {
		#TODO: Place custom script here
		Write-Host "Installing StarTisBack"
		winget install -e --id StartIsBack.StartIsBack
		Write-Host "Finished Installing StarTisBack"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing StarTisBack!', 'Windows Optimization Toolbox')
		
	}
	
	$Blender_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Blender"
		winget install -e --id BlenderFoundation.Blender
		Write-Host "Finsihed Installing Blender"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finsihed Installing Blender!', 'Windows Optimization Toolbox')
	}
	
	$Openshell_Click = {
		#TODO: Place custom script here
		Write-Host "Installing OpenShell"
		choco install open-shell
		Write-Host "Finished Installing OpenShell"
	}
	
	
	$CompactOS_Click = {
		#TODO: Place custom script here
		Write-Host "Compressing Windows Files. This Might Take A While"
		Start-Process -FilePath "${env:Windir}\System32\compact.exe" -ArgumentList '/c c:\*.* /i /s /a /c /exe:lzx' -Wait -Verb RunAs
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	
	
	
	$RemoveMalware_Click = {
		#TODO: Place custom script here
		
		if (!(Test-Path "$PSScriptRoot\..\tmp"))
		{
			Write-Host "Folder $PSScriptRoot\..\tmp doesn't exist, creating one..."
			mkdir "$PSScriptRoot\..\tmp"
		}
		
		$AdwCleanerDl = "https://downloads.malwarebytes.com/file/adwcleaner"
		$AdwCleanerOutput = "$PSScriptRoot\..\tmp\adwcleaner.exe"
		
		Write-Host "Downloading and Running AdwCleaner from: $AdwCleanerDl"
		Invoke-WebRequest -Uri $AdwCleanerDl -OutFile $AdwCleanerOutput
		Start-Process -FilePath $AdwCleanerOutput -ArgumentList "/eula", "/clean", "/noreboot" -Wait
		Remove-Item $AdwCleanerOutput -Force
		Write-Host "Finished Removing Adware!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Adware!', 'Windows Optimization Toolbox')
	}
	
	$Ventoy_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Ventoy"
		choco install ventoy
		Write-Host "Finished Installing Ventoy"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Ventoy!', 'Windows Optimization Toolbox')
	}
	
	$IntelDriverSupportAs_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Intel Driver Support Assistant"
		choco install intel-dsa
		Write-Host "Finished Installing Intel Driver Support Assistant"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing Intel Driver Support Assistant!', 'Windows Optimization Toolbox')
	}
	
	$AMDRyzenChipsetDrive_Click = {
		#TODO: Place custom script here
		Write-Host "Installing AMD Ryzen Chipset Drivers"
		choco install amd-ryzen-chipset
		Write-Host "Finished Installing AMD Ryzen Chipset Drivers"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Finished Installing AMD Ryzen Chipset Drivers!', 'Windows Optimization Toolbox')
	}
	
	
	
	$GeforceExperience_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Geforce Experience"
		choco install geforce-experience
		Write-Host "FinishedInstalling Geforce Experience"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Finished Installing Geforce Experience!', 'Windows Optimization Toolbox')
		
	}
	
	
	$BypassTPM20_Click = {
		#TODO: Place custom script here
		Write-Host "Processing..."
		New-ItemProperty -Path "HKLM:\System\Setup\LabConfig" -Name "BypassSecureBootCheck" -PropertyType DWord -Value 1 -Force
		New-ItemProperty -Path "HKLM:\System\Setup\LabConfig" -Name "BypassTPMCheck" -PropertyType DWord -Value 1 -Force
		Write-Host "Operation Completed Sucessfully"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Operation Completed Sucessfully!', 'Windows Optimization Toolbox')
	}
	
	$Windows10XBootAnimat_Click={
		#TODO: Place custom script here
		Write-Host "Adding Windows 10X Boot Animation..."
		cmd /c 'reg add "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\BootControl" /v "BootProgressAnimation" /t REG_DWORD /d 1 /f'
		New-ItemProperty -Path "HKLM:\System\ControlSet001\Control\BootControl" -Name "BootProgressAnimation" -PropertyType DWord -Value 1 -Force
		Write-Host "Finished Adding Windows 10X Boot Animation..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Adding Windows 10X Boot Animation!', 'Windows Optimization Toolbox')
	}
	
	
	$RemoveWindows10XBoot_Click = {
		#TODO: Place custom script here
		Write-Host "Removing Windows 10X Boot Animation..."
		Remove-ItemProperty -Path "HKLM:\System\ControlSet001\Control\BootControl" -Name "BootProgressAnimation"
		cmd /c 'reg delete "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\BootControl" /f'
		Write-Host "Finished Removing Windows 10X Boot Animation..."
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Windows 10X Boot Animation!', 'Windows Optimization Toolbox')
	}
	
	$InstallOnedrive_Click = {
		#TODO: Place custom script here
		Write-Host "Installing Onedrive. Please Wait..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\OneDrive" -Name "DisableFileSyncNGSC" -ErrorAction SilentlyContinue
		%systemroot%\SysWOW64\OneDriveSetup.exe
		Write-Host "Finished Installing OneDrive!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing OneDrive!', 'Windows Optimization Toolbox')
	}
	
	$DisableCortana_Click={
		#TODO: Place custom script here
		Write-Host "Disable Cortana Autostart ..."
		if (Get-AppxPackage -Name Microsoft.549981C3F5F10)
		{
			if (-not (Test-Path -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId"))
			{
				New-Item -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Force
			}
			New-ItemProperty -Path "Registry::HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\Microsoft.549981C3F5F10_8wekyb3d8bbwe\CortanaStartupId" -Name State -PropertyType DWord -Value 1 -Force
		}
		Write-Host "Disabling Cortana..."
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -Type DWord -Value 0
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type DWord -Value 1
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type DWord -Value 1
		If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore"))
		{
			New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Force
		}
		Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Name "HarvestContacts" -Type DWord -Value 0
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -Type DWord -Value 0
		Write-Host "Enabling automatic Installingation of network devices..."
		Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\NcdAutoSetup\Private" -Name "AutoSetup" -ErrorAction SilentlyContinue
		Write-Host "Finished Disabling Cortana"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Disabling Cortana!', 'Windows Optimization Toolbox')
	}
	
	
	$DebloatAll_Click={
		#TODO: Place custom script here
		Start-Process -FilePath "${env:Windir}\System32\dism.exe" -ArgumentList '/Online /Cleanup-Image /StartComponentCleanup /ResetBase' -Wait -Verb RunAs
		Write-Host "Removing Bloatware..."
		$cdm = @(
			"ContentDeliveryAllowed"
			"FeatureManagementEnabled"
			"OemPreInstalledAppsEnabled"
			"PreInstalledAppsEnabled"
			"PreInstalledAppsEverEnabled"
			"SilentInstalledAppsEnabled"
			"SubscribedContent-314559Enabled"
			"SubscribedContent-338387Enabled"
			"SubscribedContent-338388Enabled"
			"SubscribedContent-338389Enabled"
			"SubscribedContent-338393Enabled"
			"SubscribedContentEnabled"
			"SystemPaneSuggestionsEnabled"
		)
		
		New-FolderForced -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager"
		foreach ($key in $cdm)
		{
			Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" $key 0
		}
		
		New-FolderForced -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" "AutoDownload" 2
		
		# Prevents "Suggested Applications" returning
		New-FolderForced -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent" "DisableWindowsConsumerFeatures" 1
		Get-AppxProvisionedPackage -online | Remove-AppxProvisionedPackage -online
		Get-AppxPackage -AllUsers | Remove-AppxPackage
		# Remove Microsoft App (Read Function name)
		Function MicrosoftEdge
		{
			winget uninstall "Microsoft Edge"
			Write-Host "Removing Microsoft Edge"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftEdgeUpdate
		{
			winget uninstall "Microsoft Edge Update"
			Write-Host "Removing Microsoft Edge Update"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftEdgeWebView2Runtime
		{
			winget uninstall "Microsoft Edge WebView2 Runtime"
			Write-Host "Removing Microsoft Edge WebView2 Runtime"
		}
		
		# Remove Microsoft App (Read Function name)
		Function Cortana
		{
			winget uninstall "Cortana"
			Write-Host "Removing Cortana"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftNews
		{
			winget uninstall "Microsoft News"
			Write-Host "Removing Microsoft News"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MSNWeather
		{
			winget uninstall "MSN Weather"
			Write-Host "Removing MSN Weather"
		}
		
		# Remove Microsoft App (Read Function name)
		Function Xbox
		{
			winget uninstall "Xbox"
			Write-Host "Removing Xbox"
		}
		
		# Remove Microsoft App (Read Function name)
		Function GetHelp
		{
			winget uninstall "Get Help"
			Write-Host "Removing Get Help"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftTips
		{
			winget uninstall "Microsoft Tips"
			Write-Host "Removing Microsoft Tips"
		}
		
		# Remove Microsoft App (Read Function name)
		Function HEIFImageExtensions
		{
			winget uninstall "HEIF Image Extensions"
			Write-Host "Removing HEIF Image Extensions"
		}
		
		# Remove Microsoft App (Read Function name)
		Function Office
		{
			winget uninstall "Office"
			Write-Host "Removing Office"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftSolitaireCollection
		{
			winget uninstall "Microsoft Solitaire Collection"
			Write-Host "Removing Microsoft Solitaire Collection"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftStickyNotes
		{
			winget uninstall "Microsoft Sticky Notes"
			Write-Host "Removing Microsoft Sticky Notes"
		}
		
		# Remove Microsoft App (Read Function name)
		Function Paint
		{
			winget uninstall "Paint"
			Write-Host "Removing Paint"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftPeople
		{
			winget uninstall "Microsoft People"
			Write-Host "Removing Microsoft People"
		}
		
		# Remove Microsoft App (Read Function name)
		Function PowerAutomate
		{
			winget uninstall "Power Automate"
			Write-Host "Removing Power Automate"
		}
		
		# Remove Microsoft App (Read Function name)
		Function SnippingTool
		{
			winget uninstall "Snipping Tool"
			Write-Host "Removing Snipping Tool"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsSecurity
		{
			winget uninstall "Windows Security"
			Write-Host "Removing Windows Security"
		}
		
		# Remove Microsoft App (Read Function name)
		Function StoreExperienceHost
		{
			winget uninstall "Store Experience Host"
			Write-Host "Removing Store Experience Host"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftToDo
		{
			winget uninstall "Microsoft To Do"
			Write-Host "Removing Microsoft To Do"
		}
		
		# Remove Microsoft App (Read Function name)
		Function VP9VideoExtensions
		{
			winget uninstall "VP9 Video Extensions"
			Write-Host "Removing VP9 Video Extensions"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WebMediaExtensions
		{
			winget uninstall "Web Media Extensions"
			Write-Host "Removing Web Media Extensions"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WebpImageExtensions
		{
			winget uninstall "Webp Image Extensions"
			Write-Host "Removing Webp Image Extensions"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftPhotos
		{
			winget uninstall "Microsoft Photos"
			Write-Host "Removing Microsoft Photos"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsAlarmsClock
		{
			winget uninstall "Windows Alarms & Clock"
			Write-Host "Removing Windows Alarms & Clock"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsCalculator
		{
			winget uninstall "Windows Calculator"
			Write-Host "Removing Windows Calculator"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsCamera
		{
			winget uninstall "Windows Camera"
			Write-Host "Removing Windows Camera"
		}
		
		# Remove Microsoft App (Read Function name)
		Function FeedbackHub
		{
			winget uninstall "Feedback Hub"
			Write-Host "Removing Feedback Hub"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsMaps
		{
			winget uninstall "Windows Maps"
			Write-Host "Removing Windows Maps"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsNotepad
		{
			winget uninstall "Windows Notepad"
			Write-Host "Removing Windows Notepad"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsVoiceRecorder
		{
			winget uninstall "Windows Voice Recorder"
			Write-Host "Removing Windows Voice Recorder"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxTCUI
		{
			winget uninstall "Xbox TCUI"
			Write-Host "Removing Xbox TCUI"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxGameBarPlugin
		{
			winget uninstall "Xbox Game Bar Plugin"
			Write-Host "Removing Xbox Game Bar Plugin"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxGameBar
		{
			winget uninstall "Xbox Game Bar"
			Write-Host "Removing Xbox Game Bar"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxIdentityProvider
		{
			winget uninstall "Xbox Identity Provider"
			Write-Host "Removing Xbox Identity Provider"
		}
		
		# Remove Microsoft App (Read Function name)
		Function XboxGameSpeechWindow
		{
			winget uninstall "Xbox Game Speech Window"
			Write-Host "Removing Xbox Game Speech Window"
		}
		
		# Remove Microsoft App (Read Function name)
		Function YourPhone
		{
			winget uninstall "Your Phone"
			Write-Host "Removing Your Phone"
		}
		
		# Remove Microsoft App (Read Function name)
		Function GrooveMusic
		{
			winget uninstall "Groove Music"
			Write-Host "Removing Groove Music"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MoviesTV
		{
			winget uninstall "Movies & TV"
			Write-Host "Removing Movies & TV"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftTeams
		{
			winget uninstall "Microsoft Teams"
			Write-Host "Removing Microsoft Teams"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsWebExperiencePack
		{
			winget uninstall "Windows Web Experience Pack"
			Write-Host "Removing Windows Web Experience Pack"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MailCalendar
		{
			winget uninstall "Mail and Calendar"
			Write-Host "Removing Mail and Calendar"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftStore
		{
			winget uninstall "Microsoft Store"
			Write-Host "Removing Microsoft Store"
		}
		
		# Remove Microsoft App (Read Function name)
		Function WindowsTerminal
		{
			winget uninstall "Windows Terminal"
			Write-Host "Removing Windows Terminal"
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftBingNews
		{
			Get-AppxPackage -Name Microsoft.BingNews | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.BingNews | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.BingNews."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftGetHelp
		{
			Get-AppxPackage -Name Microsoft.GetHelp | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.GetHelp | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.GetHelp."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftGetstarted
		{
			Get-AppxPackage -Name Microsoft.Getstarted | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Getstarted | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Getstarted."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMessaging
		{
			Get-AppxPackage -Name Microsoft.Messaging"| Remove-AppxPackage
    Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Messaging" | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Messaging."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMicrosoft3DViewer
		{
			Get-AppxPackage -Name Microsoft.Microsoft3DViewer | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Microsoft3DViewer | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Microsoft3DViewer."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMicrosoftSolitaireCollection
		{
			Get-AppxPackage -Name Microsoft.MicrosoftSolitaireCollection | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.MicrosoftSolitaireCollection | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.MicrosoftSolitaireCollection."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftNetworkSpeedTest
		{
			Get-AppxPackage -Name Microsoft.NetworkSpeedTest | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.NetworkSpeedTest | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.NetworkSpeedTest."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftNews
		{
			Get-AppxPackage -Name Microsoft.News | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.News | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.News."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftOfficeLens
		{
			Get-AppxPackage -Name Microsoft.Office.Lens | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Office.Lens | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Office.Lens."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftOfficeSway
		{
			Get-AppxPackage -Name Microsoft.Office.Sway | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Office.Sway | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Office.Sway."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftOneConnect
		{
			Get-AppxPackage -Name Microsoft.OneConnect | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.OneConnect | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.OneConnect."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftPrint3D
		{
			Get-AppxPackage -Name Microsoft.Print3D | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Print3D | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Print3D."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftSkypeApp
		{
			Get-AppxPackage -Name Microsoft.SkypeApp | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.SkypeApp | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.SkypeApp."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftStorePurchaseApp
		{
			Get-AppxPackage -Name Microsoft.StorePurchaseApp | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.StorePurchaseApp | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.StorePurchaseApp."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWhiteboard
		{
			Get-AppxPackage -Name Microsoft.Whiteboard | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Whiteboard | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.Whiteboard."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsAlarms
		{
			Get-AppxPackage -Name Microsoft.WindowsAlarms | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsAlarms | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.WindowsAlarms."
		}
		
		# Remove Microsoft App (Read Function name)
		Function microsoftwindowscommunicationsapps
		{
			Get-AppxPackage -Name microsoft.windowscommunicationsapps | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like microsoft.windowscommunicationsapps | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing microsoft.windowscommunicationsapps."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsFeedbackHub
		{
			Get-AppxPackage -Name Microsoft.WindowsFeedbackHub | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsFeedbackHub | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.WindowsFeedbackHub."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsMaps
		{
			Get-AppxPackage -Name Microsoft.WindowsMaps | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsMaps | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.WindowsMaps."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsSoundRecorder
		{
			Get-AppxPackage -Name Microsoft.WindowsSoundRecorder | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsSoundRecorder | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.WindowsSoundRecorder."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftZuneMusic
		{
			Get-AppxPackage -Name Microsoft.ZuneMusic | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.ZuneMusic | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.ZuneMusic."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftZuneVideo
		{
			Get-AppxPackage -Name Microsoft.ZuneVideo | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.ZuneVideo | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing Microsoft.ZuneVideo."
		}
		
		# Remove Microsoft App (Read Function name)
		Function EclipseManager
		{
			Get-AppxPackage -Name *EclipseManager* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *EclipseManager* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *EclipseManager*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function ActiproSoftwareLLC
		{
			Get-AppxPackage -Name *ActiproSoftwareLLC* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *ActiproSoftwareLLC* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *ActiproSoftwareLLC*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function AdobeSystemsIncorporatedAdobePhotoshopExpress
		{
			Get-AppxPackage -Name *AdobeSystemsIncorporated.AdobePhotoshopExpress* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *AdobeSystemsIncorporated.AdobePhotoshopExpress* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *AdobeSystemsIncorporated.AdobePhotoshopExpress*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Duolingo_LearnLanguagesforFree
		{
			Get-AppxPackage -Name *Duolingo-LearnLanguagesforFree* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Duolingo-LearnLanguagesforFree* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Duolingo-LearnLanguagesforFree*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function PandoraMediaInc
		{
			Get-AppxPackage -Name *PandoraMediaInc* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *PandoraMediaInc* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *PandoraMediaInc*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function CandyCrush
		{
			Get-AppxPackage -Name *CandyCrush* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *CandyCrush* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *CandyCrush*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function BubbleWitch3Saga
		{
			Get-AppxPackage -Name *BubbleWitch3Saga* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *BubbleWitch3Saga* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *BubbleWitch3Saga*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Wunderlist
		{
			Get-AppxPackage -Name *Wunderlist* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Wunderlist* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Wunderlist*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Flipboard
		{
			Get-AppxPackage -Name *Flipboard* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Flipboard* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Flipboard*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Twitter
		{
			Get-AppxPackage -Name *Twitter* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Twitter* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Twitter*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Facebook
		{
			Get-AppxPackage -Name *Facebook* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Facebook* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Facebook*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Spotify
		{
			Get-AppxPackage -Name *Spotify* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Spotify* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Spotify*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function RoyalRevolt
		{
			Get-AppxPackage -Name *RoyalRevolt* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *RoyalRevolt* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *RoyalRevolt*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Sway
		{
			Get-AppxPackage -Name *Sway* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Sway* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Sway*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function SpeedTest
		{
			Get-AppxPackage -Name *SpeedTest* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *SpeedTest* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *SpeedTest*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function Dolby
		{
			Get-AppxPackage -Name *Dolby* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Dolby* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Dolby*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftAdvertisingXaml_10171250_x64__8wekyb3d8bbwe
		{
			Get-AppxPackage -Name *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftAdvertisingXaml_10171250_x86__8wekyb3d8bbwe
		{
			Get-AppxPackage -Name *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftBingWeather
		{
			Get-AppxPackage -Name *Microsoft.BingWeather* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.BingWeather* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.BingWeather*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMSPaint
		{
			Get-AppxPackage -Name *Microsoft.MSPaint* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.MSPaint* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.MSPaint*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftMicrosoftStickyNotes
		{
			Get-AppxPackage -Name *Microsoft.MicrosoftStickyNotes* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.MicrosoftStickyNotes* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.MicrosoftStickyNotes*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsPhotos
		{
			Get-AppxPackage -Name *Microsoft.Windows.Photos* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Windows.Photos* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.Windows.Photos*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsCalculator
		{
			Get-AppxPackage -Name *Microsoft.WindowsCalculator* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.WindowsCalculator* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.WindowsCalculator*."
		}
		
		# Remove Microsoft App (Read Function name)
		Function MicrosoftWindowsStore
		{
			Get-AppxPackage -Name *Microsoft.WindowsStore* | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.WindowsStore* | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing *Microsoft.WindowsStore*."
		}
		Write-Host "Unistalling Edge..."
		winget uninstall "Microsoft Edge"
		winget uninstall "Microsoft Edge Update"
		winget uninstall "Microsoft Edge WebView2 Runtime"
		winget uninstall "Xbox Game Bar"
		[String] $ProgramX86 = "$env:SystemDrive\Program Files (x86)"
		[String] $edgepath = "$ProgramX86\Microsoft\Edge\Application\*.*.*.*\Installer"
		[String] $arguments = "--uninstall --system-level --verbose-logging --force-uninstall"
		Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -Wait
		Disable-ScheduledTask -TaskName "\MicrosoftEdgeUpdateTaskMachineUA"
		Disable-ScheduledTask -TaskName "\MicrosoftEdgeUpdateTaskMachineCore"
		$Edgeservices = @("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService")
		$Edgeservices | ForEach-Object {
			Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue
			Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue
			if (Test-Path "$ProgramX86\Microsoft\Edge\Application")
			{
				Write-Host "Uninstalling " -NoNewline
				Write-Host "Microsoft Edge" -ForegroundColor Cyan
				Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -WindowStyle Hidden -Wait
				"\MicrosoftEdgeUpdateTaskMachineUA", "\MicrosoftEdgeUpdateTaskMachineCore" | ForEach-Object {
					Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue 
				}
				@("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService") | ForEach-Object {
					Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue 
					Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue 
				}
				Write-Host "Clearing " -NoNewline
				Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
				Write-Host " registry keys!"
				[Array]$RegistryPaths = @(
					"HKCU:\SOFTWARE\Microsoft\Edge", "HKCU:\SOFTWARE\Microsoft\EdgeUpdate", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate"
				)
				Foreach ($Path in $RegistryPaths)
				{
					Remove-Item -Path $Path -Force -Recurse -ErrorAction SilentlyContinue 
				}
				Write-Host "Removing " -NoNewline
				Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
				Write-Host " files!"
				
				Get-ChildItem -Path "$ProgramX86\Microsoft\Edge" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue 
				}
				Get-ChildItem -Path "$ProgramX86\Microsoft\EdgeUpdate" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue 
				}
				Get-ChildItem -Path "$ProgramX86\Microsoft\Temp" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue 
				}
				
				#Remove Edge Services
				if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
				{
					Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -ErrorAction SilentlyContinue -Force 
				}
				if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
				{
					Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -ErrorAction SilentlyContinue -Force 
				}
				New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
				Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
				Write-Host "has been removed"
			}
		}
		Write-Host "Clearing " -NoNewline
		Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
		Write-Host "registry keys!"
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft" -Name "DoNotUpdateToEdgeWithChromium" -Type DWord -Value 1
		if (Test-Path "HKCU:\SOFTWARE\Microsoft\Edge")
		{
			Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\Edge" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKCU:\SOFTWARE\Microsoft\EdgeUpdate")
		{
			Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\EdgeUpdate" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge")
		{
			Remove-Item -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate")
		{
			Remove-Item -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (!(Test-Path "HKCR:\"))
		{
			New-PSDrive -PSProvider Registry -Root HKEY_CLASSES_ROOT -Name HKCR
		}
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*MicrosoftEdge*" -Force
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*microsoft-edge*" -Force
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*edge*" -Force
		$edgechilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\Edge"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		$edgeupdatechilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\EdgeUpdate"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		$edgetempchilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\Temp"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		#Remove Edge Services
		if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
		{
			Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -Force
		}
		if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
		{
			Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -Force
		}
		New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
		
		
		taskkill /F /IM browser_broker.exe
		taskkill /F /IM RuntimeBroker.exe
		taskkill /F /IM MicrosoftEdge.exe
		taskkill /F /IM MicrosoftEdgeCP.exe
		taskkill /F /IM MicrosoftEdgeSH.exe
		
		cmd /c 'reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\MicrosoftEdge.exe" /v Debugger /t REG_SZ /d "%windir%\System32\taskkill.exe" /f'
		Get-WindowsPackage -Online | Where-Object PackageName -like *InternetExplorer* | Remove-WindowsPackage -Online -NoRestart
		if (Test-Path "$ProgramX86\Microsoft\Edge\Application")
		{
	
			Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -WindowStyle Hidden -Wait
			"\MicrosoftEdgeUpdateTaskMachineUA", "\MicrosoftEdgeUpdateTaskMachineCore" | ForEach-Object {
				Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue
			}
			@("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService") | ForEach-Object {
				Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue
				Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue
			}
			Write-Host "Clearing " -NoNewline
			Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
			Write-Host " registry keys!"
			[Array]$RegistryPaths = @(
				"HKCU:\SOFTWARE\Microsoft\Edge", "HKCU:\SOFTWARE\Microsoft\EdgeUpdate", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate"
			)
			Foreach ($Path in $RegistryPaths)
			{
				Remove-Item -Path $Path -Force -Recurse -ErrorAction SilentlyContinue
			}
			Write-Host "Removing " -NoNewline
			Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
			Write-Host " files!"
			
			Get-ChildItem -Path "$ProgramX86\Microsoft\Edge" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			Get-ChildItem -Path "$ProgramX86\Microsoft\EdgeUpdate" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			Get-ChildItem -Path "$ProgramX86\Microsoft\Temp" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			
			#Remove Edge Services
			if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
			{
				Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -ErrorAction SilentlyContinue -Force
			}
			if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
			{
				Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -ErrorAction SilentlyContinue -Force
			}
			New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
			Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
			Write-Host "has been removed"
		}
		else
		{
			Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
			Write-Host "is not even installed?"
			
		}
		
		$Bloatware = @(
			#Unnecessary Windows 10 AppX Apps
			"Microsoft.3DBuilder"
			"Microsoft.Microsoft3DViewer"
			"Microsoft.AppConnector"
			"Microsoft.BingFinance"
			"Microsoft.BingNews"
			"Microsoft.BingSports"
			"Microsoft.BingTranslator"
			"Microsoft.3DBuilder" # 3D Builder
			"Microsoft.Appconnector"
			"Microsoft.BingFinance" # Finance
			"Microsoft.BingFoodAndDrink" # Food And Drink
			"Microsoft.BingHealthAndFitness" # Health And Fitness
			"Microsoft.BingNews" # News
			"2FE3CB00.PicsArt-PhotoStudio"
			"46928bounde.EclipseManager"
			"Microsoft.BingFoodAndDrink"
			"Microsoft.BingHealthAndFitness"
			"Microsoft.BingTravel"
			"Microsoft.WindowsReadingList"
			
			# Redstone 5 apps
			"Microsoft.MixedReality.Portal"
			"Microsoft.ScreenSketch"
			"Microsoft.XboxGamingOverlay"
			"Microsoft.YourPhone"
			
			# non-Microsoft
			"2FE3CB00.PicsArt-PhotoStudio"
			"46928bounde.EclipseManager"
			"4DF9E0F8.Netflix"
			"613EBCEA.PolarrPhotoEditorAcademicEdition"
			"6Wunderkinder.Wunderlist"
			"7EE7776C.LinkedInforWindows"
			"89006A2E.AutodeskSketchBook"
			"9E2F88E3.Twitter"
			"A278AB0D.DisneyMagicKingdoms"
			"A278AB0D.MarchofEmpires"
			"ActiproSoftwareLLC.562882FEEB491" # next one is for the Code Writer from Actipro Software LLC
			"CAF9E577.Plex"
			"ClearChannelRadioDigital.iHeartRadio"
			"D52A8D61.FarmVille2CountryEscape"
			"D5EA27B7.Duolingo-LearnLanguagesforFree"
			"DB6EA5DB.CyberLinkMediaSuiteEssentials"
			"DolbyLaboratories.DolbyAccess"
			"DolbyLaboratories.DolbyAccess"
			"Drawboard.DrawboardPDF"
			"Facebook.Facebook"
			"Fitbit.FitbitCoach"
			"Flipboard.Flipboard"
			"GAMELOFTSA.Asphalt8Airborne"
			"KeeperSecurityInc.Keeper"
			"NORDCURRENT.COOKINGFEVER"
			"PandoraMediaInc.29680B314EFC2"
			"Playtika.CaesarsSlotsFreeCasino"
			"ShazamEntertainmentLtd.Shazam"
			"SlingTVLLC.SlingTV"
			"SpotifyAB.SpotifyMusic"
			"TheNewYorkTimes.NYTCrossword"
			"ThumbmunkeysLtd.PhototasticCollage"
			"TuneIn.TuneInRadio"
			"WinZipComputing.WinZipUniversal"
			"XINGAG.XING"
			"flaregamesGmbH.RoyalRevolt2"
			"king.com.*"
			"king.com.BubbleWitch3Saga"
			"king.com.CandyCrushSaga"
			"king.com.CandyCrushSodaSaga"
			"4DF9E0F8.Netflix"
			"613EBCEA.PolarrPhotoEditorAcademicEdition"
			"6Wunderkinder.Wunderlist"
			"7EE7776C.LinkedInforWindows"
			"89006A2E.AutodeskSketchBook"
			"9E2F88E3.Twitter"
			"A278AB0D.DisneyMagicKingdoms"
			"A278AB0D.MarchofEmpires"
			"ActiproSoftwareLLC.562882FEEB491" # next one is for the Code Writer from Actipro Software LLC
			"CAF9E577.Plex"
			"ClearChannelRadioDigital.iHeartRadio"
			"D52A8D61.FarmVille2CountryEscape"
			"D5EA27B7.Duolingo-LearnLanguagesforFree"
			"DB6EA5DB.CyberLinkMediaSuiteEssentials"
			"DolbyLaboratories.DolbyAccess"
			"DolbyLaboratories.DolbyAccess"
			"Drawboard.DrawboardPDF"
			"Facebook.Facebook"
			"Fitbit.FitbitCoach"
			"Flipboard.Flipboard"
			"GAMELOFTSA.Asphalt8Airborne"
			"KeeperSecurityInc.Keeper"
			"NORDCURRENT.COOKINGFEVER"
			"PandoraMediaInc.29680B314EFC2"
			"Playtika.CaesarsSlotsFreeCasino"
			"ShazamEntertainmentLtd.Shazam"
			"SlingTVLLC.SlingTV"
			"SpotifyAB.SpotifyMusic"
			"TheNewYorkTimes.NYTCrossword"
			"ThumbmunkeysLtd.PhototasticCollage"
			"TuneIn.TuneInRadio"
			"WinZipComputing.WinZipUniversal"
			"XINGAG.XING"
			"flaregamesGmbH.RoyalRevolt2"
			"king.com.*"
			"king.com.BubbleWitch3Saga"
			"king.com.CandyCrushSaga"
			"king.com.CandyCrushSodaSaga"
			"Microsoft.BingSports" # Sports
			"Microsoft.BingTranslator" # Translator
			"Microsoft.BingTravel" # Travel
			"Microsoft.BingWeather" # Weather
			"Microsoft.CommsPhone"
			"Microsoft.ConnectivityStore"
			"Microsoft.GamingServices"
			"Microsoft.GetHelp"
			"Microsoft.Getstarted"
			"Microsoft.Messaging"
			"Microsoft.Microsoft3DViewer"
			"Microsoft.MicrosoftOfficeHub"
			"Microsoft.MicrosoftPowerBIForWindows"
			"Microsoft.MicrosoftSolitaireCollection" # MS Solitaire
			"Microsoft.MixedReality.Portal"
			"Microsoft.NetworkSpeedTest"
			"Microsoft.Office.OneNote" # MS Office One Note
			"Microsoft.Office.Sway"
			"Microsoft.OneConnect"
			"Microsoft.People" # People
			"Microsoft.MSPaint" # Paint 3D (Where every artist truly start as a kid, i mean, on original Paint, not this 3D)
			"Microsoft.Print3D" # Print 3D
			"Microsoft.SkypeApp" # Skype (Who still uses Skype? Use Discord)
			"Microsoft.Todos" # Microsoft To Do
			"Microsoft.Wallet"
			"Microsoft.Whiteboard" # Microsoft Whiteboard
			"Microsoft.WindowsAlarms" # Alarms
			"microsoft.windowscommunicationsapps"
			"Microsoft.WindowsMaps" # Maps
			"Microsoft.WindowsPhone"
			"Microsoft.WindowsReadingList"
			"Microsoft.WindowsSoundRecorder"
			"Microsoft.XboxApp" # Xbox Console Companion (Replaced by new App)
			"Microsoft.XboxGameCallableUI"
			"Microsoft.XboxGameOverlay"
			"Microsoft.XboxSpeechToTextOverlay"
			"Microsoft.YourPhone" # Your Phone
			"Microsoft.ZuneMusic"
			"Microsoft.ZuneVideo" # Movies & TV
			
			# Default Windows 11 apps
			"MicrosoftWindows.Client.WebExperience" # Taskbar Widgets
			"MicrosoftTeams" # Microsoft Teams / Preview
			
			# 3rd party Apps
			"*ACGMediaPlayer*"
			"*ActiproSoftwareLLC*"
			"*AdobePhotoshopExpress*" # Adobe Photoshop Express
			"*Asphalt8Airborne*" # Asphalt 8 Airbone
			"*AutodeskSketchBook*"
			"*BubbleWitch3Saga*" # Bubble Witch 3 Saga
			"*CaesarsSlotsFreeCasino*"
			"*CandyCrush*" # Candy Crush
			"*COOKINGFEVER*"
			"*CyberLinkMediaSuiteEssentials*"
			"*DisneyMagicKingdoms*"
			"*Dolby*" # Dolby Products (Like Atmos)
			"*DrawboardPDF*"
			"*Duolingo-LearnLanguagesforFree*" # Duolingo
			"*EclipseManager*"
			"*Facebook*" # Facebook
			"*FarmVille2CountryEscape*"
			"*FitbitCoach*"
			"*Flipboard*" # Flipboard
			"*HiddenCity*"
			"*Hulu*"
			"*iHeartRadio*"
			"*Keeper*"
			"*LinkedInforWindows*"
			"*MarchofEmpires*"
			"*NYTCrossword*"
			"*OneCalendar*"
			"*PandoraMediaInc*"
			"*PhototasticCollage*"
			"*PicsArt-PhotoStudio*"
			"*Plex*" # Plex
			"*PolarrPhotoEditorAcademicEdition*"
			"*RoyalRevolt*" # Royal Revolt
			"*Shazam*"
			"*SlingTV*"
			"*Speed Test*"
			"*Sway*"
			"*TuneInRadio*"
			"*Twitter*" # Twitter
			"*Viber*"
			"*WinZipUniversal*"
			"*Wunderlist*"
			"*XING*"
			"Microsoft.BingWeather"
			"Microsoft.BingFoodAndDrink"
			"Microsoft.BingHealthAndFitness"
			"Microsoft.BingTravel"
			"Microsoft.MinecraftUWP"
			"Microsoft.GamingServices"
			# "Microsoft.WindowsReadingList"
			"Microsoft.GetHelp"
			"Microsoft.Getstarted"
			"Microsoft.Messaging"
			"Microsoft.Advertising.Xaml"
			"Microsoft.FreshPaint" # Paint
			"Microsoft.MicrosoftEdge" # Microsoft Edge
			"Microsoft.MicrosoftStickyNotes" # Sticky Notes
			"Microsoft.WindowsCalculator" # Calculator
			"Microsoft.WindowsCamera" # Camera
			"Microsoft.ScreenSketch" # Snip and Sketch (now called Snipping tool, replaces the Win32 version in clean installs)
			"Microsoft.WindowsFeedbackHub" # Feedback Hub
			"Microsoft.Windows.Photos" # Ph
			"Microsoft.XboxGamingOverlay" # Xbox Game Bar
			"Microsoft.XboxIdentityProvider" # Xbox Identity Provider (Xbox Dependency)
			"Microsoft.Xbox.TCUI" # Xbox Live API communication (Xbox Dependency)
			"*Netflix*" # Netflix
			"*SpotifyMusic*" # Spotify
			"Microsoft.WindowsStore" # Windows Store
			# Apps which cannot be removed using Remove-AppxPackage
			"Microsoft.BioEnrollment"
			"Microsoft.Windows.Cortana" # Cortana
			"Microsoft.WindowsFeedback" # Feedback Module
			"Windows.ContactSupport"
			"Microsoft.Microsoft3DViewer"
			"Microsoft.MicrosoftSolitaireCollection"
			"Microsoft.NetworkSpeedTest"
			"Microsoft.News"
			"Microsoft.Office.Lens"
			"Microsoft.Office.Sway"
			"Microsoft.Office.OneNote"
			"Microsoft.OneConnect"
			"Microsoft.People"
			"Microsoft.BingNews"
			"Microsoft.BingWeather"
			"Microsoft.GetHelp"
			"Microsoft.Getstarted"
			"Microsoft.MicrosoftOfficeHub"
			"Microsoft.MicrosoftSolitaireCollection"
			"Microsoft.MicrosoftStickyNotes"
			"Microsoft.People"
			"Microsoft.Todos"
			"Microsoft.Windows.Photos"
			"Microsoft.WindowsAlarms"
			"Microsoft.WindowsCamera"
			"microsoft.windowscommunicationsapps"
			"Microsoft.WindowsFeedbackHub"
			"Microsoft.WindowsMaps"
			"Microsoft.WindowsSoundRecorder"
			"Microsoft.YourPhone"
			"Microsoft.ZuneMusic"
			"Microsoft.ZuneVideo"
			"MicrosoftTeams"
			"Microsoft.Print3D"
			"Microsoft.SkypeApp"
			"Microsoft.Wallet"
			"Microsoft.Whiteboard"
			"Microsoft.WindowsAlarms"
			"microsoft.windowscommunicationsapps"
			"Microsoft.WindowsFeedbackHub"
			"Microsoft.WindowsMaps"
			"Microsoft.WindowsPhone"
			"Microsoft.WindowsSoundRecorder"
			"Microsoft.XboxApp"
			"Microsoft.ConnectivityStore"
			"Microsoft.CommsPhone"
			"Microsoft.ScreenSketch"
			"Microsoft.Xbox.TCUI"
			"Microsoft.XboxGameOverlay"
			"Microsoft.XboxGameCallableUI"
			"Microsoft.XboxSpeechToTextOverlay"
			"Microsoft.MixedReality.Portal"
			"Microsoft.XboxIdentityProvider"
			"Microsoft.ZuneMusic"
			"Microsoft.ZuneVideo"
			"Microsoft.YourPhone"
			"Microsoft.Getstarted"
			"Microsoft.MicrosoftOfficeHub"
			"Microsoft.XboxGameCallableUI"
			"Microsoft.Windows.PeopleExperienceHost"
			"Microsoft.Windows.ParentalControls"
			"Microsoft.Windows.NarratorQuickStart"
			"Microsoft.MicrosoftEdgeDevToolsClient"
			#Sponsored Windows 10 AppX Apps
			#Add sponsored/featured apps to remove in the "*AppName*" format
			"*EclipseManager*"
			"*ActiproSoftwareLLC*"
			"*AdobeSystemsIncorporated.AdobePhotoshopExpress*"
			"*Duolingo-LearnLanguagesforFree*"
			"*PandoraMediaInc*"
			"*CandyCrush*"
			"*BubbleWitch3Saga*"
			"*Wunderlist*"
			"*Flipboard*"
			"*Twitter*"
			"*edge*"
			"*Facebook*"
			"*Royal Revolt*"
			"*Sway*"
			"*Speed Test*"
			"*Dolby*"
			"*Viber*"
			"*ACGMediaPlayer*"
			"*Netflix*"
			"*OneCalendar*"
			"*LinkedInforWindows*"
			"*HiddenCityMysteryofShadows*"
			"*Hulu*"
			"*HiddenCity*"
			"*AdobePhotoshopExpress*"
			"*HotspotShieldFreeVPN*"
			"*Microsoft.Advertising.Xaml*"
			"*Microsoft.MSPaint*"
			"*Microsoft.MicrosoftStickyNotes*"
			"*Microsoft.Windows.Photos*"
			"*Microsoft.WindowsCalculator*"
			"*Microsoft.WindowsStore*"
		)
		Write-Host "Removing Bloatware"
		foreach ($Bloat in $Bloatware)
		{
			Get-AppxPackage -allusers -Name $Bloat | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like $Bloat | Remove-AppxProvisionedPackage -Online
			Write-Host "Removing $Bloat..."
		}
		Get-AppxPackage -AllUsers *maps* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *xbox* | Remove-AppxPackage
		Get-WindowsPackage -Online | Where-Object PackageName -like *Hello-Face* | Remove-WindowsPackage -Online -NoRestart
		Get-AppxPackage -AllUsers *store* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *alarms* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *people* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *calc* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *comm* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *mess* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *camera* | Remove-AppxPackage
		Get-AppxPackage -allusers Microsoft.549981C3F5F10 | Remove-AppxPackage
		Get-AppxPackage -AllUsers *zune* | Remove-AppxPackage
		Get-WindowsPackage -Online | Where-Object PackageName -like *MediaPlayer* | Remove-WindowsPackage -Online -NoRestart
		Get-AppxPackage -AllUsers *zune* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.MicrosoftSolitaireCollection* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.MicrosoftOfficeHub* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.Office.Sway* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.Office.Desktop* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *GetHelp* | Remove-AppxPackage
		Get-AppxPackage *Microsoft.WindowsFeedbackHub* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *sticky* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *maps* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *onenote* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *photo* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *bing* | Remove-AppxPackage
		Get-AppxPackage -AllUsers *soundrec* | Remove-AppxPackage
		Get-WindowsPackage -Online | Where-Object PackageName -like *QuickAssist* | Remove-WindowsPackage -Online -NoRestart
		Get-AppxPackage -AllUsers *phone* | Remove-AppxPackage
		#This function finds any AppX/AppXProvisioned package and uninstalls it, except for Freshpaint, Windows Calculator, Windows Store, and Windows Photos.
		#Also, to note - This does NOT remove essential system services/software/etc such as .NET framework installations, Cortana, Edge, etc.
		
		#This is the switch parameter for running this script as a 'silent' script, for use in MDT images or any type of mass deployment without user interaction.
		
		Function Begin-SysPrep
		{
			
			Write-Host "Starting Sysprep Fixes"
			
			# Disable Windows Store Automatic Updates
			Write-Host "Adding Registry key to Disable Windows Store Automatic Updates"
			$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore"
			If (!(Test-Path $registryPath))
			{
				mkdir $registryPath
				New-ItemProperty $registryPath AutoDownload -Value 2
			}
			Set-ItemProperty $registryPath AutoDownload -Value 2
			
			#Stop WindowsStore Installer Service and set to Disabled
			Write-Host "Stopping InstallService"
			Stop-Service InstallService
			Write-Host "Setting InstallService Startup to Disabled"
			Set-Service InstallService -StartupType Disabled
		}
		
		Function CheckDMWService
		{
			
			Param ([switch]$Debloat)
			
			If (Get-Service dmwappushservice | Where-Object { $_.StartType -eq "Disabled" })
			{
				Set-Service dmwappushservice -StartupType Automatic
			}
			
			If (Get-Service dmwappushservice | Where-Object { $_.Status -eq "Stopped" })
			{
				Start-Service dmwappushservice
			}
		}
		
		Function DebloatAll
		{
			#Removes AppxPackages
			Get-AppxPackage | Where-Object { !($_.Name -cmatch $global:WhiteListedAppsRegex) -and !($NonRemovables -cmatch $_.Name) } | Remove-AppxPackage
			Get-AppxProvisionedPackage -Online | Where-Object { !($_.DisplayName -cmatch $global:WhiteListedAppsRegex) -and !($NonRemovables -cmatch $_.DisplayName) } | Remove-AppxProvisionedPackage -Online
			Get-AppxPackage -AllUsers | Where-Object { !($_.Name -cmatch $global:WhiteListedAppsRegex) -and !($NonRemovables -cmatch $_.Name) } | Remove-AppxPackage
		}
		#Creates a PSDrive to be able to access the 'HKCR' tree
		New-PSDrive -Name HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
		
		Function Remove-Keys
		{
			#These are the registry keys that it will delete.
			
			$Keys = @(
				
				#Remove Background Tasks
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
				
				#Windows File
				"HKCR:\Extensions\ContractId\Windows.File\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
				
				#Registry keys to delete if they aren't uninstalled by RemoveAppXPackage/RemoveAppXProvisionedPackage
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y"
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
				
				#Scheduled Tasks to delete
				"HKCR:\Extensions\ContractId\Windows.PreInstalledConfigTask\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe"
				
				#Windows Protocol Keys
				"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
				"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy"
				"HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy"
				
				#Windows Share Target
				"HKCR:\Extensions\ContractId\Windows.ShareTarget\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0"
			)
			
			#This writes the output of each key it is removing and also removes the keys listed above.
			ForEach ($Key in $Keys)
			{
				Write-Host "Removing $Key from registry"
				Remove-Item $Key -Recurse
			}
		}
		
		Function Protect-Privacy
		{
			
			#Creates a PSDrive to be able to access the 'HKCR' tree
			New-PSDrive -Name HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
			
			#Disables Windows Feedback Experience
			Write-Host "Disabling Windows Feedback Experience program"
			$Advertising = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo'
			If (Test-Path $Advertising)
			{
				Set-ItemProperty $Advertising Enabled -Value 0
			}
			
			#Stops Cortana from being used as part of your Windows Search Function
			Write-Host "Stopping Cortana from being used as part of your Windows Search Function"
			$Search = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search'
			If (Test-Path $Search)
			{
				Set-ItemProperty $Search AllowCortana -Value 0
			}
			
			#Stops the Windows Feedback Experience from sending anonymous data
			Write-Host "Stopping the Windows Feedback Experience program"
			$Period1 = 'HKCU:\Software\Microsoft\Siuf'
			$Period2 = 'HKCU:\Software\Microsoft\Siuf\Rules'
			$Period3 = 'HKCU:\Software\Microsoft\Siuf\Rules\PeriodInNanoSeconds'
			If (!(Test-Path $Period3))
			{
				mkdir $Period1
				mkdir $Period2
				mkdir $Period3
				New-ItemProperty $Period3 PeriodInNanoSeconds -Value 0
			}
			
			Write-Host "Adding Registry key to prevent bloatware apps from returning"
			#Prevents bloatware applications from returning
			$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
			If (!(Test-Path $registryPath))
			{
				mkdir $registryPath
				New-ItemProperty $registryPath DisableWindowsConsumerFeatures -Value 1
			}
			
			Write-Host "Setting Mixed Reality Portal value to 0 so that you can uninstall it in Settings"
			$Holo = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic'
			If (Test-Path $Holo)
			{
				Set-ItemProperty $Holo FirstRunSucceeded -Value 0
			}
			
			#Disables live tiles
			Write-Host "Disabling live tiles"
			$Live = 'HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications'
			If (!(Test-Path $Live))
			{
				mkdir $Live
				New-ItemProperty $Live NoTileApplicationNotification -Value 1
			}
			
			#Turns off Data Collection via the AllowTelemtry key by changing it to 0
			Write-Host "Turning off Data Collection"
			$DataCollection = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection'
			If (Test-Path $DataCollection)
			{
				Set-ItemProperty $DataCollection AllowTelemetry -Value 0
			}
			
			#Disables People icon on Taskbar
			Write-Host "Disabling People icon on Taskbar"
			$People = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People'
			If (Test-Path $People)
			{
				Set-ItemProperty $People PeopleBand -Value 0
			}
			
			#Disables suggestions on start menu
			Write-Host "Disabling suggestions on the Start Menu"
			$Suggestions = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager'
			If (Test-Path $Suggestions)
			{
				Set-ItemProperty $Suggestions SystemPaneSuggestionsEnabled -Value 0
			}
			
			Write-Host "Disabling Bing Search when using Search via the Start Menu"
			$BingSearch = 'HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer'
			If (Test-Path $BingSearch)
			{
				Set-ItemProperty $BingSearch DisableSearchBoxSuggestions -Value 1
			}
			
			Write-Host "Removing CloudStore from registry if it exists"
			$CloudStore = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\CloudStore'
			If (Test-Path $CloudStore)
			{
				Stop-Process Explorer.exe -Force
				Remove-Item $CloudStore -Recurse -Force
				Start-Process Explorer.exe -Wait
			}
			
			
			#Loads the registry keys/values below into the NTUSER.DAT file which prevents the apps from redownloading. Credit to a60wattfish
			reg load HKU\Default_User C:\Users\Default\NTUSER.DAT
			Set-ItemProperty -Path Registry::HKU\Default_User\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name SystemPaneSuggestionsEnabled -Value 0
			Set-ItemProperty -Path Registry::HKU\Default_User\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name PreInstalledAppsEnabled -Value 0
			Set-ItemProperty -Path Registry::HKU\Default_User\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name OemPreInstalledAppsEnabled -Value 0
			reg unload HKU\Default_User
			
			#Disables scheduled tasks that are considered unnecessary 
			Write-Host "Disabling scheduled tasks"
			#Get-ScheduledTask -TaskName XblGameSaveTaskLogon | Disable-ScheduledTask
			Get-ScheduledTask -TaskName XblGameSaveTask | Disable-ScheduledTask
			Get-ScheduledTask -TaskName Consolidator | Disable-ScheduledTask
			Get-ScheduledTask -TaskName UsbCeip | Disable-ScheduledTask
			Get-ScheduledTask -TaskName DmClient | Disable-ScheduledTask
			Get-ScheduledTask -TaskName DmClientOnScenarioDownload | Disable-ScheduledTask
		}
		
		Function UnpinStart
		{
			Write-Host "`nCleaning up the StartMenu Tiles for the default user"
			Set-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -Value '<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  <LayoutOptions StartTileGroupCellWidth="6" />'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  <DefaultLayoutOverride>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    <StartLayoutCollection>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      <defaultlayout:StartLayout GroupCellWidth="6" />'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    </StartLayoutCollection>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '  </DefaultLayoutOverride>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    <CustomTaskbarLayoutCollection>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      <defaultlayout:TaskbarLayout>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '        <taskbar:TaskbarPinList>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '          <taskbar:UWA AppUserModelID="Microsoft.MicrosoftEdge_8wekyb3d8bbwe!MicrosoftEdge" />'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '          <taskbar:DesktopApp DesktopApplicationLinkPath="%APPDATA%\Microsoft\Windows\Start Menu\Programs\System Tools\File Explorer.lnk" />'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '        </taskbar:TaskbarPinList>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '      </defaultlayout:TaskbarLayout>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '    </CustomTaskbarLayoutCollection>'
			Add-Content -Path 'C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\DefaultLayouts.xml' -value '</LayoutModificationTemplate>'
			$START_MENU_LAYOUT = @"
<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns:taskbar="http://schemas.microsoft.com/Start/2014/TaskbarLayout" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">
    <LayoutOptions StartTileGroupCellWidth="6" />
    <DefaultLayoutOverride>
        <StartLayoutCollection>
            <defaultlayout:StartLayout GroupCellWidth="6" />
        </StartLayoutCollection>
    </DefaultLayoutOverride>
</LayoutModificationTemplate>
"@
			$layoutFile = "C:\Windows\StartMenuLayout.xml"
			If (Test-Path $layoutFile)
			{
				Remove-Item $layoutFile
			}
			$START_MENU_LAYOUT | Out-File $layoutFile -Encoding ASCII
			$regAliases = @("HKLM", "HKCU")
			foreach ($regAlias in $regAliases)
			{
				$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
				$keyPath = $basePath + "\Explorer"
				IF (!(Test-Path -Path $keyPath))
				{
					New-Item -Path $basePath -Name "Explorer"
				}
				Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 1
				Set-ItemProperty -Path $keyPath -Name "StartLayoutFile" -Value $layoutFile
			}
			Write-Host "Restart Explorer, open the start menu (necessary to load the new layout), and give it a few seconds to process"
			Stop-Process -name explorer
			Start-Sleep -s 3
			$wshell = New-Object -ComObject wscript.shell; $wshell.SendKeys('^{ESCAPE}')
			Start-Sleep -s 3
			Write-Host "Enabling the ability to pin items again"
			foreach ($regAlias in $regAliases)
			{
				$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
				$keyPath = $basePath + "\Explorer"
				Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 0
			}
			Stop-Process -name explorer
			Import-StartLayout -LayoutPath $layoutFile -MountPath $env:SystemDrive\
			Remove-Item $layoutFile
			# https://superuser.com/a/1442733
			# Requires -RunAsAdministrator
			
			$START_MENU_LAYOUT = @"
<LayoutModificationTemplate xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" Version="1" xmlns:taskbar="http://schemas.microsoft.com/Start/2014/TaskbarLayout" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification">
    <LayoutOptions StartTileGroupCellWidth="6" />
    <DefaultLayoutOverride>
        <StartLayoutCollection>
            <defaultlayout:StartLayout GroupCellWidth="6" />
        </StartLayoutCollection>
    </DefaultLayoutOverride>
</LayoutModificationTemplate>
"@
			
			$layoutFile = "C:\Windows\StartMenuLayout.xml"
			
			#Delete layout file if it already exists
			If (Test-Path $layoutFile)
			{
				Remove-Item $layoutFile
			}
			
			#Creates the blank layout file
			$START_MENU_LAYOUT | Out-File $layoutFile -Encoding ASCII
			
			$regAliases = @("HKLM", "HKCU")
			
			#Assign the start layout and force it to apply with "LockedStartLayout" at both the machine and user level
			foreach ($regAlias in $regAliases)
			{
				$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
				$keyPath = $basePath + "\Explorer"
				IF (!(Test-Path -Path $keyPath))
				{
					New-Item -Path $basePath -Name "Explorer"
				}
				Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 1
				Set-ItemProperty -Path $keyPath -Name "StartLayoutFile" -Value $layoutFile
			}
			
			#Restart Explorer, open the start menu (necessary to load the new layout), and give it a few seconds to process
			Stop-Process -name explorer
			Start-Sleep -s 5
			$wshell = New-Object -ComObject wscript.shell; $wshell.SendKeys('^{ESCAPE}')
			Start-Sleep -s 5
			
			#Enable the ability to pin items again by disabling "LockedStartLayout"
			foreach ($regAlias in $regAliases)
			{
				$basePath = $regAlias + ":\SOFTWARE\Policies\Microsoft\Windows"
				$keyPath = $basePath + "\Explorer"
				Set-ItemProperty -Path $keyPath -Name "LockedStartLayout" -Value 0
			}
			
			#Restart Explorer and delete the layout file
			Stop-Process -name explorer
			
			# Uncomment the next line to make clean start menu default for all new users
			#Import-StartLayout -LayoutPath $layoutFile -MountPath $env:SystemDrive\
			
			Remove-Item $layoutFile
		}
		
		Function CheckInstallService
		{
			
			If (Get-Service InstallService | Where-Object { $_.Status -eq "Stopped" })
			{
				Start-Service InstallService
				Set-Service InstallService -StartupType Automatic
			}
		}
		
		Write-Host "Initiating Sysprep"
		Begin-SysPrep
		Write-Host "Removing bloatware apps."
		DebloatAll
		Write-Host "Removing leftover bloatware registry keys."
		Remove-Keys
		Write-Host "Checking to see if any Allowlisted Apps were removed, and if so re-adding them."
		FixWhitelistedApps
		Write-Host "Stopping telemetry, disabling unneccessary scheduled tasks, and preventing bloatware from returning."
		Protect-Privacy
		Write-Host "Unpinning tiles from the Start Menu."
		UnpinStart
		Write-Host "Setting the 'InstallService' Windows service back to 'Started' and the Startup Type 'Automatic'."
		CheckDMWService
		CheckInstallService
		Write-Host "Finished all tasks."
		Get-AppxPackage -Name $Bloat | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like $Bloat | Remove-AppxProvisionedPackage -Online
		Write-Host "Disabling Microsoft Store and WSAPPX Service..."
		$errpref = $ErrorActionPreference #save actual preference
		$ErrorActionPreference = "silentlycontinue"
		Get-AppxPackage "Microsoft.DesktopAppInstallinger" | Remove-AppxPackage -ErrorAction SilentlyContinue
		Get-AppxPackage "Microsoft.WindowsStore" | Remove-AppxPackage -ErrorAction SilentlyContinue
		New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -Force
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -Name "DisableStoreApps" -Type DWord -Value 1 -ErrorAction SilentlyContinue
		Set-ItemProperty -Path "HKLM:\SYSTEM\ControlSet001\Services\AppXSvc" -Name "Start" -Type DWord -Value 4 -ErrorAction SilentlyContinue
		$ErrorActionPreference = $errpref #restore previous preference
		Write-Host "Uninstalling default Microsoft applications..."
		Get-AppxPackage -allusers | Remove-AppxPackage
		Get-AppxPackage "Microsoft.3DBuilder" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.AppConnector" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingFinance" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingNews" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingSports" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingTranslator" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.BingWeather" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.CommsPhone" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.ConnectivityStore" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.GetHelp" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Getstarted" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Messaging" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Microsoft3DViewer" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.MicrosoftPowerBIForWindows" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.MicrosoftSolitaireCollection" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.MicrosoftStickyNotes" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.NetworkSpeedTest" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Office.OneNote" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Office.Sway" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.OneConnect" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.People" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Print3D" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.RemoteDesktop" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Wallet" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsAlarms" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsCamera" | Remove-AppxPackage
		Get-AppxPackage "microsoft.windowscommunicationsapps" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsFeedbackHub" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsMaps" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsPhone" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.Windows.Photos" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsSoundRecorder" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.ZuneMusic" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.ZuneVideo" | Remove-AppxPackage
		Write-Host "Uninstalling default third party applications..."
		Get-AppxPackage "2414FC7A.Viber" | Remove-AppxPackage
		Get-AppxPackage "41038Axilesoft.ACGMediaPlayer" | Remove-AppxPackage
		Get-AppxPackage "46928bounde.EclipseManager" | Remove-AppxPackage
		Get-AppxPackage "4DF9E0F8.Netflix" | Remove-AppxPackage
		Get-AppxPackage "64885BlueEdge.OneCalendar" | Remove-AppxPackage
		Get-AppxPackage "7EE7776C.LinkedInforWindows" | Remove-AppxPackage
		Get-AppxPackage "828B5831.HiddenCityMysteryofShadows" | Remove-AppxPackage
		Get-AppxPackage "89006A2E.AutodeskSketchBook" | Remove-AppxPackage
		Get-AppxPackage "9E2F88E3.Twitter" | Remove-AppxPackage
		Get-AppxPackage "A278AB0D.DisneyMagicKingdoms" | Remove-AppxPackage
		Get-AppxPackage "A278AB0D.MarchofEmpires" | Remove-AppxPackage
		Get-AppxPackage "ActiproSoftwareLLC.562882FEEB491" | Remove-AppxPackage
		Get-AppxPackage "AdobeSystemsIncorporated.AdobePhotoshopExpress" | Remove-AppxPackage
		Get-AppxPackage "CAF9E577.Plex" | Remove-AppxPackage
		Get-AppxPackage "D52A8D61.FarmVille2CountryEscape" | Remove-AppxPackage
		Get-AppxPackage "D5EA27B7.Duolingo-LearnLanguagesforFree" | Remove-AppxPackage
		Get-AppxPackage "DB6EA5DB.CyberLinkMediaSuiteEssentials" | Remove-AppxPackage
		Get-AppxPackage "DolbyLaboratories.DolbyAccess" | Remove-AppxPackage
		Get-AppxPackage "Drawboard.DrawboardPDF" | Remove-AppxPackage
		Get-AppxPackage "Facebook.Facebook" | Remove-AppxPackage
		Get-AppxPackage "flaregamesGmbH.RoyalRevolt2" | Remove-AppxPackage
		Get-AppxPackage "GAMELOFTSA.Asphalt8Airborne" | Remove-AppxPackage
		Get-AppxPackage "KeeperSecurityInc.Keeper" | Remove-AppxPackage
		Get-AppxPackage "king.com.BubbleWitch3Saga" | Remove-AppxPackage
		Get-AppxPackage "king.com.CandyCrushSodaSaga" | Remove-AppxPackage
		Get-AppxPackage "PandoraMediaInc.29680B314EFC2" | Remove-AppxPackage
		Get-AppxPackage "SpotifyAB.SpotifyMusic" | Remove-AppxPackage
		Get-AppxPackage "WinZipComputing.WinZipUniversal" | Remove-AppxPackage
		Get-AppxPackage "XINGAG.XING" | Remove-AppxPackage
		Write-Host "Uninstalling Windows Store..."
		Get-AppxPackage "Microsoft.DesktopAppInstaller" | Remove-AppxPackage
		Get-AppxPackage "Microsoft.WindowsStore" | Remove-AppxPackage
		Write-Host "Disabling built-in Adobe Flash in IE and Edge..."
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer" -Name "DisableFlashInIE" -Type DWord -Value 1
		If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Addons"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Addons" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Addons" -Name "FlashPlayerEnabled" -Type DWord -Value 0
		Write-Host "Uninstalling Windows Media Player..."
		Disable-WindowsOptionalFeature -Online -FeatureName "WindowsMediaPlayer" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Uninstalling Internet Explorer..."
		Disable-WindowsOptionalFeature -Online -FeatureName "Internet-Explorer-Optional-$env:PROCESSOR_ARCHITECTURE" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Uninstalling Work Folders Client..."
		Disable-WindowsOptionalFeature -Online -FeatureName "WorkFolders-Client" -NoRestart -WarningAction SilentlyContinue
		Write-Host "Uninstalling Linux Subsystem..."
		If ([System.Environment]::OSVersion.Version.Build -eq 14393)
		{
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name "AllowDevelopmentWithoutDevLicense" -Type DWord -Value 0
			Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name "AllowAllTrustedApps" -Type DWord -Value 0
		}
		Disable-WindowsOptionalFeature -Online -FeatureName "Microsoft-Windows-Subsystem-Linux" -NoRestart -WarningAction SilentlyContinue
		Write-Host "UnInstalling Hyper-V..."
		If ((Get-WmiObject -Class "Win32_OperatingSystem").Caption -like "*Server*")
		{
			Disable-WindowsOptionalFeature -Name "Hyper-V" -IncludeManagementTools -WarningAction SilentlyContinue
		}
		Else
		{
			Disable-WindowsOptionalFeature -Online -FeatureName "Microsoft-Hyper-V-All" -NoRestart -WarningAction SilentlyContinue
		}
		$WhitelistedApps = 'Microsoft.ScreenSketch|Microsoft.Paint3D|Microsoft.WindowsCalculator|Microsoft.WindowsStore|Microsoft.Windows.Photos|CanonicalGroupLimited.UbuntuonWindows|`
    Microsoft.XboxGameCallableUI|Microsoft.XboxGamingOverlay|Microsoft.Xbox.TCUI|Microsoft.XboxGamingOverlay|Microsoft.XboxIdentityProvider|Microsoft.MicrosoftStickyNotes|Microsoft.MSPaint|Microsoft.WindowsCamera|.NET|Framework|`
    Microsoft.HEIFImageExtension|Microsoft.ScreenSketch|Microsoft.StorePurchaseApp|Microsoft.VP9VideoExtensions|Microsoft.WebMediaExtensions|Microsoft.WebpImageExtension|Microsoft.DesktopAppInstaller|WindSynthBerry|MIDIBerry|Slack'
		#NonRemovable Apps that where getting attempted and the system would reject the uninstall, speeds up debloat and prevents 'initalizing' overlay when removing apps
		$NonRemovable = '1527c705-839a-4832-9118-54d4Bd6a0c89|c5e2524a-ea46-4f67-841f-6a9465d9d515|E2A4F912-2574-4A75-9BB0-0D023378592B|F46D4000-FD22-4DB4-AC8E-4E1DDDE828FE|InputApp|Microsoft.AAD.BrokerPlugin|Microsoft.AccountsControl|`
    Microsoft.BioEnrollment|Microsoft.CredDialogHost|Microsoft.ECApp|Microsoft.LockApp|Microsoft.MicrosoftEdgeDevToolsClient|Microsoft.MicrosoftEdge|Microsoft.PPIProjection|Microsoft.Win32WebViewHost|Microsoft.Windows.Apprep.ChxApp|`
    Microsoft.Windows.AssignedAccessLockApp|Microsoft.Windows.CapturePicker|Microsoft.Windows.CloudExperienceHost|Microsoft.Windows.ContentDeliveryManager|Microsoft.Windows.Cortana|Microsoft.Windows.NarratorQuickStart|`
    Microsoft.Windows.ParentalControls|Microsoft.Windows.PeopleExperienceHost|Microsoft.Windows.PinningConfirmationDialog|Microsoft.Windows.SecHealthUI|Microsoft.Windows.SecureAssessmentBrowser|Microsoft.Windows.ShellExperienceHost|`
    Microsoft.Windows.XGpuEjectDialog|Microsoft.XboxGameCallableUI|Windows.CBSPreview|windows.immersivecontrolpanel|Windows.PrintDialog|Microsoft.VCLibs.140.00|Microsoft.Services.Store.Engagement|Microsoft.UI.Xaml.2.0|*Nvidia*'
		Get-AppxPackage -AllUsers | Where-Object { $_.Name -NotMatch $WhitelistedApps -and $_.Name -NotMatch $NonRemovable } | Remove-AppxPackage
		Get-AppxPackage | Where-Object { $_.Name -NotMatch $WhitelistedApps -and $_.Name -NotMatch $NonRemovable } | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object { $_.PackageName -NotMatch $WhitelistedApps -and $_.PackageName -NotMatch $NonRemovable } | Remove-AppxProvisionedPackage -Online
		Write-Host "Disable Windows Sandbox ..."
		if (Get-WindowsEdition -Online | Where-Object -FilterScript { $_.Edition -eq "Professional" -or $_.Edition -like "Enterprise*" })
		{
			# Checking whether x86 virtualization is enabled in the firmware
			if ((Get-CimInstance -ClassName CIM_Processor).VirtualizationFirmwareEnabled -eq $true)
			{
				Disable-WindowsOptionalFeature -FeatureName Containers-DisposableClientVM -Online -NoRestart
			}
			else
			{
				try
				{
					# Determining whether Hyper-V is enabled
					if ((Get-CimInstance -ClassName CIM_ComputerSystem).HypervisorPresent -eq $true)
					{
						Disable-WindowsOptionalFeature -FeatureName Containers-DisposableClientVM -Online -NoRestart
					}
				}
				catch [System.Exception]
				{
					Write-Error -Message $Localization.EnableHardwareVT -ErrorAction SilentlyContinue
				}
			}
		}
		Write-Host "Disable Teams Autostart ..."
		if (Get-AppxPackage -Name MicrosoftTeams)
		{
			if (-not (Test-Path -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask"))
			{
				New-Item -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask" -Force
			}
			New-ItemProperty -Path "HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\MicrosoftTeams_8wekyb3d8bbwe\TeamsStartupTask" -Name State -PropertyType DWord -Value 1 -Force
		}
		Get-AppxPackage -Name *Microsoft.WindowsStore* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.WindowsStore* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.WindowsStore*."
		Get-AppxPackage -Name *Microsoft.WindowsCalculator* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.WindowsCalculator* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.WindowsCalculator*."
		Get-AppxPackage -Name *Microsoft.Windows.Photos* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Windows.Photos* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.Windows.Photos*."
		Get-AppxPackage -Name *Microsoft.MicrosoftStickyNotes* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.MicrosoftStickyNotes* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.MicrosoftStickyNotes*."
		Get-AppxPackage -Name *Microsoft.MSPaint* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.MSPaint* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.MSPaint*."
		Get-AppxPackage -Name *Microsoft.BingWeather* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.BingWeather* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.BingWeather*."
		Get-AppxPackage -Name *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe*."
		Get-AppxPackage -Name *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe*."
		Get-AppxPackage -Name *Dolby* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Dolby* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Dolby*."
		Get-AppxPackage -Name *SpeedTest* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *SpeedTest* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *SpeedTest*."
		Get-AppxPackage -Name *Sway* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Sway* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Sway*."
		Get-AppxPackage -Name *RoyalRevolt* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *RoyalRevolt* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *RoyalRevolt*."
		Get-AppxPackage -Name *Spotify* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Spotify* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Spotify*."
		Get-AppxPackage -Name *Facebook* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Facebook* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Facebook*."
		Get-AppxPackage -Name *Twitter* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Twitter* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Twitter*."
		Get-AppxPackage -Name *Flipboard* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Flipboard* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Flipboard*."
		Get-AppxPackage -Name *Wunderlist* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Wunderlist* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Wunderlist*."
		Get-AppxPackage -Name *BubbleWitch3Saga* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *BubbleWitch3Saga* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *BubbleWitch3Saga*."
		Get-AppxPackage -Name *CandyCrush* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *CandyCrush* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *CandyCrush*."
		Get-AppxPackage -Name *PandoraMediaInc* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *PandoraMediaInc* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *PandoraMediaInc*."
		Get-AppxPackage -Name *Duolingo-LearnLanguagesforFree* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *Duolingo-LearnLanguagesforFree* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *Duolingo-LearnLanguagesforFree*."
		Get-AppxPackage -Name *AdobeSystemsIncorporated.AdobePhotoshopExpress* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *AdobeSystemsIncorporated.AdobePhotoshopExpress* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *AdobeSystemsIncorporated.AdobePhotoshopExpress*."
		Get-AppxPackage -Name *ActiproSoftwareLLC* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *ActiproSoftwareLLC* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *ActiproSoftwareLLC*."
		Get-AppxPackage -Name *EclipseManager* | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like *EclipseManager* | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing *EclipseManager*."
		Get-AppxPackage -Name Microsoft.ZuneVideo | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.ZuneVideo | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.ZuneVideo."
		Get-AppxPackage -Name Microsoft.ZuneMusic | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.ZuneMusic | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.ZuneMusic."
		Get-AppxPackage -Name Microsoft.WindowsSoundRecorder | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsSoundRecorder | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.WindowsSoundRecorder."
		Get-AppxPackage -Name Microsoft.WindowsMaps | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsMaps | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.WindowsMaps."
		Get-AppxPackage -Name Microsoft.WindowsFeedbackHub | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsFeedbackHub | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.WindowsFeedbackHub."
		Get-AppxPackage -Name microsoft.windowscommunicationsapps | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like microsoft.windowscommunicationsapps | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing microsoft.windowscommunicationsapps."
		Get-AppxPackage -Name Microsoft.WindowsAlarms | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.WindowsAlarms | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.WindowsAlarms."
		Get-AppxPackage -Name Microsoft.Whiteboard | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Whiteboard | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Whiteboard."
		Get-AppxPackage -Name Microsoft.StorePurchaseApp | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.StorePurchaseApp | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.StorePurchaseApp."
		Get-AppxPackage -Name Microsoft.SkypeApp | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.SkypeApp | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.SkypeApp."
		Get-AppxPackage -Name Microsoft.Print3D | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Print3D | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Print3D."
		Get-AppxPackage -Name Microsoft.OneConnect | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.OneConnect | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.OneConnect."
		Get-AppxPackage -Name Microsoft.Office.Sway | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Office.Sway | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Office.Sway."
		Get-AppxPackage -Name Microsoft.Office.Lens | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Office.Lens | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Office.Lens."
		Get-AppxPackage -Name Microsoft.News | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.News | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.News."
		Get-AppxPackage -Name Microsoft.NetworkSpeedTest | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.NetworkSpeedTest | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.NetworkSpeedTest."
		Get-AppxPackage -Name Microsoft.MicrosoftSolitaireCollection | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.MicrosoftSolitaireCollection | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.MicrosoftSolitaireCollection."
		Get-AppxPackage -Name Microsoft.Microsoft3DViewer | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Microsoft3DViewer | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Microsoft3DViewer."
		Get-AppxPackage -Name Microsoft.Messaging"| Remove-AppxPackage
    Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Messaging" | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Messaging."
		Get-AppxPackage -Name Microsoft.Getstarted | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.Getstarted | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.Getstarted."
		Get-AppxPackage -Name Microsoft.GetHelp | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.GetHelp | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.GetHelp."
		Get-AppxPackage -Name Microsoft.BingNews | Remove-AppxPackage
		Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like Microsoft.BingNews | Remove-AppxProvisionedPackage -Online
		Write-Host "Removing Microsoft.BingNews."
		Write-Host "Finished Removing Bloatware"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Removing Bloatware!', 'Windows Optimization Toolbox')
	}
	
	$buttonRevertRegistryChange_Click={
		#TODO: Place custom script here
		#Tells Windows to enable your advertising information.    
		Write-Host "Re-enabling key to show advertisement information"
		$Advertising = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo"
		If (Test-Path $Advertising)
		{
			Set-ItemProperty $Advertising  Enabled -Value 1
		}
		
		#Enables Cortana to be used as part of your Windows Search Function
		Write-Host "Re-enabling Cortana to be used in your Windows Search"
		$Search = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		If (Test-Path $Search)
		{
			Set-ItemProperty $Search  AllowCortana -Value 1
		}
		
		#Re-enables the Windows Feedback Experience for sending anonymous data
		Write-Host "Re-enabling Windows Feedback Experience"
		$Period = "HKCU:\Software\Microsoft\Siuf\Rules"
		If (!(Test-Path $Period))
		{
			New-Item $Period
		}
		Set-ItemProperty $Period PeriodInNanoSeconds -Value 1
		
		#Enables bloatware applications               
		Write-Host "Adding Registry key to allow bloatware apps to return"
		$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		If (!(Test-Path $registryPath))
		{
			New-Item $registryPath
		}
		Set-ItemProperty $registryPath  DisableWindowsConsumerFeatures -Value 0
		
		#Changes Mixed Reality Portal Key 'FirstRunSucceeded' to 1
		Write-Host "Setting Mixed Reality Portal value to 1"
		$Holo = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic"
		If (Test-Path $Holo)
		{
			Set-ItemProperty $Holo  FirstRunSucceeded -Value 1
		}
		
		#Re-enables live tiles
		Write-Host "Enabling live tiles"
		$Live = "HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications"
		If (!(Test-Path $Live))
		{
			New-Item $Live
		}
		Set-ItemProperty $Live  NoTileApplicationNotification -Value 0
		
		#Re-enables data collection
		Write-Host "Re-enabling data collection"
		$DataCollection = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection"
		If (!(Test-Path $DataCollection))
		{
			New-Item $DataCollection
		}
		Set-ItemProperty $DataCollection  AllowTelemetry -Value 1
		
		#Re-enables People Icon on Taskbar
		Write-Host "Enabling People Icon on Taskbar"
		$People = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People'
		If (Test-Path $People)
		{
			Set-ItemProperty $People -Name PeopleBand -Value 1 -Verbose
		}
		
		#Re-enables suggestions on start menu
		Write-Host "Enabling suggestions on the Start Menu"
		$Suggestions = "HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager"
		If (!(Test-Path $Suggestions))
		{
			New-Item $Suggestions
		}
		Set-ItemProperty $Suggestions  SystemPaneSuggestionsEnabled -Value 1
		
		#Re-enables scheduled tasks that were disabled when running the Debloat switch
		Write-Host "Enabling scheduled tasks that were disabled"
		Get-ScheduledTask XblGameSaveTaskLogon | Enable-ScheduledTask
		Get-ScheduledTask  XblGameSaveTask | Enable-ScheduledTask
		Get-ScheduledTask  Consolidator | Enable-ScheduledTask
		Get-ScheduledTask  UsbCeip | Enable-ScheduledTask
		Get-ScheduledTask  DmClient | Enable-ScheduledTask
		Get-ScheduledTask  DmClientOnScenarioDownload | Enable-ScheduledTask
		
		Write-Host "Re-enabling and starting WAP Push Service"
		#Enable and start WAP Push Service
		Set-Service "dmwappushservice" -StartupType Automatic
		Start-Service "dmwappushservice"
		
		Write-Host "Re-enabling and starting the Diagnostics Tracking Service"
		#Enabling the Diagnostics Tracking Service
		Set-Service "DiagTrack" -StartupType Automatic
		Start-Service "DiagTrack"
		Write-Host "Done reverting changes!"
		
		#
		Write-Host "Restoring 3D Objects from Explorer 'My Computer' submenu"
		$Objects32 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}"
		$Objects64 = "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}"
		If (!(Test-Path $Objects32))
		{
			New-Item $Objects32
		}
		If (!(Test-Path $Objects64))
		{
			New-Item $Objects64
		}
		Write-Host "Finished All Tasks!"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished All Tasks!', 'Windows Optimization Toolbox')
	}
	
	$buttonDebloatWithBlocklist_Click={
		#TODO: Place custom script here
		Get-AppxProvisionedPackage -online | Out-GridView -PassThru | Remove-AppxProvisionedPackage -online
	}
	
	$buttonUnistallEdge_Click={
		#TODO: Place custom script here
		Write-Host "Unistalling Edge..."
		winget uninstall "Microsoft Edge"
		winget uninstall "Microsoft Edge Update"
		winget uninstall "Microsoft Edge WebView2 Runtime"
		winget uninstall "Xbox Game Bar"
		[String]$ProgramX86 = "$env:SystemDrive\Program Files (x86)"
		[String]$edgepath = "$ProgramX86\Microsoft\Edge\Application\*.*.*.*\Installer"
		[String]$arguments = "--uninstall --system-level --verbose-logging --force-uninstall"
		Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -Wait
		Disable-ScheduledTask -TaskName "\MicrosoftEdgeUpdateTaskMachineUA"
		Disable-ScheduledTask -TaskName "\MicrosoftEdgeUpdateTaskMachineCore"
		$Edgeservices = @("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService")
		$Edgeservices | ForEach-Object {
			Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue
			Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue
			if (Test-Path "$ProgramX86\Microsoft\Edge\Application")
			{
				Write-Host "Uninstalling " -NoNewline
				Write-Host "Microsoft Edge" -ForegroundColor Cyan
				Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -WindowStyle Hidden -Wait
				"\MicrosoftEdgeUpdateTaskMachineUA", "\MicrosoftEdgeUpdateTaskMachineCore" | ForEach-Object {
					Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue 
				}
				@("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService") | ForEach-Object {
					Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue 
					Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue 
				}
				Write-Host "Clearing " -NoNewline
				Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
				Write-Host " registry keys!"
				[Array]$RegistryPaths = @(
					"HKCU:\SOFTWARE\Microsoft\Edge", "HKCU:\SOFTWARE\Microsoft\EdgeUpdate", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate"
				)
				Foreach ($Path in $RegistryPaths)
				{
					Remove-Item -Path $Path -Force -Recurse -ErrorAction SilentlyContinue 
				}
				Write-Host "Removing " -NoNewline
				Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
				Write-Host " files!"
				
				Get-ChildItem -Path "$ProgramX86\Microsoft\Edge" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue 
				}
				Get-ChildItem -Path "$ProgramX86\Microsoft\EdgeUpdate" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue 
				}
				Get-ChildItem -Path "$ProgramX86\Microsoft\Temp" -Force | ForEach-Object{
					Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue 
				}
				
				#Remove Edge Services
				if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
				{
					Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -ErrorAction SilentlyContinue -Force 
				}
				if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
				{
					Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -ErrorAction SilentlyContinue -Force 
				}
				New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
				Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
				Write-Host "has been removed"
			}
		}
		Write-Host "Clearing " -NoNewline
		Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
		Write-Host " registry keys!"
		if (!(Test-Path "HKLM:\SOFTWARE\Microsoft"))
		{
			New-Item -Path "HKLM:\SOFTWARE\Microsoft" -Force
		}
		Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft" -Name "DoNotUpdateToEdgeWithChromium" -Type DWord -Value 1
		if (Test-Path "HKCU:\SOFTWARE\Microsoft\Edge")
		{
			Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\Edge" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKCU:\SOFTWARE\Microsoft\EdgeUpdate")
		{
			Remove-Item -Path "HKCU:\SOFTWARE\Microsoft\EdgeUpdate" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge")
		{
			Remove-Item -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (Test-Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate")
		{
			Remove-Item -Path "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate" -Force -Recurse -ErrorAction SilentlyContinue
		}
		if (!(Test-Path "HKCR:\"))
		{
			New-PSDrive -PSProvider Registry -Root HKEY_CLASSES_ROOT -Name HKCR
		}
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*MicrosoftEdge*" -Force
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*microsoft-edge*" -Force
		Remove-Item -Path "Microsoft.PowerShell.Core\Registry::HKEY_CLASSES_ROOT\*edge*" -Force
		$edgechilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\Edge"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		$edgeupdatechilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\EdgeUpdate"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		$edgetempchilditems = Get-ChildItem -Path "${env:CommonProgramFiles(x86)}\Microsoft\Temp"
		$edgechilditems | ForEach-Object{
			Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
		}
		#Remove Edge Services
		if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
		{
			Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -Force
		}
		if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
		{
			Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -Force
		}
		New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
		
		
		taskkill /F /IM browser_broker.exe
		taskkill /F /IM RuntimeBroker.exe
		taskkill /F /IM MicrosoftEdge.exe
		taskkill /F /IM MicrosoftEdgeCP.exe
		taskkill /F /IM MicrosoftEdgeSH.exe
		
		cmd /c 'reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\MicrosoftEdge.exe" /v Debugger /t REG_SZ /d "%windir%\System32\taskkill.exe" /f'
		Get-WindowsPackage -Online | Where-Object PackageName -like *InternetExplorer* | Remove-WindowsPackage -Online -NoRestart
		if (Test-Path "$ProgramX86\Microsoft\Edge\Application")
		{
			
			Start-Process -FilePath "$edgepath\setup.exe" -ArgumentList $arguments -Verb RunAs -WindowStyle Hidden -Wait
			"\MicrosoftEdgeUpdateTaskMachineUA", "\MicrosoftEdgeUpdateTaskMachineCore" | ForEach-Object {
				Disable-ScheduledTask -TaskName $_ -ErrorAction SilentlyContinue
			}
			@("edgeupdatem", "edgeupdate", "MicrosoftEdgeElevationService") | ForEach-Object {
				Set-Service -Name $_ -StartupType Disabled -ErrorAction SilentlyContinue
				Stop-Service -Name $_ -NoWait -Force -ErrorAction SilentlyContinue
			}
			Write-Host "Clearing " -NoNewline
			Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
			Write-Host " registry keys!"
			[Array]$RegistryPaths = @(
				"HKCU:\SOFTWARE\Microsoft\Edge", "HKCU:\SOFTWARE\Microsoft\EdgeUpdate", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Edge", "HKLM:\SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate"
			)
			Foreach ($Path in $RegistryPaths)
			{
				Remove-Item -Path $Path -Force -Recurse -ErrorAction SilentlyContinue
			}
			Write-Host "Removing " -NoNewline
			Write-Host "Microsoft Edge's" -NoNewline -ForegroundColor Cyan
			Write-Host " files!"
			
			Get-ChildItem -Path "$ProgramX86\Microsoft\Edge" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			Get-ChildItem -Path "$ProgramX86\Microsoft\EdgeUpdate" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			Get-ChildItem -Path "$ProgramX86\Microsoft\Temp" -Force | ForEach-Object{
				Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction SilentlyContinue
			}
			
			#Remove Edge Services
			if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate")
			{
				Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdate" -ErrorAction SilentlyContinue -Force
			}
			if (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem")
			{
				Remove-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Services\edgeupdatem" -ErrorAction SilentlyContinue -Force
			}
			New-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name DisableEdgeDesktopShortcutCreation -PropertyType DWORD -Value 1
			Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
			Write-Host "has been removed"
			[System.Media.SystemSounds]::Asterisk.Play()
			[void][System.Windows.Forms.MessageBox]::Show('Finished Unistalling Edge!', 'Windows Optimization Toolbox')
		}
		else
		{
			[System.Media.SystemSounds]::Asterisk.Play()
			[void][System.Windows.Forms.MessageBox]::Show('Edge Not Detected!', 'Windows Optimization Toolbox')
			Write-Host "Microsoft Edge " -NoNewline -ForegroundColor Cyan
			Write-Host "is not even installed?"
		
		}
	
	}
	
	$buttonGithub_Click={
		#TODO: Place custom script here
		Write-Host "Installing GitHub Desktop"
		winget install -e GitHub.GitHubDesktop
		Write-Host "Finished Installing GitHub Desktop"
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Installing GitHub Desktop!', 'Windows Optimization Toolbox')
	}
	
	$buttonEnableWindows10Explo_Click={
		#TODO: Place custom script here
		Write-Host "Enable Windows 10 File Explorer ..."
		if (-not (Test-Path -Path "HKCU:\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}\InprocServer32"))
		{
			New-Item -Path "HKCU:\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}\InprocServer32" -Force
		}
		New-ItemProperty -Path "HKCU:\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}\InprocServer32" -Name "(default)" -PropertyType String -Value "" -Force
		stop-process -name explorer -force
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Windows 10 File Explorer!', 'Windows Optimization Toolbox')
	}
	
	$buttonDisableWindows10Expl_Click={
		#TODO: Place custom script here
		Write-Host "Disable Windows 10 File Explorer ..."
		Remove-Item -Path "HKCU:\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}" -Recurse -Force -ErrorAction Ignore
		stop-process -name explorer -force
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Enabling Windows 10 File Explorer!', 'Windows Optimization Toolbox')
	}
	
	
	
	$EnableWin10Ribbon_Click={
		#TODO: Place custom script here
		Write-Host "Setting Expanded Windows 10 File Explorer Ribbon ..."
		if (Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Shell Extensions\Blocked" -Name "{e2bf9676-5f8f-435c-97eb-11607a5bedf7}" -ErrorAction Ignore)
		{
			if (-not (Test-Path -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon))
			{
				New-Item -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon -Force
			}
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon -Name MinimizedStateTabletModeOff -PropertyType DWord -Value 0 -Force
			stop-process -name explorer -force
		}
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Setting Expanded Windows 10 File Explorer Ribbon!', 'Windows Optimization Toolbox')
	}
	
	$DisableWin10Explorer_Click={
		#TODO: Place custom script here
		Write-Host "Setting Minimized Windows 10 File Explorer Ribbon ..."
		if (Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Shell Extensions\Blocked" -Name "{e2bf9676-5f8f-435c-97eb-11607a5bedf7}" -ErrorAction Ignore)
		{
			if (-not (Test-Path -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon))
			{
				New-Item -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon -Force
			}
			New-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Ribbon -Name MinimizedStateTabletModeOff -PropertyType DWord -Value 1 -Force
			stop-process -name explorer -force
		}
		
		[System.Media.SystemSounds]::Asterisk.Play()
		[void][System.Windows.Forms.MessageBox]::Show('Finished Setting Minimized Windows 10 File Explorer Ribbon!', 'Windows Optimization Toolbox')
	}
	
	
	
	$buttonActivateWindows_Click={
		$Sysdir = [System.Environment]::SystemDirectory
		$hiden = Set-Location -Path $Sysdir -PassThru
		
		Write-Host @"

>> Please wait...

"@
		
		
		$initreturn = cscript //nologo slmgr.vbs /cServer
		$initreturn = cscript //nologo slmgr.vbs /upk
		$initreturn = cscript //nologo slmgr.vbs /cpky
		
		$initreturn = ""
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk NPEG9-FWDCX-D2G8J-H872K-2YRE4 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk DPEGV-TTNVB-4XEQ3-TJR4H-KHJWH }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk WNEJR-4C88C-JKEGV-HQ7T2-76DF9 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 2FRHB-TNFGY-69EGE-B8YKP-D69TJ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk DCJRK-NFMTC-H8adJ-PFHPY-QJ4BJ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk QFRJN-GRT3P-VKERX-X7T3R-8B639 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk TXWTD-98N7V-6WHF6-BX7FG-H8Q99 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 3KWR7-WNT83-DSDGR-F7HPR-844BM }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 7HWTX-D7EGG-3QEGQ-4WPJ4-YTDFH }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk PVWRN-6DFY6-9EG36-7BKTT-D3WVR }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk NWSGS-QMPVW-DHEEK-3GKT6-VCFB2 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 2WHSG-8QGBV-HEGDP-CT43Q-MDWWJ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk W26SD-WFGGX-YETDB-4J6C9-T83GX }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk MH3SD-N47XK-VETQ9-C7227-GCQG9 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk MHSDN-XY6XB-WWTDC-BTDCT-MKKG7 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk TT4SH-HN7YT-6TEA7-RGRQJ-JFFXW }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 32SFW-9KQ84-PHEW8-D8GGY-CWCK7 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk JMSFF-RHW7P-DEGAX-RF3DR-X2BQT }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk GCFHD-8NW9H-FWAFX-CCM8D-9D6T9 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk HMRHV-VVBFX-7ETAH-CTY9B-B4FXY }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk NG4EV-VH26C-7GEAW-K6F98-J8CK4 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk XCWDF-2NXM9-7EQAB-MHCB7-2RYQQ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk BNHFB-R7TKB-3HRED-8DRP2-27GG4 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 2SDGH-YGCQR-KWGDK-CD6TF-84YXQ }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk GNHHE-YVD74-QEGD6-27H4K-8QHDG }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk MEGDP-WNJJT-6EAQY-DWX8H-6XWKK }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 7DGN3-D94CG-YHRYR-QBPX3-RJP64 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk BEGDG-PQ82V-VQDHW-8XVD2-V8P66 }
		if ($initreturn -notmatch "successfully") { $initreturn = cscript //nologo slmgr.vbs /ipk 78EGJ-TQK6T-6TEW8-J39CJ-J8D3P }
		
		
		Write-Host @"
>> Activating Windows

"@
		
		For ()
		{
			
			$initreturn = cscript //nologo slmgr.vbs /sServer Server8.microsoft.com
			if ($initreturn -match "successfully") { $initreturn = cscript //nologo slmgr.vbs /ato; if ($initreturn -match "successfully") { write-host $initreturn[0] -ForegroundColor green; write-host $initreturn[1] -ForegroundColor green; Break } }
			
			$initreturn = cscript //nologo slmgr.vbs /sServer Server9.microsoft.com
			if ($initreturn -match "successfully") { $initreturn = cscript //nologo slmgr.vbs /ato; if ($initreturn -match "successfully") { write-host $initreturn[0] -ForegroundColor green; write-host $initreturn[1] -ForegroundColor green; Break } }
			
			$initreturn = cscript //nologo slmgr.vbs /sServer Server7.microsoft.com
			if ($initreturn -match "successfully") { $initreturn = cscript //nologo slmgr.vbs /ato; if ($initreturn -match "successfully") { write-host $initreturn[0] -ForegroundColor green; write-host $initreturn[1] -ForegroundColor green; Break } }
			[System.Media.SystemSounds]::Asterisk.Play()
			[System.Windows.Forms.MessageBox]::Show("Can't Activate Your Windows. Please Try Again.", 'Windows Optimization Toolbox', 0, 48)
			Write-Host @"
Microsoft Key Management Service(Server) didn't able to activate your window.
- Run Windows Optimization Toolbox with Administrative rights
- Make sure that you're connected to the internet
- Make sure that Window Script Host(WSH) is enabled
- Try again later "Microsoft(Server) can be busy"
"@ -ForegroundColor red
			Break
		}
		else
		{
			[System.Media.SystemSounds]::Asterisk.Play()
			[void][System.Windows.Forms.MessageBox]::Show('Product Activated Sucessfully!', 'Windows Optimization Toolbox')
		}
		
	}
	
	$buttonActivateMSOffice_Click= {
		#TODO: Place custom script here
		For ()
		{
			
			
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\proplusvl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\proplusvl_mak*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			
			Write-Host ">> Activating Office"
			
			$hiden = ""
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:WFG99
			$hiden = cscript //nologo ospp.vbs /unpkey:DRTFM
			$hiden = cscript //nologo ospp.vbs /unpkey:BTDRB
			$hiden = cscript //nologo ospp.vbs /unpkey:CPQVG
			$hiden = cscript //nologo ospp.vbs /inpkey:XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Office has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			
			
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			
			
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\ProPlus2019VL*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			
			Write-Host ">> Activating Office"
			
			$hiden = ""
			$hiden = cscript //nologo slmgr.vbs /cServer
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:6MWKP
			$hiden = cscript //nologo ospp.vbs /inpkey:NMMKJ-6RK4F-KMJVX-8D9MJ-6MWKP
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Office has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			
			
			
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\proplusvl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\proplusvl_mak*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
			
			Write-Host ">> Activating Office"
			
			$hiden = ""
			$hiden = cscript //nologo slmgr.vbs /cServer
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:WFG99
			$hiden = cscript //nologo ospp.vbs /unpkey:DRTFM
			$hiden = cscript //nologo ospp.vbs /unpkey:BTDRB
			$hiden = cscript //nologo ospp.vbs /inpkey:XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Office has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			
			
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			
			$hiden = ""
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ppd.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ul-oob.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ul.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-bridge-office.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-root.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-root-bridge-test.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-stil.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-ul.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-ul-oob.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\pkeyconfig-office.xrm-ms"
			
			Write-Host ">> Activating MS Visio"
			
			$hiden = cscript //nologo slmgr.vbs /cServer
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:KQBVC
			$hiden = cscript //nologo ospp.vbs /unpkey:G83KT
			$hiden = cscript //nologo ospp.vbs /inpkey:YG9NW-3K39V-2T3HJ-93F3Q-G83KT
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Visio has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			else
			{
				Write-Host @"

>> Fail...! trying different Server...
"@
				
				Set-Location C:\Windows\system32
				if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
				if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
				
				
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\client-issuance*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\projectprovl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\projectpro2019vl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				
				Write-Host ">> Activating MS Visio"
				
				$hiden = ""
				$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\pkeyconfig-office.xrm-ms"
				$hiden = cscript //nologo slmgr.vbs /cServer
				$hiden = cscript //nologo ospp.vbs /setprt:1688
				$hiden = cscript //nologo ospp.vbs /unpkey:PKD2B
				$hiden = cscript //nologo ospp.vbs /inpkey:B4NPR-3FKK7-T2MBV-FRQ4W-PKD2B
				$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
				$hiden = cscript //nologo ospp.vbs /act
				
				
				
				if ($hiden -match "successful")
				{
					Write-Host @" 

Microsoft Visio has been Activated successfully 
"@ -ForegroundColor green; Break
					
				}
			}
			
			
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
			Write-Host @"

>> Please wait...
"@
			
			
			$hiden = ""
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ppd.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ul-oob.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\ProjectProVL_Server_Client-ul.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-bridge-office.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-root.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-root-bridge-test.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-stil.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-ul.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\client-issuance-ul-oob.xrm-ms"
			$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\pkeyconfig-office.xrm-ms"
			
			Write-Host ">> Activating MS Project"
			
			$hiden = ""
			$hiden = cscript //nologo slmgr.vbs /cServer
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /unpkey:KQBVC
			$hiden = cscript //nologo ospp.vbs /unpkey:G83KT
			$hiden = cscript //nologo ospp.vbs /inpkey:YG9NW-3K39V-2T3HJ-93F3Q-G83KT
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /act
			
			
			
			if ($hiden -match "successful")
			{
				Write-Host @" 

Microsoft Project has been Activated successfully 
"@ -ForegroundColor green; Break
				
			}
			else
			{
				Write-Host @"

>> Fail...! trying different Server...
"@
				
				Set-Location C:\Windows\system32
				if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office16" }
				if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office16\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office16" }
				
				
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\client-issuance*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\projectprovl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				cmd.exe /c "(for /f %x in ('dir /b ..\root\License16\projectpro2019vl_Server*.xrm-ms') do cscript //b ospp.vbs /inslic:'..\root\License16\%x') 2>nul"
				
				Write-Host ">> Activating MS Project"
				
				$hiden = ""
				$hiden = cscript //b ospp.vbs /inslic:"..\root\License16\pkeyconfig-office.xrm-ms"
				$hiden = cscript //nologo slmgr.vbs /cServer
				$hiden = cscript //nologo ospp.vbs /setprt:1688
				$hiden = cscript //nologo ospp.vbs /unpkey:PKD2B
				$hiden = cscript //nologo ospp.vbs /inpkey:B4NPR-3FKK7-T2MBV-FRQ4W-PKD2B
				$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
				$hiden = cscript //nologo ospp.vbs /act
				
				
				
				if ($hiden -match "successful")
				{
					Write-Host @" 

Microsoft Project has been Activated successfully 
"@ -ForegroundColor green; Break
					
				}
			}
			
			Write-Host ">> Fail...! trying Other Options"
			
			
			Set-Location C:\Windows\system32
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office15\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office15" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office15\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office15" }
			if (Test-Path "$Env:ProgramFiles\Microsoft Office\Office14\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles\Microsoft Office\Office14" }
			if (Test-Path "$Env:ProgramFiles(x86)\Microsoft Office\Office14\ospp.vbs" -PathType leaf) { Set-Location "$Env:ProgramFiles(x86)\Microsoft Office\Office14" }
			
			Write-Host @"

>> Please wait...
"@
			
			Import-Module BitsTransfer
			$ProgressPreference = "SilentlyContinue"
			$ProgressPreference = "SilentlyContinue"
			$ProgressPreference = "SilentlyContinue"
			
			Start-BitsTransfer -Source "https://get.microsoft.com/office2010/Office_2010_Library.zip" -Destination "$env:TEMP"
			Start-BitsTransfer -Source "https://get.microsoft.com/office2013/Office_2013_Library.zip" -Destination "$env:TEMP"
			Expand-Archive "$env:TEMP\Office_2010_Library.zip" -DestinationPath "C:\" -Force
			Expand-Archive "$env:TEMP\Office_2013_Library.zip" -DestinationPath "C:\" -Force
			
			
			cmd /c 'del "$env:TEMP\Office_2010_Library.zip"'
			cmd /c 'del "$env:TEMP\Office_2013_Library.zip"'
			
			
			$files = Get-ChildItem -Path C:\library -name
			foreach ($i in 1 .. 7)
			{
				$hiden = cscript //b ospp.vbs /inslic:$files[$i]
			}
			Remove-Item C:\library -Recurse -Force
			
			$ProgressPreference = "Continue"
			
			Write-Host ">> Activating Office"
			
			$hiden = ""
			$hiden = cscript //nologo ospp.vbs /inpkey:VYBBJ-TRJPB-QFQRF-QFT4D-H3GVB
			$hiden = cscript //nologo ospp.vbs /inpkey:YC7DK-G2NP3-2QQC3-J6H88-GVGXT
			$hiden = cscript //nologo ospp.vbs /sethst:Server8.microsoft.com
			$hiden = cscript //nologo ospp.vbs /setprt:1688
			$hiden = cscript //nologo ospp.vbs /act
			if ($hiden -match "successful")
			{
				[System.Media.SystemSounds]::Asterisk.Play()
				[void][System.Windows.Forms.MessageBox]::Show('Product Activated Sucessfully!', 'Windows Optimization Toolbox')
				Write-Host @" 

Microsoft Office has been Activated successfully 
"@ -ForegroundColor green; Break
			}
			Else
			{
				
				[System.Media.SystemSounds]::Asterisk.Play()
				[System.Windows.Forms.MessageBox]::Show("Can't Activate Your Office. Please Try Again..", 'Windows Optimization Toolbox', 0, 48)
				
				Write-Host @"
Microsoft Office/visio/Project didn't Activate
- Make sure that office is installed in "C" drive
- Run Windows Toolbox with Administrative rights
- Make sure that you're connected to the internet
- Make sure that Window Script Host(WSH) is enabled
- Try again later "Microsoft(Server) can be busy"
"@ -ForegroundColor red
				Break
				
			}
		}
	}
	
	
	$buttonEnableGodMode_Click={
		#TODO: Place custom script here
		$DesktopPath = [Environment]::GetFolderPath("Desktop");
		mkdir "$DesktopPath\GodMode.{ED7BA470-8E54-465E-825C-99712043E01C}"
		Write-Host "Done!"
	}
	
	$buttonInstallGooglePlaySto_Click={
		#TODO: Place custom script here
		Write-Host "Enabling Developer Mode"
		New-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name 'AllowDevelopmentWithoutDevLicense' -Value 1 -PropertyType DWord -Force 
	    Write-Host "Installing Google Play Store..."
		Import-Module BitsTransfer
		Start-BitsTransfer -Source "https://download1493.mediafire.com/dr6fd6qyalfg/dh27m0zmy9rc0wd/WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly.zip" -Destination "$env:USERPROFILE\Downloads\WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly.zip"
		Expand-Archive "$env:USERPROFILE\Downloads\WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly.zip" -DestinationPath "$env:USERPROFILE\Downloads\WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly"
		powershell -executionpolicy bypass "$env:USERPROFILE\Downloads\WSA-with-magisk-NoGApps_1.8.32837.0_x64_Release-Nightly\Install.ps1" 
	    Write-Host "Finished Installing Google Play Store"
	}
	
	$buttonUnistallGooglePlaySt_Click={
		#TODO: Place custom script here
		
	}
	
	$buttonFixWindows11PlayStor_Click={
		#TODO: Place custom script here
		Import-Module BitsTransfer
		Start-BitsTransfer -Source "https://dl.google.com/android/repository/platform-tools_r33.0.0-windows.zip" -Destination "$env:USERPROFILE\Downloads\platform-tools_r33.0.0-windows.zip"
		Expand-Archive "$env:USERPROFILE\Downloads\platform-tools_r33.0.0-windows.zip" -DestinationPath "$env:USERPROFILE\Downloads\platform-tools_r33.0.0-windows"
		Set-Location "$env:USERPROFILE\Downloads\platform-tools_r33.0.0-windows\platform-tools"
		./adb connect $env:HostIP
		./adb shell
		su
		setenforce 0
	}
	
	$buttonDiskDefragUtility_Click={
		#TODO: Place custom script here
		dfrgui
	}
	
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formWindowsOptimizationT.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonDiskDefragUtility.remove_Click($buttonDiskDefragUtility_Click)
			$buttonFixWindows11PlayStor.remove_Click($buttonFixWindows11PlayStor_Click)
			$buttonEnableGodMode.remove_Click($buttonEnableGodMode_Click)
			$AddTakeOwnershipMenu.remove_Click($AddTakeOwnershipMenu_Click)
			$RemoveTakeOwnershipMenu.remove_Click($RemoveTakeOwnershipMenu_Click)
			$DisableWin10Explorer.remove_Click($DisableWin10Explorer_Click)
			$EnableWin10Ribbon.remove_Click($EnableWin10Ribbon_Click)
			$buttonDisableWindows10Expl.remove_Click($buttonDisableWindows10Expl_Click)
			$buttonEnableWindows10Explo.remove_Click($buttonEnableWindows10Explo_Click)
			$DisableBackgroundApps.remove_Click($DisableBackgroundApps_Click)
			$RemoveWindows10XBoot.remove_Click($RemoveWindows10XBoot_Click)
			$CompactOS.remove_Click($CompactOS_Click)
			$Windows10XBootAnimat.remove_Click($Windows10XBootAnimat_Click)
			$EnableMSIMode.remove_Click($EnableMSIMode_Click)
			$BypassTPM20.remove_Click($BypassTPM20_Click)
			$AMDGpuTweaks.remove_Click($AMDGpuTweaks_Click)
			$DefaultTaskbar.remove_Click($DefaultTaskbar_Click)
			$NVIDIAGpuTweaks.remove_Click($NVIDIAGpuTweaks_Click)
			$SmallTaskbar.remove_Click($SmallTaskbar_Click)
			$NetworkTweaks.remove_Click($NetworkTweaks_Click)
			$DefaultContextMenu.remove_Click($DefaultContextMenu_Click)
			$EnableNet35.remove_Click($EnableNet35_Click)
			$OldContextMenu.remove_Click($OldContextMenu_Click)
			$EnableNFS.remove_Click($EnableNFS_Click)
			$RemoveStartupProgram.remove_Click($RemoveStartupProgram_Click)
			$WindowsSearchAndTask.remove_Click($WindowsSearchAndTask_Click)
			$LaptopNumlockFix.remove_Click($LaptopNumlockFix_Click)
			$FixWhitelistedApps.remove_Click($FixWhitelistedApps_Click)
			$YourPhoneAppFIx.remove_Click($YourPhoneAppFIx_Click)
			$RepairHardDrive.remove_Click($RepairHardDrive_Click)
			$FixNetworkProblems.remove_Click($FixNetworkProblems_Click)
			$SystemFileChecker.remove_Click($SystemFileChecker_Click)
			$RepairWindowsImage.remove_Click($RepairWindowsImage_Click)
			$ApplyTweaks.remove_Click($ApplyTweaks_Click)
			$EnableClipboardHisto.remove_Click($EnableClipboardHisto_Click)
			$DisableClipboardHist.remove_Click($DisableClipboardHist_Click)
			$DisableLocationTrack.remove_Click($DisableLocationTrack_Click)
			$DisableCortana.remove_Click($DisableCortana_Click)
			$EnableLocationTRacki.remove_Click($EnableLocationTRacki_Click)
			$DisableActionCenter.remove_Click($DisableActionCenter_Click)
			$EnableCortanaSearch.remove_Click($EnableCortanaSearch_Click)
			$EnableBackgroundApps.remove_Click($EnableBackgroundApps_Click)
			$LightMode.remove_Click($LightMode_Click)
			$DisableHibernation.remove_Click($DisableHibernation_Click)
			$DarkMode.remove_Click($DarkMode_Click)
			$EnableHibernation.remove_Click($EnableHibernation_Click)
			$SetTimeToUTCDualBoot.remove_Click($SetTimeToUTCDualBoot_Click)
			$CleanTempFilesAndLog.remove_Click($CleanTempFilesAndLog_Click)
			$AppearanceVisualFX.remove_Click($AppearanceVisualFX_Click)
			$EnableActionCenter.remove_Click($EnableActionCenter_Click)
			$PerformanceVisualFX.remove_Click($PerformanceVisualFX_Click)
			$DisableMemoryCompres.remove_Click($DisableMemoryCompres_Click)
			$EnableMemoryCompress.remove_Click($EnableMemoryCompress_Click)
			$buttonUnistallEdge.remove_Click($buttonUnistallEdge_Click)
			$buttonRevertRegistryChange.remove_Click($buttonRevertRegistryChange_Click)
			$InstallOnedrive.remove_Click($InstallOnedrive_Click)
			$buttonDebloatWithBlocklist.remove_Click($buttonDebloatWithBlocklist_Click)
			$DebloatAll.remove_Click($DebloatAll_Click)
			$ReinstallAllBloatwar.remove_Click($ReinstallAllBloatwar_Click)
			$UnsintallOnedrive.remove_Click($UnsintallOnedrive_Click)
			$DisableEdgePDF.remove_Click($DisableEdgePDF_Click)
			$UnpinTitilesFromStar.remove_Click($UnpinTitilesFromStar_Click)
			$RemoveBloatwareRegKe.remove_Click($RemoveBloatwareRegKe_Click)
			$buttonActivateMSOffice.remove_Click($buttonActivateMSOffice_Click)
			$buttonActivateWindows.remove_Click($buttonActivateWindows_Click)
			$WindowsUpdateReset.remove_Click($WindowsUpdateReset_Click)
			$Low.remove_Click($Low_Click)
			$EnableWindowsUpdates.remove_Click($EnableWindowsUpdates_Click)
			$DisableWindowsUpdate.remove_Click($DisableWindowsUpdate_Click)
			$DefaultSetting.remove_Click($DefaultSetting_Click)
			$SecurityUpdatesOnly.remove_Click($SecurityUpdatesOnly_Click)
			$RemoveMalware.remove_Click($RemoveMalware_Click)
			$RemoveViruses.remove_Click($RemoveViruses_Click)
			$High.remove_Click($High_Click)
			$buttonUnistallGooglePlaySt.remove_Click($buttonUnistallGooglePlaySt_Click)
			$buttonInstallGooglePlaySto.remove_Click($buttonInstallGooglePlaySto_Click)
			$buttonGithub.remove_Click($buttonGithub_Click)
			$GeforceExperience.remove_Click($GeforceExperience_Click)
			$IntelDriverSupportAs.remove_Click($IntelDriverSupportAs_Click)
			$GoogleChrome.remove_Click($GoogleChrome_Click)
			$FireFox.remove_Click($FireFox_Click)
			$Ventoy.remove_Click($Ventoy_Click)
			$7zip.remove_Click($7zip_Click)
			$StartIsBack.remove_Click($StartIsBack_Click)
			$VLC.remove_Click($VLC_Click)
			$Blender.remove_Click($Blender_Click)
			$PaintNET.remove_Click($PaintNET_Click)
			$OpenShell.remove_Click($OpenShell_Click)
			$DirectX.remove_Click($DirectX_Click)
			$Cleanmgr.remove_Click($Cleanmgr_Click)
			$VisualC.remove_Click($VisualC_Click)
			$LibreOffice.remove_Click($LibreOffice_Click)
			$XNAFramework40.remove_Click($XNAFramework40_Click)
			$GreenShot.remove_Click($GreenShot_Click)
			$OpenAl.remove_Click($OpenAl_Click)
			$balenaEtcher.remove_Click($balenaEtcher_Click)
			$Audacity.remove_Click($Audacity_Click)
			$Java.remove_Click($Java_Click)
			$Discord.remove_Click($Discord_Click)
			$PhysX.remove_Click($PhysX_Click)
			$OBSStudio.remove_Click($OBSStudio_Click)
			$Everything.remove_Click($Everything_Click)
			$AMDRyzenChipsetDrive.remove_Click($AMDRyzenChipsetDrive_Click)
			$SumatraPDF.remove_Click($SumatraPDF_Click)
			$Rufus.remove_Click($Rufus_Click)
			$FoxitReader.remove_Click($FoxitReader_Click)
			$WinRAR.remove_Click($WinRAR_Click)
			$IDM.remove_Click($IDM_Click)
			$MediaPlayerClassic.remove_Click($MediaPlayerClassic_Click)
			$GPUZ.remove_Click($GPUZ_Click)
			$PowerToys.remove_Click($PowerToys_Click)
			$CPUZ.remove_Click($CPUZ_Click)
			$WindowsTerminal.remove_Click($WindowsTerminal_Click)
			$Vivaldi.remove_Click($Vivaldi_Click)
			$Brave.remove_Click($Brave_Click)
			$Edge.remove_Click($Edge_Click)
			$BleachBit.remove_Click($BleachBit_Click)
			$Notepad.remove_Click($Notepad_Click)
			$MicrosoftSilverLight.remove_Click($MicrosoftSilverLight_Click)
			$UTorrent.remove_Click($UTorrent_Click)
			$ImageGlass.remove_Click($ImageGlass_Click)
			$CCleaner.remove_Click($CCleaner_Click)
			$VSCode.remove_Click($VSCode_Click)
			$Gimp.remove_Click($Gimp_Click)
			$VSCodium.remove_Click($VSCodium_Click)
			$ShareX.remove_Click($ShareX_Click)
			$AdobeReaderDC.remove_Click($AdobeReaderDC_Click)
			$Opera.remove_Click($Opera_Click)
			$IrfanView.remove_Click($IrfanView_Click)
			$formWindowsOptimizationT.remove_Load($formWindowsOptimizationT_Load)
			$formWindowsOptimizationT.remove_Load($Form_StateCorrection_Load)
			$formWindowsOptimizationT.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formWindowsOptimizationT.SuspendLayout()
	$tabcontrol1.SuspendLayout()
	$tabpage1.SuspendLayout()
	$tabpage6.SuspendLayout()
	$tabpage3.SuspendLayout()
	$tabpage8.SuspendLayout()
	#
	# formWindowsOptimizationT
	#
	$formWindowsOptimizationT.Controls.Add($tabcontrol1)
	$formWindowsOptimizationT.AutoScaleDimensions = '6, 13'
	$formWindowsOptimizationT.AutoScaleMode = 'Font'
	$formWindowsOptimizationT.AutoScroll = $True
	$formWindowsOptimizationT.BackColor = 'ControlLight'
	$formWindowsOptimizationT.ClientSize = '964, 654'
	$formWindowsOptimizationT.FormBorderStyle = 'FixedSingle'
	#region Binary Data
	$formWindowsOptimizationT.Icon = [System.Convert]::FromBase64String('
AAABAAEAp6gAAAEAIABIxgEAFgAAACgAAACnAAAAUAEAAAEAIAAAAAAAYLYBABMLAAATCwAAAAAA
AAAAAAD318b/9Miy//XMt//0y7b/9Mu2//TLtv/0y7b/9Mu2//TLtv/0yrb/9Mq2//TKtv/0yrb/
9Mq2//PKtv/0yrb/9Mm2//TJtv/0ybb/9Mm2//TJtv/zybb/88m2//PJtv/zybb/88m2//PJtv/z
yLb/88i2//PItv/zyLb/88i2//PItv/zyLb/88i2//PHtv/yx7b/8se2//LHtv/yx7b/8se2//LH
tv/yxrb/8sa2//LGtv/yxrb/8sa2//LGtv/yxrb/8sa2//LGtv/yxrb/8sW2//HFtv/xxbb/8cW2
//HFtv/xxbb/8cW2//HFtv/wwbP/8MKz//DBs//uu63/7rut/+67rf/tu63/7but/+27rf/tu63/
7bqt/+26rf/st6r/7Leq/+y3qv/st6r/7Leq/+y3qv/suKv/78O5/fnp59766eUh+ujkAgAAAAAA
AAAA//njDPzruCv97brp/Omr/vzpq//86ar//Omq//zpqv/86ar//Omq//zqrf/86q3//Oqt//zp
rf/86a3//Omt//zprf/86a3//Omt//zrs//867P//Ouz//vttv/87bb//O22//zstv/87Lb//Oy2
//zstv/87Lb//Oy2//zstv/87Lb//Oy2//zstv/87Lb//Ou2//zrtv/867b/++u2//vrtv/767b/
++u2//vrtv/767b/++u2//vqtv/76rb/++q2//vqtv/76rb/++q2//vqtv/76rb/++q2//vptv/7
6rb/++m2//vptv/76bb/++m2//vptv/76bb/++m2//vptv/76bb/++m2//vptv/76bb/++i2//vo
tv/76Lb/++i2//votv/76Lb/++i2//votv/757b/++e2//vot//65rL/++3H/+BoOP/VMwD/2D8D
/9c8AP/XPAD/1zwA/9Y7AP/WOwD/1jsA/9Y7AP/VOgD/1ToA/9U5AP/VOQD/1TgA/9Q4AP/UNwD/
1DcA/9Q2AP/UNgD/1DUA/9M1AP/TNQD/0zUA/9M0AP/TNAD/0jMA/9IzAP/SMwD/0jIA/9IyAP/S
MQD/0TEA/9EwAP/RMAD/0S8A/9EuAP/QLgD/0C4A/88tAP/PLQD/zy0A/88sAP/PLQD/zywA/88r
AP/OKgD/zioA/84qAP/OKQD/zSkA/80pAP/NKAD/zCgA/8snAP/MJwD/zCYA/8wmAP/MJQD/yyUA
/8w3JP/MNyT/yzck/85MPf/OTD3/zkw9/85MPf/NTD3/zUs9/81LPf/OUkX/zlJF/85SRf/OUUX/
zlFF/81RRf/OUUX/zlFF/85TSP/Xb2X99NPL3vjh2yH54t0CAAAAAP/66gH/+egW//jh1PfTY/Pz
xkn/8sdF//LHRf/zx0X/9MdF//THRf/0x0X/9MdF//PHRf/zxD3/88Q9//PDPf/zwz3/88M9//PC
Pf/zwj3/870k//O9JP/zvST/8roA//K6AP/yugD/8roA//K5AP/yuQD/8rkA//K4AP/yuAD/8rgA
//K3AP/ytwD/8rcA//K2AP/ytgD/8rUA//K1AP/ytQD/8bQA//G0AP/xtAD/8bMA//GzAP/xswD/
8bIA//GyAP/xsgD/8bIA//GyAP/xsQD/8LAA//CwAP/wrwD/8K8A//CvAP/wrgD/8K4A//CuAP/w
rQD/8K0A//CsAP/wrAD/8K0A//CsAP/vqwD/76sA/++rAP/vqwD/76oA/++qAP/vqQD/76gA/++o
AP/vqAD/76gA/++oAP/vpwD/76gD/+2iAP/yuzv/43U7/9lFAP/bTwf/200E/9tNBP/aTAT/2kwE
/9pLBP/aSwT/2ksE/9lLBP/ZSgT/2UoE/9lKBP/ZSQT/2EkE/9hIBP/YSAT/2EcE/9hHBP/YRwT/
10YE/9dGBP/XRgT/10YE/9dFBP/WRQT/1kQE/9ZEBP/WQwT/1kME/9ZDBP/VQgT/1UIE/9VBBP/V
QQT/1UEE/9RABP/UPwT/1D8E/9M/BP/TPwT/0z8E/9M/BP/TPQT/0z0E/9I9BP/SPAT/0jsE/9I7
BP/SOgT/0ToE/9E6BP/QOQT/0DkE/9A5BP/QOQT/0DgE/9A4BP/POAT/zzYE/882BP/ONgT/zjUF
/841Cv/ONQr/zjUK/801Cv/NNAr/zTQL/800DP/NNA7/zTQO/80zDv/MMw7/zDIO/8wyDv/MMw//
yzYY/9ZkVP310Mne99jRIfjd1gIAAAAA//vsAv/66SD/9+Dd99Rj/fPFHP/zxRH/88UQ//TFD//1
xQ//9cUP//XFD//1xA//9MQN//TDC//0wwv/9MML//TDC//0wgv/9MIL//TCBv/0wQX/9MEF//TB
Bf/0wAX/9MAF//TABf/zwAX/88AF//O/Bf/zvwX/878F//O+Bf/zvgX/874F//O+Bf/zvQX/87wF
//O8Bf/zuwX/87sF//O7Bf/yuwX/8roF//K6Bf/yugX/8roF//K5Bf/yuQX/8rkF//K4Bf/yuAX/
8rgF//K4Bf/ytwX/8rcF//K2Bf/xtgX/8bUF//G1Bf/xtQX/8bQF//G0Bf/xtAX/8bQF//GzBf/x
swX/8bMF//GzBf/xswX/8bIF//GyBf/wsgX/8LEF//CwBf/wsAX/8K8F//CvBf/wrwX/8K8F//Cv
Bf/wrwj/8KoA//TBP//jczj/2UIA/9tNA//aSgD/2koA/9pKAP/aSQD/2kkA/9lIAP/ZSAD/2UgA
/9lIAP/ZRwD/2EcA/9hGAP/YRgD/2EUA/9hFAP/YRQD/10QA/9dEAP/XRAD/10MA/9dDAP/WQwD/
1kIA/9ZCAP/WQgD/1kEA/9ZBAP/VQAD/1UAA/9U/AP/VPwD/1T8A/9Q+AP/UPgD/1D0A/9M9AP/T
PAD/0zwA/9M8AP/SPAD/0jsA/9I7AP/SOgD/0joA/9I5AP/ROAD/0TgA/9E3AP/QNwD/0DcA/9A2
AP/QNgD/0DYA/882AP/PNQD/zzUA/881AP/ONAD/zjQA/84zAP/OMwD/zTMA/80yAP/NMgD/zTIA
/80xAP/MMQD/zDEA/8wwAP/MMAD/zC8A/8wvAP/LLwD/yy4A/8svAv/KMxH/1WJS/fTQyN732NAh
+NvTAgAAAAD/+u0C//nqIf/34N731GL988YZ//PEBf/zxAL/88QC//XFAf/1xAH/9cQB//TDAf/0
wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//O/
Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zuwH/87sB//O7Af/zugH/87oB
//K6Af/yugH/8roB//K5Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3Af/ytwH/8rcB//K3Af/ytgH/
8bUB//G1Af/xtQH/8bQB//G0Af/xtAH/8bMB//GzAf/xswH/8bMB//GyAf/xsgH/8bIB//GyAf/x
sgH/8LEB//CxAf/wsAH/8K8B//CvAf/wrwH/8K4B//CuAf/wrgH/8K4B//CvBP/vqQD/88A7/+Nz
OP/ZQgD/200D/9pLAP/aSgD/2koA/9pKAP/aSQD/2UkA/9lJAP/ZSAD/2UgA/9lIAP/YRwD/2EcA
/9hHAP/YRgD/2EYA/9hFAP/XRQD/10QA/9dEAP/XRAD/10MA/9ZDAP/WQwD/1kIA/9ZCAP/WQgD/
1kEA/9VBAP/VQQD/1UAA/9VAAP/VPwD/1D8A/9Q+AP/UPgD/1D0A/9M9AP/TPQD/0zwA/9I8AP/S
PAD/0jsA/9I7AP/SOwD/0joA/9E5AP/ROQD/0TgA/9A4AP/QNwD/0DcA/9A2AP/QNgD/zzYA/882
AP/PNQD/zzUA/881AP/ONAD/zjQA/840AP/OMwD/zTMA/80yAP/NMgD/zTEA/80xAP/MMQD/zDEA
/8wwAP/MMAD/zC8A/8wvAP/LLwD/yy8B/8oyEf/WYlL99dDH3vfY0CH429MCAAAAAP/67QL/+eoh
//fg3vfUYf3zxhj/88UE//PEAv/zxQL/9cUB//XFAf/1xAH/9MMB//TDAf/0wwH/9MMB//TCAf/0
wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/0vwH/878B//O/
Af/zvgH/874B//O+Af/zvQH/870B//O8Af/zuwH/87sB//O7Af/zuwH/87sB//O6Af/yugH/8roB
//K5Af/yuQH/8rkB//K4Af/yuAH/8rgB//K4Af/ytwH/8rcB//K2Af/ytgH/8rYB//K1Af/xtQH/
8bUB//G0Af/xtAH/8bQB//GzAf/xswH/8bMB//GzAf/xswH/8bIB//GyAf/xsgH/8bEB//GxAf/x
sAH/8K8B//CvAf/wrwH/8K8B//CuAf/wrgH/8K8E/++pAP/zwDv/5HQ4/9lDAP/bTgP/20sA/9tL
AP/bSgD/2koA/9pKAP/aSQD/2kkA/9lIAP/ZSAD/2UgA/9lHAP/ZRwD/2UcA/9hHAP/YRgD/2EYA
/9dFAP/XRQD/10QA/9dEAP/XRAD/10MA/9dDAP/WQgD/1kIA/9ZCAP/WQgD/1kEA/9ZBAP/VQAD/
1UAA/9VAAP/VPwD/1T8A/9Q+AP/UPgD/0z0A/9M9AP/TPQD/0zwA/9M8AP/TPAD/0zwA/9I7AP/S
OgD/0TkA/9E5AP/ROAD/0TgA/9E3AP/QNwD/0DcA/9A3AP/QNgD/0DYA/9A2AP/QNgD/zzUA/881
AP/ONAD/zjQA/84zAP/OMwD/zTIA/80yAP/NMgD/zTEA/80xAP/NMQD/zTEA/8wwAP/MMAD/zC8A
/8wvAP/MMAH/yzMR/9ZjUv300Mfe99jQIffb0wIAAAAA//rtAv/66iH/9+De99Rh/fPGGP/zxQX/
88UC//PFAv/1xQH/9cUB//XEAf/0wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0
wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/zvwH/878B//O/Af/zvgH/874B//O+
Af/zvQH/87wB//O7Af/zuwH/87sB//O7Af/zuwH/87sB//O6Af/yuwH/8roB//K6Af/yuQH/8rkB
//K4Af/yuAH/8rgB//K4Af/ytwH/8rcB//K2Af/ytgH/8rYB//G1Af/xtQH/8bUB//G0Af/xtAH/
8bQB//GzAf/xswH/8bMB//GzAf/xswH/8bIB//GyAf/xsQH/8bEB//GwAf/wrwH/8K8B//CvAf/w
rwH/8K8B//CuAf/wrwT/76kA//PAO//jdDj/2UMA/9tOA//bTAD/20sA/9tLAP/aSgD/2koA/9pK
AP/aSQD/2UkA/9lIAP/ZSAD/2UgA/9lHAP/ZRwD/2EcA/9hHAP/YRgD/2EYA/9dFAP/XRQD/10QA
/9dEAP/XRAD/10MA/9ZCAP/WQgD/1kIA/9ZCAP/WQQD/1kEA/9VAAP/VQAD/1UAA/9U/AP/VPwD/
1D4A/9Q+AP/TPQD/0z0A/9M9AP/TPAD/0zwA/9M8AP/TPAD/0jsA/9I6AP/ROgD/0ToA/9E4AP/R
OAD/0TcA/9A3AP/QNwD/0DcA/9A3AP/QNgD/0DYA/9A2AP/PNQD/zzUA/840AP/ONAD/zjMA/84z
AP/NMgD/zTIA/80yAP/NMgD/zTEA/80xAP/NMQD/zDEA/8wwAP/MMAD/zC8A/8wwAf/LNBL/1mNR
/fTQx972188h99rSAgAAAAD/++wC//rpIf/44N731WH988ca//PFBf/zxQL/88UC//XGAf/1xQH/
9cQB//XEAf/0xAH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0
wAH/9MAB//TAAf/0wAH/9L8B//O/Af/zvwH/878B//O/Af/zvgH/874B//O9Af/zvQH/87wB//O8
Af/zuwH/87sB//O7Af/zuwH/87sB//K7Af/yugH/8roB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB
//K4Af/ytwH/8rYB//K2Af/ytgH/8rYB//G1Af/xtQH/8bUB//G0Af/xtAH/8bQB//GzAf/xswH/
8bMB//GzAf/xswH/8bIB//GxAf/xsQH/8bEB//GwAf/wsAH/8K8B//CvAf/wrwH/8K4B//CvBP/v
qgD/88E7/+R0OP/aQwD/204D/9tMAP/bTAD/2ksA/9pLAP/aSgD/2koA/9pKAP/ZSQD/2UkA/9lI
AP/ZSAD/2UgA/9lHAP/YRwD/2EcA/9hHAP/YRgD/2EYA/9dFAP/XRQD/10UA/9dEAP/XRAD/1kMA
/9ZCAP/WQgD/1kIA/9ZCAP/WQQD/1UEA/9VAAP/VQAD/1T8A/9U/AP/UPgD/1D4A/9Q+AP/TPQD/
0z0A/9M8AP/TPAD/0zwA/9M8AP/SOwD/0jsA/9E6AP/ROgD/0TgA/9E4AP/ROAD/0DcA/9A3AP/Q
NwD/0DcA/9A3AP/QNgD/0DYA/881AP/PNQD/zjQA/840AP/OMwD/zjMA/80yAP/NMgD/zTIA/80y
AP/NMgD/zTIA/80xAP/MMQD/zDAA/8wwAP/MMAD/zDAC/8s1Ff/XaFj8883E2PbXzyf329MDAAAA
AP/77QP/+ukn//fc2PfXaPzzxxz/88UF//PFAv/zxQL/9cYB//XGAf/1xQH/9cQB//XEAf/1xAH/
9cQB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0
wAH/9L8B//S/Af/0vwH/9L8B//O/Af/zvwH/874B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O8
Af/zuwH/87sB//O7Af/zuwH/87oB//O6Af/yuQH/8rkB//K5Af/yuAH/8rgB//K3Af/ytgH/8rYB
//K2Af/ytgH/8rYB//K1Af/ytQH/8rUB//G0Af/xtAH/8bQB//G0Af/xswH/8bMB//GzAf/xsgH/
8bIB//GyAf/xsQH/8bEB//GwAf/xsAH/8a8B//CvAf/wrwH/8LAE/++qAP/zwTv/5HU4/9pEAP/c
TgP/20wA/9tMAP/bTAD/20sA/9tLAP/aSwD/2koA/9pKAP/aSQD/2UkA/9lIAP/ZSAD/2UgA/9lH
AP/ZRwD/2EYA/9hGAP/YRgD/2EYA/9hFAP/YRQD/10UA/9dEAP/XQwD/10MA/9dCAP/XQgD/1kIA
/9ZBAP/WQQD/1kEA/9VAAP/VQAD/1T8A/9U/AP/UPgD/1D4A/9Q9AP/UPQD/1D0A/9M8AP/TPAD/
0zwA/9I7AP/SOwD/0joA/9I6AP/ROQD/0TgA/9E4AP/ROAD/0TgA/9A3AP/QNwD/0DcA/9A3AP/Q
NgD/zzUA/881AP/PNAD/zzQA/840AP/OMwD/zjMA/84zAP/OMwD/zTMA/80yAP/NMgD/zTIA/80x
AP/NMQD/zDAA/8wwAP/MMQL/yzcX/9doWPzzzcTY9tbOJ/fa0gMAAAAA//vsA//66Cf/99zY99dn
/PPIHv/zxgX/88UC//PGAv/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB//TDAf/0wwH/
9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/0
vwH/878B//O/Af/zvgH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O8Af/zvAH/87sB//O7
Af/zugH/87oB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB//K3Af/ytwH/8rYB//K2Af/ytgH/8rYB
//K1Af/ytQH/8bUB//G0Af/xtAH/8bQB//GzAf/xswH/8bMB//GzAf/xsgH/8bIB//GxAf/xsQH/
8bEB//GwAf/xsAH/8LAB//CvAf/wsAT/76oA//PBO//kdTj/2kQA/9xPA//cTQD/20wA/9tMAP/b
TAD/20wA/9pLAP/aSwD/2koA/9pKAP/aSgD/2UkA/9lJAP/ZSAD/2UgA/9lHAP/ZRwD/2EcA/9hG
AP/YRgD/2EYA/9hGAP/XRQD/10QA/9dEAP/XRAD/10QA/9dDAP/WQwD/1kIA/9ZCAP/WQgD/1kEA
/9VBAP/VQAD/1T8A/9U/AP/UPgD/1D4A/9Q+AP/UPgD/1D0A/9M8AP/TPAD/0zwA/9I7AP/SOgD/
0joA/9I5AP/ROQD/0TkA/9E4AP/ROAD/0TgA/9A3AP/QNwD/0DcA/9A3AP/PNQD/zzUA/881AP/P
NAD/zzQA/840AP/OMwD/zjMA/84zAP/NMwD/zTMA/80zAP/NMgD/zTIA/80xAP/MMQD/zDAA/8wx
Av/LNxf/12lY/PPNxNj21s4n99rSAwAAAAD/++wD//roJ//33Nj312f888ge//PGBf/zxgL/9MYC
//XHAf/1xgH/9cYB//XFAf/1xQH/9cQB//XEAf/0xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wgH/
9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/zvwH/878B//O+Af/z
vgH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O8Af/zvAH/87sB//O6Af/zugH/8roB//K6
Af/yuQH/8rkB//K5Af/yuAH/8rcB//K3Af/ytgH/8rYB//K2Af/ytgH/8rYB//K1Af/xtQH/8bUB
//G0Af/xtAH/8bQB//GzAf/xswH/8bMB//GyAf/xsgH/8bEB//GxAf/xsQH/8bEB//GwAf/wsAH/
8LAB//CwBP/vqwD/88I7/+R1OP/aRAD/3E8D/9xNAP/bTAD/20wA/9tMAP/bTAD/2ksA/9pLAP/a
SgD/2koA/9pKAP/ZSQD/2UkA/9lIAP/ZSAD/2UcA/9lHAP/YRwD/2EYA/9hGAP/YRgD/2EYA/9dF
AP/XRAD/10QA/9dEAP/XRAD/10MA/9ZDAP/WQgD/1kIA/9ZBAP/WQQD/1UEA/9VAAP/VPwD/1T8A
/9Q+AP/UPgD/1D4A/9Q+AP/UPgD/1D0A/9M8AP/TPAD/0jsA/9I6AP/SOgD/0joA/9E5AP/ROQD/
0TgA/9E4AP/QNwD/0DcA/9A3AP/QNwD/0DcA/881AP/PNQD/zzUA/880AP/ONAD/zjQA/84zAP/O
MwD/zjMA/80zAP/NMwD/zTMA/80yAP/NMgD/zTEA/8wxAP/MMAD/zDEC/8s3F//XaVj8883E2PbW
zif32tIDAAAAAP/77AP/+ugn//fc2PfXZ/zzyR7/88cF//PGAv/0xgL/9ccB//XHAf/1xgH/9cUB
//XFAf/1xQH/9cUB//TEAf/0xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/
9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9MAB//O/Af/zvwH/878B//O+Af/zvgH/870B//O9Af/z
vQH/87wB//O8Af/zvAH/87wB//O8Af/zuwH/87sB//O6Af/yugH/8roB//K6Af/yuQH/8rkB//K4
Af/yuAH/8rcB//K3Af/ytwH/8rYB//K2Af/ytgH/8rYB//G1Af/xtQH/8bUB//G1Af/xtAH/8bQB
//G0Af/xswH/8bMB//GyAf/xsgH/8bEB//GxAf/xsQH/8bEB//CwAf/wsAH/8LEE/++rAP/zwTv/
5HU4/9tFAP/cTwP/3E0A/9tMAP/bTAD/20wA/9tMAP/bSwD/2ksA/9pLAP/aSgD/2koA/9lJAP/a
SQD/2kkA/9lIAP/ZSAD/2UcA/9hHAP/ZRgD/2EYA/9hGAP/YRgD/2EYA/9hFAP/XRAD/10QA/9dE
AP/XQwD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/WQQD/1kAA/9U/AP/VPwD/1T8A/9Q+AP/UPgD/1D4A
/9Q+AP/UPQD/0zwA/9M8AP/TOwD/0joA/9I6AP/SOgD/0TkA/9I5AP/ROQD/0TgA/9E4AP/QNwD/
0DcA/9A3AP/QNwD/0DYA/881AP/PNQD/zzQA/880AP/PNAD/zjQA/84zAP/ONAD/zjQA/84zAP/O
MwD/zTIA/80yAP/NMQD/zDEA/8wxAP/NMQL/zDcX/9dpWPz0zcTY99bOJ/ja0gMAAAAA//vsA//6
6Cf/99zY+Nhn/PTJHv/0xwX/9cgB//XIAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB
//XEAf/1xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/
9MEB//TAAf/0wAH/9L8B//S/Af/0vwH/9L4B//O+Af/zvQH/870B//O9Af/zvQH/870B//O9Af/z
vQH/87wB//O8Af/zvAH/87sB//O7Af/zuwH/87oB//K5Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3
Af/ytwH/8rcB//K2Af/ytgH/8bYB//G1Af/xtQH/8bUB//G1Af/xtAH/8bQB//G0Af/xswH/8bMB
//GyAf/xsgH/8bIB//GxAf/xsQH/8bEB//GwAf/xsQT/76wA//PCO//ldTj/20UA/91PA//cTQD/
3E0A/9xNAP/bTAD/20wA/9tMAP/bSwD/2ksA/9pLAP/aSgD/2koA/9pJAP/aSQD/2UkA/9lIAP/Z
RwD/2UcA/9lHAP/YRgD/2EYA/9hGAP/YRgD/2EYA/9dFAP/XRAD/10QA/9dDAP/XQwD/10MA/9ZC
AP/WQgD/1kIA/9ZBAP/WQQD/1UAA/9VAAP/VPwD/1T8A/9U/AP/UPgD/1D4A/9Q+AP/UPQD/0zwA
/9M7AP/SOgD/0joA/9I6AP/SOQD/0jkA/9E5AP/ROQD/0TgA/9E3AP/QNwD/0DcA/9A3AP/QNgD/
0DYA/881AP/PNQD/zzQA/880AP/ONAD/zjQA/840AP/ONAD/zjQA/84zAP/OMwD/zTIA/80yAP/N
MQD/zTEA/80yAv/MNxf/2GlY/PTNxNj31s4n+NrSAwAAAAD//OwD//voJ//43Nj42Gf89Moe//XI
Bf/2yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/0xAH/9MQB
//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//S/Af/0vwH/
9L8B//S/Af/0vgH/9L4B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8Af/z
vAH/87sB//O7Af/zuwH/8roB//K6Af/yuQH/8rgB//K4Af/yuAH/8rgB//K3Af/ytwH/8rcB//K2
Af/xtgH/8bYB//G1Af/xtQH/8bUB//G1Af/xtAH/8bQB//G0Af/xswH/8bIB//GyAf/xsgH/8bIB
//GxAf/xsQH/8bEB//GxBP/vrAD/88I7/+R2OP/bRQD/3VAD/9xOAP/cTgD/3E4A/9tNAP/bTAD/
20wA/9tLAP/aSwD/2ksA/9pLAP/aSgD/2koA/9pJAP/ZSQD/2UgA/9lIAP/ZSAD/2UcA/9hHAP/Y
RgD/2EYA/9hGAP/YRgD/10UA/9dFAP/XRQD/10QA/9dEAP/XQwD/1kMA/9ZCAP/WQgD/1kEA/9ZB
AP/VQQD/1UAA/9U/AP/VPwD/1T8A/9Q+AP/UPgD/1D0A/9Q9AP/TPQD/0zwA/9I7AP/SOgD/0joA
/9I6AP/SOQD/0TkA/9E5AP/ROQD/0TgA/9E3AP/QNwD/0DcA/9A2AP/QNgD/zzYA/881AP/PNQD/
zzQA/880AP/ONAD/zjQA/840AP/ONAD/zjQA/84zAP/NMwD/zTIA/80yAP/NMQD/zTIC/8w4F//Y
aVj89M3E2PfWzif42tIDAAAAAP/87AP/++gn//jc2PnYZ/z2yh7/9soF//bJAf/1yAH/9cgB//XH
Af/1xwH/9cYB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//TEAf/0xAH/9MQB//TEAf/0wwH/9MMB
//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/9L8B//S+Af/0vgH/
874B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87sB//O7Af/z
uwH/8roB//K5Af/yuAH/8rgB//K4Af/yuAH/8rgB//K4Af/ytwH/8rcB//G2Af/xtgH/8bYB//G2
Af/xtQH/8bUB//G1Af/xtAH/8bQB//G0Af/xswH/8bIB//GyAf/xsgH/8bIB//GxAf/xsQH/8bIE
/++sAP/zwjv/5HY4/9tGAP/dUQP/3U8A/91PAP/cTgD/3E4A/9xNAP/bTAD/20sA/9tLAP/bSwD/
2ksA/9pLAP/aSgD/2koA/9pJAP/aSQD/2UgA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/Y
RQD/2EUA/9hFAP/YRQD/10QA/9dEAP/XQwD/10MA/9ZCAP/WQgD/1kIA/9ZBAP/WQQD/1UAA/9U/
AP/VPwD/1D8A/9Q+AP/UPgD/1D0A/9M9AP/TPAD/0zwA/9M7AP/SOgD/0joA/9I6AP/SOQD/0jkA
/9E5AP/ROAD/0TgA/9E4AP/QNwD/0DcA/9A3AP/QNgD/0DYA/881AP/PNQD/zzUA/881AP/PNQD/
zjQA/840AP/ONAD/zjQA/84zAP/OMwD/zTIA/80yAP/NMgH/zDkY/9hpV/z0zcTY99XNJ/jZ0QMA
AAAA//zrA//75yf/+NzY+dln/PbLIP/2yQT/9skB//XIAf/1yAH/9cgB//XHAf/1xgH/9cYB//XG
Af/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/9MMB//TDAf/0wwH/9MIB
//TCAf/0wgH/9MIB//TBAf/0wQH/9MAB//S/Af/0vwH/9L8B//S/Af/zvgH/874B//O+Af/zvgH/
874B//O+Af/zvQH/870B//O9Af/zvQH/870B//O8Af/zvAH/87sB//O6Af/zugH/87kB//K5Af/y
uQH/8rkB//K5Af/yuQH/8rgB//K3Af/ytwH/8rYB//K2Af/ytgH/8rYB//G2Af/xtgH/8bUB//G1
Af/xtAH/8bQB//GzAf/xsgH/8bIB//GyAf/xsgH/8bIB//GxAf/xsgT/760A//PDO//kdjj/20YA
/91RA//dTwD/3U8A/91PAP/cTgD/3E4A/9xNAP/bTAD/20wA/9tLAP/bSwD/2ksA/9pKAP/aSgD/
2koA/9pJAP/aSQD/2UkA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRQD/2EUA/9hFAP/Y
RQD/10QA/9dEAP/XQwD/10MA/9ZDAP/WQgD/1kIA/9ZBAP/WQAD/1UAA/9U/AP/UPwD/1D8A/9Q/
AP/UPgD/1D0A/9M9AP/TPQD/0zwA/9M7AP/SOgD/0joA/9I6AP/SOgD/0joA/9E5AP/ROQD/0TgA
/9E4AP/QNwD/0DcA/9A3AP/QNgD/0DYA/881AP/PNQD/zzUA/881AP/ONQD/zjQA/840AP/ONAD/
zjQA/84zAP/NMwD/zTMA/80zAv/MNxX/2GpY/PTNxNj3188n+NvTAwAAAAD//O0D//vpJ//43Nj5
2Wj89soc//bJBP/2yQH/9cgB//XIAf/1yAH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cYB//XG
Af/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MEB
//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//O/Af/zvgH/874B//O+Af/zvgH/870B//O9Af/zvQH/
870B//O9Af/zvQH/87wB//O8Af/zuwH/87sB//O7Af/zugH/8rkB//K5Af/yuQH/8rkB//K5Af/y
uAH/8rgB//K3Af/ytgH/8rcB//K3Af/ytwH/8bYB//G2Af/xtgH/8bUB//G1Af/xtAH/8bMB//Gz
Af/xsgH/8bIB//GyAf/xsgH/8bIB//GyBP/vrQD/88M7/+R3OP/bRwD/3VED/91PAP/dTwD/3U8A
/9xPAP/cTgD/3E4A/9xNAP/bTAD/20wA/9tLAP/aSwD/2ksA/9pKAP/aSgD/2koA/9pJAP/ZSQD/
2UgA/9lIAP/ZSAD/2UcA/9lHAP/ZRgD/2EYA/9hGAP/YRQD/2EUA/9hFAP/YRQD/10QA/9dEAP/X
RAD/1kMA/9ZDAP/WQgD/1kEA/9VBAP/VQAD/1UAA/9Q/AP/UPwD/1D4A/9Q+AP/UPQD/1D4A/9M9
AP/TPAD/0zwA/9I7AP/SOgD/0joA/9I6AP/SOgD/0TkA/9E5AP/ROAD/0TgA/9A4AP/QNwD/0DcA
/9A2AP/PNgD/zzYA/881AP/PNQD/zzUA/841AP/ONQD/zjQA/840AP/ONAD/zjQA/80zAP/NMwD/
zTMC/8w4F//YaVj89M3E2PfWzif42tIDAAAAAP/87AP/++gn//jc2PnZZ/z2yx7/9skE//bJAf/1
yAH/9cgB//XIAf/1xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XF
Af/1xAH/9MQB//TEAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB
//S/Af/0vwH/878B//O+Af/zvgH/874B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvAH/
87wB//O7Af/zuwH/87sB//O6Af/zuQH/8rkB//K5Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3Af/y
twH/8rcB//K3Af/xtgH/8bYB//G2Af/xtQH/8bUB//G1Af/xtAH/8bMB//GzAf/xsgH/8bIB//Gy
Af/xsgH/8bME//CtAP/0wzv/5Xc4/9xHAP/eUgP/3VAA/91QAP/dTwD/3U8A/91PAP/cTgD/3E0A
/9xMAP/bTAD/20wA/9pLAP/bSwD/20sA/9pKAP/aSgD/2koA/9pJAP/aSQD/2kgA/9pIAP/aSAD/
2UcA/9lHAP/ZRgD/2UYA/9lGAP/YRQD/2EUA/9hFAP/XRAD/10QA/9dEAP/XRAD/1kMA/9ZDAP/W
QgD/1UEA/9VAAP/VQAD/1T8A/9U/AP/VPwD/1T4A/9Q+AP/UPgD/1D0A/9M9AP/TPAD/0jwA/9M7
AP/SOwD/0jsA/9I7AP/ROwD/0ToA/9E5AP/ROAD/0TgA/9E4AP/QNwD/0DcA/9A2AP/QNgD/zzYA
/882AP/PNgD/zzYA/881AP/PNQD/zjQA/840AP/ONAD/zjMA/84zAP/ONAL/zTgX/9lpWPz0zcTY
99bOJ/ja0gMAAAAA//zsA//76Cf/+NzY+dln/PbLHv/2ygX/9skB//XJAf/1yAH/9cgB//XHAf/1
xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//XE
Af/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TAAf/0wAH/9MAB//TAAf/0vwH/9L8B
//S/Af/zvwH/874B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/
87sB//O6Af/zugH/87oB//K5Af/yuQH/8rkB//K4Af/yuAH/8rcB//K3Af/ytwH/8rcB//K3Af/y
tgH/8rYB//G2Af/xtQH/8bUB//G0Af/xswH/8bMB//GzAf/xswH/8bIB//GyAf/xswT/8K4A//TE
O//ldzj/3EcA/95SA//dUAD/3VAA/91PAP/dTwD/3U4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/20wA
/9tLAP/bSwD/2ksA/9pKAP/aSgD/2koA/9pJAP/aSQD/2kkA/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/
2UYA/9lGAP/YRQD/2EUA/9hFAP/XRAD/10QA/9dEAP/WQwD/1kMA/9ZCAP/VQQD/1UEA/9VAAP/V
QAD/1T8A/9U/AP/VPwD/1D4A/9Q+AP/UPgD/1D0A/9M9AP/TPAD/0zwA/9I7AP/SOwD/0jsA/9E7
AP/ROgD/0ToA/9E5AP/ROQD/0TgA/9A4AP/QNwD/0DcA/9A2AP/PNgD/zzYA/882AP/PNgD/zzYA
/881AP/PNQD/zjQA/840AP/OMwD/zjMA/840Av/NORf/2WpY/PTOxNj31s4n+NrSAwAAAAD//OwD
//voJ//43Nj52Wf89sse//bKBf/2yQH/9ckB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1
xgH/9cYB//XGAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TD
Af/0wgH/9MIB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/9L8B//O/Af/zvwH/874B
//O+Af/zvgH/870B//O9Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/87oB//O6Af/zugH/
8rkB//K5Af/yuQH/8rgB//K4Af/yuAH/8rcB//K3Af/ytwH/8rcB//K3Af/ytgH/8bYB//G1Af/x
tQH/8bQB//G0Af/xswH/8bMB//GzAf/xswH/8bIB//GzBP/wrgD/9MQ7/+V3OP/cRwD/3lID/91Q
AP/dUAD/3VAA/91PAP/dTwD/3E4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/20wA/9tLAP/aSwD/2ksA
/9pKAP/aSgD/2koA/9pJAP/aSQD/2kkA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2UYA/9hGAP/YRQD/
2EUA/9hFAP/XRAD/10QA/9dEAP/WQwD/1kIA/9ZCAP/VQQD/1UEA/9VAAP/VQAD/1T8A/9U/AP/U
PwD/1D4A/9Q+AP/UPgD/1D0A/9M9AP/TPAD/0jsA/9I7AP/SOwD/0TsA/9E7AP/ROgD/0ToA/9E5
AP/ROQD/0DgA/9A4AP/QNwD/0DcA/9A3AP/PNgD/zzYA/882AP/PNgD/zzYA/881AP/ONQD/zjQA
/840AP/OMwD/zjQC/805F//Zalj89M7E2PfXzif429IDAAAAAP/87AP/++gn//jc2PnZZ/z2yx7/
9ssF//bKAf/1yQH/9ckB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1
xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TDAf/0wgH/9MEB//TB
Af/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/878B//O/Af/zvwH/878B//O+Af/zvgH/870B
//O9Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/87oB//O6Af/zugH/8rkB//K5Af/yuQH/
8rgB//K4Af/yuAH/8rcB//K3Af/ytwH/8rcB//K3Af/xtgH/8bYB//G1Af/xtQH/8bQB//G0Af/x
tAH/8bMB//GzAf/xswH/8bME//CuAP/0xDv/5Xg4/9xIAP/eUwP/3lEA/95RAP/eUQD/3VAA/91P
AP/dTwD/3U4A/9xOAP/cTgD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSwD/20sA/9pKAP/aSgD/2kkA
/9pJAP/aSQD/2kkA/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/2UYA/9lGAP/YRQD/2EUA/9hFAP/XRAD/
10QA/9ZDAP/WQwD/1kIA/9ZCAP/WQQD/1UEA/9VAAP/VQAD/1UAA/9U/AP/VPwD/1D4A/9Q+AP/U
PgD/1D0A/9M9AP/TPAD/0jwA/9I8AP/SOwD/0jsA/9I7AP/SOwD/0TkA/9E5AP/ROAD/0TgA/9A3
AP/QNwD/0DcA/9A3AP/QNwD/zzYA/882AP/PNgD/zzYA/881AP/PNQD/zjQA/840AP/ONQL/zTkX
/9lrWPz0zsTY99fOJ/jb0gMAAAAA//zsA//76Cf/+NzY+dln/PbMHv/2ygX/9soB//bJAf/2yQH/
9skB//bIAf/1yAH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1
xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0xAH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TB
Af/0wAH/9MAB//TAAf/0vwH/9L8B//S/Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B
//O9Af/zvAH/87wB//O7Af/zugH/87oB//O6Af/zugH/87oB//O5Af/zuQH/8rgB//K4Af/yuAH/
8rgB//K3Af/ytwH/8rcB//K2Af/ytgH/8rYB//K1Af/xtQH/8bQB//G0Af/xtAH/8bMB//GzAf/x
tAT/8K4A//TEO//leDj/3EgA/95TA//eUQD/3lEA/91RAP/dUAD/3U8A/91PAP/dTgD/3E4A/9xO
AP/cTgD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSwD/2koA/9pKAP/aSgD/2kkA/9pJAP/aSQD/2kkA
/9lIAP/ZSAD/2UgA/9lHAP/ZRwD/2UYA/9hGAP/YRQD/2EUA/9dEAP/XRAD/1kMA/9ZDAP/WQgD/
1kIA/9ZCAP/VQQD/1UEA/9VAAP/VQAD/1UAA/9U/AP/UPwD/1D4A/9Q+AP/UPgD/0z0A/9M8AP/T
PAD/0zwA/9I7AP/SOwD/0jsA/9I7AP/ROQD/0TkA/9E5AP/ROAD/0DgA/9A3AP/QNwD/0DcA/9A3
AP/PNgD/zzYA/882AP/PNgD/zzUA/881AP/ONAD/zjQA/841Av/NOhf/2WtY/PTOxNj3184n+NvS
AwAAAAD//OwD//voJ//43Nj52mf89swe//bLBf/2ygH/9skB//bJAf/2yQH/9sgB//XIAf/1yAH/
9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1
xQH/9cQB//TEAf/0xAH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB//TA
Af/0vwH/878B//O/Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O9Af/zvAH/87sB
//O7Af/zuwH/87sB//O7Af/zugH/87oB//O6Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3Af/ytwH/
8rcB//K2Af/ytgH/8rUB//G1Af/xtQH/8bQB//G0Af/xtAH/8bMB//G0BP/wrwD/9MQ7/+Z5OP/d
SQD/31QD/95RAP/eUQD/3lAA/95QAP/eTwD/3U8A/91PAP/dTgD/3U4A/91OAP/cTgD/3E0A/9xN
AP/bTAD/20wA/9tLAP/bSwD/20sA/9pKAP/aSgD/2koA/9pJAP/aSQD/2UgA/9lIAP/ZSAD/2UgA
/9lHAP/ZRwD/2EYA/9hGAP/YRQD/10QA/9dEAP/XQwD/10MA/9ZDAP/WQgD/1kIA/9ZCAP/WQgD/
1kEA/9ZBAP/VQAD/1UAA/9U/AP/VPwD/1T4A/9Q+AP/UPQD/0zwA/9M8AP/TPAD/0zwA/9I7AP/S
OwD/0jsA/9I6AP/SOgD/0TkA/9E5AP/ROAD/0TgA/9A3AP/QNwD/0DcA/9A3AP/QNgD/0DYA/9A2
AP/PNQD/zzUA/880AP/PNAD/zzUC/847GP/aa1f89M7E2PfWzSf42tEDAAAAAP/86wP/++cn//jc
2PnaZ/z2zCD/9ssF//bKAf/2yQH/9skB//bJAf/2yQH/9cgB//XIAf/1yAH/9cgB//XIAf/1yAH/
9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9MQB//TEAf/0
xAH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/878B//O/
Af/zvwH/878B//O/Af/zvgH/874B//O+Af/zvQH/870B//O8Af/zvAH/87sB//O7Af/zuwH/87sB
//O7Af/zugH/87oB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB//K4Af/ytwH/8rcB//K2Af/ytgH/
8rYB//G1Af/xtQH/8bQB//G0Af/xtAH/8bUE//CvAP/0xDv/5nk4/91JAP/fVAP/3lEA/95RAP/e
UQD/3lAA/95QAP/dUAD/3U8A/91PAP/dTgD/3U4A/9xOAP/cTgD/3E0A/9xNAP/bTAD/20wA/9tL
AP/bSwD/2koA/9pKAP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZSAD/2UcA/9lHAP/YRgD/2EUA
/9hFAP/XRAD/10QA/9dEAP/XQwD/1kMA/9ZDAP/WQgD/1kIA/9ZCAP/WQgD/1kEA/9VBAP/VQAD/
1UAA/9U/AP/VPgD/1D4A/9Q+AP/TPQD/0z0A/9M8AP/TPAD/0zsA/9I7AP/SOwD/0joA/9I6AP/R
OQD/0TkA/9E5AP/ROAD/0DgA/9A4AP/QNwD/0DcA/9A2AP/QNgD/0DYA/882AP/PNQD/zzUA/880
AP/PNQP/zjwZ/9pvXfvzy8HT99bNLPjb0gQAAAAA//zsBP/75yz/99nT+dtt+/bNIf/2ywX/9soB
//bKAf/2yQH/9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/
9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cUB//XEAf/0wwH/9MMB//TCAf/0
wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/0vwH/9L8B//O/
Af/zvgH/874B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O8Af/zuwH/87sB//O7Af/zuwH/8roB
//K6Af/yuQH/8rkB//K4Af/yuAH/8rgB//K4Af/ytwH/8rcB//K2Af/ytgH/8rYB//K1Af/ytQH/
8bUB//G0Af/xtQT/8LAA//TFO//meTj/3UoA/99UA//eUgD/3lEA/95RAP/eUQD/3lAA/91QAP/d
TwD/3U8A/91PAP/dTgD/3E4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/20wA/9tLAP/aSgD/2koA/9pK
AP/aSQD/2kkA/9lIAP/ZSAD/2UgA/9lIAP/ZRwD/2UcA/9hGAP/YRgD/2EUA/9dFAP/XRAD/10QA
/9dEAP/WQwD/1kMA/9ZCAP/WQgD/1kIA/9ZCAP/WQQD/1UEA/9VAAP/VQAD/1UAA/9U/AP/UPgD/
1D4A/9M9AP/TPQD/0z0A/9M8AP/TPAD/0jsA/9I7AP/SOwD/0joA/9E6AP/ROgD/0TkA/9E5AP/Q
OAD/0DgA/9A3AP/QNwD/0DcA/9A2AP/QNgD/zzYA/882AP/PNQD/zzUA/881A//OPRz/2m9d+/PL
wdP21cws+NrRBAAAAAD//OsE//rmLP/32dP53Gz79s0j//bMBf/2ywH/9soB//bJAf/2yQH/9skB
//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xgH/
9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XDAf/0wwH/9MIB//TCAf/0wgH/9MIB//TCAf/0
wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0wAH/9L8B//S/Af/0vwH/878B//O/Af/zvgH/874B//O9
Af/zvQH/87wB//O8Af/zvAH/87wB//O8Af/zuwH/87sB//O7Af/yugH/8roB//K6Af/yuQH/8rkB
//K4Af/yuAH/8rgB//K4Af/ytwH/8rYB//K2Af/ytgH/8rYB//K1Af/xtQH/8bUB//G1BP/wsAD/
9MU7/+Z5OP/dSgD/31UD/95SAP/eUgD/3lIA/95RAP/eUQD/3VAA/91QAP/dTwD/3U8A/91PAP/c
TgD/3E4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/20sA/9tLAP/aSgD/2koA/9pJAP/aSQD/2kgA/9lI
AP/ZSAD/2UgA/9lHAP/ZRwD/2UcA/9hGAP/YRgD/10UA/9dFAP/XRQD/10QA/9dEAP/WQwD/1kMA
/9ZCAP/WQgD/1kIA/9ZCAP/VQQD/1UEA/9VAAP/VQAD/1T8A/9Q/AP/UPgD/0z0A/9M9AP/TPQD/
0z0A/9M8AP/TPAD/0jwA/9I7AP/SOwD/0ToA/9E6AP/ROQD/0TkA/9E5AP/QOAD/0DgA/9A3AP/Q
NwD/0DcA/9A2AP/PNgD/zzYA/881AP/PNQD/zzYC/846F//aa1j89M7E2PbVzCz42tEEAAAAAP/8
6wT/+uYs//jc2PncZ/z2zR7/9swF//bLAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9skB
//XIAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/
9cUB//XFAf/1xQH/9cQB//TDAf/0wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0
wQH/9MAB//TAAf/0wAH/9L8B//S/Af/zvwH/878B//O/Af/zvwH/874B//O9Af/zvAH/87wB//O8
Af/zvAH/87wB//O8Af/zuwH/87sB//K7Af/yuwH/8roB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB
//K3Af/ytwH/8rYB//K2Af/ytgH/8rYB//G1Af/xtQH/8bYE//CwAP/0xTv/5nk4/91KAP/fVQP/
31MA/99SAP/fUgD/3lIA/95RAP/eUQD/3lAA/91QAP/dUAD/3U8A/91OAP/dTgD/3U4A/9xOAP/c
TQD/3E0A/9tMAP/bTAD/20sA/9tLAP/bSgD/2koA/9pJAP/aSQD/2kgA/9pIAP/aSAD/2UcA/9lH
AP/ZRwD/2UcA/9hGAP/YRgD/2EUA/9dFAP/XRQD/10QA/9dEAP/XQwD/1kMA/9ZCAP/WQgD/1kIA
/9ZCAP/WQQD/1UAA/9VAAP/VQAD/1T8A/9Q/AP/UPgD/1D4A/9Q+AP/TPgD/0z0A/9M8AP/TOwD/
0jsA/9I7AP/SOwD/0joA/9E6AP/ROQD/0TkA/9E5AP/ROAD/0DgA/9A3AP/QNwD/0DcA/9A2AP/Q
NgD/zzUA/881AP/PNgL/zjoX/9prWPz0zsTY99fOJ/jb0gMAAAAA//zsA//76Cf/+NzY+txn/PbO
Hv/2zAX/9swB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bJAf/2yQH/9cgB
//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cYB//XFAf/1xAH/
9cQB//XDAf/1wwH/9cMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0
wAH/9MAB//S/Af/0vwH/9L8B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8
Af/zvAH/87sB//O7Af/zugH/8rkB//K5Af/yuQH/8rkB//K5Af/yuAH/8rgB//K3Af/ytwH/8rYB
//K2Af/ytgH/8rYB//K2Af/ytgT/8LEA//TGO//mejj/3UsA/99VA//fUwD/31IA/95SAP/eUgD/
3lIA/95RAP/eUQD/3VAA/91QAP/dTwD/3U8A/91OAP/dTgD/3E4A/9xNAP/cTQD/200A/9tMAP/b
SwD/20sA/9tKAP/aSgD/2koA/9pJAP/aSQD/2kgA/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/2UcA/9hG
AP/YRgD/10UA/9dFAP/XRAD/10QA/9dEAP/WQwD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/VQQD/1UAA
/9VAAP/VQAD/1T8A/9Q/AP/UPgD/1D4A/9M+AP/TPgD/0z0A/9M8AP/SOwD/0jsA/9I7AP/SOwD/
0ToA/9E6AP/ROQD/0TkA/9E5AP/QOAD/0DgA/9A4AP/QNwD/0DcA/9A2AP/PNgD/zzUA/882Av/O
Oxf/2mtY/PTOxNj3184n+NvSAwAAAAD//OwD//voJ//43Nj63Gf89s4e//bMBf/2zAH/9ssB//bL
Af/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB
//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cUB//XFAf/1xAH/9cQB//XDAf/1wwH/
9cMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/Af/0
vwH/878B//O+Af/zvgH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87sB//O7
Af/zugH/8roB//K6Af/yuQH/8rkB//K5Af/yuAH/8rgB//K4Af/ytwH/8rYB//K2Af/ytgH/8rYB
//K2BP/wsQD/9MY7/+d6OP/eSwD/4FUD/99TAP/fUwD/31IA/99SAP/fUgD/3lIA/95RAP/eUQD/
3lEA/95QAP/dTwD/3U8A/91PAP/cTgD/3E4A/9xOAP/bTQD/200A/9tMAP/bSwD/20sA/9tLAP/b
SgD/2koA/9pJAP/aSQD/2kgA/9pIAP/aSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9dF
AP/XRQD/10QA/9dEAP/XQwD/10MA/9dCAP/WQgD/1kIA/9ZBAP/WQQD/1kAA/9VAAP/VQAD/1D8A
/9Q/AP/UPwD/1D8A/9Q+AP/UPgD/0z0A/9M8AP/TPAD/0jsA/9I7AP/SOwD/0jsA/9E6AP/ROgD/
0TkA/9E5AP/ROAD/0TgA/9E4AP/QNwD/0DYA/9A2AP/QNgD/0DcC/887F//bbFj89M/E2PfXzif4
29IDAAAAAP/87AP/++gn//jc2PrdZ/z2zh7/9swF//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bK
Af/2ygH/9soB//bJAf/2yQH/9skB//XIAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB
//XHAf/1xwH/9cYB//XGAf/1xQH/9cUB//XEAf/1xAH/9cQB//XDAf/1wwH/9MMB//TDAf/0wwH/
9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9MAB//S/Af/zvwH/878B//O+Af/z
vQH/870B//O9Af/zvQH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87sB//O7Af/yugH/8roB//K6
Af/yuQH/8rkB//K5Af/yuAH/8rgB//K3Af/ytwH/8rcB//K2Af/ytgH/8rcE//CxAP/0xjv/53o4
/95LAP/gVgP/31MA/99TAP/fUwD/31IA/99SAP/eUgD/3lIA/95RAP/eUAD/3lAA/91QAP/dTwD/
3U8A/9xOAP/cTgD/3E4A/9tNAP/bTQD/200A/9tMAP/bTAD/20sA/9tLAP/aSgD/2koA/9pKAP/a
SQD/2kkA/9pIAP/ZSAD/2UcA/9lHAP/YRgD/2EYA/9hGAP/YRgD/2EUA/9dFAP/XRAD/10QA/9dE
AP/XQwD/10MA/9ZDAP/WQgD/1kIA/9ZBAP/WQQD/1UAA/9VAAP/UQAD/1D8A/9Q/AP/UPwD/1D8A
/9Q+AP/UPgD/0z0A/9M8AP/SPAD/0jsA/9I7AP/SOgD/0ToA/9E6AP/ROgD/0TkA/9E5AP/ROAD/
0TgA/9A4AP/QNgD/0DYA/9A2AP/QNwL/zzsX/9tsWPz1z8TY+NjOJ/nb0gMAAAAA//zsA//76Cf/
+NzY+t1n/PbOHv/2zAX/9swB//bLAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bK
Af/2yQH/9skB//bJAf/2yQH/9skB//bIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xgH/9cYB
//XFAf/1xQH/9cUB//XEAf/1xAH/9cQB//XDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/
9MEB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/9L4B//O+Af/zvgH/874B//O+Af/z
vgH/870B//O9Af/zvQH/87wB//O8Af/zuwH/87sB//O7Af/zugH/87oB//K6Af/yuQH/8rkB//K5
Af/yuAH/8rgB//K3Af/ytwH/8rYB//K2Af/ytwT/8LIA//THO//nezj/3kwA/+BWA//gVAD/4FMA
/99TAP/fUwD/31IA/99SAP/fUgD/3lEA/95RAP/eUAD/3VEA/91QAP/dTwD/3U8A/91PAP/cTgD/
3E4A/9xOAP/bTQD/200A/9tMAP/bSwD/20sA/9tLAP/aSgD/20oA/9pJAP/aSQD/2kkA/9pIAP/a
SAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9dFAP/YRQD/10QA/9dEAP/XQwD/10MA/9dD
AP/WQgD/1kIA/9ZBAP/VQQD/1UEA/9VAAP/VQAD/1EAA/9Q/AP/UPwD/1D8A/9Q+AP/TPQD/1D0A
/9M8AP/TPAD/0jsA/9I7AP/SOgD/0ToA/9I6AP/ROgD/0TkA/9E5AP/ROQD/0TgA/9E3AP/QNwD/
0DYA/9A3Av/PPBf/22xY/PXPxNj42M4n+dvSAwAAAAD//OwD//voJ//43Nj63Wf89s4e//bMBf/2
zAH/9ssB//bLAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bJ
Af/2yQH/9skB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB
//XEAf/1xAH/9cQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MIB//TBAf/0wQH/
9MAB//TAAf/0wAH/9MAB//S/Af/0vwH/874B//O+Af/zvgH/874B//O+Af/zvQH/870B//O9Af/z
vAH/87wB//O7Af/zuwH/87sB//O7Af/zugH/8roB//K6Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3
Af/ytwH/8rYB//K3BP/wsgD/9Mc7/+d7OP/eTAD/4FcD/+BUAP/gVAD/4FQA/99TAP/fUwD/31IA
/99SAP/eUQD/3lEA/95RAP/dUQD/3VAA/91PAP/dTwD/3U8A/91PAP/cTgD/3E4A/9xOAP/bTQD/
200A/9tMAP/bSwD/20sA/9tLAP/bSgD/20oA/9pKAP/aSQD/2kgA/9pIAP/aSAD/2UcA/9lHAP/Z
RwD/2EYA/9hGAP/YRgD/2EUA/9hFAP/YRQD/10QA/9dEAP/XQwD/10MA/9ZDAP/WQgD/1kIA/9VB
AP/VQQD/1UEA/9VAAP/VQAD/1EAA/9Q/AP/UPwD/1D8A/9Q+AP/UPQD/0z0A/9M8AP/TPAD/0jsA
/9I7AP/SOgD/0joA/9E6AP/ROgD/0TkA/9E5AP/ROAD/0TcA/9A3AP/QNwD/0DgC/888F//bbFj8
9c/E2PjYzif529IDAAAAAP/87AP/++gn//jc2PrdZ/z2zh7/9swF//bMAf/2ywH/9ssB//bLAf/2
ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bJAf/2yQH/9cgB//XI
Af/1yAH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB
//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MEB//TAAf/0wAH/
9MAB//S/Af/zvgH/874B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zvAH/87sB//O7Af/z
uwH/87sB//O7Af/yugH/8roB//K6Af/yuQH/8rkB//K4Af/yuAH/8rgB//K3Af/ytgH/8rcE//Cy
AP/0xzv/53s4/95NAP/gVwP/4FUA/+BVAP/gVAD/31QA/99TAP/fUwD/31MA/95SAP/eUgD/3lEA
/91RAP/dUQD/3VAA/91QAP/dUAD/3U8A/9xPAP/cTwD/3E4A/9xOAP/bTQD/200A/9tMAP/bSwD/
20sA/9tLAP/bSwD/2koA/9pKAP/aSQD/2kkA/9pJAP/ZSAD/2UgA/9lHAP/ZRwD/2EYA/9hGAP/Y
RgD/2EUA/9hFAP/YRQD/10QA/9dEAP/XRAD/1kMA/9ZDAP/WQgD/1UIA/9VCAP/VQQD/1UEA/9RA
AP/UQAD/1EAA/9RAAP/UPwD/1D8A/9Q/AP/TPgD/0z0A/9M8AP/TPAD/0jsA/9I7AP/SOwD/0ToA
/9E6AP/ROgD/0TkA/9E5AP/ROAD/0DcA/9A3AP/QOAH/zzsS/9trV/z1z8TY+NfNJ/na0QMAAAAA
//zrA//75yf/+NzY+t1n/PbOGv/2zAT/9swB//bLAf/2ywH/9ssB//bLAf/2ywH/9ssB//bKAf/2
ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1xwH/9ccB//XH
Af/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/0xAH/9MMB//TDAf/0wwH/9MMB
//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//O+Af/zvgH/
874B//O+Af/zvgH/870B//O9Af/zvQH/87wB//O8Af/zuwH/87sB//O7Af/zuwH/87sB//K6Af/y
ugH/8roB//K5Af/yuQH/8rkB//K4Af/yuAH/8rcB//K2Af/ytwT/8LIA//THO//nezj/3k0A/+BY
A//gVQD/4FUA/+BUAP/fVAD/31QA/99TAP/fUwD/3lIA/95SAP/eUgD/3VEA/91RAP/dUAD/3VAA
/91QAP/dUAD/3E8A/9xPAP/cTgD/3E4A/9xOAP/bTQD/20wA/9tMAP/bSwD/20sA/9tLAP/aSwD/
2koA/9pKAP/aSQD/2kkA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRQD/2EUA/9hFAP/Y
RQD/10QA/9dEAP/WQwD/1kMA/9ZDAP/VQgD/1UIA/9VBAP/VQQD/1UEA/9RAAP/UQAD/1EAA/9RA
AP/UPwD/1D8A/9M+AP/TPQD/0z0A/9M8AP/SPAD/0jsA/9I7AP/SOwD/0ToA/9E6AP/ROQD/0TkA
/9E4AP/QOAD/0DcA/9A4Av/PPBX/221Y/PXPxNj42c8n+dzTAwAAAAD//O0D//vpJ//43Nj63Wj8
9s4c//bNBP/2zAH/9swB//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2
ygH/9soB//bJAf/2yQH/9skB//bIAf/2yAH/9sgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XG
Af/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/1xAH/9cQB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB
//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/9L4B//S/Af/0vwH/874B//O+Af/zvgH/
870B//O9Af/zvAH/87wB//O8Af/zvAH/87sB//O7Af/zuwH/87sB//O6Af/zugH/87oB//K5Af/y
uQH/8rgB//K4Af/ytwH/8rcB//K3BP/xsgD/9cc7/+h8OP/fTQD/4VgD/+BWAP/gVQD/4FUA/99U
AP/fVAD/31QA/99TAP/eUwD/3lMA/95SAP/eUQD/3lEA/95RAP/dUAD/3VAA/91QAP/dTwD/3U8A
/9xOAP/cTgD/3E4A/9xNAP/bTQD/20wA/9tMAP/bTAD/20wA/9tLAP/bSgD/2koA/9pKAP/aSQD/
2kkA/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/2UYA/9hGAP/YRQD/2EUA/9hFAP/XRQD/10QA/9ZEAP/W
RAD/1kMA/9ZDAP/WQgD/1UEA/9VBAP/VQQD/1UEA/9VAAP/VQAD/1UAA/9Q/AP/UPwD/1D4A/9Q9
AP/TPQD/0zwA/9I8AP/SPAD/0jsA/9I7AP/SOgD/0joA/9I6AP/ROQD/0TgA/9E4AP/ROAD/0TkC
/9A9F//bbVj89M/E2PfYzif43NIDAAAAAP/87AP/++gn//jc2PrcZ/z2zx7/9s0E//bNAf/2zAH/
9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2
yQH/9sgB//bIAf/2yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cUB//XF
Af/1xQH/9cQB//XEAf/1xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB
//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//S/Af/zvgH/874B//O+Af/zvQH/870B//O9Af/zvAH/
87wB//O8Af/zuwH/87sB//O7Af/zuwH/87oB//O6Af/zugH/8rkB//K5Af/yuAH/8rgB//K3Af/y
twH/8rgE//GzAP/1xzv/6Hw4/+BOAP/hWAP/4FYA/+BWAP/gVQD/31UA/99VAP/fVAD/31MA/95T
AP/eUwD/3lMA/95SAP/eUQD/3lEA/91QAP/dUAD/3VAA/91QAP/dTwD/3U4A/9xOAP/cTgD/3E0A
/9xNAP/bTAD/20wA/9tMAP/bTAD/20sA/9tKAP/aSgD/2koA/9pKAP/aSQD/2kkA/9pJAP/ZSAD/
2UcA/9lHAP/ZRgD/2EYA/9hGAP/YRQD/2EUA/9hFAP/XRQD/1kQA/9ZEAP/WRAD/1kMA/9ZCAP/V
QQD/1UEA/9VBAP/VQQD/1UEA/9VAAP/VQAD/1D8A/9Q/AP/UPgD/1D4A/9Q9AP/TPAD/0jwA/9I8
AP/SPAD/0jsA/9I7AP/SOgD/0joA/9E6AP/ROQD/0TgA/9E4AP/ROQL/0D0X/9ttWPz00MTY99jO
J/jc0gMAAAAA//zsA//76Cf/+NzY+t1n/PXPHv/2zgX/9s0B//bMAf/2zAH/9swB//bMAf/2zAH/
9ssB//bLAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bIAf/1
yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XE
Af/0xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB
//S/Af/0vwH/9L8B//O/Af/zvgH/874B//O+Af/zvQH/870B//O9Af/zvAH/87wB//O8Af/zuwH/
87sB//O7Af/zuwH/87oB//O6Af/zuQH/8rkB//K4Af/yuAH/8rgB//K3Af/yuAT/8bMA//XIO//o
fDj/4E4A/+FYA//gVgD/4FYA/+BVAP/gVQD/4FUA/99VAP/fVAD/31QA/99TAP/eUwD/3lIA/95S
AP/eUQD/3lEA/95RAP/dUAD/3VAA/91QAP/dTwD/3U8A/91OAP/cTgD/3E0A/9xNAP/bTAD/20wA
/9tMAP/bSwD/20sA/9tKAP/bSgD/2koA/9pKAP/aSQD/2kkA/9pIAP/ZSAD/2UgA/9lHAP/ZRwD/
2UYA/9lGAP/ZRQD/2EUA/9dFAP/XRAD/10QA/9ZEAP/WQwD/1kIA/9ZCAP/WQgD/1UIA/9VBAP/V
QQD/1UEA/9VBAP/VPwD/1T8A/9Q+AP/UPgD/1D4A/9M9AP/TPQD/0zwA/9M8AP/TPAD/0jsA/9I7
AP/SOwD/0joA/9I5AP/ROQD/0TkA/9E5Av/QPhf/221Y/PTQxNj32c4n+NzSAwAAAAD//OwD//vo
J//43Nj63Wf89s8e//fOBf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/
9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bIAf/2yAH/9sgB//XHAf/1
xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/1xAH/9MMB//TD
Af/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0wAH/9MAB//S/Af/0vwH/878B
//O/Af/zvgH/874B//O+Af/zvQH/870B//O9Af/zvAH/87wB//O8Af/zvAH/87sB//O7Af/zuwH/
87oB//O6Af/zuQH/87kB//O4Af/yuAH/8rgB//K4BP/xswD/9cc7/+h9OP/gTgD/4VkD/+BWAP/g
VgD/4FYA/+BVAP/gVQD/31UA/99VAP/fVAD/31QA/99TAP/eUwD/3lMA/95SAP/eUgD/3lEA/95R
AP/dUAD/3VAA/91QAP/dTwD/3U8A/9xOAP/cTQD/3E0A/9xNAP/cTAD/20wA/9tMAP/bSwD/20sA
/9tKAP/bSgD/2koA/9pJAP/aSQD/2kkA/9lIAP/ZSAD/2UgA/9lHAP/ZRwD/2UYA/9lGAP/YRgD/
10UA/9dFAP/XRAD/10QA/9ZDAP/WQwD/1kIA/9ZCAP/WQgD/1UIA/9VBAP/VQQD/1UEA/9VAAP/V
PwD/1D4A/9Q+AP/UPgD/1D4A/9M9AP/TPQD/0z0A/9M8AP/TPAD/0zsA/9I7AP/SOgD/0jkA/9E5
AP/ROQD/0ToC/9A+F//bblj89NDE2PfZzif43NIDAAAAAP/87AP/++gn//jc2PrdZ/z3zx7/984F
//fOAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bLAf/2ygH/
9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bIAf/2yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1
xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/1xAH/9MMB//TDAf/0wwH/9MMB//TD
Af/0wwH/9MIB//TCAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/zvwH/878B//O/Af/zvgH/874B
//O+Af/zvQH/870B//O9Af/zvAH/87wB//O8Af/zvAH/87sB//O7Af/zugH/87oB//O5Af/zuQH/
87kB//K4Af/yuAH/8rkE//G0AP/1yDv/6H04/99PAP/hWQP/4VcA/+FXAP/gVwD/4FYA/+BWAP/g
VQD/4FUA/99VAP/fVAD/31QA/99UAP/fUwD/31MA/95SAP/eUgD/3lIA/95RAP/eUQD/3VAA/91P
AP/dTwD/3U8A/91OAP/cTgD/3E4A/9xOAP/cTgD/3E0A/9xMAP/bSwD/20sA/9tLAP/bSgD/20oA
/9pJAP/aSQD/2kkA/9pJAP/aSAD/2UgA/9lIAP/ZRwD/2UcA/9hGAP/YRgD/10UA/9dFAP/XRQD/
10QA/9dDAP/WQwD/1kMA/9ZDAP/WQwD/1kIA/9ZCAP/WQgD/1UAA/9VAAP/VPwD/1T8A/9Q+AP/U
PgD/1D0A/9Q9AP/UPQD/0z0A/9M8AP/TOwD/0zsA/9I6AP/SOgD/0jkA/9I5AP/SOgL/0T4X/9tu
WPz00MTY99nOJ/jc0gMAAAAA//zsA//76Cf/+NzY+t1n/PfQHv/3zgX/984B//bNAf/2zAH/9swB
//bMAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/
9soB//bJAf/2yQH/9skB//bIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1
xgH/9cUB//XFAf/1xQH/9cQB//TEAf/0xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TC
Af/0wQH/9MEB//TAAf/0wAH/9L8B//O/Af/zvwH/878B//O/Af/zvgH/874B//O+Af/zvQH/870B
//O9Af/zvQH/87wB//O8Af/zvAH/87sB//O7Af/zugH/87oB//O6Af/zuQH/8rkB//K5Af/yuQT/
8bQA//XIO//ofTj/308A/+FaA//hVwD/4VcA/+FWAP/gVgD/4FYA/+BVAP/gVQD/31UA/99VAP/f
VAD/31QA/99TAP/fUwD/3lIA/95SAP/eUQD/3lEA/95RAP/dUAD/3U8A/91PAP/dTwD/3U4A/9xO
AP/cTgD/3E4A/9xOAP/cTQD/3EwA/9tLAP/bSwD/20sA/9tKAP/bSgD/2kkA/9pJAP/aSQD/2kkA
/9pIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/XRQD/10UA/9dEAP/XRAD/10MA/9ZDAP/WQwD/
1kMA/9ZDAP/WQgD/1kIA/9ZCAP/VQAD/1UAA/9U/AP/VPwD/1D4A/9Q+AP/UPQD/1D0A/9Q9AP/T
PQD/0z0A/9M8AP/TOwD/0joA/9I6AP/SOQD/0jkA/9I6Av/RPhf/3G5Y/PTQxNj32c4n+NzSAwAA
AAD//OwD//voJ//43Nj63mf899Ae//fPBf/3zgH/9s4B//bNAf/2zQH/9swB//bMAf/2zAH/9swB
//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/
9skB//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1
xQH/9cUB//TEAf/0xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wQH/9MAB//TA
Af/0wAH/9MAB//O/Af/zvwH/878B//O/Af/zvwH/874B//O+Af/zvgH/870B//O9Af/zvQH/87wB
//O8Af/zvAH/87sB//O7Af/zuwH/87oB//O6Af/yuQH/8rkB//K6BP/xtAD/9cg7/+h9OP/gTwD/
4VoD/+FXAP/hVwD/4VYA/+BWAP/gVgD/4FUA/+BVAP/fVQD/31QA/99UAP/fVAD/31MA/99TAP/e
UgD/3lIA/95RAP/eUQD/3lEA/91RAP/dUAD/3VAA/91PAP/dTgD/3E4A/9xOAP/cTgD/3E4A/9xN
AP/cTAD/20wA/9tLAP/bSwD/20oA/9tKAP/aSgD/2kkA/9pJAP/aSQD/2kkA/9lIAP/ZRwD/2UcA
/9lHAP/YRgD/2EYA/9dFAP/XRQD/10QA/9dEAP/XRAD/1kMA/9ZDAP/WQwD/1kMA/9ZCAP/WQgD/
1kIA/9VAAP/VQAD/1UAA/9U/AP/UPwD/1D4A/9Q9AP/UPQD/1D0A/9M9AP/TPAD/0zwA/9M7AP/S
OwD/0joA/9I5AP/SOQD/0joC/9E+F//cblj89NDE2PfZzif43NIDAAAAAP/87AP/++gn//jc2Pre
Z/z30B7/988F//fPAf/3zgH/980B//fNAf/3zAH/9s0B//bNAf/2zQH/9s0B//bMAf/2zAH/9swB
//bMAf/2zAH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bJAf/2yAH/
9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1
xAH/9cQB//XEAf/0wwH/9MMB//TDAf/0wgH/9MIB//TBAf/0wQH/9MAB//TAAf/0wAH/9L8B//S/
Af/0vwH/9L8B//O/Af/zvwH/874B//O+Af/zvgH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87sB
//O7Af/zuwH/87oB//K6Af/yuQH/8roE//G1AP/1yTv/6H44/+BQAP/iWgP/4VgA/+FXAP/hVwD/
4FYA/+BWAP/gVgD/4FUA/99VAP/fVQD/31QA/99UAP/fVAD/31MA/95TAP/eUgD/3lIA/95SAP/e
UQD/3lEA/91QAP/dUAD/3VAA/91PAP/dTgD/3E4A/9xOAP/cTgD/3E4A/9xNAP/bTQD/20wA/9tM
AP/bSgD/20oA/9tKAP/aSQD/2kkA/9pJAP/aSQD/2UgA/9lIAP/ZSAD/2UcA/9hHAP/YRgD/2EYA
/9hGAP/XRQD/10UA/9dEAP/WRAD/1kMA/9ZDAP/WQwD/1kMA/9ZDAP/WQgD/1UEA/9VBAP/VQQD/
1UAA/9U/AP/UPwD/1D4A/9Q+AP/UPQD/0z0A/9M9AP/TPAD/0zwA/9I7AP/SOwD/0joA/9I5AP/S
OgH/0T0S/9xtV/z00MTY99jNJ/jb0QMAAAAA//zrA//75yf/+NzY+t5n/PfQGv/3zwT/988B//fO
Af/3zgH/984B//fNAf/2zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB
//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yAH/9cgB//XIAf/1yAH/
9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0
wwH/9MMB//TDAf/0wgH/9MIB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/878B//O/
Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/8rsB
//K6Af/yuwT/8bUA//XJO//ofjj/4VAA/+JbA//iWAD/4lgA/+JXAP/hVwD/4VcA/+BWAP/gVgD/
4FUA/+BVAP/gVQD/31QA/99UAP/fVAD/31MA/99TAP/fUgD/3lIA/95SAP/eUQD/3lEA/95RAP/d
UAD/3VAA/91PAP/dTwD/3U8A/91PAP/cTgD/3E4A/9xNAP/cTQD/3EwA/9tMAP/bSwD/20oA/9tK
AP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZSAD/2UcA/9lHAP/YRgD/2EYA/9hFAP/XRQD/10UA
/9dEAP/XRAD/10MA/9ZDAP/WQwD/1kMA/9ZDAP/WQgD/1kIA/9VBAP/VQAD/1T8A/9U/AP/UPgD/
1D4A/9Q+AP/TPQD/0z0A/9M9AP/TPQD/0zwA/9M7AP/SOwD/0joA/9I7Av/RPxX/3G5Y/PTQxNj3
2s8n+N3TAwAAAAD//O0D//vpJ//43Nj63mj899Ac//fPBP/3zwH/984B//fOAf/3zgH/980B//fN
Af/2zQH/9s0B//bNAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB
//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/
9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB//TEAf/0wwH/9MMB//TDAf/0
wgH/9MEB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/878B//O/Af/zvwH/874B//O+
Af/zvgH/870B//O9Af/zvQH/87wB//O8Af/zvAH/87wB//O7Af/yuwH/8roB//K7BP/xtQD/9ck7
/+h+OP/hUAD/4lsD/+JZAP/iWAD/4lgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/+BVAP/fVQD/
31QA/99UAP/fVAD/31MA/99TAP/eUwD/3lIA/95SAP/eUQD/3lEA/91RAP/dUAD/3VAA/91PAP/d
TwD/3U8A/9xOAP/cTgD/3E0A/9xNAP/cTQD/20wA/9tMAP/bSwD/20oA/9pKAP/aSgD/2kkA/9lJ
AP/ZSAD/2UgA/9lIAP/ZSAD/2UcA/9hHAP/YRwD/2EYA/9hGAP/XRQD/10UA/9dEAP/XRAD/10MA
/9ZDAP/WQwD/1kMA/9ZDAP/WQgD/1UEA/9VAAP/VQAD/1T8A/9Q/AP/UPgD/1D4A/9Q+AP/TPQD/
0z0A/9M9AP/TPAD/0zsA/9I7AP/SOwD/0jsC/9E/F//cblj89NDE2PfZzif43NIDAAAAAP/87AP/
++gn//jc2PreZ/z30B7/988E//fPAf/3zgH/984B//fOAf/3zgH/980B//fNAf/3zQH/980B//bN
Af/2zQH/9s0B//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB
//bKAf/2yQH/9skB//XJAf/1yQH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9cYB//XGAf/1xgH/
9cYB//XFAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/9MMB//TDAf/0wgH/9MIB//TBAf/0
wQH/9MEB//TAAf/0wAH/9MAB//S/Af/0vwH/9L8B//S/Af/zvwH/874B//O+Af/zvgH/870B//O9
Af/zvQH/870B//O8Af/zvAH/87wB//O7Af/zuwH/87sE//G2AP/1yjv/6H44/+BQAP/iWwP/4lkA
/+JZAP/iWAD/4VgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/99VAP/fVAD/31QA/99UAP/fVAD/
31MA/95TAP/eUwD/3lIA/95SAP/eUQD/3VEA/91QAP/dUAD/3VAA/91QAP/dTwD/3E4A/9xOAP/c
TgD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSwD/2koA/9pKAP/aSQD/2UkA/9lJAP/ZSAD/2UgA/9lI
AP/ZSAD/2EcA/9hHAP/YRgD/2EYA/9hFAP/XRQD/10UA/9dEAP/XRAD/10MA/9ZDAP/WQwD/1kMA
/9ZDAP/VQgD/1UEA/9VAAP/VQAD/1D8A/9Q/AP/UPwD/1D4A/9Q+AP/TPQD/0z0A/9M8AP/TOwD/
0jsA/9I7AP/SOwL/0UAX/9xuWPz00MTY99nOJ/jc0gMAAAAA//zsA//76Cf/+NzY+t5n/PfQHv/3
zwX/988B//fOAf/3zgH/984B//fOAf/3zgH/980B//fNAf/3zQH/9s0B//bNAf/2zQH/9swB//bM
Af/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2yQH/9ckB
//XJAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xgH/9cYB//XGAf/1xQH/
9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TCAf/0wgH/9MIB//TBAf/0wQH/9MEB//TAAf/0
wAH/9MAB//S/Af/0vwH/9L8B//O/Af/zvwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O8
Af/zvAH/87wB//O7Af/zvAT/8bYA//XKO//pfzj/4VEA/+NbA//iWQD/4lkA/+JZAP/iWAD/4lgA
/+FYAP/hVwD/4FYA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/99TAP/eUwD/
3lIA/95SAP/eUQD/3lEA/91QAP/dUAD/3VAA/91QAP/dTwD/3U8A/9xOAP/cTgD/3E4A/9xNAP/c
TAD/20wA/9tLAP/aSwD/2koA/9pKAP/aSQD/2kkA/9pJAP/aSAD/2UgA/9lIAP/ZSAD/2UcA/9lH
AP/YRwD/2EYA/9hFAP/YRQD/10UA/9dEAP/XRAD/10MA/9ZDAP/WQwD/1kMA/9ZCAP/WQQD/1UEA
/9VAAP/VQAD/1T8A/9U/AP/UPwD/1D4A/9Q+AP/UPQD/0z0A/9M8AP/TPAD/0zsA/9M8Av/SQRf/
3G5Y/PXQxNj42c4n+dzSAwAAAAD//OwD//voJ//43Nj63mf899Ae//fPBf/3zwH/988B//fPAf/3
zwH/988B//fOAf/3zgH/984B//fOAf/3zQH/980B//fNAf/2zQH/9swB//bMAf/2zAH/9swB//bM
Af/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bIAf/2yAH/9cgB
//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xQH/
9cQB//XEAf/1wwH/9MIB//TCAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0
vwH/9L8B//S/Af/0vwH/878B//O+Af/zvgH/874B//O9Af/zvQH/870B//O9Af/zvAH/87sB//O8
BP/ytwD/9co7/+l/OP/iUQD/41wD/+JZAP/iWQD/4lkA/+JYAP/iWAD/4VgA/+FXAP/gVwD/4FcA
/+BWAP/gVgD/4FUA/+BVAP/fVQD/31QA/99UAP/fUwD/31MA/95TAP/eUwD/3lIA/95SAP/eUQD/
3VAA/91QAP/dUAD/3VAA/91PAP/dTwD/3E4A/9xOAP/cTgD/3E0A/9xMAP/bTAD/20wA/9pLAP/a
SwD/2koA/9pKAP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZSAD/2UcA/9hHAP/YRgD/2EYA/9hG
AP/YRQD/10UA/9dEAP/XRAD/10QA/9ZDAP/WQwD/1kIA/9ZCAP/VQQD/1UEA/9VAAP/VQAD/1T8A
/9Q/AP/UPwD/1D4A/9Q+AP/TPQD/0z0A/9M8AP/TPAD/0z0C/9JBF//dblj89dDE2PjZzif53NID
AAAAAP/87AP/++gn//jc2PreZ/z30B7/988F//fPAf/3zwH/988B//fPAf/3zwH/984B//fOAf/3
zgH/984B//fNAf/3zQH/980B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bL
Af/2ywH/9ssB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bIAf/2yAH/9ccB//XHAf/1xwH/9ccB
//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/
9MIB//TCAf/0wgH/9MIB//TBAf/0wQH/9MEB//TAAf/0wAH/9MAB//TAAf/0vwH/9L8B//S/Af/z
vwH/874B//O+Af/zvgH/870B//O9Af/zvQH/870B//O8Af/zvAH/87wE//K3AP/2yzv/6X84/+JS
AP/jXAP/4loA/+JZAP/iWQD/4lkA/+JYAP/hWAD/4VgA/+BXAP/gVwD/4FcA/+BWAP/gVgD/4FUA
/99VAP/fVQD/31QA/99UAP/fUwD/31MA/95TAP/eUwD/3lIA/95RAP/eUAD/3VAA/91QAP/dUAD/
3VAA/91PAP/cTgD/3E4A/9xOAP/cTQD/3E0A/9tMAP/bTAD/20wA/9pLAP/aSwD/2koA/9pKAP/a
SQD/2kkA/9lJAP/ZSAD/2UgA/9lIAP/ZRwD/2EcA/9hHAP/YRgD/2EYA/9hGAP/XRQD/10UA/9dE
AP/XRAD/1kQA/9ZDAP/WQwD/1kIA/9ZBAP/VQQD/1UEA/9VAAP/VQAD/1D8A/9Q/AP/UPwD/1D4A
/9Q+AP/TPQD/0z0A/9M9AP/TPQL/0kEX/91uWPz10MTY+NnOJ/nc0gMAAAAA//zsA//76Cf/+NzY
+t5n/PfQHv/3zwX/988B//fPAf/3zwH/988B//fPAf/3zwH/984B//fOAf/3zgH/984B//fOAf/3
zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9ssB//bK
Af/2ygH/9skB//bJAf/2yQH/9sgB//bIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB
//XHAf/1xgH/9cYB//XGAf/1xgH/9cUB//XFAf/1xAH/9cQB//TDAf/0wwH/9MMB//TCAf/0wgH/
9MIB//TBAf/0wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//O/Af/zvwH/874B//O+Af/z
vQH/870B//O9Af/zvQH/87wB//O8Af/zvQT/8rcA//bLO//pgDj/4lIA/+NdA//jWgD/41oA/+NZ
AP/iWQD/4lkA/+FYAP/hWAD/4VgA/+FYAP/hVwD/4FcA/+BWAP/gVgD/4FYA/+BVAP/gVQD/31QA
/99UAP/fVAD/31MA/99TAP/eUgD/3lIA/95RAP/eUQD/3lEA/95RAP/dUAD/3U8A/91OAP/dTgD/
3U4A/9xNAP/cTQD/3E0A/9tMAP/bTAD/20wA/9tLAP/aSwD/2koA/9pKAP/aSgD/2koA/9pJAP/Z
SQD/2UgA/9lIAP/ZRwD/2UcA/9hHAP/YRwD/2EYA/9hGAP/XRQD/10UA/9dFAP/XRAD/10QA/9ZD
AP/WQgD/1kIA/9ZBAP/VQQD/1UEA/9VAAP/VQAD/1T8A/9U/AP/VPwD/1D4A/9Q+AP/TPQD/0z0A
/9M+Av/SQhf/3W9Y/PXRxNj42c4n+d3SAwAAAAD//OwD//voJ//43Nj63mf899Ee//fQBf/3zwH/
988B//fPAf/3zwH/988B//fPAf/3zwH/988B//fOAf/3zgH/984B//fOAf/3zQH/980B//fNAf/3
zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9swB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bJ
Af/2yQH/9sgB//bIAf/2yAH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xwH/9cYB
//XGAf/1xgH/9cUB//XFAf/1xAH/9cQB//XDAf/1wwH/9MMB//TCAf/0wgH/9MIB//TCAf/0wQH/
9MEB//TBAf/0wAH/9MAB//TAAf/0vwH/9L8B//S/Af/0vwH/9L4B//O9Af/zvQH/870B//O9Af/z
vAH/87wB//O9BP/ytwD/9ss7/+mAOP/iUwD/410D/+NbAP/jWgD/41oA/+JZAP/iWQD/4lkA/+FY
AP/hWAD/4VgA/+FYAP/gVwD/4FcA/+BWAP/gVgD/4FUA/+BVAP/fVQD/31QA/99UAP/fVAD/31MA
/95TAP/eUgD/3lEA/95RAP/eUQD/3lEA/91QAP/dUAD/3U8A/91OAP/dTgD/3E4A/9xNAP/cTQD/
20wA/9tMAP/bTAD/20wA/9pLAP/aSwD/2ksA/9pKAP/aSgD/2kkA/9lJAP/ZSQD/2UgA/9lIAP/Z
RwD/2EcA/9hHAP/YRgD/2EYA/9hGAP/XRQD/10UA/9dEAP/XRAD/1kMA/9ZCAP/WQgD/1kEA/9ZB
AP/VQQD/1UAA/9VAAP/VPwD/1T8A/9U/AP/UPgD/1D4A/9M9AP/TPQD/0z4C/9JCF//db1j89dHE
2Pjazif53dIDAAAAAP/86wP/++cn//jc2PreZ/z30R7/99AF//fQAf/3zwH/988B//fPAf/3zwH/
988B//fPAf/3zwH/988B//fOAf/3zgH/984B//fNAf/3zQH/980B//fNAf/3zQH/9s0B//bMAf/2
zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9sgB//bI
Af/2yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB
//XEAf/1xAH/9cQB//XDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wAH/
9MAB//TAAf/0vwH/9L8B//S/Af/0vgH/874B//O9Af/zvQH/870B//O8Af/zvAH/870E//K4AP/2
yzv/6oA4/+NUAP/kXQP/41sA/+NbAP/jWgD/41oA/+NZAP/iWQD/4lkA/+FYAP/hWAD/4VgA/+FX
AP/hVwD/4VcA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fVAD/31MA/99SAP/eUgD/3lIA
/95SAP/eUgD/3lEA/95QAP/dUAD/3U8A/91OAP/dTgD/3U4A/9xNAP/cTQD/3EwA/9tMAP/bTAD/
20wA/9tLAP/bSwD/20sA/9pKAP/aSgD/2kkA/9pJAP/aSAD/2UgA/9lIAP/ZRwD/2UcA/9hHAP/Y
RgD/2EYA/9hGAP/YRgD/10QA/9dEAP/XQwD/10MA/9ZCAP/WQgD/1kEA/9ZBAP/WQQD/1UAA/9VA
AP/VPwD/1T8A/9Q+AP/UPgD/1D0A/9Q9AP/UPgH/00ES/91rUf321Mfe+NvPIfnd0gIAAAAA//zt
A//76Sf/+NzY+t5g/PfRGf/30QT/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fPAf/3zwH/
988B//fPAf/3zgH/984B//fOAf/3zQH/980B//fNAf/2zQH/9s0B//bMAf/2zAH/9swB//bMAf/2
ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9sgB//bIAf/1yAH/9cgB//XI
Af/1yAH/9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xQH/9cUB//XEAf/1xAH/9cMB
//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wQH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/
9L8B//S+Af/zvgH/874B//O9Af/zvQH/870B//O8Af/zvQT/8rgA//bMO//qgTj/41QA/+ReA//j
XAD/41sA/+NbAP/jWgD/41oA/+JaAP/iWQD/4lkA/+FYAP/hWAD/4VgA/+FXAP/hVwD/4FcA/+BW
AP/gVgD/4FYA/+BVAP/fVQD/31QA/99UAP/fVAD/31MA/95SAP/eUgD/3lIA/95SAP/eUQD/3lEA
/91QAP/dUAD/3U8A/91OAP/dTgD/3E4A/9xNAP/cTQD/3E0A/9tMAP/bTAD/20wA/9tLAP/bSwD/
2ksA/9pKAP/aSgD/2kkA/9pJAP/ZSQD/2UgA/9lIAP/ZRwD/2UcA/9hHAP/YRgD/2EYA/9hGAP/X
RQD/10UA/9dEAP/XRAD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/VQQD/1UAA/9VAAP/VPwD/1T4A/9Q+
AP/UPgD/1D4A/9Q+Af/TQhT/3nBY/PXSxNj4288n+d7TAwAAAAD//OwD//voJ//43Nj63mf899Ic
//fRBP/30QH/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fPAf/3zwH/988B//fPAf/3zgH/
984B//fOAf/3zQH/980B//bNAf/2zQH/9s0B//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bLAf/2
ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//XIAf/1yAH/9cgB//XIAf/1yAH/9cgB//XH
Af/1xwH/9ccB//XHAf/1xwH/9cYB//XGAf/1xQH/9cQB//XEAf/1xAH/9MMB//TDAf/0wwH/9MMB
//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/9L8B//O+Af/zvgH/
874B//O+Af/zvQH/870B//O9BP/yuAD/9ss7/+qBOP/jVAD/5F4D/+NcAP/jXAD/41sA/+NbAP/j
WgD/4loA/+JZAP/iWQD/4lkA/+FYAP/hWAD/4VcA/+FXAP/gVwD/4FcA/+BWAP/gVgD/4FYA/99V
AP/fVQD/31QA/99UAP/fUwD/3lMA/95TAP/eUgD/3lIA/95RAP/eUQD/3VEA/91QAP/dTwD/3U8A
/91OAP/cTgD/3E4A/9xNAP/cTQD/3EwA/9tMAP/bTAD/20wA/9tLAP/aSwD/2ksA/9pKAP/aSgD/
2kkA/9lJAP/ZSAD/2UgA/9lIAP/ZRwD/2EcA/9hGAP/YRgD/2EYA/9hFAP/XRQD/10QA/9dEAP/W
RAD/1kMA/9ZCAP/WQgD/1kEA/9VBAP/VQQD/1UAA/9VAAP/VPwD/1T8A/9Q+AP/UPgD/1D8C/9NC
Fv/dcFj89dLE2Pjbzif53dIDAAAAAP/87AP/++gn//jc2PrfZ/z30h7/99EE//fRAf/30AH/99AB
//fQAf/30AH/99AB//fPAf/3zwH/988B//fPAf/3zwH/988B//fPAf/3zgH/984B//fOAf/3zQH/
980B//bNAf/3zQH/9s0B//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2
ygH/9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XH
Af/1xwH/9cYB//XFAf/1xAH/9cQB//XEAf/0xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB
//TCAf/0wQH/9MEB//TBAf/0wAH/9MAB//TAAf/0vwH/9L4B//S+Af/zvgH/874B//O+Af/zvQH/
874E//K5AP/2zDv/6oE4/+NUAP/kXgP/41wA/+NcAP/jXAD/41sA/+NbAP/iWgD/4loA/+JZAP/i
WQD/4lkA/+FYAP/hWAD/4VgA/+FXAP/gVwD/4FcA/+BWAP/gVgD/4FYA/99VAP/fVQD/31QA/99U
AP/fUwD/3lMA/95TAP/fUgD/3lIA/95RAP/eUQD/3VEA/91QAP/dTwD/3U8A/91PAP/cTgD/3E4A
/9xNAP/cTQD/3E0A/9tMAP/bTAD/20sA/9pLAP/aSwD/2ksA/9pKAP/aSgD/2UkA/9lJAP/ZSQD/
2UgA/9lIAP/YRwD/2EcA/9hHAP/YRgD/2EYA/9hFAP/XRQD/10QA/9dEAP/WQwD/1kMA/9ZCAP/W
QgD/1kIA/9VBAP/VQQD/1UAA/9VAAP/VPwD/1T8A/9Q+AP/VPwL/00MW/95wWPz10sTY+NvOJ/nd
0gMAAAAA//zsA//76Cf/+NzY+t9n/PfSHv/30QX/99EB//fRAf/30QH/99AB//fQAf/30AH/99AB
//fQAf/30AH/988B//fPAf/3zwH/988B//fPAf/3zgH/984B//fOAf/3zQH/980B//fNAf/2zQH/
9s0B//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2
yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cUB//XF
Af/1xQH/9cQB//TEAf/0xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wgH/9MIB//TCAf/0wgH/9MEB
//TBAf/0wQH/9MAB//S/Af/0vwH/9L4B//S+Af/0vgH/874B//O9Af/zvgT/8rkA//bMO//qgTj/
4lUA/+RfA//kXAD/5FwA/+NcAP/jXAD/41sA/+NbAP/jWwD/4loA/+JaAP/iWQD/4lkA/+FYAP/h
WAD/4VgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FYA/+BVAP/fVQD/31QA/99UAP/fUwD/31MA/99T
AP/eUgD/3lIA/95RAP/eUQD/3lEA/91QAP/dUAD/3U8A/91PAP/cTgD/3E4A/9xNAP/cTQD/3E0A
/9tNAP/bTAD/20sA/9tLAP/aSwD/2ksA/9pKAP/aSgD/2kkA/9lJAP/ZSQD/2UgA/9lIAP/ZRwD/
2UcA/9lHAP/YRgD/2EYA/9dFAP/XRQD/10QA/9dEAP/WQwD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/W
QQD/1UAA/9VAAP/VPwD/1T8A/9VAAv/URBb/3nBY/PXSxNj4284n+d3SAwAAAAD//OwD//voJ//4
3Nj632f899Ie//fRBf/30QH/99EB//fRAf/30QH/99AB//fQAf/30AH/99AB//fQAf/3zwH/988B
//fPAf/3zwH/988B//fPAf/3zgH/984B//fOAf/3zQH/980B//bNAf/2zQH/9s0B//bMAf/2zAH/
9swB//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//XIAf/1
yAH/9cgB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cUB//XFAf/1xQH/9MQB//TE
Af/0xAH/9MMB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wAH/9MAB
//S/Af/0vwH/9L8B//S+Af/zvgH/874B//O+BP/yuQD/9sw7/+qBOP/jVQD/5V8D/+RdAP/kXAD/
5FwA/+RcAP/jXAD/41sA/+NbAP/jWwD/41oA/+JaAP/iWgD/4lkA/+JZAP/hWAD/4VcA/+FXAP/h
VwD/4FYA/+BWAP/gVgD/4FYA/+BWAP/gVQD/31QA/99UAP/fVAD/31MA/99TAP/fUwD/3lIA/95S
AP/eUQD/3VEA/95QAP/dUAD/3U8A/91PAP/cTgD/3E8A/9xOAP/cTgD/3E0A/9tNAP/bTAD/20sA
/9tLAP/aSwD/2ksA/9pKAP/aSgD/2kkA/9pJAP/ZSQD/2UgA/9lIAP/ZRwD/2UcA/9hGAP/YRgD/
2EUA/9hFAP/XRAD/10QA/9dEAP/WRAD/10MA/9ZCAP/WQgD/1kIA/9ZBAP/WQQD/1UEA/9VAAP/V
QAD/1UAC/9RFFv/ecFj89dLE2Pjbzif53dIDAAAAAP/87AP/++gn//jc2PrfZ/z30x7/+NIF//fR
Af/30QH/99EB//fRAf/30QH/99AB//fQAf/30AH/99AB//fQAf/3zwH/988B//fPAf/3zwH/988B
//fPAf/3zgH/984B//fOAf/3zgH/980B//bNAf/3zQH/9s0B//bMAf/2zAH/9swB//bMAf/2ywH/
9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//XIAf/2yQH/9skB//XIAf/1
yAH/9cgB//XIAf/1xwH/9ccB//XGAf/1xgH/9cUB//XFAf/1xQH/9cUB//XEAf/1xAH/9cQB//TD
Af/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/0vwH/9L8B
//O+Af/zvgH/878E//K6AP/2zTv/64I4/+RWAP/lYAP/5F0A/+RdAP/kXAD/5FwA/+RcAP/jWwD/
41sA/+NbAP/jWwD/41oA/+JaAP/iWQD/4lkA/+JYAP/iWAD/4lcA/+FXAP/hVwD/4VYA/+BWAP/g
VgD/4FYA/+BVAP/fVQD/31UA/99UAP/fVAD/31MA/99TAP/eUgD/3lIA/95SAP/eUQD/3lEA/91Q
AP/dTwD/3U8A/91PAP/dTwD/3E8A/9xPAP/cTQD/3E0A/9tNAP/bTAD/20sA/9tLAP/bSwD/2koA
/9pKAP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZSAD/2EYA/9hGAP/YRQD/2EUA/9dEAP/XRAD/
10QA/9dEAP/XQwD/1kMA/9ZCAP/WQgD/1kIA/9ZBAP/WQQD/1UAA/9VAAP/VQQL/1EUW/95xWPz1
0sTY+NvOJ/nd0gMAAAAA//zsA//76Cf/+NzY++Bn/PjTHv/40wX/+NIB//fRAf/30QH/99EB//fR
Af/30QH/99AB//fQAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fPAf/3zgH/984B
//fOAf/3zgH/980B//fNAf/2zQH/9s0B//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ygH/
9soB//bKAf/2ygH/9soB//bJAf/2yQH/9skB//bJAf/2yQH/9skB//XIAf/1yAH/9cgB//XIAf/1
xwH/9ccB//XGAf/1xgH/9cUB//XFAf/1xQH/9cQB//XEAf/1xAH/9MQB//TDAf/0wwH/9MMB//TD
Af/0wwH/9MIB//TCAf/0wgH/9MEB//TBAf/0wQH/9MAB//S/Af/0vwH/878B//O+Af/zvwT/8roA
//bNO//rgjj/5FYA/+VgA//kXgD/5F0A/+RdAP/kXAD/5FwA/+NcAP/jWwD/41sA/+NbAP/jWwD/
4loA/+JZAP/iWQD/4lkA/+JYAP/iWAD/4VcA/+FXAP/hVwD/4FYA/+BWAP/gVgD/4FYA/99VAP/f
VQD/31UA/99UAP/fUwD/31MA/95TAP/eUgD/3lIA/95RAP/eUQD/3VEA/91QAP/dTwD/3U8A/91P
AP/cTwD/3E8A/9xOAP/cTgD/3E4A/9tNAP/bTAD/20sA/9tLAP/aSwD/2koA/9pKAP/aSgD/2kkA
/9lJAP/ZSAD/2UgA/9lIAP/YRgD/2EYA/9hGAP/YRQD/2EUA/9dEAP/XRAD/10QA/9dEAP/WQwD/
1kMA/9ZDAP/WQgD/1kEA/9ZBAP/VQQD/1UAA/9VBAv/URRb/33FY/PXSxNj4284n+d3SAwAAAAD/
/OwD//voJ//43Nj74Gf8+NMe//jSBf/40gH/99EB//fRAf/30QH/99EB//fRAf/30QH/99AB//fQ
Af/30AH/99AB//fQAf/3zwH/988B//fPAf/3zwH/988B//fPAf/3zwH/984B//fOAf/3zgH/980B
//bNAf/2zQH/9s0B//bNAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/
9soB//bJAf/2yQH/9skB//bJAf/2yQH/9cgB//XIAf/1yAH/9cgB//XIAf/1xwH/9cYB//XGAf/1
xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TC
Af/0wgH/9MEB//TBAf/0wQH/9MAB//TAAf/zvwH/878B//PABP/yuwD/9s07/+uCOP/kVwD/5WAD
/+VeAP/lXgD/5F0A/+RdAP/kXAD/5FwA/+RcAP/jWwD/41sA/+NbAP/jWwD/41oA/+NaAP/iWQD/
4lkA/+JYAP/iWAD/4lgA/+FXAP/hVwD/4FcA/+BWAP/gVgD/4FUA/+BVAP/gVQD/4FUA/99UAP/f
VAD/31MA/99TAP/fUgD/3lIA/95SAP/eUQD/3lEA/91QAP/dUAD/3VAA/91QAP/dTwD/3U8A/91P
AP/cTgD/3E0A/9tMAP/bTAD/20sA/9tLAP/bSwD/2koA/9pKAP/aSQD/2kkA/9pJAP/aSAD/2UgA
/9lHAP/ZRwD/2EYA/9hGAP/YRQD/2EUA/9hEAP/XRAD/10QA/9dDAP/XQwD/10MA/9dCAP/WQgD/
1kIA/9ZBAP/WQQD/1kIC/9VGGP/fcVj89dLE2PjazSf53dEDAAAAAP/86wP/++cn//jc2PvgZ/z4
0yD/+NIF//jSAf/40gH/+NIB//jSAf/40gH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQ
Af/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/9s0B//bNAf/2zQH/9s0B
//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bJAf/2yQH/
9skB//bJAf/2yQH/9skB//bJAf/1yAH/9cgB//XHAf/1xwH/9cYB//XGAf/1xgH/9cYB//XFAf/1
xQH/9cUB//XEAf/1xAH/9cQB//XDAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0wgH/9MEB//TB
Af/0wAH/9MAB//S/Af/0vwH/9MAE//K8AP/2zjv/64I4/+RXAP/lYAP/5V4A/+VeAP/lXgD/5F0A
/+RdAP/kXQD/5FwA/+NcAP/jWwD/41sA/+NbAP/jWgD/41oA/+JaAP/iWQD/4lkA/+JYAP/iWAD/
4VgA/+FXAP/hVwD/4FYA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fVAD/31MA/99TAP/e
UgD/3lIA/95SAP/eUQD/3VAA/91QAP/dUAD/3VAA/91QAP/dTwD/3U8A/9xOAP/cTQD/3E0A/9tM
AP/bTAD/20sA/9tLAP/aSwD/2koA/9pJAP/aSQD/2kkA/9pIAP/aSAD/2UcA/9lHAP/ZRgD/2EYA
/9hGAP/YRQD/2EUA/9hEAP/XRAD/10QA/9dDAP/XQwD/10MA/9ZDAP/WQgD/1kIA/9ZBAP/WQgL/
1UcZ/991XPv0z8PU+NrNK/nd0gQAAAAA//zsBP/75yv/99nU++Bs+/jTIf/40gX/+NIB//jSAf/4
0gH/+NIB//jSAf/30QH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQAf/30AH/99AB//fQ
Af/3zwH/988B//fPAf/3zgH/984B//fOAf/2zQH/9s4B//bNAf/2zQH/9swB//bMAf/2zAH/9swB
//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/
9skB//XIAf/1yAH/9cgB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XFAf/1
xAH/9cQB//TDAf/0wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MEB//TAAf/0wAH/9L8B//S/
Af/0wAT/8rwA//bOO//rgjj/5FcA/+VgA//lXgD/5V4A/+VeAP/kXgD/5F0A/+RdAP/kXQD/41wA
/+NcAP/jWwD/41sA/+NaAP/jWgD/4loA/+JaAP/iWQD/4lkA/+JYAP/hWAD/4VgA/+FXAP/gVwD/
4FYA/+BWAP/gVgD/4FUA/+BVAP/fVQD/31UA/99UAP/fVAD/31MA/95TAP/eUgD/3lIA/95RAP/d
UQD/3VAA/91QAP/dUAD/3VAA/91PAP/dTgD/3E4A/9xOAP/cTQD/3E0A/9tMAP/bTAD/20sA/9pL
AP/aSgD/2koA/9pJAP/aSQD/2kgA/9pIAP/ZSAD/2UgA/9lHAP/ZRgD/2EYA/9hGAP/YRQD/2EQA
/9hEAP/XRAD/10QA/9dDAP/XQwD/1kMA/9ZDAP/WQgD/1kIA/9ZCAv/VRhb/33BX/PXSxtn4288m
+d7TAwAAAAD//OwD//voJv/43Nn74Gb8+NMd//jTBP/40gH/+NIB//jSAf/40gH/+NIB//jSAf/3
0QH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fP
Af/3zgH/984B//fOAf/2zgH/9s0B//bNAf/2zAH/9swB//bMAf/2zAH/9swB//bLAf/2ywH/9ssB
//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9sgB//XIAf/1yAH/
9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9MQB//TEAf/0
wwH/9MMB//TDAf/0wwH/9MMB//TCAf/0wgH/9MEB//TBAf/0wAH/9MAB//TABP/zvAD/9s47/+uC
OP/kVwD/5WED/+VeAP/lXgD/5V4A/+VeAP/kXgD/5F0A/+RdAP/kXQD/41wA/+NcAP/jWwD/41sA
/+NaAP/jWgD/4loA/+JaAP/iWQD/4lkA/+JZAP/hWAD/4VgA/+BXAP/gVwD/4FYA/+BWAP/gVgD/
4FUA/99VAP/fVQD/31UA/99UAP/fVAD/31MA/99TAP/eUwD/3lIA/95RAP/dUQD/3VEA/91RAP/d
UAD/3U8A/91PAP/dTgD/3U4A/9xOAP/cTQD/3E0A/9tMAP/bTAD/20sA/9tKAP/aSgD/2kkA/9pJ
AP/aSAD/2kgA/9lIAP/ZSAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRQD/2EUA/9dFAP/XRAD/10QA
/9dDAP/XQwD/1kMA/9ZDAP/WQgD/1kMC/9VHFv/fcVf89dLG2fjazyb53dIDAAAAAP/87AP/++gm
//jc2fvgZvz41B3/+NME//jTAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//fRAf/3
0QH/99EB//fQAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fPAf/3zwH/984B//fO
Af/3zQH/980B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB
//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yAH/9sgB//bIAf/1xwH/9ccB//XHAf/1xwH/
9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/9MMB//TDAf/0
wwH/9MIB//TCAf/0wQH/9MEB//TAAf/0wAH/9MEE//O8AP/3zjv/7II4/+VXAP/mYQP/5V8A/+Vf
AP/lXwD/5V4A/+VeAP/kXQD/5F0A/+RdAP/kXQD/5FwA/+NcAP/jWwD/41sA/+NaAP/jWgD/41oA
/+JaAP/iWQD/4lkA/+JZAP/hWAD/4VgA/+FXAP/gVwD/4FcA/+BWAP/gVgD/4FUA/+BVAP/fVQD/
31UA/99UAP/fVAD/31MA/95TAP/eUgD/3lIA/95RAP/eUQD/3VEA/91RAP/dUAD/3U8A/91OAP/d
TgD/3E4A/9xOAP/cTQD/3E0A/9tMAP/bSwD/20sA/9tLAP/aSgD/2kkA/9pJAP/aSQD/2kgA/9pI
AP/ZSAD/2UgA/9lHAP/ZRgD/2EYA/9hGAP/YRQD/10UA/9dEAP/XRAD/10QA/9dDAP/XQwD/1kMA
/9ZCAP/WQwL/1UcW/99xV/z10sbZ+NrPJvnd0gMAAAAA//zsA//76Cb/+NzZ++Bm/PjUHf/40wT/
+NMB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/99EB//fRAf/30QH/99EB//fRAf/3
0AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fPAf/3zgH/984B//fOAf/3zQH/9s0B//bN
Af/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB
//bKAf/2yQH/9skB//bJAf/2yAH/9sgB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/
9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//TEAf/0wwH/9MMB//TDAf/0wwH/9MIB//TCAf/0
wQH/9MEB//TAAf/0wQT/87wA//fOO//rgjj/5VcA/+ZhA//lXwD/5V8A/+VeAP/lXgD/5V4A/+Rd
AP/kXQD/5F0A/+RdAP/kXQD/41wA/+NcAP/jWwD/41sA/+NaAP/jWgD/4loA/+JaAP/iWQD/4lkA
/+JZAP/hWAD/4VgA/+BXAP/gVwD/4FcA/+BWAP/gVgD/4FUA/99VAP/fVQD/31QA/99UAP/fVAD/
31MA/95TAP/eUgD/3lIA/95RAP/dUQD/3VEA/91QAP/dTwD/3U8A/91OAP/cTgD/3E4A/9xOAP/c
TQD/3EwA/9tLAP/bSwD/20sA/9pKAP/aSgD/2kkA/9pJAP/aSQD/2kgA/9lIAP/ZSAD/2UcA/9lH
AP/ZRwD/2EYA/9hGAP/XRQD/10UA/9dFAP/XRAD/10QA/9dDAP/WQwD/1kMA/9ZDAv/VRxb/33FX
/PXSxtn42s8m+d3SAwAAAAD//OwD//voJv/43Nn74Gb8+NQd//jTBP/40wH/+NIB//jSAf/40gH/
+NIB//jSAf/40gH/+NIB//jSAf/30QH/99EB//fRAf/30QH/99EB//fRAf/30AH/99AB//fQAf/3
0AH/99AB//fPAf/3zwH/988B//fOAf/3zgH/984B//fOAf/2zQH/9s0B//bNAf/2zQH/9swB//bM
Af/2zAH/9ssB//bLAf/2ywH/9ssB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2ygH/9skB
//bJAf/2yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xgH/
9cUB//XFAf/1xQH/9MQB//TEAf/0xAH/9MMB//TDAf/0wwH/9MIB//TCAf/0wQH/9MEB//TBBP/z
vQD/9887/+yDOP/lWAD/5mID/+ZfAP/mXwD/5l4A/+VeAP/lXgD/5V4A/+VeAP/kXQD/5F0A/+Rd
AP/kXAD/5FwA/+RcAP/jWwD/41sA/+NaAP/jWgD/41oA/+JZAP/iWQD/4lkA/+JZAP/hWAD/4VgA
/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/95TAP/eUgD/
3lIA/95SAP/eUgD/3lAA/95PAP/dTwD/3U8A/91OAP/dTgD/3U4A/9xNAP/cTAD/20wA/9tLAP/b
SwD/20sA/9tKAP/bSgD/20oA/9pJAP/aSQD/2UgA/9lIAP/ZRwD/2UcA/9lHAP/ZRwD/2EYA/9hG
AP/YRQD/2EUA/9hFAP/XRAD/10QA/9dDAP/XQwD/10QC/9ZIFv/gclf89dLG2fjazyb53tIDAAAA
AP/87AP/++gm//jc2fvgZvz41B3/+NME//jTAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/
+NIB//fRAf/30QH/99EB//fRAf/30QH/99EB//fRAf/30AH/99AB//fQAf/30AH/988B//fPAf/3
zwH/988B//fOAf/3zgH/984B//bNAf/2zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9ssB//bL
Af/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9soB//bKAf/2ygH/9skB//bIAf/1xwH/9ccB
//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/0xAH/
9MQB//TEAf/0wwH/9MMB//TDAf/0wgH/9MIB//TBAf/0wQH/9MIE//O9AP/3zjv/64M4/+VYAP/m
YgP/5mAA/+ZfAP/lXwD/5V4A/+VeAP/lXgD/5V4A/+RdAP/kXQD/5F0A/+RcAP/kXAD/5FwA/+Nc
AP/jWwD/41sA/+NaAP/jWgD/4loA/+JZAP/iWQD/4lkA/+JZAP/hWAD/4VgA/+FYAP/hVwD/4VcA
/+BWAP/gVgD/4FUA/+BVAP/fVQD/31QA/99UAP/fUwD/31MA/95TAP/eUgD/3lIA/95RAP/eUQD/
3lAA/91QAP/dTwD/3U8A/91PAP/dTQD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSwD/20sA/9tKAP/b
SgD/2kkA/9pJAP/ZSAD/2UgA/9lIAP/ZRwD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9dF
AP/XRAD/10QA/9dDAP/XRAL/1kgW/+ByV/z10sbZ+NvPJvne0gMAAAAA//zsA//76Cb/+NzZ++Fm
/PjUHf/40wT/+NMB//jTAf/40wH/+NMB//jTAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/
99EB//fRAf/30QH/99EB//fRAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fOAf/3
zgH/984B//fOAf/3zQH/980B//fNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bL
Af/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2yQH/9sgB//XIAf/1yAH/9cgB//XIAf/1yAH/9ccB
//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9cUB//XFAf/1xAH/9cQB//XEAf/0wwH/
9MMB//TCAf/0wgH/9MIB//TBAf/0wgT/874A//fPO//shDj/5lkA/+diA//mYAD/5mAA/+ZfAP/m
XwD/5l4A/+VeAP/lXgD/5V0A/+VdAP/lXQD/5F0A/+RdAP/kXQD/5FwA/+RcAP/kXAD/41sA/+Nb
AP/jWgD/41oA/+NaAP/iWQD/4lkA/+JZAP/iWAD/4lgA/+JXAP/hVwD/4VcA/+BWAP/gVgD/4FYA
/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/99SAP/eUgD/3lIA/95SAP/eUQD/3lAA/95QAP/dTwD/
3U8A/91OAP/cTQD/3E0A/9xNAP/cTAD/20wA/9tLAP/bSwD/20sA/9tKAP/bSQD/20oA/9pJAP/a
SQD/2kgA/9pIAP/ZRwD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9hFAP/XRAD/10QA/9dE
Av/WSRb/4HNX/PXTxtn4288m+d7SAwAAAAD//OwD//voJv/43Nn74Wb8+NQd//jTBP/40wH/+NMB
//jTAf/40wH/+NMB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/30QH/99EB//fRAf/30QH/
99EB//fQAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/984B//fNAf/3
zQH/980B//bNAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bK
Af/2ygH/9skB//bJAf/2yAH/9cgB//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB
//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//XEAf/1xAH/9cQB//TEAf/0wwH/9MMB//TCAf/0wgH/
9MEB//TCBP/zvgD/9887/+yEOP/mWQD/52MD/+ZhAP/mYAD/5mAA/+ZfAP/mXwD/5V8A/+VeAP/l
XgD/5V0A/+VdAP/kXQD/5F0A/+RdAP/kXAD/5FwA/+RcAP/jWwD/41sA/+NaAP/jWgD/41oA/+Ja
AP/iWQD/4lkA/+JZAP/iWAD/4lgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FYA/+BVAP/fVQD/31QA
/99UAP/fVAD/31MA/95SAP/eUgD/3lIA/95RAP/eUQD/3lAA/91PAP/dTwD/3U8A/91OAP/cTgD/
3E0A/9xNAP/cTAD/20wA/9tMAP/bSwD/20sA/9tKAP/bSgD/2koA/9pJAP/aSQD/2kgA/9lIAP/Z
SAD/2UcA/9lHAP/ZRwD/2EYA/9hGAP/YRgD/2EUA/9dFAP/XRAD/10UC/9ZJF//gclf89dPG2ffb
zib53tIDAAAAAP/86wP/+ucm//jc2fvhZvz41R//+NQF//jTAf/40wH/+NMB//jTAf/40wH/+NIB
//jSAf/40gH/+NIB//jSAf/40gH/+NIB//fRAf/30QH/99EB//fRAf/30QH/99EB//fQAf/30AH/
99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/980B//fNAf/3zQH/9s0B//bNAf/2
zAH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bJ
Af/1yAH/9cgB//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB
//XGAf/1xQH/9cUB//XEAf/1xAH/9MQB//TDAf/0wwH/9MMB//TCAf/0wgH/9MIE//O+AP/3zzv/
7IQ4/+ZZAP/nYwP/5mEA/+ZgAP/mYAD/5l8A/+ZfAP/lXwD/5V4A/+VeAP/lXgD/5V0A/+RdAP/k
XQD/5F0A/+RcAP/kXAD/5FwA/+NbAP/jWwD/41oA/+NaAP/jWgD/4loA/+JZAP/iWQD/4lkA/+JZ
AP/iWAD/4VgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/99VAP/fVAD/31QA/99UAP/fUwD/3lIA
/95SAP/eUgD/3lEA/95RAP/eUAD/3U8A/91PAP/dTwD/3U4A/9xOAP/cTQD/3E0A/9xNAP/bTAD/
20wA/9tLAP/bSwD/20oA/9tKAP/aSgD/2kkA/9pJAP/aSQD/2UgA/9lIAP/ZRwD/2UcA/9lHAP/Z
RwD/2EYA/9hGAP/YRQD/10UA/9dEAP/XRQL/1kkY/+B2XPz00MTV99rOKvne0gMAAAAA//zrA//6
5yr/99rV++Fr/PjVIP/41AX/+NQB//jTAf/40wH/+NMB//jTAf/40wH/+NIB//jSAf/40gH/+NIB
//jSAf/40gH/99EB//fRAf/30QH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQAf/3zwH/
988B//fPAf/3zwH/984B//fOAf/3zgH/980B//fNAf/2zQH/9s0B//bNAf/2zAH/9swB//bMAf/2
zAH/9swB//bMAf/2ywH/9ssB//bLAf/2ywH/9soB//bKAf/2ygH/9skB//bIAf/1yAH/9cgB//XI
Af/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XGAf/1xQH/9cUB
//XFAf/0xAH/9MQB//TDAf/0wwH/9MIB//TCAf/0wwT/874A//fPO//shDj/5lkA/+djA//mYQD/
5mAA/+ZgAP/mYAD/5l8A/+VfAP/lXgD/5V4A/+VeAP/lXQD/5F0A/+RdAP/kXQD/5FwA/+RcAP/k
XAD/41sA/+NbAP/jWgD/41oA/+NaAP/iWgD/4lkA/+JZAP/iWQD/4lkA/+JYAP/hWAD/4VcA/+FX
AP/hVwD/4FYA/+BWAP/gVQD/31UA/99UAP/fVAD/31QA/99TAP/eUgD/3lIA/95SAP/eUQD/3lEA
/95QAP/dUAD/3U8A/91OAP/dTgD/3E4A/9xNAP/cTQD/3E0A/9tNAP/bTAD/20sA/9tLAP/bSwD/
20oA/9pKAP/aSQD/2kkA/9pJAP/ZSAD/2UgA/9lHAP/ZRwD/2UcA/9lHAP/YRgD/2EYA/9hFAP/X
RQD/10UA/9dFAf/WSBX/4HZc+/TQxNX32c0q+d7SBAAAAAD//OsE//rmKv/32tX74Wv7+NUc//jU
BP/41AH/+NQB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/40gH/+NIB//jSAf/40gH/+NIB
//jSAf/40gH/+NIB//fRAf/30QH/99EB//fQAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/
984B//fOAf/3zgH/984B//fNAf/3zQH/980B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2
zAH/9ssB//bLAf/2ywH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9cgB//XIAf/1yAH/9cgB//XI
Af/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XFAf/1xQH/9cUB//TEAf/0xAH/9MMB
//TDAf/0wwH/9MIB//TDBP/zvwD/99A7/+yEOP/mWQD/52MD/+ZhAP/mYQD/5mAA/+ZgAP/mYAD/
5V8A/+VfAP/lXgD/5V4A/+VeAP/kXQD/5F0A/+RdAP/kXAD/5FwA/+RcAP/jWwD/41sA/+NaAP/j
WgD/41oA/+JaAP/iWgD/4lkA/+JZAP/iWQD/4lgA/+FYAP/hWAD/4VcA/+FXAP/hVwD/4FYA/+BW
AP/gVQD/31UA/99VAP/fVAD/31MA/95TAP/eUgD/3lIA/95SAP/eUQD/3lEA/91QAP/dUAD/3U8A
/91PAP/dTgD/3E4A/9xOAP/cTQD/200A/9tMAP/bTAD/20wA/9tLAP/bSwD/2koA/9pKAP/aSQD/
2kkA/9pJAP/ZSAD/2UgA/9lHAP/ZRwD/2UcA/9hGAP/YRgD/2EYA/9hGAP/XRQD/10UC/9ZJFf/g
clf89tPH2/jbzyT639MDAAAAAP/87AP/++gk//jd2/vhZvz41Rz/+NUE//jUAf/41AH/+NQB//jU
Af/40wH/+NMB//jTAf/40wH/+NMB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/99EB
//fRAf/30QH/99EB//fRAf/30QH/99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/
980B//fNAf/3zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2
ywH/9soB//bKAf/2yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XIAf/1yAH/9ccB//XH
Af/1xwH/9ccB//XHAf/1xgH/9cYB//XGAf/1xQH/9MUB//TEAf/0wwH/9MMB//TDAf/0wwH/9MME
//O/AP/30Dv/7IU4/+ZaAP/nZAP/52IA/+dhAP/mYQD/5mAA/+ZgAP/mYAD/5l8A/+VfAP/lXgD/
5V4A/+VeAP/lXQD/5V0A/+RcAP/kXAD/5FwA/+RcAP/kWwD/41sA/+NbAP/jWwD/41oA/+NaAP/i
WQD/4lkA/+JZAP/iWQD/4lgA/+JYAP/hVwD/4VcA/+FXAP/gVgD/4FYA/+BVAP/gVQD/31QA/99U
AP/fVAD/31MA/99SAP/fUgD/31IA/95SAP/eUQD/3lAA/95QAP/eUAD/3U8A/91PAP/dTwD/3E4A
/9xOAP/cTgD/3E0A/9xNAP/bTAD/20sA/9tLAP/bSwD/20oA/9pJAP/aSQD/2kkA/9pJAP/aSAD/
2UgA/9lHAP/ZRwD/2UcA/9hGAP/YRgD/2EYA/9hGAP/YRgL/10kV/+FyV/z108fb+NvPJPrf0wMA
AAAA//zsA//76CT/+N3b++Fm/PjVHP/41QT/+NUB//jUAf/41AH/+NQB//jTAf/40wH/+NMB//jT
Af/40wH/+NIB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//jSAf/30QH/99EB//fRAf/30QH/99EB
//fRAf/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/984B//fOAf/3zgH/980B//fNAf/2zQH/
9s0B//bNAf/2zAH/9swB//bMAf/2zAH/9swB//bMAf/2zAH/9ssB//bLAf/2ywH/9soB//bJAf/2
yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9cgB//XIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XG
Af/1xgH/9cYB//XFAf/1xQH/9MUB//TEAf/0xAH/9MMB//TDAf/0xAT/878A//fQO//shDj/5loA
/+dkA//nYgD/52EA/+ZhAP/mYQD/5mEA/+ZgAP/mYAD/5V8A/+VfAP/lXwD/5V4A/+VeAP/lXQD/
5F0A/+RcAP/kXAD/5FwA/+RcAP/jWwD/41sA/+NbAP/jWgD/41oA/+JZAP/iWQD/4lkA/+JZAP/i
WAD/4lgA/+FXAP/hVwD/4VcA/+BWAP/gVgD/4FUA/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/99S
AP/fUgD/3lIA/95RAP/eUQD/3lEA/95QAP/dUAD/3VAA/91PAP/dTwD/3E4A/9xOAP/cTgD/3E0A
/9xNAP/bTAD/20wA/9tLAP/bSwD/2ksA/9pKAP/aSQD/2kkA/9pJAP/ZSAD/2UgA/9lHAP/ZRwD/
2UcA/9hGAP/YRgD/2EYA/9hGAv/XSRX/4XJX/PbTx9v4288k+t/TAwAAAAD//OwD//voJP/43dv7
4Wb8+NUc//jVBP/41QH/+NUB//jUAf/41AH/+NQB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jT
Af/40wH/+NMB//jSAf/40gH/+NIB//jSAf/40gH/+NIB//fRAf/30QH/99EB//fRAf/30QH/99AB
//fQAf/30AH/99AB//fPAf/3zwH/988B//fOAf/3zgH/984B//fNAf/3zQH/9s0B//bNAf/2zQH/
9s0B//bNAf/2zQH/9swB//bMAf/2zAH/9ssB//bLAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2
yQH/9skB//bJAf/1yAH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cYB//XF
Af/1xQH/9cQB//XEAf/0wwH/9MMB//TEBP/zwAD/99E7/+2FOP/mWwD/6GQD/+diAP/nYQD/52EA
/+dhAP/mYQD/5mEA/+ZgAP/mXwD/5l8A/+VfAP/lXgD/5V4A/+VeAP/lXQD/5V0A/+RcAP/kXAD/
5FwA/+RcAP/kWwD/41sA/+NbAP/jWgD/41kA/+NZAP/jWQD/4lkA/+JYAP/iWAD/4VcA/+FXAP/h
VwD/4VYA/+FWAP/gVgD/4FUA/+BVAP/gVAD/4FQA/99UAP/fUwD/31MA/99SAP/fUgD/31EA/95R
AP/eUQD/3lAA/95RAP/eUAD/3VAA/91PAP/dTwD/3E4A/9xOAP/cTgD/3E0A/9xNAP/bTAD/20sA
/9tLAP/bSgD/20oA/9pKAP/aSgD/2kkA/9pIAP/aSAD/2kgA/9pHAP/ZRwD/2UcA/9lGAP/ZRgD/
2UcC/9hKFf/hclf89tPH2/jbzyT639MDAAAAAP/87AP/++gk//jd2/vhZvz41Rz/+NUE//jVAf/4
1QH/+NUB//jVAf/41AH/+NQB//jUAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jS
Af/40gH/+NIB//jSAf/40gH/99IB//fSAf/30QH/99EB//fRAf/30QH/99EB//fQAf/30AH/99AB
//fPAf/3zwH/988B//fOAf/3zgH/984B//fNAf/3zQH/9s0B//bNAf/2zQH/9s0B//bNAf/2zQH/
9swB//bMAf/2zAH/9ssB//bLAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9skB//XJAf/1
yQH/9cgB//XIAf/1yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XFAf/1xQH/9cQB//TE
Af/0wwH/9MQE//PAAP/20Tv/7YU4/+dbAP/oZQP/52IA/+diAP/nYgD/52EA/+dhAP/mYQD/5mEA
/+ZgAP/mYAD/5l8A/+VfAP/lXwD/5V4A/+VdAP/lXQD/5V0A/+RcAP/kXAD/5FwA/+RbAP/kWwD/
41sA/+NbAP/jWgD/41oA/+NZAP/jWQD/4lgA/+JYAP/iWAD/4VcA/+FXAP/hVgD/4VYA/+BWAP/g
VgD/4FUA/+BVAP/gVAD/31QA/99UAP/fUwD/31MA/99TAP/fUgD/3lIA/95RAP/eUQD/3lEA/95R
AP/dUAD/3VAA/91PAP/dTwD/3U4A/9xOAP/cTgD/3E0A/9xNAP/bTAD/20wA/9tLAP/bSgD/2koA
/9pKAP/aSgD/2kkA/9pJAP/aSAD/2kgA/9lHAP/ZRwD/2UcA/9lGAP/ZRwL/2EoV/+FyV/z108fb
+NvPJPnf0wMAAAAA//zsA//76CT/+N3b++Fm/PjWHP/41gT/+NUB//jVAf/41QH/+NUB//jVAf/4
1AH/+NQB//jUAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jSAf/40gH/+NIB//jS
Af/40gH/99IB//fSAf/30QH/99EB//fRAf/30QH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B
//fOAf/3zgH/984B//fNAf/3zQH/9s0B//bNAf/2zQH/9s0B//bNAf/2zQH/9swB//bMAf/2zAH/
9ssB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9skB//XJAf/1yAH/9cgB//XIAf/1
yAH/9ccB//XHAf/1xwH/9ccB//XHAf/1xgH/9cYB//XFAf/1xQH/9MQB//TEAf/1xAT/9MAA//fR
O//thjj/51sA/+hlA//nYwD/52IA/+diAP/nYgD/52EA/+ZhAP/mYQD/5mAA/+ZgAP/mYAD/5V8A
/+VfAP/lXwD/5V4A/+VeAP/lXQD/5F0A/+RcAP/kXAD/5FwA/+RbAP/jWwD/41sA/+NbAP/jWgD/
41oA/+NZAP/jWQD/4lgA/+JYAP/iWAD/4VcA/+FXAP/hVgD/4VYA/+BWAP/gVgD/4FUA/+BVAP/g
VAD/31QA/99UAP/fUwD/31MA/99SAP/fUgD/3lIA/95RAP/eUQD/3lEA/91QAP/dUAD/3VAA/91P
AP/dTwD/3U8A/9xOAP/cTgD/3E0A/9tNAP/bTAD/20wA/9tLAP/bSgD/2koA/9pKAP/aSQD/2kkA
/9pJAP/aSAD/2UgA/9lHAP/ZRwD/2UcA/9lHAv/YSxX/4XJX/PXTx9v4288k+d7SAwAAAAD//OwD
//voJP/43dv74mb8+NYc//jWBP/41gH/+NUB//jVAf/41QH/+NUB//jVAf/41AH/+NQB//jUAf/4
1AH/+NQB//jUAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jSAf/40gH/+NIB//fR
Af/30QH/99EB//fRAf/30AH/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fOAf/3zgH/984B
//fOAf/3zgH/984B//fOAf/3zgH/980B//fNAf/3zQH/9s0B//bMAf/2ywH/9ssB//bKAf/2ygH/
9soB//bKAf/2ygH/9soB//bKAf/2yQH/9skB//bJAf/2yQH/9sgB//bIAf/2yAH/9ccB//XHAf/1
xwH/9ccB//XGAf/1xgH/9cUB//XEAf/1xAH/9cQB//XFBP/1wAD/99E7/+2GOP/nXAD/6GUD/+hj
AP/oYwD/6GMA/+diAP/nYgD/52EA/+dhAP/mYAD/5mAA/+ZgAP/mXwD/5l8A/+ZfAP/lXgD/5V4A
/+VeAP/lXQD/5V0A/+RcAP/kXAD/5FwA/+RbAP/kWwD/41sA/+NbAP/jWgD/41oA/+NZAP/jWQD/
4lgA/+JYAP/iWAD/4VcA/+FXAP/hVwD/4VYA/+FWAP/gVgD/4FUA/+BVAP/gVAD/4FQA/+BUAP/f
UwD/31MA/99SAP/fUgD/31IA/95RAP/eUQD/3lAA/95QAP/eUAD/3VAA/91PAP/dTwD/3U8A/9xO
AP/cTgD/3E0A/9xMAP/bTAD/20sA/9tLAP/bSgD/20oA/9pKAP/aSQD/2kkA/9pJAP/aSAD/2kgA
/9lIAP/ZRwD/2UgC/9hLFf/hclb89dPH2/faziT53tIDAAAAAP/87AP/+uck//jd2/viZvz41h7/
+NYF//jWAf/41QH/+NUB//jVAf/41QH/+NUB//jVAf/41AH/+NQB//jUAf/41AH/+NQB//jTAf/4
0wH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NIB//jSAf/40gH/99IB//fSAf/30QH/99EB//fQ
Af/30AH/99AB//fQAf/30AH/988B//fPAf/3zwH/988B//fOAf/3zgH/984B//fOAf/3zgH/984B
//fOAf/3zQH/980B//fNAf/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2ygH/
9soB//bJAf/2yQH/9skB//bJAf/2yAH/9sgB//bIAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1
xgH/9cUB//XFAf/1xQH/9cUE//XBAP/30jv/7YY4/+dcAP/oZQP/6GMA/+hjAP/oYgD/52IA/+di
AP/nYQD/52EA/+ZgAP/mYAD/5mAA/+ZfAP/mXwD/5l8A/+VeAP/lXgD/5V4A/+VeAP/lXQD/5F0A
/+RcAP/kXAD/5FwA/+RbAP/jWwD/41sA/+NbAP/jWgD/41oA/+NZAP/iWQD/4lgA/+JYAP/hWAD/
4VcA/+FXAP/hVgD/4FYA/+BWAP/gVgD/4FUA/+BVAP/gVQD/4FQA/99UAP/fUwD/31MA/99TAP/f
UgD/3lIA/95RAP/eUAD/3lAA/95QAP/dUAD/3U8A/91PAP/dTwD/3E4A/9xOAP/cTQD/3EwA/9tM
AP/bSwD/20sA/9tLAP/bSgD/2koA/9pKAP/aSgD/2kkA/9pJAP/aSAD/2UgA/9lIAP/ZSAL/2EsW
/+FxVvz00MTW99rOKfnd0QMAAAAA//zrA//66Cn/99rW++Jq/PjWIP/41gX/+NYB//jVAf/41QH/
+NUB//jVAf/41QH/+NUB//jVAf/41QH/+NQB//jUAf/41AH/+NMB//jTAf/40wH/+NMB//jTAf/4
0wH/+NMB//jTAf/40gH/+NIB//jSAf/30gH/99IB//fRAf/30QH/99AB//fQAf/30AH/99AB//fQ
Af/3zwH/988B//fPAf/3zwH/988B//fOAf/3zgH/984B//fOAf/3zgH/984B//fNAf/3zQH/980B
//bMAf/2zAH/9swB//bLAf/2ywH/9ssB//bKAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/
9skB//bIAf/2yAH/9sgB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xgH/9cUB//XFAf/0
xQX/88AA//fRPP/thjj/51wA/+hmA//oYwD/6GMA/+hiAP/nYgD/52IA/+dhAP/nYQD/5mAA/+Zg
AP/mYAD/5l8A/+ZfAP/mXwD/5V8A/+VeAP/lXgD/5V4A/+VeAP/kXQD/5F0A/+RdAP/kXAD/5FwA
/+NbAP/jWwD/41sA/+NbAP/jWgD/41oA/+JaAP/iWQD/4lkA/+FYAP/hWAD/4VcA/+FXAP/hVwD/
4FYA/+BWAP/gVQD/4FUA/+BVAP/gVQD/31QA/99UAP/fUwD/31MA/99SAP/eUgD/3lIA/95RAP/e
UAD/3lAA/91QAP/dUAD/3U8A/91OAP/cTgD/3E4A/9xNAP/cTQD/3E0A/9tMAP/bSwD/20sA/9tL
AP/aSgD/2koA/9pKAP/aSgD/2kkA/9pJAP/ZSAD/2UgA/9lIAv/YSxP/4XJV/PXTx9z4288j+t/T
AwAAAAD//O0D//vpI//43tz74mX8+NYb//jWBP/41gH/+NUB//jVAf/41QH/+NUB//jVAf/41QH/
+NUB//jVAf/41AH/+NQB//jUAf/41AH/+NMB//jTAf/40wH/+NMB//jTAf/40wH/+NMB//jTAf/4
0gH/+NIB//jSAf/30gH/99IB//fRAf/30QH/99AB//fQAf/30AH/99AB//fPAf/3zwH/988B//fP
Af/3zwH/988B//fPAf/3zgH/984B//fOAf/3zgH/984B//fNAf/3zQH/9s0B//bMAf/2zAH/9swB
//bLAf/2ywH/9ssB//bLAf/2ygH/9soB//bKAf/2ygH/9skB//bJAf/2yQH/9skB//bIAf/2yAH/
9cgB//XHAf/1xwH/9ccB//XHAf/1xwH/9ccB//XGAf/1xQH/88QC//PFBf/ywAD/9tE8/+2HOv/n
XQD/6GcF/+hlAv/oZAL/6GQC/+dkAv/nYwL/52MC/+diAv/mYgL/5mIC/+ZhAv/mYQL/5mAC/+Zg
Av/lYAL/5WAC/+VgAv/lYAL/5V8C/+RfAv/kXwL/5F4C/+ReAv/kXgL/410C/+NdAv/jXAL/41wC
/+NbAv/jWwL/4lwC/+JbAv/iWgL/4loC/+FZAv/hWQL/4VkC/+FYAv/gWAL/4FcC/+BXAv/gVwL/
4FYC/+BWAv/fVwL/31YC/99VAv/fVQL/31QC/95UAv/eVAL/3lMC/95SAv/eUgL/3VIC/91SAv/d
UQL/3VAC/91QAv/dTwL/3E8C/9xOAv/cTwP/3E4D/9tOBf/bTQf/200H/9pMB//aTAf/2ksH/9pL
CP/aSwj/2ksJ/9lLCv/ZSgr/2UsK/9hNGP/hdFf89dPH3Pjc0CP64dUDAAAAAP/87AL/++gj//je
3PviZfz51x7/+dcO//nWC//41gr/+NYK//jWCv/41gr/+NYK//jVCv/41Qn/+NUJ//jVCP/41Qb/
+NQG//jUBv/41Ab/+NQG//jUA//41AP/+NMD//jTA//40wP/+NMD//jTA//40wP/+NID//jSA//4
0gP/+NID//fRA//30QP/99AD//fQA//30AP/99AD//fQA//30AP/99AD//fQA//3zwP/988D//fP
A//3zgP/984D//fOA//3zgP/984D//fNA//2zQP/9s0D//bMA//2zAP/9swD//bLA//2ywP/9ssD
//bLA//2ygP/9soD//bKA//2ygP/9skD//bJA//2yQP/9skD//bIA//2yAP/9sgD//bIA//2yAP/
9cgD//XHA//1xwP/9ccD//XGA//zxQT/88UH//LAAP/20T7/7YI4/+dWAP/oYAP/6F4A/+heAP/n
XQD/510A/+dcAP/nXAD/51sA/+ZbAP/mWgD/5loA/+ZaAP/mWQD/5lkA/+VZAP/lWQD/5VkA/+VZ
AP/lWAD/5FgA/+RXAP/kVwD/5FcA/+RWAP/jVgD/41UA/+NVAP/jVQD/41QA/+NUAP/iUwD/4lMA
/+JTAP/iUwD/4VIA/+FSAP/hUQD/4FEA/99QAP/fUAD/308A/99PAP/fTwD/304A/99OAP/eTgD/
3k0A/95NAP/eTQD/3kwA/91MAP/dSwD/3UoA/91LAP/cSgD/3EoA/9xJAP/cSQD/3EgA/9xHAP/d
Thf/3E4X/91TIv/eVyn+3lcq/t1XKv7eWzD93low/d1aMP3dWS/93Vkv/d1bNPzdXDT83Vw0/Nxb
NPzcWzT83F04/OJ7Yvv218na+uLYIvri2AIAAAAA//zsAv/76iH/+N/Y++Nr+PjZO/z52jT8+do0
/PjaNPz42jT8+No0/PjaNPz42TT8+Nk0/PjZNPz42C/9+Ncp/vjXKv741yr++NYq/vjWKv741ir+
+NUh//jUF//40gD/+NIA//jSAP/40gD/+NIA//jSAP/40QD/+NEA//jRAP/40AD/99AA//fQAP/3
0AD/988A//fPAP/3zwD/988A//fPAP/3zwD/988A//fPAP/3zgD/984A//fOAP/3zQD/980A//fN
AP/3zQD/980A//fMAP/2zAD/9swA//bLAP/2ywD/9ssA//bKAP/2ygD/9soA//bJAP/2yQD/9skA
//bJAP/2yQD/9sgA//bIAP/2yAD/9sgA//bHAP/2xwD/9scA//bHAP/2xwD/9cYA//XGAP/1xQD/
9cUA//TEAP/0wwP/878A//bQO//5yaP/+LaD//i7i//4uYr/+LmK//i5iv/4uYr/+LiK//e3iv/3
uIr/97iK//e3iv/3uIr/97eK//e3iv/3t4r/97eK//e3iv/3t4r/9reK//a3iv/2tor/9raK//a2
iv/2tYr/9rWK//a1iv/2tYr/9rWK//a1iv/2tYr/9rSK//a0iv/1tIr/9rSK//W0iv/1tIr/9bSK
//S0iv/0tIr/9LOK//Oziv/zsor/87KK//Oyiv/zsor/87KK//Oyiv/zsor/87GK//Oxiv/zsYr/
87GK//Oxiv/zsIr/87CK//Owiv/zsIr/87CK//Owiv/zsIr/86+K//GsiPbxrIj276iE6O+ohOjv
qITo76eE6O+ohOjupoLh7qWC4e6lguHto4Dc7KOA3OyjgNzso4Dc7KOA3OyigNzsoX/c87GV2vrn
4MT65dsX++bdAgAAAAD//O0B//vrFf/56aT+8p7Y/euA3P3rgdz96oDc/eqA3P3qgNz96oDc/eqA
3P3qgNz96oDc/eqA3P3rguL964To/euE6P3rhOj964To/euE6P3rhOj97Ibv/eyG7/3uiv/97or/
/e6K//3uiv/97or//e6K//3tiv/97Yr//e2K//3tiv/97Yr//e2K//3tiv/97Yr//e2K//3tiv/9
7Yr//e2K//3siv/97Ir//eyK//3siv/97Ir//eyK//3siv/97Ir//eyK//3siv/97Ir//euK//3r
iv/964r//euK//3riv/964r//euK//3qiv/96or//eqK//3qiv/96or//eqK//3qiv/96or//emK
//3piv/96Yr//emK//3piv/96Yr//emK//3piv/86Yr//OiK//zoiv/854r//OeK//zmjP/85YT/
/Oyl/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8q6KCfKtiQnyrYkQ8ayIF/GsiBfxrIgX8ayIF/GsiBfw
qoce8KqHJPCphiTvqYYj76mGI++phiPvqYYj76iFI/GriyP1xLAi+NHCF/zr5QsAAAAAAAAAAAAA
AAD/+/AK/vfIFf7zsyH9748j/e2FI/3thiP97YYj/e2GI/3thiP97YYj/e2GI/3thiP97Ycd/e2H
Hv3tiB797YgX/e2IF/3tiBf97YgX/e2JEP3tiRD97okQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADxrYkB8a2JAfGtiQHxrYkB8a2JAfGsiQHxq4gC8auIA/CriAPw
q4gD8KuIA/CriAPxq4kD8rSYA/XAqQL40cECAAAAAAAAAAAAAAAAAAAAAAAAAAD+9sYB/vOtAv3x
mgL974oD/e6IA/3uiAP97ogD/e6IA/3uiAP97ogD/e6JAv3uiQL97okC/e6JAf3tiQH97YkB/e2J
Af3tiQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPi9dwL4vXcC+L13Avi9dwL4vHYC
+Lx2Avi7dQL4u3UC+Lt1Avi7dQL4vXcC+cOKA/rNngP72bgCAAAAAAAAAAAAAAAAAAAAAAAAAAD+
9sQC/vKoA/3vjwP97HgC/et1Av3rdQL963UC/et1Av3qdQL963UC/et1Av3rdQL963YC/et2Av3r
dwL963cC/et3Af3rdwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAD4v3cQ+L53EPi9dhD4vHYW+Lx2Fvi7dR34u3Ud+Lt1Hfi7dR34unQd+Lp0Hfi5cx34unQh
+Lp0Ivi6dCL4vXoi+tCmIfzbuxf+8OEKAAAAAAAAAAAAAAAA//3wCv73yRf+87Ah/e1+Iv3rcyL9
63Qi/ep0Iv3qdCL96nQi/ep0Iv3qdCH96XMd/ep0Hf3qdB396nUd/ep1Hf3rdhb963YW/et2Fvzr
dhb763YQ++t4CPvqeAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPvUlv/5xnH/+sl6//rIeP/6yHj/+sh4//rIeP/6yHj/+sh4
//rIeP/6x3j/+sZ4//rGeP/6xnj/+sZ4//rGeP/6xnj/+sZ4//nGeP/5xXj/+cV4//nFeP/5xXj/
+cV4//nEeP/5xHj/+cR4//nEeP/5xHj/+cR4//nDeP/5w3j/+cN4//nDeP/5w3j/+cN4//nDeP/5
w3j/+cN4//nCeP/5wnj/+cF4//jBeP/4wXj/+MF4//jBeP/4wXj/+MF4//jBeP/4wXj/+MF4//jB
eP/4wXj/+MF4//jAeP/4wHj/+MB4//jAeP/4wHj/+MB4//jAeP/4wHj/+MB4//i8dO/4u3Tv+Lp0
7/i4cun4uHLp+Lhy6fe2cOL3tnDi97Zw4va2cOH2tG7d9rRu3fa0bt32tG7d97Rv3fe4cN35wobc
/uzdx/7s2Rf+7dsBAAAAAP/97gH//OwX//vsx/3wk9z96m/d/ehv3f3obt396G7d/edu3f3nbt39
527d/edu3f3nbt39527d/ehw4f3ocOL96XLp/ely6f3pcun96XLp/Oly6fvqdO/76nb3++l29/vq
eP/76nj/++p4//vqeP/76nj/++p4//vqeP/76nj/++p4//vqeP/76nj/++p4//vqeP/76Xj/++p4
//vqeP/76nj/++p4//vpeP/76Xj/++l4//vpeP/76Xj/++l4//vpeP/76Xj/++l4//voeP/76Hj/
++h4//voeP/76Hj/++h4//voeP/76Hj/++h4//voeP/76Hj/++h4//voeP/76Hj/++h4//voeP/7
6Hj/++h4//voeP/753j/++d4//vneP/753j/++d4//vneP/753j/++d4//vneP/753j/++d6//vl
cf/87Jf/86g4/++JAP/wkAP/8I8A//COAP/wjgD/8I4A/++NAP/vjAD/74wA/++MAP/viwD/74sA
/++KAP/vigD/74oA/++KAP/uigD/7okA/+6JAP/uiAD/7ogA/+6IAP/uiAD/7ocA/+6HAP/uhwD/
7ocA/+6HAP/thgD/7YYA/+2FAP/thQD/7YQA/+2EAP/thAD/7YQA/+2EAP/tgwD/7YMA/+2DAP/s
ggD/7IIA/+yCAP/sggD/7IIA/+yCAP/sgQD/7IEA/+yAAP/sgAD/7IAA/+yAAP/sgAD/638A/+t/
AP/rfwD/638A/+t/AP/rfgD/634A/+t+AP/rfgD/64Qc/+uDHP/rhSL/64Ui/+uFIv7rhSL+64Ui
/uqGJ/3qhSj96ogr/eqIK/3qhyv96ocr/eqGK/3qhiv964gx/fCcXfv+4cjc/urXIf7r1wIAAAAA
//ztAv/87CH/+N/c+uNp+/fYNP332Sv999kr/ffZK/332Cv999gr/ffYK/332Cv999gr/ffYK/33
2Cv999Yj/vfWIv731iL+99Yi/vfWIv721iL/9tYi//bTEv/20xL/9tIA//bSAP/20gD/9tEA//bR
AP/20QD/9tEA//bRAP/20QD/9tEA//bRAP/20AD/9dAA//XPAP/1zwD/9c8A//XPAP/10AD/9c8A
//XOAP/1zgD/9c4A//XOAP/1zgD/9c4A//XOAP/1zgD/9c0A//XNAP/1zQD/9c0A//TNAP/0zAD/
9MwA//TMAP/0zAD/9MwA//TMAP/0zAD/9MwA//TLAP/0ywD/9MsA//TLAP/0ywD/9MsA//TKAP/0
ygD/9MoA//TKAP/zygD/88kA//PJAP/zyQD/88kA//PJAP/zygP/8sYA//bWO//zrDr/744A//CV
Bf/wlAP/8JQD//CUA//wkwP/8JMD/++SA//vkgP/75ED/++RA//vkQP/75AD/++QA//vkAP/75AD
/++QA//ujwP/7o8D/+6OA//ujgP/7o4D/+6OA//ujQP/7o0D/+6NA//ujQP/7o0D/+2MA//tjAP/
7YsD/+2LA//tiwP/7YoD/+2KA//tigP/7YoD/+2JA//tiQP/7YkD/+yJA//siAP/7IgD/+yIA//s
iAP/7IgD/+yHA//shwP/7IcD/+yGA//shgP/7IYD/+yGA//rhgP/64UD/+uFA//rhQP/64UD/+uF
A//rhAP/64QD/+uEA//rhAP/64QE/+uDBP/rgwT/64ME/+uDBP/rgwT/6oME/+qCBf/qggf/6oII
/+qCCP/qgQj/6oEI/+qCCf/pghb/7ppV/fziyN3+6NAi/urUAgAAAAD//OwC//voIv/44N364WP9
99Yc//fXCv/31gj/99YI//fWCP/31Qj/99UI//fVCP/31Qj/99UG//fVBf/31AX/99QE//fUBP/3
1AT/99QE//bUBP/21AP/9tQD//bTA//20wP/9tMD//bTA//20wP/9tID//bSA//20gP/9tID//bS
A//20gP/9tID//bSA//10QP/9dED//XRA//10QP/9dED//XRA//10QP/9dAD//XQA//10AP/9dAD
//XQA//10AP/9dAD//XQA//1zwP/9c8D//XPA//1zwP/9M8D//TOA//0zgP/9M4D//TOA//0zgP/
9M4D//TOA//0zQP/9M0D//TNA//0zQP/9M0D//TNA//0zQP/9M0D//TMA//0zAP/9MwD//PMA//z
ywP/88sD//PLA//zywP/88sD//PMBv/yyQD/9tc9//OrOP/vjQD/8JQD//CTAP/wkwD/8JMA//CS
AP/wkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A
/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/
7YkA/+2JAP/tiQD/7YgA/+2IAP/tiAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/s
hgD/7IUA/+yFAP/shQD/7IUA/+uEAP/rhAD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64MA/+uD
AP/rggD/64IA/+uCAP/rggD/64IA/+uCAP/qgQD/6oEA/+qBAP/qgQD/6oEA/+qAAP/qgAD/6oEC
/+mCE//umlT9++LH3f7ozyL+6dICAAAAAP/77AL/++ki//jg3frhY/331hr/99YD//fWAP/31gD/
99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/2
1AD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XR
AP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA
//XPAP/1zwD/9c8A//XPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/
9M0A//TNAP/0zQD/9M0A//TNAP/0zAD/9MwA//TMAP/0zAD/88wA//PLAP/zywD/88sA//PLAP/z
ywD/88wD//LIAP/21zv/86w4/++OAP/wlAP/8JMA//CTAP/wkwD/8JIA//CSAP/vkgD/75EA/++R
AP/vkQD/75AA/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7o0A
/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiAD/
7YgA/+2IAP/siAD/7IcA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/s
hQD/64QA/+uEAP/rhAD/64QA/+uEAP/rhAD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64IA/+uC
AP/rggD/64IA/+qBAP/qgQD/6oEA/+qBAP/qgQD/6oAA/+qAAP/qgQH/6YIT/+6aVP374sfd/ujP
Iv7p0gIAAAAA//vsAv/76SL/+ODd+uFj/ffVGv/31gP/99YA//fWAP/31QD/99UA//fVAP/31QD/
99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//fUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/2
0wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XR
AP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1zwD/9c8A
//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M0A//TNAP/0zQD/9M0A//TNAP/0zQD/
9M0A//TMAP/0zAD/9MwA//TMAP/zzAD/88wA//PLAP/zywD/88sA//PLAP/zzAP/8sgA//bXO//z
qzj/748A//CVA//wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkQD/75AA/++Q
AP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA
/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiAD/7YgA/+yIAP/siAD/
7IgA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/rhAD/64QA/+uEAP/r
hAD/64QA/+uEAP/rgwD/64MA/+uDAP/rgwD/64IA/+uCAP/rggD/64IA/+uCAP/rggD/6oEA/+qB
AP/qgQD/6oEA/+qBAP/qgAD/6oAA/+qBAf/pghP/7ppU/fvix93+6M8i/unSAgAAAAD/++wC//vp
Iv/44N364WP999Ua//fWA//31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31AD/
99QA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/2
0gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQ
AP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A
//TOAP/0zgD/9M4A//TOAP/0zQD/9M0A//TNAP/0zQD/9M0A//TNAP/0zQD/9MwA//TMAP/0zAD/
9MwA//PMAP/zzAD/88wA//PLAP/zywD/88sA//PMA//yyAD/9tc7//SsOP/vjwD/8JUD//CTAP/w
kwD/8JMA//CTAP/wkwD/8JIA//CSAP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++O
AP/vjwD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA
/+2LAP/tiwD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/7YgA/+2IAP/tiAD/7IcA/+yHAP/shwD/
7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/shQD/7IUA/+uEAP/rhAD/64QA/+uEAP/r
hAD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64IA/+uCAP/rggD/64IA/+uCAP/qgQD/6oEA/+qB
AP/qgQD/6oEB/+mCD//ul039/OTK4/7o0Bz+6dIDAAAAAP/87AP/+ugi//jg3frhXP331RX/99YC
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//fUAP/31AD/
9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQ
AP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A
//TNAP/0zQD/9M0A//TNAP/0zQD/9M0A//TNAP/0zAD/9MwA//TMAP/0zAD/88wA//PMAP/zzAD/
88wA//PLAP/zywD/88wD//LIAP/21zv/9Kw4/++PAP/wlQP/8JMA//CTAP/wkwD/8JMA//CTAP/w
kgD/8JIA/++SAP/vkgD/75EA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6O
AP/ujgD/7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tiwD/7YoA
/+2KAP/tiQD/7YkA/+2JAP/tiAD/7YgA/+2IAP/siAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/
7IYA/+yGAP/shQD/7IUA/+yFAP/shQD/64QA/+uEAP/rhAD/64QA/+uEAP/rgwD/64MA/+uDAP/r
gwD/64IA/+uCAP/rggD/64IA/+uCAP/rggD/64IA/+qBAP/qgQD/6oEA/+qBAP/qggH/6YIQ/+6a
U/374sfe/ujQIf7q0gIAAAAA//zsAv/76iH/+OHe+uFh/ffVF//31gL/99YA//fWAP/31gD/99YA
//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//bUAP/21AD/
9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XP
AP/1zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M0A
//TNAP/0zQD/9M0A//TNAP/0zQD/9M0A//TNAP/zzAD/88wA//PMAP/zzAD/88sA//PLAP/zzAP/
8sgA//bXO//0rDj/8I4A//CVA//wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/v
kgD/75EA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6N
AP/ujQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA
/+2JAP/tiAD/7YgA/+yIAP/siAD/7IcA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shQD/
7IUA/+yFAP/shQD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64MA/+uDAP/rgwD/64IA/+uCAP/r
ggD/64IA/+uCAP/rggD/6oEA/+qBAP/qgQD/6oEA/+qCAf/pgxL/7plS/fvix97+6M8h/urSAgAA
AAD//OwC//vpIf/44d764WH999UY//fWA//31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//bUAP/21AD/9tMA//bTAP/20wD/
9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/1
0QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XP
AP/1zwD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M0A//TNAP/0zQD/9M0A
//TNAP/0zQD/9M0A//PMAP/zzAD/88wA//PMAP/zywD/88sA//PMA//yyAD/9tc7//SsOP/wjgD/
8ZUD//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkQD/75EA/++RAP/v
kAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7owA/+6M
AP/ujAD/7owA/+6MAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/tiQD/7IgA
/+yIAP/siAD/7IcA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shQD/7IUA/+yFAP/shQD/
7IUA/+uEAP/rhAD/64QA/+uEAP/rgwD/64MA/+uDAP/rgwD/64MA/+uDAP/rggD/64IA/+uCAP/q
gQD/6oEA/+qBAP/qgQD/6oIB/+mDEv/umVL9++LH3v7ozyH+6tICAAAAAP/87AL/++kh//jh3vrh
Yf331Rj/99cD//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31QD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/
9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/1
0QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TO
AP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zQD/9M0A//TNAP/0zQD/9M0A//TNAP/0zQD/9MwA
//PMAP/zzAD/88wA//PLAP/zywD/88wD//LIAP/21zv/9Kw4//CPAP/xlQP/8JQA//CUAP/wlAD/
8JQA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkQD/75EA/++QAP/vkAD/75AA/++QAP/v
jwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2L
AP/tiwD/7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/siAD/7IcA
/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yGAP/shQD/7IUA/+yFAP/shQD/64QA/+uEAP/rhAD/
64QA/+uDAP/rgwD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64IA/+qCAP/qgQD/6oEA/+qBAP/q
ggH/6YMS/+6ZUv384sfe/ujPIf7q0gIAAAAA//zsAv/76SH/+OHe+uFh/ffWGP/31wP/99cA//fX
AP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/
9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/1
0AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TO
AP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/9M0A//TNAP/0zAD/9MwA//TMAP/0zAD/88wA
//PMAP/zzQP/8skA//bYO//0rDj/8JAA//GWA//wlAD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/
8JIA//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/u
jgD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2L
AP/tigD/7YoA/+2JAP/tiQD/7YgA/+yIAP/siAD/7IgA/+yIAP/siAD/7IgA/+yHAP/shwD/7IYA
/+yGAP/shgD/7IYA/+yGAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64MA/+uDAP/rgwD/
64MA/+uDAP/rgwD/64IA/+uCAP/rggD/6oIA/+qCAP/qgQD/6oEA/+qCAf/pgxL/75pS/fzix97+
6M8h/urSAgAAAAD//OwC//vpIf/44d764WH999YY//fXA//31wD/99cA//fWAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//bUAP/21AD/9tQA
//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/
9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/1
0AD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TO
AP/0zgD/9M0A//TNAP/0zQD/9M0A//TNAP/0zQD/9MwA//TMAP/zzAD/88wA//PNA//yyQD/9tg7
//StOP/wjwD/8ZYD//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/
8JIA/++SAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/u
jgD/7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2J
AP/tiQD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IcA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA
/+yGAP/shQD/7IUA/+yFAP/shQD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64MA/+uDAP/rgwD/
64MA/+uDAP/rggD/64IA/+uCAP/rggD/64IB/+qEEv/vmlL9/OLH3v7ozyH+6tICAAAAAP/87AL/
++kh//jh3vriYf331hj/99cD//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99YA//fV
AP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/9tQA//bUAP/21AD/9tQA//bUAP/20wD/9tMA
//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/
9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1
zwD/9c8A//XPAP/1zwD/9c8A//XPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zQD/9M0A//TN
AP/0zQD/9M0A//TNAP/0zQD/9MwA//PMAP/zzAD/880D//PJAP/22Dv/9K04//CQAP/xlgP/8ZUA
//GVAP/wlAD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++SAP/vkQD/
75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/u
jQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2J
AP/siAD/7IgA/+yIAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/shgD/7IYA/+yGAP/shQD/7IUA
/+yFAP/rhAD/64QA/+uEAP/rhAD/64MA/+uDAP/rgwD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/
64IA/+uCAP/rgwH/6oQS//CaUv394sfe/ujPIf7q0gIAAAAA//zsAv/76SH/+OHe++Jh/fjWGP/4
1wP/+NcA//jXAP/41wD/+NcA//jXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
AP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA
//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/
9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1
zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0zQD/9M0A//TN
AP/0zQD/9MwA//TMAP/0zQP/88kA//fYO//0rTj/8JAA//GWA//xlQD/8ZUA//GVAP/wlAD/8JQA
//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++QAP/vkAD/
75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujQD/7owA/+6MAP/u
jAD/7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yI
AP/shwD/7IcA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yGAP/shQD/7IUA/+yFAP/rhAD/64QA
/+uEAP/rhAD/64MA/+uDAP/rhAD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64IA/+uDAf/qhBH/
8JpS/f3ix97+6M8h/unSAgAAAAD//OwC//vpIf/44d774mH9+NYY//jXA//41wD/+NcA//jXAP/4
1wD/+NcA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fV
AP/31QD/99UA//fUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA
//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/
9dEA//XRAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/1
zwD/9M4A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/9M0A//TNAP/0zAD/9MwA//TN
A//zyQD/99g7//WuOP/wkQD/8ZcD//GVAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JMA
//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/
748A/++PAP/vjwD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/t
iwD/7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IcA/+yH
AP/shwD/7IcA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA
/+uEAP/rgwD/64MA/+uDAP/rgwD/64MA/+uCAP/rggD/64MB/+qDDP/wmlH9/eLH3v7nziH+6dEC
AAAAAP/76wL/+ugh//jh3vvhYf341hr/+NcD//jXAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/3
1wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//bU
AP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA
//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/
9dAA//XQAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPAP/0zgD/9M4A//TOAP/0
zgD/9M4A//TOAP/0zgD/9M0A//TNAP/0zQD/9M0A//TMAP/0zAD/9M0D//PJAP/32Dv/9a44//CR
AP/xlwP/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JIA
//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/
7o4A/+6OAP/ujQD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2LAP/t
igD/7YoA/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/shwD/7IcA/+yHAP/shwD/7IYA/+yG
AP/shgD/7IYA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64MA
/+uDAP/rgwD/64MA/+uCAP/rgwH/6oMN//CXSv3+4sjg/ujQH/7q0wIAAAAA//zsAv/76h//+OHg
++Fg/fjWFv/41wL/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31wD/99YA//fWAP/3
1gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//bUAP/21AD/9tQA//bT
AP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA
//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/1zwD/
9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TOAP/0
zQD/9M0A//TNAP/0zQD/9MwA//TMAP/0zQP/88kA//fYO//1rjj/8ZIA//KYA//xlgD/8ZYA//GW
AP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA
/++RAP/vkQD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/
7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2JAP/t
iQD/7YkA/+2JAP/tiQD/7YgA/+2IAP/siAD/7IcA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yF
AP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA/+uEAP/rhAD/64MA/+uDAP/rgwD/64MA
/+uEAf/qhA//8JpQ/f7iyOD+6NAf/urTAgAAAAD//OwC//vpH//44eD74WD9+NcY//jYAv/42AD/
+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/3
1gD/99YA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bU
AP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA
//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/1zwD/
9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/9M0A//TNAP/0
zQD/9M0A//TOA//zygD/99k7//WuOP/xkgD/8pgD//GXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GV
AP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JIA//CSAP/wkgD/75IA/++RAP/vkQD/75EA
/++QAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/
7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2JAP/t
iAD/7YgA/+yIAP/siAD/7IcA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+uE
AP/rhAD/64QA/+uEAP/rhAD/64QA/+uEAP/rgwD/64MA/+uDAP/rgwD/64QB/+qEEP/wmlD9/uLI
4P7o0B/+6tMCAAAAAP/87AL/++kf//jh4PviYP341xj/+NgD//jYAP/42AD/+NgA//jYAP/42AD/
+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/3
1QD/99UA//fVAP/31AD/99QA//fUAP/21AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bT
AP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA
//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/
9c8A//XPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/9M0A//TNAP/0zQD/9M4D//PKAP/3
2Tv/9a84//GSAP/ymAP/8ZcA//GWAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CU
AP/wlAD/8JMA//CTAP/wkwD/8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75EA/++QAP/vkAD/75AA
/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/tiwD/
7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2IAP/tiAD/7IgA/+yIAP/s
iAD/7IcA/+yHAP/shwD/7IYA/+yGAP/shgD/7IYA/+yFAP/shQD/7IQA/+uEAP/rhAD/64QA/+uE
AP/rhAD/64QA/+uDAP/rgwD/64MA/+uDAP/rhAH/6oQQ//CaUP3+4sjg/ujQH/7q0wIAAAAA//zs
Av/76R//+OHg++Jg/fjXGP/42AP/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/
99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fUAP/3
1AD/99QA//bUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bS
AP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA
//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/
9M4A//TOAP/0zgD/9M0A//TNAP/0zQD/9M0A//TNAP/0zgP/88oA//fZO//1rzj/8ZMA//KZA//y
lwD/8pcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wkwD/8JMA//CT
AP/wkwD/8JIA//CSAP/vkgD/8JIA/++RAP/vkQD/75EA/++QAP/vkAD/748A/++PAP/vjwD/748A
/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/
7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2JAP/tiAD/7YgA/+yIAP/siAD/7IcA/+yHAP/s
hwD/7IYA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+uFAP/shQD/64QA/+uEAP/rhAD/64QA/+uD
AP/rgwD/64MA/+uEAf/qhBD/8JpQ/f7iyOD+6NAf/urTAgAAAAD//OwC//vpH//44eD74mD9+NcY
//jYA//42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/
+NcA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/3
1AD/99QA//fUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bS
AP/20gD/9tIA//bSAP/10gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA
//XQAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1zwD/9M8A//TOAP/0zgD/9M4A//TOAP/0zgD/
9M4A//TOAP/0zQD/9M0A//TOA//zygD/99k7//WvOP/xkwD/8pkD//KXAP/ylwD/8ZcA//GWAP/x
lgD/8ZUA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkwD/8JIA//CS
AP/wkgD/8JIA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A
/+6OAP/ujQD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tigD/
7YkA/+2JAP/tiQD/7YkA/+2IAP/tiAD/7YgA/+yIAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/s
hgD/7IYA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA/+uDAP/rgwD/64QB/+qE
EP/wmlD9/uLI4P7o0B/+6tMCAAAAAP/87AL/++kf//jh4PviYP341xj/+NgD//jYAP/42AD/+NgA
//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/99YA//fWAP/31gD/
99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/99QA//bUAP/2
1AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//XS
AP/10gD/9dIA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA
//XQAP/1zwD/9c8A//XPAP/0zwD/9M8A//TPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zQD/
9M4D//PKAP/32Dv/9a84//GTAP/ymQP/8pgA//KXAP/xlwD/8ZcA//GWAP/xlgD/8ZYA//GVAP/x
lQD/8ZUA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/wkgD/75IA/++S
AP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A
/+6NAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/
7YkA/+2IAP/tiAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IYA/+yFAP/s
hQD/7IUA/+yFAP/rhAD/64QA/+uEAP/rhAD/64QA/+uDAP/rhAH/6oUQ//CaUP3+4sjg/ujQH/7q
0wIAAAAA//zsAv/76R//+OHg++Jg/fjXGP/42AP/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA
//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/
99UA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bTAP/2
0wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9dIA//XSAP/10gD/9dIA//XR
AP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/1zwD/9c8A
//XPAP/0zwD/9M8A//TPAP/0zgD/9M4A//TOAP/0zgD/9M4A//TNAP/0zgP/88oA//fZO//1rzj/
8ZQA//KaA//ymAD/8pgA//KXAP/ylwD/8pcA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZQA//GUAP/w
lAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkQD/75EA/++Q
AP/vkAD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA
/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2JAP/siAD/
7IgA/+yIAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+yFAP/s
hQD/64QA/+uEAP/rhAD/64QA/+uFAf/qhRD/8JtQ/f7iyOD+6NAf/unTAgAAAAD//OwC//vpH//4
4eD74mD9+NgY//jZA//42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA
//jXAP/41wD/+NcA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/
99UA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/2
0wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XR
AP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9c8A//XPAP/1zwD/9c8A
//TOAP/0zgD/9M4A//TOAP/0zgD/9M4A//TPA//zywD/99k7//WvOP/xlAD/8poD//KYAP/ymAD/
8pgA//KXAP/ylwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZQA//CUAP/wlAD/8JQA//CUAP/w
kwD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++SAP/vkQD/75EA/++QAP/vkAD/748A/++P
AP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAD/7YsA
/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IgA/+yIAP/shwD/
7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uEAP/r
hAD/64UB/+qFDP/wm1D9/uLI4P7nzx/+6dICAAAAAP/86wL/+ugf//jh4PviYP342Bj/+NkD//jZ
AP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/99cA
//fXAP/31wD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/
99UA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/2
0wD/9tMA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQ
AP/10AD/9dAA//XQAP/10AD/9dAA//XQAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A
//TOAP/0zgD/9M8D//PLAP/32Tv/9a84//GUAP/ymgP/8pgA//KYAP/ymAD/8pgA//KYAP/xlwD/
8ZcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/w
kwD/8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/7o4A/+6O
AP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YsA
/+2KAP/tigD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IgA/+yIAP/shwD/7IcA/+yGAP/shgD/
7IYA/+yGAP/shgD/7IUA/+yFAP/shQD/7IUA/+uEAP/rhAD/64QA/+uEAP/rhQH/6oUN//CaT/7+
4snh/ujRHv7p0wEAAAAA//zsAf/76h7/+OHh+uJe/vjYFf/42QL/+NkA//jZAP/42AD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31gD/99YA
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/
9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/2
0gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQ
AP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TOAP/0zgD/9M4A//TOAP/0zwP/88sA
//fZO//1sDj/8ZQA//KaA//ymQD/8pkA//KYAP/ymAD/8pgA//KXAP/ylwD/8ZcA//GXAP/xlgD/
8ZYA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CSAP/w
kgD/8JIA/++RAP/vkQD/75AA/++QAP/vkAD/75AA/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6O
AP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YoA/+2KAP/tiQD/7YkA
/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/
7IUA/+yFAP/shQD/7IUA/+yFAP/rhAD/64QA/+uFAf/qhQ//8JpP/f7iyeH+6NEe/urUAgAAAAD/
/ewC//vpHv/54eH74l79+NgW//jZAv/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NcA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99YA
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//fUAP/21AD/
9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XP
AP/1zwD/9c8A//XPAP/1zwD/9c8A//TOAP/0zgD/9M4A//TPA//zywD/99k7//WwOP/xlAD/8poD
//KZAP/ymQD/8pkA//KYAP/ymAD/8pcA//KXAP/xlwD/8ZcA//GWAP/xlgD/8ZYA//GVAP/xlQD/
8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JIA//CSAP/wkgD/75EA/++RAP/v
kAD/75AA/++QAP/vkAD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6M
AP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/7YkA
/+yIAP/siAD/7IgA/+yIAP/shwD/7IcA/+yGAP/shgD/7IYA/+yGAP/shgD/7IUA/+yFAP/shQD/
7IUA/+uEAP/rhAD/64QB/+qFD//wmk/9/uLJ4f7o0R7+6tQCAAAAAP/97AL//Oke//nh4fviXv34
2Bb/+NkC//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jY
AP/42AD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bUAP/21AD/
9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/1
0QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XP
AP/1zwD/9c8A//TOAP/0zgD/9M8D//PLAP/32Tv/9bA4//GVAP/ymgP/8pkA//KZAP/ymQD/8pkA
//KYAP/ymAD/8pcA//KXAP/ylwD/8pYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//GVAP/wlAD/
8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/75IA/++RAP/vkQD/75AA/++QAP/v
jwD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6M
AP/ujAD/7owA/+2LAP/tiwD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IgA
/+yIAP/shwD/7IcA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+yFAP/shQH/
64YP//CaT/3+48nh/unRHv7q1AIAAAAA//3sAv/86R7/+eHh++Je/fjYFv/42QL/+NkA//jZAP/4
2QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/31wD/99cA//fX
AP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA
//fVAP/31QD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/
9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/1
0QD/9dEA//XQAP/10AD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9M4A//TO
AP/0zwP/88sA//bZO//1sTj/8ZUA//KbA//ymQD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA
//KXAP/ylwD/8ZYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wlAD/
8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75IA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/v
jwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2L
AP/tiwD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IgA/+yIAP/shwD/7IcA
/+yHAP/shwD/7IYA/+yGAP/shgD/7IYA/+yFAP/shQD/7IUA/+yGAf/rhg//8JtP/f7jyeH+6dEe
/uvUAgAAAAD//ewC//zpHv/54eH74179+NgW//naAv/52gD/+doA//jaAP/42gD/+NoA//jZAP/4
2QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jX
AP/31wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31AD/99QA//fUAP/31AD/99QA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/
9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/1
0QD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XPA//0zAD/99o7//Wx
OP/xlQD/8psD//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pcA//KXAP/xlwD/8ZYA
//GWAP/xlgD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/
8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/7o4A/+6OAP/u
jgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YoA/+2K
AP/tiQD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA
/+yGAP/shgD/7IUA/+yFAP/shQD/7IYB/+uGD//wm0/9/uPJ4f7p0R7+69QCAAAAAP/97AL//Oke
//nh4fvjXv352Rb/+doC//naAP/52gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/4
2QD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fX
AP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA
//fUAP/31AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/
9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10AD/9dAA//XQAP/1
0AD/9c8A//XPAP/1zwD/9c8A//XPAP/1zwD/9dAD//XMAP/32jv/9bE4//KWAP/ymwP/8poA//Ka
AP/ymgD/8pkA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA//GXAP/xlwD/8ZcA//GWAP/xlgD/8ZUA
//GVAP/wlAD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkgD/
75IA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6NAP/u
jQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tigD/7YkA/+2J
AP/siAD/7IgA/+yIAP/siAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUA
/+yFAP/shgH/64YP//CbT/3+48nh/unRHv7q0wIAAAAA//3sAv/86R7/+eHh++Ne/fnZFv/52gL/
+doA//naAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/4
2AD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99cA//fWAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//fUAP/21AD/9tQA
//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/
9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XQAP/10AD/9dAA//XQAP/1zwD/9c8A//XPAP/1
zwD/9c8A//XPAP/10AP/9MwA//faO//2sTj/85YA//OcA//ymgD/8poA//KaAP/ymgD/8poA//Ka
AP/ymQD/8pkA//KZAP/ymAD/8pgA//KXAP/xlwD/8ZYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA
//GVAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkwD/8JIA//CSAP/wkgD/75IA/++RAP/vkQD/
75AA/++QAP/vkAD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7owA/+6MAP/u
jAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2I
AP/siAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shwD/7IYA/+yGAP/shgD/7IUA/+yGAf/rhhH/8JtP
/f7jyeH+6NAe/urTAgAAAAD//ewC//voHv/54eH74179+dkX//naAv/52gD/+doA//jaAP/42gD/
+NoA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NcA//jXAP/4
1wD/+NcA//jXAP/31wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
AP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bTAP/20wD/9tMA
//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/
9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9c8A//XQA//0
zAD/99o7//ayOP/ylgD/85wD//KbAP/ymgD/8poA//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KY
AP/ymAD/8pgA//GXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA
//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75AA/++QAP/vkAD/
748A/++PAP/vjgD/7o4A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA/+2LAP/t
iwD/7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiAD/7YgA/+yIAP/siAD/7IgA/+yH
AP/shwD/7IcA/+yHAP/shgD/7IYA/+yGAP/shgD/7IUB/+uGDf/wmk3+/uHH3v7o0CH+6tMCAAAA
AP/96wL/++kh//jf3vvjY/352Rj/+doD//naAP/52gD/+doA//jaAP/42gD/+NoA//jZAP/42QD/
+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/3
1wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fV
AP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tIA
//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/
9dAA//XQAP/10AD/9dAA//XPAP/1zwD/9c8A//XPAP/1zwD/9dAD//TMAP/32jv/9rI4//KXAP/z
nQP/85sA//ObAP/ymwD/8psA//KbAP/ymgD/8poA//KZAP/ymQD/8pkA//KYAP/ymAD/8pcA//KX
AP/xlwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//GVAP/xlAD/8ZQA//GUAP/wkwD/8JMA
//CTAP/wkwD/8JIA//CSAP/wkgD/75EA/++RAP/vkAD/75AA/++QAP/vkAD/748A/++PAP/vjwD/
748A/++PAP/ujgD/7o4A/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/t
iwD/7YoA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YgA/+2IAP/tiAD/7YgA/+yHAP/shwD/7IcA/+yH
AP/shwD/7IYA/+yGAP/shgH/64YO//CaTf7+48rj/unSHP7q0wEAAAAA//zsAf/86hz/+eLj++Rd
/vnaFP/52wL/+doA//naAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/
+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//fXAP/3
1wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fV
AP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA
//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/
9dAA//XQAP/10AD/9dAA//XPAP/10AP/9MwA//faO//2szj/8pcA//OdA//zmwD/85sA//ObAP/y
mwD/8psA//KaAP/ymgD/8pkA//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//GXAP/xlgD/8ZYA//GW
AP/xlgD/8ZUA//GVAP/xlQD/8ZUA//GUAP/xlAD/8ZQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JIA
//CSAP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/+6OAP/ujgD/
7o4A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/t
iQD/7YkA/+2JAP/tiAD/7YgA/+2IAP/tiAD/7IgA/+yHAP/shwD/7IcA/+yHAP/shgD/7IYA/+yH
Af/rhw7/8JtN/v7jyuP+6dIc/urTAQAAAAD//OwB//zqHP/54uP7413++doU//nbAv/52wD/+doA
//naAP/52gD/+doA//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/
+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99cA//fXAP/3
1gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//bUAP/21AD/9tQA//bU
AP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA
//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/
9dAA//XRA//0zAD/99o7//azOP/ymAD/850D//OcAP/znAD/8psA//KbAP/ymwD/8poA//KaAP/y
mQD/8pkA//KZAP/ymAD/8pgA//KYAP/ymAD/8ZcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GV
AP/xlQD/8ZQA//GUAP/xlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkgD/75EA
/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/
7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2IAP/t
iAD/7YgA/+2IAP/siAD/7IgA/+yHAP/shwD/7IcA/+yGAP/shgD/7IYB/+uHDv/wm03+/uPK4/7p
0hz+6tMBAAAAAP/87AH//Ooc//ni4/vjXf752hT/+dsC//nbAP/52wD/+doA//naAP/52gD/+doA
//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/
+NgA//jYAP/42AD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/3
1QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bT
AP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA
//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10AD/9dAA//XQAP/10AD/9dED//TNAP/32jv/
9rM4//KYAP/zngP/85wA//OcAP/zmwD/8psA//KbAP/ymgD/8poA//KZAP/ymQD/8pkA//KYAP/y
mAD/8pgA//KYAP/ymAD/8ZcA//GXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/xlQD/8ZQA//GU
AP/wlAD/8JQA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkAD/75AA
/++QAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/
7YsA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2IAP/tiAD/7YgA/+yIAP/s
iAD/7IgA/+yHAP/shwD/7IcA/+yGAP/shwH/64cO//CbTf7+48rj/unSHP7q0wEAAAAA//zsAf/8
6hz/+eLj++Nd/vnaFP/52wL/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/52gD/+NoA
//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/
+NgA//jXAP/41wD/+NcA//jXAP/41wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/3
1QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bT
AP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA
//XRAP/10QD/9dEA//XRAP/10QD/9dAA//XQAP/10QP/9M0A//fbO//2szj/8pgA//OeA//znAD/
85wA//ObAP/zmwD/85sA//KbAP/ymgD/8poA//KaAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/y
mAD/8pcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CT
AP/wkwD/8JMA//CTAP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A
/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/tiwD/
7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/tiQD/7IgA/+yIAP/siAD/7IcA/+yHAP/s
hwD/7IcA/+yIAf/riA7/8JxN/v7jyuP+6dIc/urTAQAAAAD//OwB//zqHP/54uP7413++doU//nb
Av/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42gD/+NoA
//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/
+NcA//jXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/3
1QD/99QA//fUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bT
AP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dEA
//XRAP/10AD/9dAA//XRA//0zgD/99s7//azOP/ymAD/854D//OdAP/znAD/85wA//ObAP/zmwD/
8psA//KaAP/ymgD/8poA//KaAP/ymQD/8pkA//KYAP/ymAD/8pgA//KYAP/ymAD/8ZcA//GXAP/x
lgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CS
AP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A
/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/
7YoA/+2JAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/siAD/7IcA/+yHAP/shwD/7IgB/+uIDv/w
nE3+/uPK4/7p0hz+6tMBAAAAAP/87AH//Ooc//ni4/vjXf752hT/+dsC//nbAP/52wD/+dsA//nb
AP/52wD/+doA//naAP/52gD/+doA//naAP/52gD/+doA//naAP/52gD/+NkA//jZAP/42QD/+NgA
//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/
99cA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99QA//fUAP/3
1AD/99QA//fUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bT
AP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10QD/9dEA//XRAP/10QD/9dID
//TPAP/33Dv/9rQ4//KZAP/zngP/850A//OdAP/znAD/85wA//ObAP/zmwD/85sA//KaAP/ymgD/
8poA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/ymAD/8pcA//KXAP/ylwD/8ZYA//GVAP/x
lQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CS
AP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o0A
/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YoA/+2KAP/tiQD/
7YkA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IcA/+yHAP/siAH/64gO//CcTf7+48rj/unSHP7q0wEA
AAAA//zsAf/86hz/+eLj++Nd/vnaFP/52wL/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//na
AP/52gD/+doA//naAP/52gD/+doA//naAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA
//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99YA//fWAP/31gD/
99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//bUAP/2
1AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tIA//bS
AP/20gD/9tIA//bSAP/10QD/9dEA//XRAP/10QD/9dEA//XRAP/10gP/9M8A//fcO//2tDj/8pkA
//OfA//znQD/850A//OdAP/znAD/85wA//OcAP/zmwD/8psA//KaAP/ymgD/8pkA//KZAP/ymQD/
8pkA//KYAP/ymAD/8pgA//KYAP/ymAD/8pcA//KXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/x
lQD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkgD/75EA/++R
AP/vkQD/75AA/++QAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA
/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2JAP/tiQD/
7IgA/+yIAP/siAD/7IcA/+yHAf/riA7/8JxN/v7jyuP+6dIc/urTAQAAAAD//OwB//zqHP/54uP7
413++doU//nbAv/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA//na
AP/52gD/+doA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA
//jYAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/
99YA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tMA//bTAP/2
0wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XR
AP/10QD/9dEA//XRAP/10QD/9dEA//XSA//0zwD/99w7//a0OP/ymgD/858D//OeAP/zngD/850A
//OdAP/znAD/85wA//ObAP/ymwD/8psA//KaAP/ymgD/8pkA//KZAP/ymQD/8pgA//KYAP/ymAD/
8pgA//KYAP/ylwD/8pcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/w
lAD/8JQA//CTAP/wkwD/8JIA//CSAP/wkgD/75IA/++SAP/vkgD/75EA/++RAP/vkQD/75AA/++Q
AP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA
/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2KAP/tiQD/7YkA/+2JAP/siAD/7IgA/+yIAP/siAD/
7IgB/+uID//wm039/uPK4/7p0Rz+69MCAAAAAP/97QL/++oc//ni4/vjXf352hX/+dsC//nbAP/5
2wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+NkA//jZ
AP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA
//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/
99UA//fUAP/31AD/99QA//fUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/2
0wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//XRAP/10QD/9dEA//XR
AP/10QD/9dID//TPAP/33Dv/9rQ4//OaAP/zoAP/854A//OeAP/zngD/850A//OdAP/znAD/85wA
//ObAP/ymwD/8psA//KaAP/ymgD/8poA//KZAP/ymQD/8pgA//KYAP/ymAD/8pgA//KXAP/ylwD/
8ZcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/w
kwD/8JIA//CSAP/vkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/+6O
AP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/tiwD/7YsA/+2LAP/tiwD/7YoA
/+2KAP/tigD/7YoA/+2JAP/tiQD/7YkA/+yIAP/siAD/7IgA/+yIAP/siQH/7IcL//CbS/7+5Mvm
/unRHv7q0wIAAAAA//zsAv/76h7/+OHh++Rh/fnbFv/53AL/+dwA//ncAP/53AD/+dwA//ncAP/5
2wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/42gD/+NkA//jZAP/42QD/+NkA//jZ
AP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA
//jXAP/41wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/
99UA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/2
0wD/9tMA//bSAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/20gD/9dEA//XRAP/10gP/9M8A//fc
O//2tTj/85oA//SgA//0ngD/9J4A//OeAP/znQD/850A//OdAP/znQD/85wA//OcAP/zmwD/8psA
//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ylwD/8pcA//GWAP/xlgD/
8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CSAP/w
kgD/8JIA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6O
AP/ujgD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA/+2LAP/tigD/7YoA/+2KAP/tigD/7YoA
/+2JAP/tiQD/7YkA/+2JAP/tiAD/7YgA/+2JAf/tiA3/8ZtL/v7ky+b+6dIZ/urTAQAAAAD//O0B
//vrGf/55Ob75Fr++dsS//ncAv/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/5
2wD/+dsA//naAP/52gD/+doA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZ
AP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA
//fWAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/
9tQA//bUAP/21AD/9tQA//bUAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tIA//bSAP/2
0gD/9tIA//bSAP/20gD/9tIA//bSAP/10QD/9dEA//XSA//0zwD/99w7//a1OP/zmgD/9KAD//Sf
AP/0ngD/9J4A//OdAP/znQD/850A//OdAP/znAD/85wA//OcAP/ymwD/8psA//KaAP/ymgD/8pkA
//KZAP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ylwD/8ZcA//GXAP/xlgD/8ZYA//GVAP/xlQD/
8ZUA//GVAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JIA//CSAP/wkgD/75IA/++SAP/v
kQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o4A/+6N
AP/ujQD/7owA/+6MAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2KAP/tigD/7YoA/+2JAP/tiQD/7YkA
/+2IAP/tiAD/7YkB/+yIDf/xm0v+/uTL5v7p0hn+6tMBAAAAAP/87QH/++sZ//nk5vvkWv752xL/
+dwC//ncAP/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/5
2gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fXAP/31gD/99YA
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/
9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gD/9tIA//XRAP/10QD/9dID//TPAP/33Dv/9rU4//ObAP/0oQP/9J8A//SfAP/0nwD/9J4A//Se
AP/znQD/850A//OcAP/znAD/85wA//OcAP/zmwD/8psA//KaAP/ymgD/8poA//KaAP/ymQD/8pkA
//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//KXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/xlQD/
8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkQD/75EA/++RAP/v
kAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujQD/7owA/+6M
AP/uiwD/7YsA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2JAP/tiQD/7YkA/+2JAP/tiQH/7IkN
//GcS/7+5Mvm/unSGf7q0wEAAAAA//ztAf/76xn/+eTm/ORa/vrcEv/63AL/+twA//rcAP/53AD/
+dwA//ncAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/4
2gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/31gD/99YA//fWAP/31gD/99UA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/31AD/99QA//fUAP/31AD/99QA//fUAP/31AD/
99QA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bSAP/2
0gP/9c8A//jcO//2tTj/85sA//ShA//0nwD/9J8A//SeAP/0ngD/9J4A//OeAP/znQD/850A//Oc
AP/znAD/85wA//ObAP/ymwD/8poA//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA
//KYAP/ylwD/8pcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CTAP/wkwD/
8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/v
jwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujQD/7owA/+6MAP/ujAD/7YsA/+2L
AP/tiwD/7YsA/+2KAP/tigD/7YkA/+2JAP/tiQD/7YkA/+2KAf/siQ3/8ZxL/v7ky+b+6dIZ/urT
AQAAAAD//O0B//vrGf/55Ob85Fr++twS//rdAv/63AD/+twA//ncAP/53AD/+dwA//ncAP/53AD/
+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//jaAP/42gD/+NoA//jaAP/4
2gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jY
AP/41wD/+NcA//jXAP/41wD/+NcA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31QD/99QA//fUAP/31AD/99QA//fUAP/31AD/99QA//fUAP/31AD/9tMA//bTAP/20wD/
9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bSAP/20gD/9tIA//bTA//20AD/+Nw7//e1OP/z
mwD/9KED//SfAP/0nwD/9J8A//SeAP/0ngD/9J4A//SdAP/znQD/850A//OcAP/znAD/85wA//Ob
AP/zmwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ylwD/8pcA
//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GUAP/xlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/
8JIA//CTAP/wkwD/8JIA//CSAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/748A/+6OAP/v
jwD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+6MAP/tiwD/7YsA/+2L
AP/tigD/7YoA/+2JAP/tiQD/7YoB/+yJDf/xnEv+/uTL5v7p0hn+6tMBAAAAAP/87QH//OsZ//nk
5vzkWv763BL/+t0C//rdAP/63AD/+t0A//rdAP/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/
+dsA//nbAP/52wD/+dsA//naAP/52gD/+NoA//naAP/52gD/+doA//jaAP/42gD/+NoA//jaAP/4
2QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jX
AP/41wD/99YA//fWAP/31gD/99YA//fVAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99QA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/
9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tMD//bQAP/43Dv/97U4//ObAP/0oQP/9J8A//SfAP/0
nwD/9J8A//SfAP/0nwD/9J4A//OeAP/znQD/850A//OdAP/znAD/85wA//ObAP/zmwD/8poA//Ka
AP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/ymAD/8pcA//GXAP/xlgD/8ZYA
//GWAP/xlQD/8ZUA//GUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/
8JIA//CSAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/vjwD/7o4A/+6OAP/u
jgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YsA/+2LAP/tigD/7YoA/+2J
AP/tiQH/7IkN//GcS/7+5Mvm/unSGf7q0wEAAAAA//3tAf/86xn/+uTm/OVa/vrcEv/63QL/+t0A
//rdAP/63QD/+t0A//rdAP/53AD/+dwA//ncAP/53AD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/
+dsA//naAP/52gD/+doA//naAP/52gD/+NoA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/4
2QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//jXAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31QD/99UA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/
9tIA//bSAP/20wP/9tAA//jcO//3tTj/85sA//ShA//0nwD/9J8A//SfAP/0nwD/9J8A//SfAP/0
nwD/854A//OeAP/znQD/850A//OcAP/znAD/85wA//KbAP/ymwD/8poA//KaAP/ymQD/8pkA//KZ
AP/ymQD/8pkA//KYAP/ymAD/8pgA//KYAP/ylwD/8ZcA//GXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA
//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/8JIA/++SAP/vkQD/
75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6MAP/u
jAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoA/+2KAf/siQ7/8ZxL/v7k
y+b+6dEZ/urSAQAAAAD//ewB//3rGf/64+b85Vr++twT//rdAv/63QD/+t0A//rdAP/63QD/+t0A
//ncAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/52gD/
+doA//naAP/42gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/4
2AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
AP/31gD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/9tQA
//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bTAP/20gD/9tIA//bTA//20AD/
+Nw7//e1OP/0mwD/9KED//SgAP/0oAD/9KAA//SgAP/0nwD/9J8A//SfAP/zngD/854A//OeAP/z
nQD/850A//OdAP/znAD/85wA//ObAP/ymwD/8psA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZ
AP/ymAD/8pgA//KYAP/ylwD/8pcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZQA//GVAP/wlAD/8JQA
//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkQD/75EA/++QAP/vkAD/
75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/u
jAD/7owA/+2LAP/tiwD/7YsA/+2KAP/tigD/7YoB/+yJCv/xnlD+/uPK4f7p0R7+6tIBAAAAAP/+
7AH//ese//ri4fzlX/763BT/+t0C//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dwA
//nbAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+doA//jaAP/42gD/
+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/4
1wD/+NcA//jXAP/41wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fV
AP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/21AD/9tQA//bUAP/20wD/9tMA
//bTAP/20wD/9tMA//bTAP/20wD/9tMA//bSAP/20gD/9tMD//bQAP/43Dv/97U4//WbAP/1oQP/
9KAA//SgAP/0oAD/9KAA//SgAP/0nwD/9J8A//OeAP/zngD/854A//OeAP/znQD/850A//OdAP/z
nAD/85sA//ObAP/ymwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KX
AP/ylwD/8pcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wkwD/8JMA
//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA/++RAP/vkQD/75AA/++QAP/vkAD/75AA/++PAP/vjwD/
748A/++PAP/ujgD/7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/t
iwD/7YoA/+2KAP/tiwH/7IkK//GcSv7+5czm/urSGf7r0wEAAAAA//7tAf/+7Bn/++Xm/OVZ/vrc
Ef/63QL/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dsA//nbAP/52wD/+dsA
//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+doA//jaAP/42gD/+NoA//jZAP/42QD/
+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/3
1gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fV
AP/31QD/99UA//fVAP/31QD/99UA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA
//bTAP/20wD/9tIA//bSAP/20gP/9tAA//jcO//3tjj/9ZwA//WhA//0oAD/9KAA//SgAP/0oAD/
9KAA//SgAP/0nwD/858A//OeAP/zngD/854A//OdAP/znQD/850A//OcAP/znAD/85wA//KbAP/y
mwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA//KXAP/ylwD/8ZcA//GW
AP/xlgD/8ZYA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA
//CSAP/wkgD/75IA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/748A/+6OAP/ujgD/
7o4A/+6OAP/ujgD/7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7YsA/+2LAP/tiwD/7YsA/+2LAf/s
igr/8Z1K/v7lzOb+6tIZ/uvTAQAAAAD//u0B//7sGf/75eb85Vn++twR//rdAv/63QD/+t0A//rd
AP/63QD/+t0A//rdAP/63QD/+twA//ncAP/53AD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA
//naAP/52gD/+doA//naAP/52gD/+doA//naAP/52gD/+NoA//jZAP/42QD/+NkA//jZAP/42QD/
+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fWAP/3
1gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fV
AP/31QD/99UA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tMA//bTAP/20wD/9tMA
//bTA//20AD/+N07//e2OP/0nAD/9aID//WhAP/1oQD/9aEA//ShAP/0oQD/9KAA//SgAP/0nwD/
9J8A//SfAP/zngD/854A//OdAP/znQD/850A//OcAP/znAD/85wA//ObAP/zmwD/85sA//KaAP/y
mgD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/ylwD/8pcA//GWAP/xlgD/8ZUA//GV
AP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkgD/8JIA
/++RAP/vkQD/75EA/++QAP/vkAD/75AA/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujgD/
7o0A/+6NAP/ujAD/7owA/+6MAP/ujAD/7owA/+2LAP/tiwD/7YwB/+yKCv/xnkr+/uXM5v7q0hn+
69MBAAAAAP/+7QH//uwZ//vl5vzlWf763BH/+t0C//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rd
AP/63QD/+twA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA
//naAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/
+NgA//jYAP/42AD/+NgA//jXAP/41wD/99cA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/3
1gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fV
AP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/20wD/9tQD//bRAP/43Tv/97Y4
//ScAP/1ogP/9aEA//WhAP/1oQD/9KEA//ShAP/0oAD/9KAA//SgAP/0nwD/9J8A//OeAP/zngD/
854A//OdAP/znQD/85wA//OcAP/znAD/85sA//ObAP/zmwD/8psA//KaAP/ymgD/8pkA//KZAP/y
mQD/8pkA//KZAP/ymAD/8pgA//KXAP/ylwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//GV
AP/wlAD/8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CSAP/wkgD/75IA/++RAP/vkQD/75EA
/++QAP/vkAD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujQD/
7owA/+6MAP/ujAD/7YsA/+2LAP/tjAH/7IsK//GeSv7+5czm/urSGf7r0wEAAAAA//7tAf/+7Bn/
++Xm/OVZ/vrcEf/63gL/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+dwA//nc
AP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA//naAP/52gD/+doA
//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/
+NgA//jXAP/31wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/3
1gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fUAP/21AD/9tQA//bU
AP/21AD/9tMA//bTAP/20wD/9tMA//bTAP/21AP/9tEA//jdO//3tjj/9JwA//WiA//1oQD/9aEA
//WhAP/0oQD/9KEA//SgAP/0oAD/9KAA//SgAP/0oAD/858A//OfAP/zngD/854A//OdAP/znQD/
850A//OcAP/znAD/85sA//ObAP/ymwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KZAP/y
mAD/8pgA//KYAP/xlwD/8ZcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZQA//CUAP/wlAD/8JQA//CU
AP/wlAD/8JQA//CTAP/wkwD/8JIA//CSAP/vkgD/75IA/++SAP/vkQD/75EA/++QAP/vkAD/75AA
/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujAD/7owA/+6MAP/tiwD/
7YsA/+2MAf/siwr/8Z5K/v7lzOb+6tIZ/uvTAQAAAAD//u0B//7sGf/75eb85Vn++t0R//reAv/6
3gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//rdAP/53QD/+d0A//ncAP/53AD/+dwA//nb
AP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA
//naAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jXAP/41wD/
+NcA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/99cA//fWAP/31gD/99YA//fWAP/3
1gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//bUAP/21AD/9tQA//bU
AP/20wD/9tMA//bUA//20QD/+N07//e3OP/0nQD/9aID//WhAP/1oQD/9aEA//ShAP/0oQD/9KEA
//SgAP/0oAD/9KAA//SgAP/0oAD/858A//OeAP/zngD/854A//OdAP/znQD/85wA//OcAP/znAD/
85sA//ObAP/ymwD/8poA//KaAP/ymQD/8pkA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/x
lwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/xlAD/8JQA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CT
AP/wkwD/8JIA//CSAP/vkgD/75IA/++RAP/vkQD/75EA/++QAP/vkAD/748A/++PAP/vjwD/7o4A
/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/tiwD/7YwB/+yLCv/xnkr+
/ubM5v7r0hn+7NMBAAAAAP/+7QH//uwZ//vl5vzlWf763RH/+t4C//reAP/63gD/+t4A//reAP/6
3gD/+t0A//rdAP/63QD/+t0A//ndAP/53QD/+d0A//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nb
AP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/52gD/+doA//jaAP/42gD/+NkA
//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/
+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/3
1QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21AD/9tQA//bTAP/20wD/9tQD//bR
AP/43Tv/+Lc4//SdAP/1owP/9aIA//WiAP/1ogD/9aEA//WhAP/0oQD/9KEA//SgAP/0oAD/9KAA
//SgAP/0nwD/9J8A//SeAP/zngD/854A//OdAP/znQD/850A//OcAP/znAD/85sA//ObAP/ymgD/
8poA//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/xlwD/8ZcA//GWAP/x
lgD/8ZUA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JIA//CS
AP/wkgD/75IA/++RAP/vkQD/75EA/++QAP/vkAD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A
/+6NAP/ujQD/7o0A/+6MAP/ujAD/7owA/+6MAP/ujAH/7YsK//GfSv7+5szm/uvSGf7s0wEAAAAA
//7tAf/+7Bn/++Xm/OVZ/vrdEf/63gL/+t4A//reAP/63gD/+t4A//reAP/63QD/+t0A//rdAP/6
3QD/+d0A//ndAP/53QD/+d0A//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nb
AP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA
//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/
+NcA//fXAP/31wD/99cA//fXAP/31gD/99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fUAP/3
1AD/99QA//fUAP/21AD/9tQA//bUAP/21AD/9tMA//bTAP/20wP/9tEA//jdO//4tzj/9Z4A//Wj
A//1ogD/9aIA//WiAP/1oQD/9aEA//ShAP/0oQD/9KAA//SgAP/0oAD/9KAA//SgAP/0nwD/9J8A
//SeAP/zngD/854A//OdAP/znQD/85wA//OcAP/znAD/85sA//ObAP/ymwD/8poA//KaAP/ymgD/
8poA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA//GXAP/xlwD/8ZcA//GWAP/xlgD/8ZUA//GVAP/x
lQD/8ZUA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkgD/75EA/++R
AP/vkQD/75EA/++QAP/vkAD/748A/++PAP/vjgD/7o4A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A
/+6MAP/ujAD/7owA/+6NAf/tjAr/8Z9K/v7mzOb+69IZ/uzTAQAAAAD//u0B//7sGf/75eb85Vn+
+t0R//reAv/63gD/+t4A//reAP/63gD/+t4A//reAP/63QD/+t0A//rdAP/53QD/+d0A//ndAP/5
3QD/+d0A//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//na
AP/52gD/+doA//naAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA
//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/
99cA//fXAP/31gD/99YA//fWAP/31gD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//fUAP/2
1AD/9tQA//bUAP/20wD/9tMA//bUA//20QD/+N07//i4OP/2ngD/9qMD//WiAP/1ogD/9aIA//Wi
AP/1ogD/9aEA//WhAP/0oQD/9KEA//ShAP/0oAD/9KAA//SfAP/0nwD/9J8A//SeAP/0ngD/854A
//OdAP/znQD/850A//OcAP/znAD/85sA//ObAP/zmwD/8psA//KbAP/ymgD/8poA//KaAP/ymQD/
8pkA//KYAP/ymAD/8pcA//KXAP/ylwD/8ZcA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/x
lQD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75EA/++RAP/vkQD/75AA/++Q
AP/vkAD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6MAP/ujAD/7o0B
/+2LBv/xnUP//ubM5v7r0hn+7NMBAAAAAP/+7QH//uwZ//vl5vzmWf763RH/+t4C//reAP/63gD/
+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/5
3AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//na
AP/52gD/+doA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA
//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/
99YA//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//bUAP/2
1AD/9tUD//bSAP/43jv/+Lg4//afAP/2pAP/9aMA//WiAP/1ogD/9aIA//WiAP/1oQD/9aEA//Sh
AP/0oQD/9KEA//SgAP/0oAD/9J8A//SfAP/0ngD/9J4A//SeAP/zngD/850A//OdAP/znQD/850A
//OcAP/znAD/85wA//ObAP/ymwD/8psA//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KYAP/ymAD/
8pcA//KXAP/xlwD/8ZYA//GWAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CTAP/w
kwD/8JMA//CTAP/wkwD/8JMA//CSAP/wkgD/75EA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++P
AP/vjwD/748A/+6OAP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAP/ujAH/7YsG//GdQ//+6M7r/uzT
FAAAAAAAAAAAAAAAAP/+7RT//Ojr/OZS//rdDP/63gL/+t4A//reAP/63gD/+t4A//reAP/63gD/
+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/5
3AD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+NoA//ja
AP/42gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA
//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99YA//fWAP/31gD/
99YA//fVAP/31QD/99UA//fVAP/31AD/99QA//fUAP/31AD/9tQA//bUAP/21QP/9dIA//jeO//4
uDj/9p8A//akA//1owD/9aMA//WjAP/1ogD/9aIA//WhAP/1oQD/9KEA//ShAP/0oQD/9KAA//Sg
AP/0nwD/9J8A//SeAP/0ngD/9J4A//OeAP/zngD/850A//OdAP/znQD/85wA//OcAP/znAD/85wA
//KbAP/ymwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA//GXAP/xlwD/
8ZYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CTAP/w
kwD/8JMA//CTAP/vkgD/75IA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/vjwD/7o4A/+6O
AP/ujgD/7o4A/+6OAP/ujQD/7o0A/+6NAf/tiwb/8Z1D//7ozuv+7NMUAAAAAAAAAAAAAAAA//7t
FP/86Ov85lL/+t0M//reAv/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63QD/
+t0A//rdAP/63QD/+t0A//ncAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dsA//nbAP/5
2wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42QD/+NkA//jZ
AP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA
//jXAP/41wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99UA//fVAP/31QD/
99UA//fVAP/31AD/99QA//fUAP/21AD/9tQA//bVA//20gD/+N47//i4OP/2nwD/9qQD//ajAP/2
owD/9aIA//WiAP/1ogD/9aIA//WiAP/1ogD/9aEA//ShAP/0oQD/9KAA//SgAP/0nwD/9J8A//Se
AP/0nwD/9J8A//SeAP/0ngD/850A//OdAP/znAD/85wA//OcAP/znAD/85sA//KbAP/ymwD/8poA
//KaAP/ymgD/8poA//KZAP/ymQD/8pkA//KYAP/ymAD/8pcA//KXAP/xlwD/8ZYA//GWAP/xlQD/
8ZUA//GVAP/xlQD/8ZQA//GUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/v
kgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/++PAP/ujgD/7o4A/+6N
AP/ujQD/7o0B/+2LBv/xnkP//ujO6/7s0xQAAAAAAAAAAAAAAAD//u0U//zo6/zmUv/63gz/+t8C
//rfAP/63wD/+t8A//rfAP/63wD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/
+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/5
2wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//jaAP/42gD/+NoA//jaAP/42gD/+NkA//jZ
AP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA
//jXAP/41wD/+NcA//jXAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/
99UA//fUAP/31AD/99UD//fSAP/53jv/+Lk4//afAP/2pQP/9qMA//ajAP/2ogD/9aIA//WiAP/1
ogD/9aIA//WiAP/1ogD/9aEA//ShAP/0oAD/9KAA//SgAP/0nwD/9J8A//SfAP/0nwD/9J8A//Se
AP/0ngD/850A//OdAP/znAD/85wA//OcAP/zmwD/85sA//KbAP/ymgD/8poA//KaAP/ymgD/8pkA
//KZAP/ymQD/8pkA//KYAP/ymAD/8pcA//KXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlAD/
8ZQA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA//CSAP/vkgD/75EA/++RAP/v
kAD/75AA/++QAP/vjwD/748A/++PAP/vjwD/748A/+6OAP/ujgD/7o4A/+6NAP/ujgH/7osG//Ge
Q//+6M7r/uzTFAAAAAAAAAAAAAAAAP/+7RT//Ojr/OZS//reDP/63wL/+t8A//rfAP/63wD/+t8A
//rfAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/53AD/
+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/5
2wD/+doA//naAP/52gD/+NoA//jaAP/42gD/+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA
//fWAP/31gD/99YA//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AP/
99IA//neO//4uTj/9qAA//alA//2pAD/9qMA//ajAP/1ogD/9aIA//WiAP/1ogD/9aIA//WiAP/1
oQD/9KEA//ShAP/0oAD/9KAA//SgAP/0nwD/9J8A//SfAP/0nwD/9J8A//SeAP/zngD/850A//Od
AP/znAD/85wA//OcAP/zmwD/8psA//KaAP/ymgD/8poA//KaAP/ymQD/8pkA//KZAP/ymQD/8pkA
//KYAP/ymAD/8pcA//GXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlAD/8JQA//CUAP/wlAD/
8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/8JMA/++SAP/vkgD/75EA/++RAP/vkQD/75AA/++QAP/v
jwD/748A/++PAP/vjwD/7o4A/+6OAP/ujgD/7o4A/+6NAf/tjAb/8Z5D//7ozuv+7NMUAAAAAAAA
AAAAAAAA//7tFP/86Ov851L/+t4M//rfAv/63wD/+t8A//rfAP/63wD/+t8A//rfAP/63gD/+t4A
//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//ncAP/53AD/+dwA//ncAP/53AD/
+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/5
2gD/+NoA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jY
AP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/99YA//fWAP/31gD/99UA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fVA//30gD/+d47//i5OP/2oAD/
9qYD//akAP/2pAD/9qMA//ajAP/2owD/9aMA//WjAP/1ogD/9aIA//WiAP/1oQD/9aEA//SgAP/0
oAD/9KAA//SgAP/0oAD/9KAA//SfAP/0nwD/9J8A//OeAP/zngD/850A//OdAP/znQD/85wA//Oc
AP/zmwD/85sA//OaAP/zmgD/85oA//KaAP/ymgD/8pkA//KZAP/ymQD/8pkA//KYAP/ymAD/8pgA
//KXAP/ylwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wlAD/
8JMA//CTAP/wkwD/8JMA//CSAP/vkgD/75EA/++RAP/vkQD/75AA/++QAP/vjwD/748A/++PAP/v
jwD/748A/++OAP/vjgD/744B/+6MBv/yn0P//ujO6/7s0xQAAAAAAAAAAAAAAAD//u0U//zo6/zn
Uv/73gz/+98C//vfAP/73wD/+t8A//rfAP/63wD/+t8A//rfAP/63wD/+t8A//reAP/63gD/+t4A
//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//ncAP/53AD/+dwA//ncAP/53AD/
+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/5
2gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42AD/+NgA//jYAP/42AD/+NgA//jY
AP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99UA
//fVAP/31QD/99UA//fVAP/31QD/99YD//fTAP/53zv/+Lo4//ahAP/2pgP/9qUA//akAP/2pAD/
9qMA//ajAP/1owD/9aMA//WiAP/1ogD/9aIA//WiAP/1oQD/9KEA//ShAP/0oAD/9KAA//SgAP/0
oAD/9KAA//SfAP/0nwD/858A//OeAP/zngD/850A//OdAP/znQD/85wA//OcAP/zmwD/85sA//Ob
AP/zmgD/8poA//KaAP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ymAD/8pgA//KXAP/xlwD/8ZYA
//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/
8JIA/++SAP/vkQD/75EA/++RAP/vkQD/75AA/++QAP/vkAD/748A/++PAP/vjwD/744A/++OAP/v
jwH/74wG//KfQ//+6M7r/uzTFAAAAAAAAAAAAAAAAP/+7RT//Ojr/OdS//veDP/73wL/+98A//vf
AP/63wD/+t8A//rfAP/63wD/+t8A//rfAP/63wD/+t4A//reAP/63gD/+t4A//reAP/63QD/+t0A
//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/
+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/42QD/+NkA//jZAP/4
2QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jX
AP/41wD/+NcA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA
//fVAP/31QP/99MA//nfO//4ujj/9qEA//anA//2pQD/9qUA//alAP/2pAD/9qQA//WjAP/1owD/
9aIA//WiAP/1ogD/9aIA//WhAP/0oQD/9KEA//SgAP/0oAD/9KAA//SgAP/0oAD/9J8A//SfAP/z
nwD/858A//OeAP/zngD/854A//OdAP/znAD/85wA//OcAP/zmwD/85sA//OaAP/ymgD/8poA//KZ
AP/ymQD/8pkA//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//GXAP/xlwD/8ZYA//GWAP/xlgD/8ZUA
//GVAP/wlAD/8JQA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CTAP/wkwD/75IA/++RAP/vkQD/
75EA/++RAP/vkAD/75AA/++QAP/vkAD/748A/++PAP/vjgD/744A/++OAf/ujQb/8p9D//7pzuv+
7NMUAAAAAAAAAAAAAAAA//7tFP/86Ov851L/+94M//vfAv/73wD/+98A//rfAP/63wD/+t8A//rf
AP/63wD/+t8A//rfAP/63gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//rdAP/63QD/+t0A
//rdAP/63QD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/
+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/4
2QD/+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NgA//jYAP/41wD/+NcA//jXAP/41wD/99YA//fW
AP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UA//fVAP/31QD/99UA//fWA//30wD/+d87
//i6OP/2oQD/9qcD//alAP/2pQD/9qQA//akAP/2pAD/9qQA//ajAP/1owD/9aMA//WjAP/1owD/
9aIA//WiAP/1oQD/9KEA//ShAP/0oQD/9KAA//SgAP/0oAD/9KAA//SfAP/0nwD/9J4A//SeAP/0
ngD/854A//OdAP/znQD/85wA//OcAP/znAD/85sA//ObAP/zmgD/8poA//KZAP/ymgD/8poA//KZ
AP/ymQD/8pgA//KYAP/ylwD/8pcA//KXAP/xlwD/8ZYA//GWAP/xlgD/8ZUA//GVAP/xlQD/8ZUA
//CUAP/wlAD/8JQA//CUAP/wlAD/8JMA//CTAP/wkwD/8JMA/++SAP/vkQD/75EA/++RAP/vkAD/
75AA/++QAP/vjwD/748A/++PAP/vjwD/748B/++NA//yoEP//unO6/7s0xQAAAAAAAAAAAAAAAD/
/u0U//zo6/znUv/73gz/++AC//vgAP/74AD/+98A//vfAP/73wD/+t8A//rfAP/63wD/+t8A//re
AP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A
//rdAP/53AD/+dwA//ncAP/53AD/+dwA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/
+dsA//naAP/52gD/+doA//naAP/52gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/4
2QD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31gD/99YA//fWAP/31QD/99UD//fTAP/53zv/+bo4//WhAP/2pwP/9qUA
//alAP/2pQD/9qQA//akAP/2pAD/9qMA//WjAP/1owD/9aMA//WjAP/1owD/9aIA//WiAP/0oQD/
9KEA//ShAP/0oAD/9KAA//SgAP/0oAD/9J8A//SfAP/0nwD/9J4A//SeAP/zngD/850A//OdAP/z
nAD/85wA//OcAP/znAD/85sA//ObAP/ymgD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pgA//KY
AP/ymAD/8pcA//KXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wlAD/8JQA
//CUAP/wkwD/8JMA//CTAP/wkwD/75IA/++SAP/vkgD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/
748A/++PAP/vkAH/740D//KeO//+69Dw/u3UDwAAAAAAAAAAAAAAAP/+7g///erw/OdK//vfB//7
4AL/++AA//vgAP/73wD/+98A//vfAP/63wD/+t8A//rfAP/63wD/+t4A//reAP/63gD/+t4A//re
AP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//ncAP/53AD/+dwA
//ncAP/53AD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/
+doA//naAP/52gD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/4
2AD/+NcA//jXAP/41wD/+NcA//fXAP/31wD/99cA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
AP/31gD/99YA//fWAP/31QP/99MA//nfO//5uzj/9qIA//anA//2pgD/9qUA//alAP/2pQD/9qQA
//akAP/2owD/9qMA//WjAP/1owD/9aMA//WjAP/1ogD/9aIA//WiAP/0oQD/9KEA//SgAP/0oAD/
9KAA//SgAP/0oAD/9J8A//SfAP/0nwD/9J4A//OeAP/znQD/850A//OdAP/znAD/85wA//OcAP/z
mwD/85sA//ObAP/ymgD/8poA//KaAP/ymgD/8poA//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//GX
AP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JMA
//CTAP/wkgD/75IA/++SAP/vkQD/75EA/++RAP/vkAD/75AA/++PAP/vjwD/748A/++QAf/vjQP/
8p47//7r0PD+7dQPAAAAAAAAAAAAAAAA//7uD//96vD850r/+98H//vgAv/74AD/++AA//vfAP/7
3wD/+98A//rfAP/63wD/+t8A//rfAP/63gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//rd
AP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dsA
//nbAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52gD/+doA//naAP/52gD/+doA//naAP/42QD/
+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jXAP/4
1wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fWAP/31gD/99YA//fW
A//30wD/+d87//m7OP/3ogD/96gD//amAP/2pgD/9qUA//alAP/2pQD/9qQA//akAP/2pAD/9qQA
//akAP/1owD/9aMA//WjAP/1ogD/9aIA//WiAP/1oQD/9KEA//ShAP/0oQD/9KEA//SgAP/0oAD/
9J8A//SfAP/0nwD/9J4A//SeAP/zngD/850A//OdAP/znAD/85wA//ObAP/zmwD/85sA//ObAP/z
mwD/8psA//KaAP/ymgD/8poA//KZAP/ymQD/8pgA//KYAP/ymAD/8pcA//KXAP/xlgD/8ZYA//GW
AP/xlQD/8ZUA//GVAP/xlQD/8ZUA//CUAP/wlAD/8JQA//CUAP/wkwD/8JMA//CSAP/wkgD/8JIA
//CSAP/vkgD/75EA/++RAP/vkAD/75AA/++QAP/vjwD/75AB/++NA//ynjv//uvQ8P7t1A8AAAAA
AAAAAAAAAAD//u4P//7q8PzoSv/73wf/++AC//vgAP/74AD/++AA//vgAP/74AD/+98A//vfAP/7
3wD/+98A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//rd
AP/63QD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rcAP/63AD/+twA//ncAP/53AD/+dwA
//nbAP/52wD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA//naAP/52gD/+doA//naAP/42gD/
+NoA//jaAP/42QD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NcA//jYAP/41wD/+NcA//jXAP/4
1wD/+NcA//jXAP/41wD/99cA//fXAP/31wD/99YA//fWAP/31gD/99cD//fTAP/53zv/+bs4//ei
AP/3qAP/9qcA//amAP/2pgD/9qUA//alAP/2pQD/9qQA//akAP/2pAD/9qQA//WjAP/1owD/9aMA
//WiAP/1ogD/9aIA//WiAP/0oQD/9KEA//ShAP/0oQD/9KAA//SgAP/0oAD/9KAA//SfAP/0nwD/
9J4A//OeAP/znQD/850A//OdAP/znAD/85wA//ObAP/zmwD/85sA//ObAP/ymwD/8psA//KbAP/y
mgD/8poA//KZAP/ymQD/8pgA//KYAP/ylwD/8pcA//GXAP/xlgD/8ZYA//GWAP/xlQD/8ZUA//GV
AP/xlQD/8JQA//CUAP/wlAD/8JQA//CTAP/wkwD/8JIA//CSAP/wkgD/8JIA/++SAP/vkgD/75EA
/++RAP/vkAD/75AA/++QAP/vjwH/740D//KeO//+69Dw/u3UDwAAAAAAAAAAAAAAAP/+7g///urw
/OhK//vfB//74AL/++AA//vgAP/74AD/++AA//vgAP/73wD/+98A//vfAP/73wD/+t4A//reAP/6
3gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rd
AP/63QD/+t0A//rdAP/63QD/+twA//rcAP/63AD/+dwA//ncAP/53AD/+dsA//nbAP/52wD/+dsA
//nbAP/52gD/+doA//naAP/52gD/+doA//naAP/52gD/+doA//jaAP/42gD/+NoA//jZAP/42QD/
+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/3
1wD/99cA//fXAP/31wD/99YA//fWAP/31gP/99QA//nfO//5uzj/96MA//eoA//2pwD/9qcA//an
AP/2pgD/9qUA//alAP/2pQD/9qQA//akAP/2pAD/9aMA//WjAP/1owD/9aMA//WiAP/1ogD/9aIA
//ShAP/0oQD/9KEA//ShAP/0oAD/9KAA//SgAP/0oAD/9KAA//SfAP/0nwD/854A//OeAP/znQD/
850A//OdAP/znAD/85wA//ObAP/zmwD/85sA//KbAP/ymwD/8psA//KaAP/ymgD/8poA//KZAP/y
mQD/8pkA//KYAP/ymAD/8ZcA//GXAP/xlgD/8ZYA//GVAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CU
AP/wlAD/8JMA//CTAP/wkgD/8JIA//CSAP/wkgD/8JIA/++SAP/vkgD/75EA/++RAP/vkAD/75AA
/++QAf/vjQP/8p47//7r0PD+7dQPAAAAAAAAAAAAAAAA//7uD//+6vD86Er/+98H//vgAv/74AD/
++AA//vgAP/74AD/++AA//vfAP/73wD/+98A//vfAP/63gD/+t4A//reAP/63gD/+t4A//reAP/6
3gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+t0A//rdAP/63QD/+t0A//rd
AP/63QD/+t0A//rcAP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//nbAP/52wD/+doA
//naAP/52gD/+doA//naAP/52gD/+NoA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42QD/
+NkA//jYAP/42AD/+NgA//jXAP/41wD/+NcA//jXAP/41wD/+NcA//jXAP/31wD/99cA//fXAP/3
1gD/99YA//fWA//31AD/+d87//m7OP/3pAD/96kD//enAP/3pwD/9qcA//amAP/2pgD/9qYA//al
AP/2pQD/9qUA//akAP/2pAD/9qQA//WkAP/1owD/9aMA//WiAP/1ogD/9aIA//WhAP/1oQD/9aEA
//ShAP/0oQD/9KAA//SgAP/0oAD/9J8A//SfAP/0nwD/9J4A//SeAP/zngD/850A//OdAP/znAD/
85wA//OcAP/znAD/85sA//ObAP/zmwD/8poA//KaAP/ymgD/8pkA//KZAP/ymQD/8pgA//KYAP/y
mAD/8pcA//GXAP/xlwD/8ZYA//GWAP/xlQD/8ZUA//GVAP/xlQD/8JQA//CUAP/wkwD/8JMA//CT
AP/wkwD/8JMA//CTAP/wkgD/8JIA//CSAP/vkgD/75EA/++RAP/vkAD/75EB/++OA//ynzv//uvQ
8P7t1A8AAAAAAAAAAAAAAAD//u4P//7q8PzoSv/74Af/++EC//vhAP/74QD/++AA//vgAP/74AD/
+98A//vfAP/73wD/+98A//rfAP/63wD/+t8A//rfAP/63wD/+t4A//reAP/63gD/+t4A//reAP/6
3gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//rdAP/63QD/+t0A//nc
AP/53AD/+dwA//ncAP/53AD/+dwA//ncAP/53AD/+dsA//nbAP/52wD/+doA//naAP/52gD/+doA
//naAP/52gD/+doA//naAP/42gD/+NoA//jaAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42AD/
+NgA//jYAP/42AD/+NgA//jYAP/42AD/+NcA//jXAP/41wD/+NcA//fWAP/31gD/99cD//fUAP/5
3zv/+bs4//ekAP/3qQP/96cA//enAP/3pwD/9qYA//amAP/2pgD/9qYA//alAP/2pQD/9qQA//ak
AP/2pAD/9aQA//WkAP/1owD/9aMA//WiAP/1ogD/9aIA//WhAP/1oQD/9KEA//ShAP/0oAD/9KAA
//SgAP/0nwD/9J8A//SfAP/0nwD/9J4A//OeAP/zngD/850A//OdAP/znAD/85wA//OcAP/zmwD/
85sA//OaAP/ymgD/8poA//KaAP/ymQD/8pkA//KZAP/ymAD/8pgA//KYAP/ylwD/8ZcA//GXAP/x
lgD/8ZYA//GWAP/xlQD/8ZUA//GVAP/wlAD/8JQA//CTAP/wkwD/8JMA//CTAP/wkwD/8JMA//CT
AP/wkgD/8JIA/++SAP/vkQD/75EA/++QAP/vkAH/744D//KfO//+69Dw/u3UDwAAAAAAAAAAAAAA
AP/+7g///urw/OlK//vgCP/74QL/++EA//vhAP/74AD/++AA//vgAP/74AD/++AA//vfAP/73wD/
+t8A//rfAP/63wD/+t8A//rfAP/63gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t4A//reAP/6
3gD/+t4A//reAP/63gD/+t4A//reAP/63gD/+t0A//rdAP/63QD/+d0A//ncAP/53AD/+dwA//nc
AP/53AD/+dwA//ncAP/52wD/+dsA//nbAP/52wD/+dsA//naAP/52gD/+doA//naAP/52gD/+doA
//jaAP/42gD/+NoA//jaAP/42gD/+NkA//jZAP/42QD/+NkA//jYAP/42AD/+NgA//jYAP/42AD/
+NgA//jYAP/41wD/+NcA//jXAP/41wD/99cA//fWAP/31gP/99QA//nfO//5vTz/96UA//erCP/3
qQX/96kF//epBf/2qAX/9qgF//aoBf/2qAX/9qcF//anBf/2pwX/9qYF//amBf/2pgX/9aYF//Wm
Bf/1pQX/9aUF//WkBf/1pAX/9aQF//WjBf/1owX/9aMF//SiBf/0ogX/9KIF//ShBf/0oQX/9KEF
//ShBf/0oAX/9KAF//SgBf/zoAX/858F//OfBf/zngX/854F//OdBf/znQX/850F//OcBf/znAX/
85wF//KcBf/ymwX/8psF//KbBf/ymwX/8poF//KaBf/ymQX/8pkF//KZBf/xmAX/8ZgF//GYBf/x
lwX/8ZcF//GXBf/xlgX/8JYF//CVBf/wlQX/8JUF//CVBf/wlQX/8JUF//CVBf/wlAX/8JQG//CU
Bv/vkwb/75MG/++TB//vkQb/8qE7//7r0fD+7dMPAAAAAAAAAAAAAAAA//7tD//+6vD86Uz/++AI
//viCP/74gb/++IG//vhBv/74Qb/++EF//vhBf/74QX/++AF//vfBf/64AX/+uAF//rgBf/64AX/
+t8F//rfBf/63wX/+t8F//rfBf/63wX/+t8F//rfBf/63wX/+t8F//rfBf/63wX/+t8F//rfBf/6
3wX/+t8F//reBf/63gX/+t4F//reBf/53gX/+d0F//ndBf/53QX/+d0F//ndBf/53QX/+d0F//nc
Bf/53AX/+dwF//ncBf/53AX/+dsF//nbBf/52wX/+dsF//nbBf/52wX/+NsF//jbBf/42wX/+NsF
//jbBf/42gX/+NoF//jaBf/42QX/+NkF//jZBf/42QX/+NkF//jZBf/42QX/+NkF//jYBf/42AX/
+NgF//jYBf/32AX/99cF//fXCP/31QD/+eA///i2OP/2nAD/9qID//ahAP/2oQD/9qAA//afAP/2
nwD/9Z8A//WeAP/1ngD/9Z0A//WdAP/1nQD/9Z0A//WcAP/1nAD/9ZwA//ScAP/0mwD/9JsA//Sb
AP/0mgD/9JoA//SZAP/0mQD/9JgA//OYAP/zmAD/85gA//OYAP/zlwD/85cA//OXAP/zlgD/85YA
//KWAP/ylQD/8pUA//KVAP/ylAD/8pQA//KTAP/ykwD/8pIA//KSAP/ykQD/8ZEA//GRAP/xkQD/
8ZAA//GQAP/xjwD/8Y8A//GPAP/xjgD/8Y4A//CNAP/wjQD/8I8Q//COEP/wjhD/8I4Q//CPGv/v
jxr/748a/++PGv/vjxr/748a/++PGv/vjhr/744a/++OGv/vjRr/740a/+6OIv/ujiL/7o4j/+2M
JP/xnEP//urO8P7w2w8AAAAAAAAAAAAAAAD//u8O//7n8PzpSv764Cb/+98j//vgI//73yL/+94a
//veGv/73hr/+94a//veGv/73hr/+94a//rdGv/63Rr/+t0a//rdGv/63Rr/+twQ//rcEP/63BD/
+twQ//rbAP/62wD/+tsA//rbAP/62wD/+tsA//rbAP/62wD/+tsA//rbAP/62wD/+tsA//raAP/6
2gD/+doA//naAP/42gD/+NoA//jZAP/42QD/+NkA//jZAP/42QD/+NgA//jYAP/42AD/+NgA//jY
AP/42AD/+NcA//jXAP/41wD/+NcA//nXAP/41wD/99cA//fXAP/31wD/99cA//fWAP/31gD/99YA
//fVAP/31QD/99UA//fVAP/31QD/99UA//fVAP/31QD/99QA//fUAP/31AD/99QA//bUAP/21AD/
9tQD//bQAP/43Tv//OKo//vXiv/82pH//NmQ//zZkP/82ZD//NmQ//vZkP/72ZD/+9iQ//vYkP/7
2JD/+9iQ//vYkP/72JD/+9eQ//vXkP/715D/+9eQ//vXkP/715D/+9eQ//vXkP/71pD/+9eQ//vW
kP/61pD/+taQ//rWkP/61pD/+taQ//rWkP/61ZD/+tWQ//rVkP/61ZD/+tWQ//rUkP/61JD/+tSQ
//rUkP/61JD/+tSQ//rUkP/605D/+tOQ//rTkP/505D/+dOQ//nTkP/50pD/+dOQ//nSkP/50pD/
+dKQ//nSkP/50pD/+dGQ//nRkP/50I//+dCP//nQj//50I//+dCP//nPjv/4zo7/+M6O//jOjv/4
zo7/+M6O//jOjv/4zo7/+M6O//jOjv/4zY7/+M6O//jNjv/4zY7/+MuL//nTmv//9efw//PiDwAA
AAAAAAAAAAAAAP//8gz///LD/vWk/P3xiv/98o///fKO//3yjv/98o7//fGO//3xjv/98Y7//fGO
//3yjv/98o7//fGO//3xjv/98Y7//fGO//3xj//98Y///fGP//3xj//98Y///fGQ//3xkP/98ZD/
/fGQ//3xkP/98ZD//fGQ//3xkP/98ZD//fGQ//3xkP/98ZD//fCQ//3wkP/98JD//fCQ//zwkP/8
8JD//PCQ//zwkP/88JD//PCQ//zwkP/88JD//O+Q//zvkP/875D//O+Q//zvkP/875D//O+Q//zv
kP/875D//O+Q//zvkP/875D//O+Q//zvkP/875D//O6Q//zukP/87pD//O6Q//zukP/87pD//O6Q
//zukP/87pD//O6Q//zukP/87pD//O6Q//zukP/87pD//O6Q//zukP/87pH/++yK//zxqf8AAAAA
AAAAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAD//////////AAAOAAAH/////////4AAAD/////////
/4AAfAAA//////////4AAAD///////////////////////////4AAAD/////////////////////
//////4AAAD//////////+AAfAAA//////////4AAAD//////////gAAOAAAD/////////4AAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAA=')
	#endregion
	$formWindowsOptimizationT.MaximizeBox = $False
	$formWindowsOptimizationT.Name = 'formWindowsOptimizationT'
	$formWindowsOptimizationT.StartPosition = 'CenterScreen'
	$formWindowsOptimizationT.Text = 'Windows Optimization Toolbox By paint29'
	$formWindowsOptimizationT.add_Load($formWindowsOptimizationT_Load)
	#
	# tabcontrol1
	#
	$tabcontrol1.Controls.Add($tabpage1)
	$tabcontrol1.Controls.Add($tabpage6)
	$tabcontrol1.Controls.Add($tabpage3)
	$tabcontrol1.Controls.Add($tabpage8)
	$tabcontrol1.Font = 'Microsoft Sans Serif, 8.25pt'
	$tabcontrol1.Location = '5, 3'
	$tabcontrol1.Name = 'tabcontrol1'
	$tabcontrol1.SelectedIndex = 0
	$tabcontrol1.Size = '942, 934'
	$tabcontrol1.TabIndex = 0
	#
	# tabpage1
	#
	$tabpage1.Controls.Add($buttonDiskDefragUtility)
	$tabpage1.Controls.Add($buttonFixWindows11PlayStor)
	$tabpage1.Controls.Add($buttonEnableGodMode)
	$tabpage1.Controls.Add($AddTakeOwnershipMenu)
	$tabpage1.Controls.Add($RemoveTakeOwnershipMenu)
	$tabpage1.Controls.Add($textbox90)
	$tabpage1.Controls.Add($DisableWin10Explorer)
	$tabpage1.Controls.Add($EnableWin10Ribbon)
	$tabpage1.Controls.Add($buttonDisableWindows10Expl)
	$tabpage1.Controls.Add($buttonEnableWindows10Explo)
	$tabpage1.Controls.Add($textbox89)
	$tabpage1.Controls.Add($DisableBackgroundApps)
	$tabpage1.Controls.Add($RemoveWindows10XBoot)
	$tabpage1.Controls.Add($CompactOS)
	$tabpage1.Controls.Add($Windows10XBootAnimat)
	$tabpage1.Controls.Add($EnableMSIMode)
	$tabpage1.Controls.Add($BypassTPM20)
	$tabpage1.Controls.Add($AMDGpuTweaks)
	$tabpage1.Controls.Add($DefaultTaskbar)
	$tabpage1.Controls.Add($NVIDIAGpuTweaks)
	$tabpage1.Controls.Add($SmallTaskbar)
	$tabpage1.Controls.Add($NetworkTweaks)
	$tabpage1.Controls.Add($DefaultContextMenu)
	$tabpage1.Controls.Add($EnableNet35)
	$tabpage1.Controls.Add($OldContextMenu)
	$tabpage1.Controls.Add($textbox12)
	$tabpage1.Controls.Add($textbox75)
	$tabpage1.Controls.Add($textbox19)
	$tabpage1.Controls.Add($textbox18)
	$tabpage1.Controls.Add($textbox17)
	$tabpage1.Controls.Add($textbox16)
	$tabpage1.Controls.Add($textbox14)
	$tabpage1.Controls.Add($textbox13)
	$tabpage1.Controls.Add($textbox10)
	$tabpage1.Controls.Add($textbox9)
	$tabpage1.Controls.Add($textbox8)
	$tabpage1.Controls.Add($textbox7)
	$tabpage1.Controls.Add($textbox6)
	$tabpage1.Controls.Add($textbox5)
	$tabpage1.Controls.Add($textbox1)
	$tabpage1.Controls.Add($textbox2)
	$tabpage1.Controls.Add($textbox3)
	$tabpage1.Controls.Add($textbox4)
	$tabpage1.Controls.Add($EnableNFS)
	$tabpage1.Controls.Add($RemoveStartupProgram)
	$tabpage1.Controls.Add($WindowsSearchAndTask)
	$tabpage1.Controls.Add($LaptopNumlockFix)
	$tabpage1.Controls.Add($FixWhitelistedApps)
	$tabpage1.Controls.Add($YourPhoneAppFIx)
	$tabpage1.Controls.Add($RepairHardDrive)
	$tabpage1.Controls.Add($FixNetworkProblems)
	$tabpage1.Controls.Add($SystemFileChecker)
	$tabpage1.Controls.Add($RepairWindowsImage)
	$tabpage1.Controls.Add($ApplyTweaks)
	$tabpage1.Controls.Add($EnableClipboardHisto)
	$tabpage1.Controls.Add($DisableClipboardHist)
	$tabpage1.Controls.Add($DisableLocationTrack)
	$tabpage1.Controls.Add($DisableCortana)
	$tabpage1.Controls.Add($EnableLocationTRacki)
	$tabpage1.Controls.Add($DisableActionCenter)
	$tabpage1.Controls.Add($Hide)
	$tabpage1.Controls.Add($EnableCortanaSearch)
	$tabpage1.Controls.Add($Show)
	$tabpage1.Controls.Add($EnableBackgroundApps)
	$tabpage1.Controls.Add($LightMode)
	$tabpage1.Controls.Add($DisableHibernation)
	$tabpage1.Controls.Add($DarkMode)
	$tabpage1.Controls.Add($EnableHibernation)
	$tabpage1.Controls.Add($SetTimeToUTCDualBoot)
	$tabpage1.Controls.Add($CleanTempFilesAndLog)
	$tabpage1.Controls.Add($AppearanceVisualFX)
	$tabpage1.Controls.Add($EnableActionCenter)
	$tabpage1.Controls.Add($PerformanceVisualFX)
	$tabpage1.Controls.Add($DisableMemoryCompres)
	$tabpage1.Controls.Add($EnableMemoryCompress)
	$tabpage1.BackColor = 'ControlLight'
	$tabpage1.Location = '4, 22'
	$tabpage1.Name = 'tabpage1'
	$tabpage1.Padding = '3, 3, 3, 3'
	$tabpage1.Size = '934, 908'
	$tabpage1.TabIndex = 0
	$tabpage1.Text = 'System Tweaks'
	#
	# buttonDiskDefragUtility
	#
	$buttonDiskDefragUtility.BackColor = 'ControlLight'
	$buttonDiskDefragUtility.Font = 'Microsoft Sans Serif, 12pt'
	$buttonDiskDefragUtility.ForeColor = 'ControlText'
	$buttonDiskDefragUtility.Location = '549, 306'
	$buttonDiskDefragUtility.Margin = '4, 3, 4, 3'
	$buttonDiskDefragUtility.Name = 'buttonDiskDefragUtility'
	$buttonDiskDefragUtility.Size = '181, 55'
	$buttonDiskDefragUtility.TabIndex = 1460
	$buttonDiskDefragUtility.Text = 'Disk Defrag Utility'
	$buttonDiskDefragUtility.UseCompatibleTextRendering = $True
	$buttonDiskDefragUtility.UseVisualStyleBackColor = $False
	$buttonDiskDefragUtility.add_Click($buttonDiskDefragUtility_Click)
	#
	# buttonFixWindows11PlayStor
	#
	$buttonFixWindows11PlayStor.BackColor = 'ControlLight'
	$buttonFixWindows11PlayStor.Font = 'Microsoft Sans Serif, 12.3pt'
	$buttonFixWindows11PlayStor.Location = '736, 305'
	$buttonFixWindows11PlayStor.Margin = '4, 3, 4, 3'
	$buttonFixWindows11PlayStor.Name = 'buttonFixWindows11PlayStor'
	$buttonFixWindows11PlayStor.Size = '186, 56'
	$buttonFixWindows11PlayStor.TabIndex = 1459
	$buttonFixWindows11PlayStor.Text = 'Fix Windows 11 Play Store Sign In'
	$buttonFixWindows11PlayStor.UseCompatibleTextRendering = $True
	$buttonFixWindows11PlayStor.UseVisualStyleBackColor = $False
	$buttonFixWindows11PlayStor.add_Click($buttonFixWindows11PlayStor_Click)
	#
	# buttonEnableGodMode
	#
	$buttonEnableGodMode.BackColor = 'ControlLight'
	$buttonEnableGodMode.Font = 'Microsoft Sans Serif, 12pt'
	$buttonEnableGodMode.ForeColor = 'ControlText'
	$buttonEnableGodMode.Location = '549, 367'
	$buttonEnableGodMode.Margin = '4, 3, 4, 3'
	$buttonEnableGodMode.Name = 'buttonEnableGodMode'
	$buttonEnableGodMode.Size = '181, 41'
	$buttonEnableGodMode.TabIndex = 1458
	$buttonEnableGodMode.Text = 'Enable God Mode'
	$buttonEnableGodMode.UseCompatibleTextRendering = $True
	$buttonEnableGodMode.UseVisualStyleBackColor = $False
	$buttonEnableGodMode.add_Click($buttonEnableGodMode_Click)
	#
	# AddTakeOwnershipMenu
	#
	$AddTakeOwnershipMenu.BackColor = 'ControlLight'
	$AddTakeOwnershipMenu.Font = 'Microsoft Sans Serif, 12pt'
	$AddTakeOwnershipMenu.Location = '389, 445'
	$AddTakeOwnershipMenu.Margin = '4, 3, 4, 3'
	$AddTakeOwnershipMenu.Name = 'AddTakeOwnershipMenu'
	$AddTakeOwnershipMenu.Size = '106, 25'
	$AddTakeOwnershipMenu.TabIndex = 1457
	$AddTakeOwnershipMenu.Text = 'Add'
	$AddTakeOwnershipMenu.UseCompatibleTextRendering = $True
	$AddTakeOwnershipMenu.UseVisualStyleBackColor = $False
	$AddTakeOwnershipMenu.add_Click($AddTakeOwnershipMenu_Click)
	#
	# RemoveTakeOwnershipMenu
	#
	$RemoveTakeOwnershipMenu.BackColor = 'ControlLight'
	$RemoveTakeOwnershipMenu.Font = 'Microsoft Sans Serif, 12pt'
	$RemoveTakeOwnershipMenu.Location = '279, 445'
	$RemoveTakeOwnershipMenu.Margin = '4, 3, 4, 3'
	$RemoveTakeOwnershipMenu.Name = 'RemoveTakeOwnershipMenu'
	$RemoveTakeOwnershipMenu.Size = '106, 25'
	$RemoveTakeOwnershipMenu.TabIndex = 1456
	$RemoveTakeOwnershipMenu.Text = 'Remove'
	$RemoveTakeOwnershipMenu.UseCompatibleTextRendering = $True
	$RemoveTakeOwnershipMenu.UseVisualStyleBackColor = $False
	$RemoveTakeOwnershipMenu.add_Click($RemoveTakeOwnershipMenu_Click)
	#
	# textbox90
	#
	$textbox90.AccessibleRole = 'None'
	$textbox90.BackColor = 'ControlLight'
	$textbox90.BorderStyle = 'None'
	$textbox90.Font = 'Microsoft Sans Serif, 13.7pt'
	$textbox90.Location = '50, 445'
	$textbox90.Margin = '4, 3, 4, 3'
	$textbox90.Name = 'textbox90'
	$textbox90.ReadOnly = $True
	$textbox90.Size = '204, 21'
	$textbox90.TabIndex = 1455
	$textbox90.TabStop = $False
	$textbox90.Text = '>Take Ownership Menu'
	#
	# DisableWin10Explorer
	#
	$DisableWin10Explorer.BackColor = 'ControlLight'
	$DisableWin10Explorer.Font = 'Microsoft Sans Serif, 12pt'
	$DisableWin10Explorer.Location = '287, 724'
	$DisableWin10Explorer.Margin = '4, 3, 4, 3'
	$DisableWin10Explorer.Name = 'DisableWin10Explorer'
	$DisableWin10Explorer.Size = '175, 54'
	$DisableWin10Explorer.TabIndex = 1454
	$DisableWin10Explorer.Text = 'Minimized Windows 10 Explorer Ribbon'
	$DisableWin10Explorer.UseCompatibleTextRendering = $True
	$DisableWin10Explorer.UseVisualStyleBackColor = $False
	$DisableWin10Explorer.add_Click($DisableWin10Explorer_Click)
	#
	# EnableWin10Ribbon
	#
	$EnableWin10Ribbon.BackColor = 'ControlLight'
	$EnableWin10Ribbon.Font = 'Microsoft Sans Serif, 12pt'
	$EnableWin10Ribbon.Location = '104, 723'
	$EnableWin10Ribbon.Margin = '4, 3, 4, 3'
	$EnableWin10Ribbon.Name = 'EnableWin10Ribbon'
	$EnableWin10Ribbon.Size = '175, 54'
	$EnableWin10Ribbon.TabIndex = 1453
	$EnableWin10Ribbon.Text = 'Expanded Windows 10 Explorer Ribbon'
	$EnableWin10Ribbon.UseCompatibleTextRendering = $True
	$EnableWin10Ribbon.UseVisualStyleBackColor = $False
	$EnableWin10Ribbon.add_Click($EnableWin10Ribbon_Click)
	#
	# buttonDisableWindows10Expl
	#
	$buttonDisableWindows10Expl.BackColor = 'ControlLight'
	$buttonDisableWindows10Expl.Font = 'Microsoft Sans Serif, 12pt'
	$buttonDisableWindows10Expl.Location = '287, 664'
	$buttonDisableWindows10Expl.Margin = '4, 3, 4, 3'
	$buttonDisableWindows10Expl.Name = 'buttonDisableWindows10Expl'
	$buttonDisableWindows10Expl.Size = '175, 54'
	$buttonDisableWindows10Expl.TabIndex = 1452
	$buttonDisableWindows10Expl.Text = 'Disable Windows 10 Explorer'
	$buttonDisableWindows10Expl.UseCompatibleTextRendering = $True
	$buttonDisableWindows10Expl.UseVisualStyleBackColor = $False
	$buttonDisableWindows10Expl.add_Click($buttonDisableWindows10Expl_Click)
	#
	# buttonEnableWindows10Explo
	#
	$buttonEnableWindows10Explo.BackColor = 'ControlLight'
	$buttonEnableWindows10Explo.Font = 'Microsoft Sans Serif, 12pt'
	$buttonEnableWindows10Explo.Location = '104, 663'
	$buttonEnableWindows10Explo.Margin = '4, 3, 4, 3'
	$buttonEnableWindows10Explo.Name = 'buttonEnableWindows10Explo'
	$buttonEnableWindows10Explo.Size = '175, 54'
	$buttonEnableWindows10Explo.TabIndex = 1451
	$buttonEnableWindows10Explo.Text = 'Enable Windows 10 Explorer'
	$buttonEnableWindows10Explo.UseCompatibleTextRendering = $True
	$buttonEnableWindows10Explo.UseVisualStyleBackColor = $False
	$buttonEnableWindows10Explo.add_Click($buttonEnableWindows10Explo_Click)
	#
	# textbox89
	#
	$textbox89.BackColor = 'ControlLight'
	$textbox89.BorderStyle = 'None'
	$textbox89.Location = '23, 104'
	$textbox89.Margin = '4, 3, 4, 3'
	$textbox89.Name = 'textbox89'
	$textbox89.ReadOnly = $True
	$textbox89.Size = '200, 13'
	$textbox89.TabIndex = 1450
	$textbox89.TabStop = $False
	$textbox89.Text = '- Enhance Privacy'
	#
	# DisableBackgroundApps
	#
	$DisableBackgroundApps.BackColor = 'ControlLight'
	$DisableBackgroundApps.Font = 'Microsoft Sans Serif, 12pt'
	$DisableBackgroundApps.Location = '279, 179'
	$DisableBackgroundApps.Margin = '4, 3, 4, 3'
	$DisableBackgroundApps.Name = 'DisableBackgroundApps'
	$DisableBackgroundApps.Size = '106, 28'
	$DisableBackgroundApps.TabIndex = 1449
	$DisableBackgroundApps.Text = 'Disable'
	$DisableBackgroundApps.UseCompatibleTextRendering = $True
	$DisableBackgroundApps.UseVisualStyleBackColor = $False
	$DisableBackgroundApps.add_Click($DisableBackgroundApps_Click)
	#
	# RemoveWindows10XBoot
	#
	$RemoveWindows10XBoot.BackColor = 'ControlLight'
	$RemoveWindows10XBoot.Font = 'Microsoft Sans Serif, 12.3pt'
	$RemoveWindows10XBoot.Location = '287, 613'
	$RemoveWindows10XBoot.Margin = '4, 3, 4, 3'
	$RemoveWindows10XBoot.Name = 'RemoveWindows10XBoot'
	$RemoveWindows10XBoot.Size = '175, 45'
	$RemoveWindows10XBoot.TabIndex = 1448
	$RemoveWindows10XBoot.Text = 'Remove Windows 10X Boot Animation'
	$RemoveWindows10XBoot.UseCompatibleTextRendering = $True
	$RemoveWindows10XBoot.UseVisualStyleBackColor = $False
	$RemoveWindows10XBoot.add_Click($RemoveWindows10XBoot_Click)
	#
	# CompactOS
	#
	$CompactOS.BackColor = 'ControlLight'
	$CompactOS.Font = 'Microsoft Sans Serif, 12pt'
	$CompactOS.Location = '738, 651'
	$CompactOS.Margin = '4, 3, 4, 3'
	$CompactOS.Name = 'CompactOS'
	$CompactOS.Size = '155, 41'
	$CompactOS.TabIndex = 1447
	$CompactOS.Text = 'CompactOS'
	$CompactOS.UseCompatibleTextRendering = $True
	$CompactOS.UseVisualStyleBackColor = $False
	$CompactOS.add_Click($CompactOS_Click)
	#
	# Windows10XBootAnimat
	#
	$Windows10XBootAnimat.BackColor = 'ControlLight'
	$Windows10XBootAnimat.Font = 'Microsoft Sans Serif, 12.3pt'
	$Windows10XBootAnimat.Location = '104, 612'
	$Windows10XBootAnimat.Margin = '4, 3, 4, 3'
	$Windows10XBootAnimat.Name = 'Windows10XBootAnimat'
	$Windows10XBootAnimat.Size = '175, 45'
	$Windows10XBootAnimat.TabIndex = 1447
	$Windows10XBootAnimat.Text = 'Windows 10X Boot Animation'
	$Windows10XBootAnimat.UseCompatibleTextRendering = $True
	$Windows10XBootAnimat.UseVisualStyleBackColor = $False
	$Windows10XBootAnimat.add_Click($Windows10XBootAnimat_Click)
	#
	# EnableMSIMode
	#
	$EnableMSIMode.BackColor = 'ControlLight'
	$EnableMSIMode.Font = 'Microsoft Sans Serif, 12pt'
	$EnableMSIMode.Location = '738, 535'
	$EnableMSIMode.Margin = '4, 3, 4, 3'
	$EnableMSIMode.Name = 'EnableMSIMode'
	$EnableMSIMode.Size = '155, 49'
	$EnableMSIMode.TabIndex = 1446
	$EnableMSIMode.Text = 'Enable MSI Mode'
	$EnableMSIMode.UseCompatibleTextRendering = $True
	$EnableMSIMode.UseVisualStyleBackColor = $False
	$EnableMSIMode.add_Click($EnableMSIMode_Click)
	#
	# BypassTPM20
	#
	$BypassTPM20.BackColor = 'ControlLight'
	$BypassTPM20.Font = 'Microsoft Sans Serif, 12pt'
	$BypassTPM20.Location = '104, 781'
	$BypassTPM20.Margin = '4, 3, 4, 3'
	$BypassTPM20.Name = 'BypassTPM20'
	$BypassTPM20.Size = '175, 41'
	$BypassTPM20.TabIndex = 1446
	$BypassTPM20.Text = 'Bypass TPM 2.0'
	$BypassTPM20.UseCompatibleTextRendering = $True
	$BypassTPM20.UseVisualStyleBackColor = $False
	$BypassTPM20.add_Click($BypassTPM20_Click)
	#
	# AMDGpuTweaks
	#
	$AMDGpuTweaks.BackColor = 'ControlLight'
	$AMDGpuTweaks.Font = 'Microsoft Sans Serif, 12pt'
	$AMDGpuTweaks.Location = '736, 479'
	$AMDGpuTweaks.Margin = '4, 3, 4, 3'
	$AMDGpuTweaks.Name = 'AMDGpuTweaks'
	$AMDGpuTweaks.Size = '155, 50'
	$AMDGpuTweaks.TabIndex = 1445
	$AMDGpuTweaks.Text = 'AMD GPU Tweaks'
	$AMDGpuTweaks.UseCompatibleTextRendering = $True
	$AMDGpuTweaks.UseVisualStyleBackColor = $False
	$AMDGpuTweaks.add_Click($AMDGpuTweaks_Click)
	#
	# DefaultTaskbar
	#
	$DefaultTaskbar.BackColor = 'ControlLight'
	$DefaultTaskbar.Font = 'Microsoft Sans Serif, 12pt'
	$DefaultTaskbar.Location = '104, 572'
	$DefaultTaskbar.Margin = '4, 3, 4, 3'
	$DefaultTaskbar.Name = 'DefaultTaskbar'
	$DefaultTaskbar.Size = '175, 34'
	$DefaultTaskbar.TabIndex = 1445
	$DefaultTaskbar.Text = 'Default Taskbar'
	$DefaultTaskbar.UseCompatibleTextRendering = $True
	$DefaultTaskbar.UseVisualStyleBackColor = $False
	$DefaultTaskbar.add_Click($DefaultTaskbar_Click)
	#
	# NVIDIAGpuTweaks
	#
	$NVIDIAGpuTweaks.BackColor = 'ControlLight'
	$NVIDIAGpuTweaks.Font = 'Microsoft Sans Serif, 12pt'
	$NVIDIAGpuTweaks.Location = '577, 481'
	$NVIDIAGpuTweaks.Margin = '4, 3, 4, 3'
	$NVIDIAGpuTweaks.Name = 'NVIDIAGpuTweaks'
	$NVIDIAGpuTweaks.Size = '154, 48'
	$NVIDIAGpuTweaks.TabIndex = 1444
	$NVIDIAGpuTweaks.Text = 'NVIDIA GPU Tweaks'
	$NVIDIAGpuTweaks.UseCompatibleTextRendering = $True
	$NVIDIAGpuTweaks.UseVisualStyleBackColor = $False
	$NVIDIAGpuTweaks.add_Click($NVIDIAGpuTweaks_Click)
	#
	# SmallTaskbar
	#
	$SmallTaskbar.BackColor = 'ControlLight'
	$SmallTaskbar.Font = 'Microsoft Sans Serif, 12pt'
	$SmallTaskbar.Location = '287, 572'
	$SmallTaskbar.Margin = '4, 3, 4, 3'
	$SmallTaskbar.Name = 'SmallTaskbar'
	$SmallTaskbar.Size = '175, 34'
	$SmallTaskbar.TabIndex = 1444
	$SmallTaskbar.Text = 'Small Taskbar'
	$SmallTaskbar.UseCompatibleTextRendering = $True
	$SmallTaskbar.UseVisualStyleBackColor = $False
	$SmallTaskbar.add_Click($SmallTaskbar_Click)
	#
	# NetworkTweaks
	#
	$NetworkTweaks.BackColor = 'ControlLight'
	$NetworkTweaks.Font = 'Microsoft Sans Serif, 12pt'
	$NetworkTweaks.Location = '576, 535'
	$NetworkTweaks.Margin = '4, 3, 4, 3'
	$NetworkTweaks.Name = 'NetworkTweaks'
	$NetworkTweaks.Size = '154, 49'
	$NetworkTweaks.TabIndex = 1443
	$NetworkTweaks.Text = 'Network Tweaks'
	$NetworkTweaks.UseCompatibleTextRendering = $True
	$NetworkTweaks.UseVisualStyleBackColor = $False
	$NetworkTweaks.add_Click($NetworkTweaks_Click)
	#
	# DefaultContextMenu
	#
	$DefaultContextMenu.BackColor = 'ControlLight'
	$DefaultContextMenu.Font = 'Microsoft Sans Serif, 12pt'
	$DefaultContextMenu.Location = '104, 535'
	$DefaultContextMenu.Margin = '4, 3, 4, 3'
	$DefaultContextMenu.Name = 'DefaultContextMenu'
	$DefaultContextMenu.Size = '175, 34'
	$DefaultContextMenu.TabIndex = 1443
	$DefaultContextMenu.Text = 'Default Context Menu'
	$DefaultContextMenu.UseCompatibleTextRendering = $True
	$DefaultContextMenu.UseVisualStyleBackColor = $False
	$DefaultContextMenu.add_Click($DefaultContextMenu_Click)
	#
	# EnableNet35
	#
	$EnableNet35.BackColor = 'ControlLight'
	$EnableNet35.Font = 'Microsoft Sans Serif, 12pt'
	$EnableNet35.ForeColor = 'ControlText'
	$EnableNet35.Location = '576, 651'
	$EnableNet35.Margin = '4, 3, 4, 3'
	$EnableNet35.Name = 'EnableNet35'
	$EnableNet35.Size = '154, 41'
	$EnableNet35.TabIndex = 1442
	$EnableNet35.Text = 'Enable Net 3.5'
	$EnableNet35.UseCompatibleTextRendering = $True
	$EnableNet35.UseVisualStyleBackColor = $False
	$EnableNet35.add_Click($EnableNet35_Click)
	#
	# OldContextMenu
	#
	$OldContextMenu.BackColor = 'ControlLight'
	$OldContextMenu.Font = 'Microsoft Sans Serif, 12pt'
	$OldContextMenu.Location = '287, 535'
	$OldContextMenu.Margin = '4, 3, 4, 3'
	$OldContextMenu.Name = 'OldContextMenu'
	$OldContextMenu.Size = '175, 34'
	$OldContextMenu.TabIndex = 1442
	$OldContextMenu.Text = 'Old Context Menu'
	$OldContextMenu.UseCompatibleTextRendering = $True
	$OldContextMenu.UseVisualStyleBackColor = $False
	$OldContextMenu.add_Click($OldContextMenu_Click)
	#
	# textbox12
	#
	$textbox12.BackColor = 'ControlLight'
	$textbox12.BorderStyle = 'None'
	$textbox12.Location = '554, 415'
	$textbox12.Margin = '4, 3, 4, 3'
	$textbox12.Name = 'textbox12'
	$textbox12.ReadOnly = $True
	$textbox12.Size = '181, 13'
	$textbox12.TabIndex = 1437
	$textbox12.TabStop = $False
	$textbox12.Text = '(Fix Common Windows Problems)'
	#
	# textbox75
	#
	$textbox75.AccessibleRole = 'None'
	$textbox75.BackColor = 'ControlLight'
	$textbox75.BorderStyle = 'None'
	$textbox75.Font = 'Microsoft Sans Serif, 18pt'
	$textbox75.Location = '185, 501'
	$textbox75.Margin = '4, 3, 4, 3'
	$textbox75.Name = 'textbox75'
	$textbox75.ReadOnly = $True
	$textbox75.Size = '200, 28'
	$textbox75.TabIndex = 1441
	$textbox75.TabStop = $False
	$textbox75.Text = 'Windows 11 Only'
	#
	# textbox19
	#
	$textbox19.AccessibleRole = 'None'
	$textbox19.BackColor = 'ControlLight'
	$textbox19.BorderStyle = 'None'
	$textbox19.Font = 'Microsoft Sans Serif, 18pt'
	$textbox19.Location = '646, 39'
	$textbox19.Margin = '4, 3, 4, 3'
	$textbox19.Name = 'textbox19'
	$textbox19.ReadOnly = $True
	$textbox19.Size = '163, 28'
	$textbox19.TabIndex = 1427
	$textbox19.TabStop = $False
	$textbox19.Text = 'Optional Fixes'
	#
	# textbox18
	#
	$textbox18.AccessibleRole = 'None'
	$textbox18.BackColor = 'ControlLight'
	$textbox18.BorderStyle = 'None'
	$textbox18.Font = 'Microsoft Sans Serif, 13.7pt'
	$textbox18.Location = '70, 418'
	$textbox18.Margin = '4, 3, 4, 3'
	$textbox18.Name = 'textbox18'
	$textbox18.ReadOnly = $True
	$textbox18.Size = '157, 21'
	$textbox18.TabIndex = 1424
	$textbox18.TabStop = $False
	$textbox18.Text = '>Clipboard History'
	#
	# textbox17
	#
	$textbox17.AccessibleRole = 'None'
	$textbox17.BackColor = 'ControlLight'
	$textbox17.BorderStyle = 'None'
	$textbox17.Font = 'Microsoft Sans Serif, 18pt'
	$textbox17.Location = '646, 445'
	$textbox17.Margin = '4, 3, 4, 3'
	$textbox17.Name = 'textbox17'
	$textbox17.ReadOnly = $True
	$textbox17.Size = '193, 28'
	$textbox17.TabIndex = 1423
	$textbox17.TabStop = $False
	$textbox17.Text = 'Aditional Tweaks'
	#
	# textbox16
	#
	$textbox16.BackColor = 'ControlLight'
	$textbox16.BorderStyle = 'None'
	$textbox16.Location = '23, 123'
	$textbox16.Margin = '4, 3, 4, 3'
	$textbox16.Name = 'textbox16'
	$textbox16.ReadOnly = $True
	$textbox16.Size = '231, 13'
	$textbox16.TabIndex = 1422
	$textbox16.TabStop = $False
	$textbox16.Text = '- Disable Useless Tasks, Services And Telemetry'
	#
	# textbox14
	#
	$textbox14.BackColor = 'ControlLight'
	$textbox14.BorderStyle = 'None'
	$textbox14.Location = '26, 123'
	$textbox14.Margin = '4, 3, 4, 3'
	$textbox14.Name = 'textbox14'
	$textbox14.ReadOnly = $True
	$textbox14.Size = '94, 13'
	$textbox14.TabIndex = 1420
	$textbox14.TabStop = $False
	$textbox14.Text = '- Enhance Privacy'
	#
	# textbox13
	#
	$textbox13.BackColor = 'ControlLight'
	$textbox13.BorderStyle = 'None'
	$textbox13.Location = '23, 85'
	$textbox13.Margin = '4, 3, 4, 3'
	$textbox13.Name = 'textbox13'
	$textbox13.ReadOnly = $True
	$textbox13.Size = '248, 13'
	$textbox13.TabIndex = 1292
	$textbox13.TabStop = $False
	$textbox13.Text = '- Better Windows Experience & Gaming Performance'
	#
	# textbox10
	#
	$textbox10.AccessibleRole = 'None'
	$textbox10.BackColor = 'ControlLight'
	$textbox10.BorderStyle = 'None'
	$textbox10.Font = 'Microsoft Sans Serif, 19pt'
	$textbox10.Location = '175, 38'
	$textbox10.Margin = '4, 3, 4, 3'
	$textbox10.Name = 'textbox10'
	$textbox10.ReadOnly = $True
	$textbox10.Size = '189, 29'
	$textbox10.TabIndex = 1419
	$textbox10.TabStop = $False
	$textbox10.Text = 'System Tweaks'
	#
	# textbox9
	#
	$textbox9.AccessibleRole = 'None'
	$textbox9.BackColor = 'ControlLight'
	$textbox9.BorderStyle = 'None'
	$textbox9.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox9.Location = '101, 210'
	$textbox9.Margin = '4, 3, 4, 3'
	$textbox9.Name = 'textbox9'
	$textbox9.ReadOnly = $True
	$textbox9.Size = '80, 21'
	$textbox9.TabIndex = 1417
	$textbox9.TabStop = $False
	$textbox9.Text = '>Cortana'
	#
	# textbox8
	#
	$textbox8.AccessibleRole = 'None'
	$textbox8.BackColor = 'ControlLight'
	$textbox8.BorderStyle = 'None'
	$textbox8.Font = 'Microsoft Sans Serif, 13.7pt'
	$textbox8.Location = '63, 391'
	$textbox8.Margin = '4, 3, 4, 3'
	$textbox8.Name = 'textbox8'
	$textbox8.ReadOnly = $True
	$textbox8.Size = '161, 21'
	$textbox8.TabIndex = 1416
	$textbox8.TabStop = $False
	$textbox8.Text = '>Location Tracking'
	#
	# textbox7
	#
	$textbox7.AccessibleRole = 'None'
	$textbox7.BackColor = 'ControlLight'
	$textbox7.BorderStyle = 'None'
	$textbox7.Font = 'Microsoft Sans Serif, 13.7pt'
	$textbox7.Location = '50, 364'
	$textbox7.Margin = '4, 3, 4, 3'
	$textbox7.Name = 'textbox7'
	$textbox7.ReadOnly = $True
	$textbox7.Size = '189, 21'
	$textbox7.TabIndex = 1415
	$textbox7.TabStop = $False
	$textbox7.Text = '>Memory Compression'
	#
	# textbox6
	#
	$textbox6.AccessibleRole = 'None'
	$textbox6.BackColor = 'ControlLight'
	$textbox6.BorderStyle = 'None'
	$textbox6.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox6.Location = '96, 337'
	$textbox6.Margin = '4, 3, 4, 3'
	$textbox6.Name = 'textbox6'
	$textbox6.ReadOnly = $True
	$textbox6.Size = '99, 21'
	$textbox6.TabIndex = 1414
	$textbox6.TabStop = $False
	$textbox6.Text = '>Tray Icons'
	#
	# textbox5
	#
	$textbox5.AccessibleRole = 'None'
	$textbox5.BackColor = 'ControlLight'
	$textbox5.BorderStyle = 'None'
	$textbox5.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox5.Location = '93, 306'
	$textbox5.Margin = '4, 3, 4, 3'
	$textbox5.Name = 'textbox5'
	$textbox5.ReadOnly = $True
	$textbox5.Size = '102, 21'
	$textbox5.TabIndex = 1413
	$textbox5.TabStop = $False
	$textbox5.Text = '>Hibernation'
	#
	# textbox1
	#
	$textbox1.AccessibleRole = 'None'
	$textbox1.BackColor = 'ControlLight'
	$textbox1.BorderStyle = 'None'
	$textbox1.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox1.Location = '78, 273'
	$textbox1.Margin = '4, 3, 4, 3'
	$textbox1.Name = 'textbox1'
	$textbox1.ReadOnly = $True
	$textbox1.Size = '149, 21'
	$textbox1.TabIndex = 1412
	$textbox1.TabStop = $False
	$textbox1.Text = '>Dark/Light Mode'
	#
	# textbox2
	#
	$textbox2.AccessibleRole = 'None'
	$textbox2.BackColor = 'ControlLight'
	$textbox2.BorderStyle = 'None'
	$textbox2.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox2.Location = '90, 240'
	$textbox2.Margin = '4, 3, 4, 3'
	$textbox2.Name = 'textbox2'
	$textbox2.ReadOnly = $True
	$textbox2.Size = '122, 21'
	$textbox2.TabIndex = 1411
	$textbox2.TabStop = $False
	$textbox2.Text = '>Visual Effect'
	#
	# textbox3
	#
	$textbox3.AccessibleRole = 'None'
	$textbox3.BackColor = 'ControlLight'
	$textbox3.BorderStyle = 'None'
	$textbox3.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox3.Location = '70, 181'
	$textbox3.Margin = '4, 3, 4, 3'
	$textbox3.Name = 'textbox3'
	$textbox3.ReadOnly = $True
	$textbox3.Size = '174, 21'
	$textbox3.TabIndex = 1410
	$textbox3.TabStop = $False
	$textbox3.Text = '>Backgrounds Apps'
	#
	# textbox4
	#
	$textbox4.AccessibleRole = 'None'
	$textbox4.BackColor = 'ControlLight'
	$textbox4.BorderStyle = 'None'
	$textbox4.Font = 'Microsoft Sans Serif, 13.8pt'
	$textbox4.Location = '87, 152'
	$textbox4.Margin = '4, 3, 4, 3'
	$textbox4.Name = 'textbox4'
	$textbox4.ReadOnly = $True
	$textbox4.Size = '125, 21'
	$textbox4.TabIndex = 1409
	$textbox4.TabStop = $False
	$textbox4.Text = '>Action Center'
	#
	# EnableNFS
	#
	$EnableNFS.BackColor = 'ControlLight'
	$EnableNFS.Font = 'Microsoft Sans Serif, 12pt'
	$EnableNFS.Location = '736, 201'
	$EnableNFS.Margin = '4, 3, 4, 3'
	$EnableNFS.Name = 'EnableNFS'
	$EnableNFS.Size = '186, 36'
	$EnableNFS.TabIndex = 1436
	$EnableNFS.Text = 'Enable NFS'
	$EnableNFS.UseCompatibleTextRendering = $True
	$EnableNFS.UseVisualStyleBackColor = $False
	$EnableNFS.add_Click($EnableNFS_Click)
	#
	# RemoveStartupProgram
	#
	$RemoveStartupProgram.BackColor = 'ControlLight'
	$RemoveStartupProgram.Font = 'Microsoft Sans Serif, 12.3pt'
	$RemoveStartupProgram.Location = '736, 243'
	$RemoveStartupProgram.Margin = '4, 3, 4, 3'
	$RemoveStartupProgram.Name = 'RemoveStartupProgram'
	$RemoveStartupProgram.Size = '186, 56'
	$RemoveStartupProgram.TabIndex = 1435
	$RemoveStartupProgram.Text = 'Remove Startup Programs'
	$RemoveStartupProgram.UseCompatibleTextRendering = $True
	$RemoveStartupProgram.UseVisualStyleBackColor = $False
	$RemoveStartupProgram.add_Click($RemoveStartupProgram_Click)
	#
	# WindowsSearchAndTask
	#
	$WindowsSearchAndTask.BackColor = 'ControlLight'
	$WindowsSearchAndTask.Font = 'Microsoft Sans Serif, 12pt'
	$WindowsSearchAndTask.Location = '549, 243'
	$WindowsSearchAndTask.Margin = '4, 3, 4, 3'
	$WindowsSearchAndTask.Name = 'WindowsSearchAndTask'
	$WindowsSearchAndTask.Size = '182, 56'
	$WindowsSearchAndTask.TabIndex = 1434
	$WindowsSearchAndTask.Text = 'Windows Search and Taskbar Fix'
	$WindowsSearchAndTask.UseCompatibleTextRendering = $True
	$WindowsSearchAndTask.UseVisualStyleBackColor = $False
	$WindowsSearchAndTask.add_Click($WindowsSearchAndTask_Click)
	#
	# LaptopNumlockFix
	#
	$LaptopNumlockFix.BackColor = 'ControlLight'
	$LaptopNumlockFix.Font = 'Microsoft Sans Serif, 11.9pt'
	$LaptopNumlockFix.Location = '548, 201'
	$LaptopNumlockFix.Margin = '4, 3, 4, 3'
	$LaptopNumlockFix.Name = 'LaptopNumlockFix'
	$LaptopNumlockFix.Size = '182, 36'
	$LaptopNumlockFix.TabIndex = 1433
	$LaptopNumlockFix.Text = 'Laptop Numlock Fix'
	$LaptopNumlockFix.UseCompatibleTextRendering = $True
	$LaptopNumlockFix.UseVisualStyleBackColor = $False
	$LaptopNumlockFix.add_Click($LaptopNumlockFix_Click)
	#
	# FixWhitelistedApps
	#
	$FixWhitelistedApps.BackColor = 'ControlLight'
	$FixWhitelistedApps.Font = 'Microsoft Sans Serif, 11.9pt'
	$FixWhitelistedApps.Location = '736, 159'
	$FixWhitelistedApps.Margin = '4, 3, 4, 3'
	$FixWhitelistedApps.Name = 'FixWhitelistedApps'
	$FixWhitelistedApps.Size = '186, 36'
	$FixWhitelistedApps.TabIndex = 1432
	$FixWhitelistedApps.Text = 'Fix Whitelisted Apps'
	$FixWhitelistedApps.UseCompatibleTextRendering = $True
	$FixWhitelistedApps.UseVisualStyleBackColor = $False
	$FixWhitelistedApps.add_Click($FixWhitelistedApps_Click)
	#
	# YourPhoneAppFIx
	#
	$YourPhoneAppFIx.BackColor = 'ControlLight'
	$YourPhoneAppFIx.Font = 'Microsoft Sans Serif, 11.9pt'
	$YourPhoneAppFIx.Location = '737, 122'
	$YourPhoneAppFIx.Margin = '4, 3, 4, 3'
	$YourPhoneAppFIx.Name = 'YourPhoneAppFIx'
	$YourPhoneAppFIx.Size = '185, 36'
	$YourPhoneAppFIx.TabIndex = 1430
	$YourPhoneAppFIx.Text = 'Your Phone App Fix'
	$YourPhoneAppFIx.UseCompatibleTextRendering = $True
	$YourPhoneAppFIx.UseVisualStyleBackColor = $False
	$YourPhoneAppFIx.add_Click($YourPhoneAppFIx_Click)
	#
	# RepairHardDrive
	#
	$RepairHardDrive.BackColor = 'ControlLight'
	$RepairHardDrive.Font = 'Microsoft Sans Serif, 11.8pt'
	$RepairHardDrive.Location = '548, 159'
	$RepairHardDrive.Margin = '4, 3, 4, 3'
	$RepairHardDrive.Name = 'RepairHardDrive'
	$RepairHardDrive.Size = '182, 36'
	$RepairHardDrive.TabIndex = 1429
	$RepairHardDrive.Text = 'Repair Hard Drive'
	$RepairHardDrive.UseCompatibleTextRendering = $True
	$RepairHardDrive.UseVisualStyleBackColor = $False
	$RepairHardDrive.add_Click($RepairHardDrive_Click)
	#
	# FixNetworkProblems
	#
	$FixNetworkProblems.BackColor = 'ControlLight'
	$FixNetworkProblems.Font = 'Microsoft Sans Serif, 11.9pt'
	$FixNetworkProblems.Location = '549, 122'
	$FixNetworkProblems.Margin = '4, 3, 4, 3'
	$FixNetworkProblems.Name = 'FixNetworkProblems'
	$FixNetworkProblems.Size = '181, 36'
	$FixNetworkProblems.TabIndex = 1428
	$FixNetworkProblems.Text = 'Fix Network Problems'
	$FixNetworkProblems.UseCompatibleTextRendering = $True
	$FixNetworkProblems.UseVisualStyleBackColor = $False
	$FixNetworkProblems.add_Click($FixNetworkProblems_Click)
	#
	# SystemFileChecker
	#
	$SystemFileChecker.BackColor = 'ControlLight'
	$SystemFileChecker.Font = 'Microsoft Sans Serif, 12pt'
	$SystemFileChecker.Location = '736, 76'
	$SystemFileChecker.Margin = '4, 3, 4, 3'
	$SystemFileChecker.Name = 'SystemFileChecker'
	$SystemFileChecker.Size = '186, 45'
	$SystemFileChecker.TabIndex = 1426
	$SystemFileChecker.Text = 'System File Checker'
	$SystemFileChecker.UseCompatibleTextRendering = $True
	$SystemFileChecker.UseVisualStyleBackColor = $False
	$SystemFileChecker.add_Click($SystemFileChecker_Click)
	#
	# RepairWindowsImage
	#
	$RepairWindowsImage.BackColor = 'ControlLight'
	$RepairWindowsImage.Font = 'Microsoft Sans Serif, 12pt'
	$RepairWindowsImage.Location = '548, 76'
	$RepairWindowsImage.Margin = '4, 3, 4, 3'
	$RepairWindowsImage.Name = 'RepairWindowsImage'
	$RepairWindowsImage.Size = '182, 45'
	$RepairWindowsImage.TabIndex = 1425
	$RepairWindowsImage.Text = 'Repair Windows Image'
	$RepairWindowsImage.UseCompatibleTextRendering = $True
	$RepairWindowsImage.UseVisualStyleBackColor = $False
	$RepairWindowsImage.add_Click($RepairWindowsImage_Click)
	#
	# ApplyTweaks
	#
	$ApplyTweaks.BackColor = 'ControlLight'
	$ApplyTweaks.Font = 'Microsoft Sans Serif, 17.5pt'
	$ApplyTweaks.Location = '279, 85'
	$ApplyTweaks.Margin = '4, 3, 4, 3'
	$ApplyTweaks.Name = 'ApplyTweaks'
	$ApplyTweaks.Size = '216, 60'
	$ApplyTweaks.TabIndex = 1418
	$ApplyTweaks.Text = 'Apply Tweaks'
	$ApplyTweaks.UseCompatibleTextRendering = $True
	$ApplyTweaks.UseVisualStyleBackColor = $False
	$ApplyTweaks.add_Click($ApplyTweaks_Click)
	#
	# EnableClipboardHisto
	#
	$EnableClipboardHisto.BackColor = 'ControlLight'
	$EnableClipboardHisto.Font = 'Microsoft Sans Serif, 12pt'
	$EnableClipboardHisto.Location = '389, 418'
	$EnableClipboardHisto.Margin = '4, 3, 4, 3'
	$EnableClipboardHisto.Name = 'EnableClipboardHisto'
	$EnableClipboardHisto.Size = '106, 25'
	$EnableClipboardHisto.TabIndex = 1408
	$EnableClipboardHisto.Text = 'Enable '
	$EnableClipboardHisto.UseCompatibleTextRendering = $True
	$EnableClipboardHisto.UseVisualStyleBackColor = $False
	$EnableClipboardHisto.add_Click($EnableClipboardHisto_Click)
	#
	# DisableClipboardHist
	#
	$DisableClipboardHist.BackColor = 'ControlLight'
	$DisableClipboardHist.Font = 'Microsoft Sans Serif, 12pt'
	$DisableClipboardHist.Location = '279, 418'
	$DisableClipboardHist.Margin = '4, 3, 4, 3'
	$DisableClipboardHist.Name = 'DisableClipboardHist'
	$DisableClipboardHist.Size = '106, 25'
	$DisableClipboardHist.TabIndex = 1407
	$DisableClipboardHist.Text = 'Disable'
	$DisableClipboardHist.UseCompatibleTextRendering = $True
	$DisableClipboardHist.UseVisualStyleBackColor = $False
	$DisableClipboardHist.add_Click($DisableClipboardHist_Click)
	#
	# DisableLocationTrack
	#
	$DisableLocationTrack.BackColor = 'ControlLight'
	$DisableLocationTrack.Font = 'Microsoft Sans Serif, 12pt'
	$DisableLocationTrack.Location = '279, 391'
	$DisableLocationTrack.Margin = '4, 3, 4, 3'
	$DisableLocationTrack.Name = 'DisableLocationTrack'
	$DisableLocationTrack.Size = '106, 25'
	$DisableLocationTrack.TabIndex = 1406
	$DisableLocationTrack.Text = 'Disable '
	$DisableLocationTrack.UseCompatibleTextRendering = $True
	$DisableLocationTrack.UseVisualStyleBackColor = $False
	$DisableLocationTrack.add_Click($DisableLocationTrack_Click)
	#
	# DisableCortana
	#
	$DisableCortana.BackColor = 'ControlLight'
	$DisableCortana.Font = 'Microsoft Sans Serif, 12pt'
	$DisableCortana.Location = '279, 208'
	$DisableCortana.Margin = '4, 3, 4, 3'
	$DisableCortana.Name = 'DisableCortana'
	$DisableCortana.Size = '106, 28'
	$DisableCortana.TabIndex = 1388
	$DisableCortana.Text = 'Disable '
	$DisableCortana.UseCompatibleTextRendering = $True
	$DisableCortana.UseVisualStyleBackColor = $False
	$DisableCortana.add_Click($DisableCortana_Click)
	#
	# EnableLocationTRacki
	#
	$EnableLocationTRacki.BackColor = 'ControlLight'
	$EnableLocationTRacki.Font = 'Microsoft Sans Serif, 12pt'
	$EnableLocationTRacki.Location = '389, 391'
	$EnableLocationTRacki.Margin = '4, 3, 4, 3'
	$EnableLocationTRacki.Name = 'EnableLocationTRacki'
	$EnableLocationTRacki.Size = '106, 25'
	$EnableLocationTRacki.TabIndex = 1405
	$EnableLocationTRacki.Text = 'Enable'
	$EnableLocationTRacki.UseCompatibleTextRendering = $True
	$EnableLocationTRacki.UseVisualStyleBackColor = $False
	$EnableLocationTRacki.add_Click($EnableLocationTRacki_Click)
	#
	# DisableActionCenter
	#
	$DisableActionCenter.BackColor = 'ControlLight'
	$DisableActionCenter.Font = 'Microsoft Sans Serif, 12pt'
	$DisableActionCenter.Location = '279, 151'
	$DisableActionCenter.Margin = '4, 3, 4, 3'
	$DisableActionCenter.Name = 'DisableActionCenter'
	$DisableActionCenter.Size = '106, 27'
	$DisableActionCenter.TabIndex = 1389
	$DisableActionCenter.Text = 'Disable'
	$DisableActionCenter.UseCompatibleTextRendering = $True
	$DisableActionCenter.UseVisualStyleBackColor = $False
	$DisableActionCenter.add_Click($DisableActionCenter_Click)
	#
	# Hide
	#
	$Hide.BackColor = 'ControlLight'
	$Hide.Font = 'Microsoft Sans Serif, 12pt'
	$Hide.Location = '279, 337'
	$Hide.Margin = '4, 3, 4, 3'
	$Hide.Name = 'Hide'
	$Hide.Size = '106, 25'
	$Hide.TabIndex = 1404
	$Hide.Text = 'Hide '
	$Hide.UseCompatibleTextRendering = $True
	$Hide.UseVisualStyleBackColor = $False
	#
	# EnableCortanaSearch
	#
	$EnableCortanaSearch.BackColor = 'ControlLight'
	$EnableCortanaSearch.Font = 'Microsoft Sans Serif, 12pt'
	$EnableCortanaSearch.Location = '389, 208'
	$EnableCortanaSearch.Margin = '4, 3, 4, 3'
	$EnableCortanaSearch.Name = 'EnableCortanaSearch'
	$EnableCortanaSearch.Size = '106, 28'
	$EnableCortanaSearch.TabIndex = 1390
	$EnableCortanaSearch.Text = 'Enable'
	$EnableCortanaSearch.UseCompatibleTextRendering = $True
	$EnableCortanaSearch.UseVisualStyleBackColor = $False
	$EnableCortanaSearch.add_Click($EnableCortanaSearch_Click)
	#
	# Show
	#
	$Show.BackColor = 'ControlLight'
	$Show.Font = 'Microsoft Sans Serif, 12pt'
	$Show.Location = '389, 337'
	$Show.Margin = '4, 3, 4, 3'
	$Show.Name = 'Show'
	$Show.Size = '106, 25'
	$Show.TabIndex = 1403
	$Show.Text = 'Show '
	$Show.UseCompatibleTextRendering = $True
	$Show.UseVisualStyleBackColor = $False
	#
	# EnableBackgroundApps
	#
	$EnableBackgroundApps.BackColor = 'ControlLight'
	$EnableBackgroundApps.Font = 'Microsoft Sans Serif, 12pt'
	$EnableBackgroundApps.Location = '389, 179'
	$EnableBackgroundApps.Margin = '4, 3, 4, 3'
	$EnableBackgroundApps.Name = 'EnableBackgroundApps'
	$EnableBackgroundApps.Size = '106, 28'
	$EnableBackgroundApps.TabIndex = 1391
	$EnableBackgroundApps.Text = 'Enable '
	$EnableBackgroundApps.UseCompatibleTextRendering = $True
	$EnableBackgroundApps.UseVisualStyleBackColor = $False
	$EnableBackgroundApps.add_Click($EnableBackgroundApps_Click)
	#
	# LightMode
	#
	$LightMode.BackColor = 'ControlLight'
	$LightMode.Font = 'Microsoft Sans Serif, 12pt'
	$LightMode.Location = '389, 272'
	$LightMode.Margin = '4, 3, 4, 3'
	$LightMode.Name = 'LightMode'
	$LightMode.Size = '106, 27'
	$LightMode.TabIndex = 1402
	$LightMode.Text = 'Light Mode'
	$LightMode.UseCompatibleTextRendering = $True
	$LightMode.UseVisualStyleBackColor = $False
	$LightMode.add_Click($LightMode_Click)
	#
	# DisableHibernation
	#
	$DisableHibernation.BackColor = 'ControlLight'
	$DisableHibernation.Font = 'Microsoft Sans Serif, 12pt'
	$DisableHibernation.Location = '279, 305'
	$DisableHibernation.Margin = '4, 3, 4, 3'
	$DisableHibernation.Name = 'DisableHibernation'
	$DisableHibernation.Size = '106, 26'
	$DisableHibernation.TabIndex = 1392
	$DisableHibernation.Text = 'Disable '
	$DisableHibernation.UseCompatibleTextRendering = $True
	$DisableHibernation.UseVisualStyleBackColor = $False
	$DisableHibernation.add_Click($DisableHibernation_Click)
	#
	# DarkMode
	#
	$DarkMode.BackColor = 'ControlLight'
	$DarkMode.Font = 'Microsoft Sans Serif, 12pt'
	$DarkMode.Location = '279, 272'
	$DarkMode.Margin = '4, 3, 4, 3'
	$DarkMode.Name = 'DarkMode'
	$DarkMode.Size = '106, 27'
	$DarkMode.TabIndex = 1401
	$DarkMode.Text = 'Dark Mode'
	$DarkMode.UseCompatibleTextRendering = $True
	$DarkMode.UseVisualStyleBackColor = $False
	$DarkMode.add_Click($DarkMode_Click)
	#
	# EnableHibernation
	#
	$EnableHibernation.BackColor = 'ControlLight'
	$EnableHibernation.Font = 'Microsoft Sans Serif, 12pt'
	$EnableHibernation.Location = '389, 305'
	$EnableHibernation.Margin = '4, 3, 4, 3'
	$EnableHibernation.Name = 'EnableHibernation'
	$EnableHibernation.Size = '106, 26'
	$EnableHibernation.TabIndex = 1393
	$EnableHibernation.Text = 'Enable '
	$EnableHibernation.UseCompatibleTextRendering = $True
	$EnableHibernation.UseVisualStyleBackColor = $False
	$EnableHibernation.add_Click($EnableHibernation_Click)
	#
	# SetTimeToUTCDualBoot
	#
	$SetTimeToUTCDualBoot.BackColor = 'ControlLight'
	$SetTimeToUTCDualBoot.Font = 'Microsoft Sans Serif, 12pt'
	$SetTimeToUTCDualBoot.Location = '738, 590'
	$SetTimeToUTCDualBoot.Margin = '4, 3, 4, 3'
	$SetTimeToUTCDualBoot.Name = 'SetTimeToUTCDualBoot'
	$SetTimeToUTCDualBoot.Size = '155, 55'
	$SetTimeToUTCDualBoot.TabIndex = 1400
	$SetTimeToUTCDualBoot.Text = 'Set Time To UTC (Dual Boot)'
	$SetTimeToUTCDualBoot.UseCompatibleTextRendering = $True
	$SetTimeToUTCDualBoot.UseVisualStyleBackColor = $False
	$SetTimeToUTCDualBoot.add_Click($SetTimeToUTCDualBoot_Click)
	#
	# CleanTempFilesAndLog
	#
	$CleanTempFilesAndLog.BackColor = 'ControlLight'
	$CleanTempFilesAndLog.Font = 'Microsoft Sans Serif, 12pt'
	$CleanTempFilesAndLog.Location = '576, 590'
	$CleanTempFilesAndLog.Margin = '4, 3, 4, 3'
	$CleanTempFilesAndLog.Name = 'CleanTempFilesAndLog'
	$CleanTempFilesAndLog.Size = '154, 55'
	$CleanTempFilesAndLog.TabIndex = 1394
	$CleanTempFilesAndLog.Text = 'Clean All Windows Cache'
	$CleanTempFilesAndLog.UseCompatibleTextRendering = $True
	$CleanTempFilesAndLog.UseVisualStyleBackColor = $False
	$CleanTempFilesAndLog.add_Click($CleanTempFilesAndLog_Click)
	#
	# AppearanceVisualFX
	#
	$AppearanceVisualFX.BackColor = 'ControlLight'
	$AppearanceVisualFX.Font = 'Microsoft Sans Serif, 11.8pt'
	$AppearanceVisualFX.Location = '389, 238'
	$AppearanceVisualFX.Margin = '4, 3, 4, 3'
	$AppearanceVisualFX.Name = 'AppearanceVisualFX'
	$AppearanceVisualFX.Size = '106, 28'
	$AppearanceVisualFX.TabIndex = 1399
	$AppearanceVisualFX.Text = 'Appearance '
	$AppearanceVisualFX.UseCompatibleTextRendering = $True
	$AppearanceVisualFX.UseVisualStyleBackColor = $False
	$AppearanceVisualFX.add_Click($AppearanceVisualFX_Click)
	#
	# EnableActionCenter
	#
	$EnableActionCenter.BackColor = 'ControlLight'
	$EnableActionCenter.Font = 'Microsoft Sans Serif, 12pt'
	$EnableActionCenter.Location = '389, 151'
	$EnableActionCenter.Margin = '4, 3, 4, 3'
	$EnableActionCenter.Name = 'EnableActionCenter'
	$EnableActionCenter.Size = '106, 27'
	$EnableActionCenter.TabIndex = 1395
	$EnableActionCenter.Text = 'Enable'
	$EnableActionCenter.UseCompatibleTextRendering = $True
	$EnableActionCenter.UseVisualStyleBackColor = $False
	$EnableActionCenter.add_Click($EnableActionCenter_Click)
	#
	# PerformanceVisualFX
	#
	$PerformanceVisualFX.BackColor = 'ControlLight'
	$PerformanceVisualFX.Font = 'Microsoft Sans Serif, 11.8pt'
	$PerformanceVisualFX.Location = '279, 238'
	$PerformanceVisualFX.Margin = '4, 3, 4, 3'
	$PerformanceVisualFX.Name = 'PerformanceVisualFX'
	$PerformanceVisualFX.Size = '106, 28'
	$PerformanceVisualFX.TabIndex = 1398
	$PerformanceVisualFX.Text = 'Performance '
	$PerformanceVisualFX.UseCompatibleTextRendering = $True
	$PerformanceVisualFX.UseVisualStyleBackColor = $False
	$PerformanceVisualFX.add_Click($PerformanceVisualFX_Click)
	#
	# DisableMemoryCompres
	#
	$DisableMemoryCompres.BackColor = 'ControlLight'
	$DisableMemoryCompres.Font = 'Microsoft Sans Serif, 12pt'
	$DisableMemoryCompres.Location = '279, 364'
	$DisableMemoryCompres.Margin = '4, 3, 4, 3'
	$DisableMemoryCompres.Name = 'DisableMemoryCompres'
	$DisableMemoryCompres.Size = '106, 25'
	$DisableMemoryCompres.TabIndex = 1396
	$DisableMemoryCompres.Text = 'Disable '
	$DisableMemoryCompres.UseCompatibleTextRendering = $True
	$DisableMemoryCompres.UseVisualStyleBackColor = $False
	$DisableMemoryCompres.add_Click($DisableMemoryCompres_Click)
	#
	# EnableMemoryCompress
	#
	$EnableMemoryCompress.BackColor = 'ControlLight'
	$EnableMemoryCompress.Font = 'Microsoft Sans Serif, 12pt'
	$EnableMemoryCompress.Location = '389, 364'
	$EnableMemoryCompress.Margin = '4, 3, 4, 3'
	$EnableMemoryCompress.Name = 'EnableMemoryCompress'
	$EnableMemoryCompress.Size = '106, 25'
	$EnableMemoryCompress.TabIndex = 1397
	$EnableMemoryCompress.Text = 'Enable '
	$EnableMemoryCompress.UseCompatibleTextRendering = $True
	$EnableMemoryCompress.UseVisualStyleBackColor = $False
	$EnableMemoryCompress.add_Click($EnableMemoryCompress_Click)
	#
	# tabpage6
	#
	$tabpage6.Controls.Add($buttonUnistallEdge)
	$tabpage6.Controls.Add($buttonRevertRegistryChange)
	$tabpage6.Controls.Add($textbox88)
	$tabpage6.Controls.Add($InstallOnedrive)
	$tabpage6.Controls.Add($textbox87)
	$tabpage6.Controls.Add($EnableEdgePDF)
	$tabpage6.Controls.Add($textbox86)
	$tabpage6.Controls.Add($buttonDebloatWithBlocklist)
	$tabpage6.Controls.Add($DebloatAll)
	$tabpage6.Controls.Add($ReinstallAllBloatwar)
	$tabpage6.Controls.Add($textbox84)
	$tabpage6.Controls.Add($UnsintallOnedrive)
	$tabpage6.Controls.Add($DisableEdgePDF)
	$tabpage6.Controls.Add($UnpinTitilesFromStar)
	$tabpage6.Controls.Add($RemoveBloatwareRegKe)
	$tabpage6.Controls.Add($textbox85)
	$tabpage6.BackColor = 'ControlLight'
	$tabpage6.Location = '4, 22'
	$tabpage6.Name = 'tabpage6'
	$tabpage6.Size = '934, 908'
	$tabpage6.TabIndex = 6
	$tabpage6.Text = 'Debloat Windows'
	#
	# buttonUnistallEdge
	#
	$buttonUnistallEdge.BackColor = 'ControlLight'
	$buttonUnistallEdge.Font = 'Microsoft Sans Serif, 14pt'
	$buttonUnistallEdge.Location = '174, 310'
	$buttonUnistallEdge.Margin = '4, 3, 4, 3'
	$buttonUnistallEdge.Name = 'buttonUnistallEdge'
	$buttonUnistallEdge.Size = '203, 44'
	$buttonUnistallEdge.TabIndex = 1505
	$buttonUnistallEdge.Text = 'Unistall Edge'
	$buttonUnistallEdge.UseCompatibleTextRendering = $True
	$buttonUnistallEdge.UseVisualStyleBackColor = $False
	$buttonUnistallEdge.add_Click($buttonUnistallEdge_Click)
	#
	# buttonRevertRegistryChange
	#
	$buttonRevertRegistryChange.BackColor = 'ControlLight'
	$buttonRevertRegistryChange.Font = 'Microsoft Sans Serif, 12.3pt'
	$buttonRevertRegistryChange.Location = '525, 160'
	$buttonRevertRegistryChange.Margin = '4, 3, 4, 3'
	$buttonRevertRegistryChange.Name = 'buttonRevertRegistryChange'
	$buttonRevertRegistryChange.Size = '203, 44'
	$buttonRevertRegistryChange.TabIndex = 1504
	$buttonRevertRegistryChange.Text = 'Revert Registry Changes'
	$buttonRevertRegistryChange.UseCompatibleTextRendering = $True
	$buttonRevertRegistryChange.UseVisualStyleBackColor = $False
	$buttonRevertRegistryChange.add_Click($buttonRevertRegistryChange_Click)
	#
	# textbox88
	#
	$textbox88.AccessibleRole = 'None'
	$textbox88.BackColor = 'ControlLight'
	$textbox88.BorderStyle = 'None'
	$textbox88.Font = 'Microsoft Sans Serif, 20pt'
	$textbox88.Location = '580, 73'
	$textbox88.Margin = '4, 3, 4, 3'
	$textbox88.Name = 'textbox88'
	$textbox88.ReadOnly = $True
	$textbox88.Size = '104, 31'
	$textbox88.TabIndex = 1503
	$textbox88.TabStop = $False
	$textbox88.Text = 'Revert'
	#
	# InstallOnedrive
	#
	$InstallOnedrive.BackColor = 'ControlLight'
	$InstallOnedrive.Font = 'Microsoft Sans Serif, 14pt'
	$InstallOnedrive.Location = '505, 478'
	$InstallOnedrive.Margin = '4, 3, 4, 3'
	$InstallOnedrive.Name = 'InstallOnedrive'
	$InstallOnedrive.Size = '119, 39'
	$InstallOnedrive.TabIndex = 1502
	$InstallOnedrive.Text = 'Install'
	$InstallOnedrive.UseCompatibleTextRendering = $True
	$InstallOnedrive.UseVisualStyleBackColor = $False
	$InstallOnedrive.add_Click($InstallOnedrive_Click)
	#
	# textbox87
	#
	$textbox87.AccessibleRole = 'None'
	$textbox87.BackColor = 'ControlLight'
	$textbox87.BorderStyle = 'None'
	$textbox87.Font = 'Microsoft Sans Serif, 16pt'
	$textbox87.Location = '519, 404'
	$textbox87.Margin = '4, 3, 4, 3'
	$textbox87.Name = 'textbox87'
	$textbox87.ReadOnly = $True
	$textbox87.Size = '88, 25'
	$textbox87.TabIndex = 1501
	$textbox87.TabStop = $False
	$textbox87.Text = 'Onedrive'
	#
	# EnableEdgePDF
	#
	$EnableEdgePDF.BackColor = 'ControlLight'
	$EnableEdgePDF.Font = 'Microsoft Sans Serif, 14pt'
	$EnableEdgePDF.Location = '362, 478'
	$EnableEdgePDF.Margin = '4, 3, 4, 3'
	$EnableEdgePDF.Name = 'EnableEdgePDF'
	$EnableEdgePDF.Size = '119, 39'
	$EnableEdgePDF.TabIndex = 1500
	$EnableEdgePDF.Text = 'Enable'
	$EnableEdgePDF.UseCompatibleTextRendering = $True
	$EnableEdgePDF.UseVisualStyleBackColor = $False
	#
	# textbox86
	#
	$textbox86.AccessibleRole = 'None'
	$textbox86.BackColor = 'ControlLight'
	$textbox86.BorderStyle = 'None'
	$textbox86.Font = 'Microsoft Sans Serif, 16pt'
	$textbox86.Location = '373, 404'
	$textbox86.Margin = '4, 3, 4, 3'
	$textbox86.Name = 'textbox86'
	$textbox86.ReadOnly = $True
	$textbox86.Size = '102, 25'
	$textbox86.TabIndex = 1499
	$textbox86.TabStop = $False
	$textbox86.Text = 'Edge PDF'
	#
	# buttonDebloatWithBlocklist
	#
	$buttonDebloatWithBlocklist.BackColor = 'ControlLight'
	$buttonDebloatWithBlocklist.Font = 'Microsoft Sans Serif, 14pt'
	$buttonDebloatWithBlocklist.Location = '174, 260'
	$buttonDebloatWithBlocklist.Margin = '4, 3, 4, 3'
	$buttonDebloatWithBlocklist.Name = 'buttonDebloatWithBlocklist'
	$buttonDebloatWithBlocklist.Size = '203, 44'
	$buttonDebloatWithBlocklist.TabIndex = 1498
	$buttonDebloatWithBlocklist.Text = 'Debloat With Blocklist'
	$buttonDebloatWithBlocklist.UseCompatibleTextRendering = $True
	$buttonDebloatWithBlocklist.UseVisualStyleBackColor = $False
	$buttonDebloatWithBlocklist.add_Click($buttonDebloatWithBlocklist_Click)
	#
	# DebloatAll
	#
	$DebloatAll.BackColor = 'ControlLight'
	$DebloatAll.Font = 'Microsoft Sans Serif, 14pt'
	$DebloatAll.Location = '174, 110'
	$DebloatAll.Margin = '4, 3, 4, 3'
	$DebloatAll.Name = 'DebloatAll'
	$DebloatAll.Size = '203, 44'
	$DebloatAll.TabIndex = 1443
	$DebloatAll.Text = 'Debloat All '
	$DebloatAll.UseCompatibleTextRendering = $True
	$DebloatAll.UseVisualStyleBackColor = $False
	$DebloatAll.add_Click($DebloatAll_Click)
	#
	# ReinstallAllBloatwar
	#
	$ReinstallAllBloatwar.BackColor = 'ControlLight'
	$ReinstallAllBloatwar.Font = 'Microsoft Sans Serif, 12.3pt'
	$ReinstallAllBloatwar.Location = '525, 110'
	$ReinstallAllBloatwar.Margin = '4, 3, 4, 3'
	$ReinstallAllBloatwar.Name = 'ReinstallAllBloatwar'
	$ReinstallAllBloatwar.Size = '203, 44'
	$ReinstallAllBloatwar.TabIndex = 1497
	$ReinstallAllBloatwar.Text = 'Reinstall All Bloatware'
	$ReinstallAllBloatwar.UseCompatibleTextRendering = $True
	$ReinstallAllBloatwar.UseVisualStyleBackColor = $False
	$ReinstallAllBloatwar.add_Click($ReinstallAllBloatwar_Click)
	#
	# textbox84
	#
	$textbox84.BackColor = 'ControlLight'
	$textbox84.BorderStyle = 'None'
	$textbox84.Location = '151, 360'
	$textbox84.Margin = '4, 3, 4, 3'
	$textbox84.Name = 'textbox84'
	$textbox84.ReadOnly = $True
	$textbox84.Size = '295, 13'
	$textbox84.TabIndex = 1496
	$textbox84.TabStop = $False
	$textbox84.Text = '(Remove All MS Store Apps To Lighten Up Windows System)'
	#
	# UnsintallOnedrive
	#
	$UnsintallOnedrive.BackColor = 'ControlLight'
	$UnsintallOnedrive.Font = 'Microsoft Sans Serif, 14pt'
	$UnsintallOnedrive.Location = '505, 435'
	$UnsintallOnedrive.Margin = '4, 3, 4, 3'
	$UnsintallOnedrive.Name = 'UnsintallOnedrive'
	$UnsintallOnedrive.Size = '119, 39'
	$UnsintallOnedrive.TabIndex = 1495
	$UnsintallOnedrive.Text = 'Unsintall '
	$UnsintallOnedrive.UseCompatibleTextRendering = $True
	$UnsintallOnedrive.UseVisualStyleBackColor = $False
	$UnsintallOnedrive.add_Click($UnsintallOnedrive_Click)
	#
	# DisableEdgePDF
	#
	$DisableEdgePDF.BackColor = 'ControlLight'
	$DisableEdgePDF.Font = 'Microsoft Sans Serif, 14pt'
	$DisableEdgePDF.Location = '362, 435'
	$DisableEdgePDF.Margin = '4, 3, 4, 3'
	$DisableEdgePDF.Name = 'DisableEdgePDF'
	$DisableEdgePDF.Size = '119, 39'
	$DisableEdgePDF.TabIndex = 1494
	$DisableEdgePDF.Text = 'Disable '
	$DisableEdgePDF.UseCompatibleTextRendering = $True
	$DisableEdgePDF.UseVisualStyleBackColor = $False
	$DisableEdgePDF.add_Click($DisableEdgePDF_Click)
	#
	# UnpinTitilesFromStar
	#
	$UnpinTitilesFromStar.BackColor = 'ControlLight'
	$UnpinTitilesFromStar.Font = 'Microsoft Sans Serif, 12.3pt'
	$UnpinTitilesFromStar.Location = '174, 160'
	$UnpinTitilesFromStar.Margin = '4, 3, 4, 3'
	$UnpinTitilesFromStar.Name = 'UnpinTitilesFromStar'
	$UnpinTitilesFromStar.Size = '203, 44'
	$UnpinTitilesFromStar.TabIndex = 1493
	$UnpinTitilesFromStar.Text = 'Unpin Titiles From Start Menu'
	$UnpinTitilesFromStar.UseCompatibleTextRendering = $True
	$UnpinTitilesFromStar.UseVisualStyleBackColor = $False
	$UnpinTitilesFromStar.add_Click($UnpinTitilesFromStar_Click)
	#
	# RemoveBloatwareRegKe
	#
	$RemoveBloatwareRegKe.BackColor = 'ControlLight'
	$RemoveBloatwareRegKe.Font = 'Microsoft Sans Serif, 12.3pt'
	$RemoveBloatwareRegKe.Location = '174, 210'
	$RemoveBloatwareRegKe.Margin = '4, 3, 4, 3'
	$RemoveBloatwareRegKe.Name = 'RemoveBloatwareRegKe'
	$RemoveBloatwareRegKe.Size = '203, 44'
	$RemoveBloatwareRegKe.TabIndex = 1492
	$RemoveBloatwareRegKe.Text = 'Remove Bloatware Reg Keys'
	$RemoveBloatwareRegKe.UseCompatibleTextRendering = $True
	$RemoveBloatwareRegKe.UseVisualStyleBackColor = $False
	$RemoveBloatwareRegKe.add_Click($RemoveBloatwareRegKe_Click)
	#
	# textbox85
	#
	$textbox85.AccessibleRole = 'None'
	$textbox85.BackColor = 'ControlLight'
	$textbox85.BorderStyle = 'None'
	$textbox85.Font = 'Microsoft Sans Serif, 20pt'
	$textbox85.Location = '171, 73'
	$textbox85.Margin = '4, 3, 4, 3'
	$textbox85.Name = 'textbox85'
	$textbox85.ReadOnly = $True
	$textbox85.Size = '220, 31'
	$textbox85.TabIndex = 1490
	$textbox85.TabStop = $False
	$textbox85.Text = 'Debloat Windows'
	#
	# tabpage3
	#
	$tabpage3.Controls.Add($textbox103)
	$tabpage3.Controls.Add($textbox102)
	$tabpage3.Controls.Add($textbox101)
	$tabpage3.Controls.Add($textbox100)
	$tabpage3.Controls.Add($textbox99)
	$tabpage3.Controls.Add($textbox98)
	$tabpage3.Controls.Add($textbox97)
	$tabpage3.Controls.Add($textbox96)
	$tabpage3.Controls.Add($textbox95)
	$tabpage3.Controls.Add($textbox94)
	$tabpage3.Controls.Add($textbox93)
	$tabpage3.Controls.Add($textbox92)
	$tabpage3.Controls.Add($buttonActivateMSOffice)
	$tabpage3.Controls.Add($buttonActivateWindows)
	$tabpage3.Controls.Add($textbox91)
	$tabpage3.Controls.Add($WindowsUpdateReset)
	$tabpage3.Controls.Add($Low)
	$tabpage3.Controls.Add($textbox49)
	$tabpage3.Controls.Add($EnableWindowsUpdates)
	$tabpage3.Controls.Add($DisableWindowsUpdate)
	$tabpage3.Controls.Add($textbox71)
	$tabpage3.Controls.Add($textbox72)
	$tabpage3.Controls.Add($textbox73)
	$tabpage3.Controls.Add($DefaultSetting)
	$tabpage3.Controls.Add($SecurityUpdatesOnly)
	$tabpage3.Controls.Add($textbox74)
	$tabpage3.Controls.Add($RemoveMalware)
	$tabpage3.Controls.Add($RemoveViruses)
	$tabpage3.Controls.Add($textbox62)
	$tabpage3.Controls.Add($textbox63)
	$tabpage3.Controls.Add($textbox64)
	$tabpage3.Controls.Add($textbox65)
	$tabpage3.Controls.Add($textbox66)
	$tabpage3.Controls.Add($textbox67)
	$tabpage3.Controls.Add($textbox68)
	$tabpage3.Controls.Add($textbox69)
	$tabpage3.Controls.Add($textbox70)
	$tabpage3.Controls.Add($High)
	$tabpage3.BackColor = 'ControlLight'
	$tabpage3.Font = 'Microsoft Sans Serif, 8.25pt'
	$tabpage3.Location = '4, 22'
	$tabpage3.Name = 'tabpage3'
	$tabpage3.Size = '934, 908'
	$tabpage3.TabIndex = 3
	$tabpage3.Text = 'Updates & Security'
	#
	# textbox103
	#
	$textbox103.BackColor = 'ControlLight'
	$textbox103.BorderStyle = 'None'
	$textbox103.Font = 'Microsoft Sans Serif, 10pt'
	$textbox103.Location = '146, 534'
	$textbox103.Margin = '4, 3, 4, 3'
	$textbox103.Name = 'textbox103'
	$textbox103.ReadOnly = $True
	$textbox103.Size = '209, 16'
	$textbox103.TabIndex = 1464
	$textbox103.TabStop = $False
	$textbox103.Text = '(1 Click Will Try To Activate All)'
	#
	# textbox102
	#
	$textbox102.BackColor = 'ControlLight'
	$textbox102.BorderStyle = 'None'
	$textbox102.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox102.Location = '298, 504'
	$textbox102.Margin = '4, 3, 4, 3'
	$textbox102.Name = 'textbox102'
	$textbox102.ReadOnly = $True
	$textbox102.Size = '164, 13'
	$textbox102.TabIndex = 1463
	$textbox102.TabStop = $False
	$textbox102.Text = '- Project 2016/2019'
	#
	# textbox101
	#
	$textbox101.BackColor = 'ControlLight'
	$textbox101.BorderStyle = 'None'
	$textbox101.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox101.Location = '298, 490'
	$textbox101.Margin = '4, 3, 4, 3'
	$textbox101.Name = 'textbox101'
	$textbox101.ReadOnly = $True
	$textbox101.Size = '164, 13'
	$textbox101.TabIndex = 1462
	$textbox101.TabStop = $False
	$textbox101.Text = '- Visio 2016/2019'
	#
	# textbox100
	#
	$textbox100.BackColor = 'ControlLight'
	$textbox100.BorderStyle = 'None'
	$textbox100.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox100.Location = '298, 477'
	$textbox100.Margin = '4, 3, 4, 3'
	$textbox100.Name = 'textbox100'
	$textbox100.ReadOnly = $True
	$textbox100.Size = '164, 13'
	$textbox100.TabIndex = 1461
	$textbox100.TabStop = $False
	$textbox100.Text = '- Office 365'
	#
	# textbox99
	#
	$textbox99.BackColor = 'ControlLight'
	$textbox99.BorderStyle = 'None'
	$textbox99.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox99.Location = '298, 463'
	$textbox99.Margin = '4, 3, 4, 3'
	$textbox99.Name = 'textbox99'
	$textbox99.ReadOnly = $True
	$textbox99.Size = '164, 13'
	$textbox99.TabIndex = 1460
	$textbox99.TabStop = $False
	$textbox99.Text = '- Office 2019'
	#
	# textbox98
	#
	$textbox98.BackColor = 'ControlLight'
	$textbox98.BorderStyle = 'None'
	$textbox98.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox98.Location = '298, 449'
	$textbox98.Margin = '4, 3, 4, 3'
	$textbox98.Name = 'textbox98'
	$textbox98.ReadOnly = $True
	$textbox98.Size = '164, 13'
	$textbox98.TabIndex = 1459
	$textbox98.TabStop = $False
	$textbox98.Text = '- Office 2016'
	#
	# textbox97
	#
	$textbox97.BackColor = 'ControlLight'
	$textbox97.BorderStyle = 'None'
	$textbox97.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox97.Location = '298, 434'
	$textbox97.Margin = '4, 3, 4, 3'
	$textbox97.Name = 'textbox97'
	$textbox97.ReadOnly = $True
	$textbox97.Size = '164, 13'
	$textbox97.TabIndex = 1458
	$textbox97.TabStop = $False
	$textbox97.Text = '- Office 2010/2013'
	#
	# textbox96
	#
	$textbox96.BackColor = 'ControlLight'
	$textbox96.BorderStyle = 'None'
	$textbox96.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox96.Location = '298, 417'
	$textbox96.Margin = '4, 3, 4, 3'
	$textbox96.Name = 'textbox96'
	$textbox96.ReadOnly = $True
	$textbox96.Size = '100, 13'
	$textbox96.TabIndex = 1457
	$textbox96.TabStop = $False
	$textbox96.Text = '> Supported Version'
	#
	# textbox95
	#
	$textbox95.BackColor = 'ControlLight'
	$textbox95.BorderStyle = 'None'
	$textbox95.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox95.Location = '116, 463'
	$textbox95.Margin = '4, 3, 4, 3'
	$textbox95.Name = 'textbox95'
	$textbox95.ReadOnly = $True
	$textbox95.Size = '100, 13'
	$textbox95.TabIndex = 1456
	$textbox95.TabStop = $False
	$textbox95.Text = '- Windows 8'
	#
	# textbox94
	#
	$textbox94.BackColor = 'ControlLight'
	$textbox94.BorderStyle = 'None'
	$textbox94.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox94.Location = '116, 449'
	$textbox94.Margin = '4, 3, 4, 3'
	$textbox94.Name = 'textbox94'
	$textbox94.ReadOnly = $True
	$textbox94.Size = '164, 13'
	$textbox94.TabIndex = 1455
	$textbox94.TabStop = $False
	$textbox94.Text = '- Windows 10'
	#
	# textbox93
	#
	$textbox93.BackColor = 'ControlLight'
	$textbox93.BorderStyle = 'None'
	$textbox93.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox93.Location = '116, 434'
	$textbox93.Margin = '4, 3, 4, 3'
	$textbox93.Name = 'textbox93'
	$textbox93.ReadOnly = $True
	$textbox93.Size = '164, 13'
	$textbox93.TabIndex = 1454
	$textbox93.TabStop = $False
	$textbox93.Text = '- Windows 11'
	#
	# textbox92
	#
	$textbox92.BackColor = 'ControlLight'
	$textbox92.BorderStyle = 'None'
	$textbox92.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox92.Location = '116, 417'
	$textbox92.Margin = '4, 3, 4, 3'
	$textbox92.Name = 'textbox92'
	$textbox92.ReadOnly = $True
	$textbox92.Size = '100, 13'
	$textbox92.TabIndex = 1453
	$textbox92.TabStop = $False
	$textbox92.Text = '> Supported Version'
	#
	# buttonActivateMSOffice
	#
	$buttonActivateMSOffice.BackColor = 'ControlLight'
	$buttonActivateMSOffice.Font = 'Microsoft Sans Serif, 14pt'
	$buttonActivateMSOffice.Location = '282, 358'
	$buttonActivateMSOffice.Margin = '4, 3, 4, 3'
	$buttonActivateMSOffice.Name = 'buttonActivateMSOffice'
	$buttonActivateMSOffice.Size = '178, 53'
	$buttonActivateMSOffice.TabIndex = 1452
	$buttonActivateMSOffice.Text = 'Activate MS Office'
	$buttonActivateMSOffice.UseCompatibleTextRendering = $True
	$buttonActivateMSOffice.UseVisualStyleBackColor = $False
	$buttonActivateMSOffice.add_Click($buttonActivateMSOffice_Click)
	#
	# buttonActivateWindows
	#
	$buttonActivateWindows.BackColor = 'ControlLight'
	$buttonActivateWindows.Font = 'Microsoft Sans Serif, 14pt'
	$buttonActivateWindows.Location = '94, 358'
	$buttonActivateWindows.Margin = '4, 3, 4, 3'
	$buttonActivateWindows.Name = 'buttonActivateWindows'
	$buttonActivateWindows.Size = '178, 53'
	$buttonActivateWindows.TabIndex = 1451
	$buttonActivateWindows.Text = 'Activate Windows'
	$buttonActivateWindows.UseCompatibleTextRendering = $True
	$buttonActivateWindows.UseVisualStyleBackColor = $False
	$buttonActivateWindows.add_Click($buttonActivateWindows_Click)
	#
	# textbox91
	#
	$textbox91.AccessibleRole = 'None'
	$textbox91.BackColor = 'ControlLight'
	$textbox91.BorderStyle = 'None'
	$textbox91.Font = 'Microsoft Sans Serif, 20pt'
	$textbox91.Location = '214, 321'
	$textbox91.Margin = '4, 3, 4, 3'
	$textbox91.Name = 'textbox91'
	$textbox91.ReadOnly = $True
	$textbox91.Size = '127, 31'
	$textbox91.TabIndex = 1450
	$textbox91.TabStop = $False
	$textbox91.Text = 'Activation'
	#
	# WindowsUpdateReset
	#
	$WindowsUpdateReset.BackColor = 'ControlLight'
	$WindowsUpdateReset.Font = 'Microsoft Sans Serif, 12pt'
	$WindowsUpdateReset.Location = '541, 191'
	$WindowsUpdateReset.Margin = '4, 3, 4, 3'
	$WindowsUpdateReset.Name = 'WindowsUpdateReset'
	$WindowsUpdateReset.Size = '164, 53'
	$WindowsUpdateReset.TabIndex = 1432
	$WindowsUpdateReset.Text = 'Windows Update Reset'
	$WindowsUpdateReset.UseCompatibleTextRendering = $True
	$WindowsUpdateReset.UseVisualStyleBackColor = $False
	$WindowsUpdateReset.add_Click($WindowsUpdateReset_Click)
	#
	# Low
	#
	$Low.BackColor = 'ControlLight'
	$Low.Font = 'Microsoft Sans Serif, 16pt'
	$Low.Location = '107, 175'
	$Low.Margin = '4, 3, 4, 3'
	$Low.Name = 'Low'
	$Low.Size = '112, 41'
	$Low.TabIndex = 1449
	$Low.Text = 'Low'
	$Low.UseCompatibleTextRendering = $True
	$Low.UseVisualStyleBackColor = $False
	$Low.add_Click($Low_Click)
	#
	# textbox49
	#
	$textbox49.BackColor = 'ControlLight'
	$textbox49.BorderStyle = 'None'
	$textbox49.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox49.Location = '552, 250'
	$textbox49.Margin = '4, 3, 4, 3'
	$textbox49.Name = 'textbox49'
	$textbox49.ReadOnly = $True
	$textbox49.Size = '215, 13'
	$textbox49.TabIndex = 1448
	$textbox49.TabStop = $False
	$textbox49.Text = '> Security Updates:'
	#
	# EnableWindowsUpdates
	#
	$EnableWindowsUpdates.BackColor = 'ControlLight'
	$EnableWindowsUpdates.Font = 'Microsoft Sans Serif, 12pt'
	$EnableWindowsUpdates.Location = '541, 132'
	$EnableWindowsUpdates.Margin = '4, 3, 4, 3'
	$EnableWindowsUpdates.Name = 'EnableWindowsUpdates'
	$EnableWindowsUpdates.Size = '164, 53'
	$EnableWindowsUpdates.TabIndex = 1447
	$EnableWindowsUpdates.Text = 'Enable Windows Updates'
	$EnableWindowsUpdates.UseCompatibleTextRendering = $True
	$EnableWindowsUpdates.UseVisualStyleBackColor = $False
	$EnableWindowsUpdates.add_Click($EnableWindowsUpdates_Click)
	#
	# DisableWindowsUpdate
	#
	$DisableWindowsUpdate.BackColor = 'ControlLight'
	$DisableWindowsUpdate.Font = 'Microsoft Sans Serif, 12pt'
	$DisableWindowsUpdate.Location = '713, 132'
	$DisableWindowsUpdate.Margin = '4, 3, 4, 3'
	$DisableWindowsUpdate.Name = 'DisableWindowsUpdate'
	$DisableWindowsUpdate.Size = '164, 53'
	$DisableWindowsUpdate.TabIndex = 1446
	$DisableWindowsUpdate.Text = 'Disable Windows Updates'
	$DisableWindowsUpdate.UseCompatibleTextRendering = $True
	$DisableWindowsUpdate.UseVisualStyleBackColor = $False
	$DisableWindowsUpdate.add_Click($DisableWindowsUpdate_Click)
	#
	# textbox71
	#
	$textbox71.BackColor = 'ControlLight'
	$textbox71.BorderStyle = 'None'
	$textbox71.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox71.Location = '552, 307'
	$textbox71.Margin = '4, 3, 4, 3'
	$textbox71.Name = 'textbox71'
	$textbox71.ReadOnly = $True
	$textbox71.Size = '405, 13'
	$textbox71.TabIndex = 1445
	$textbox71.TabStop = $False
	$textbox71.Text = '- Set Maximum Active Time'
	#
	# textbox72
	#
	$textbox72.BackColor = 'ControlLight'
	$textbox72.BorderStyle = 'None'
	$textbox72.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox72.Location = '552, 288'
	$textbox72.Margin = '4, 3, 4, 3'
	$textbox72.Name = 'textbox72'
	$textbox72.ReadOnly = $True
	$textbox72.Size = '227, 13'
	$textbox72.TabIndex = 1444
	$textbox72.TabStop = $False
	$textbox72.Text = '- Delays Security Updates For 4 Days'
	#
	# textbox73
	#
	$textbox73.BackColor = 'ControlLight'
	$textbox73.BorderStyle = 'None'
	$textbox73.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox73.Location = '552, 269'
	$textbox73.Margin = '4, 3, 4, 3'
	$textbox73.Name = 'textbox73'
	$textbox73.ReadOnly = $True
	$textbox73.Size = '356, 13'
	$textbox73.TabIndex = 1443
	$textbox73.TabStop = $False
	$textbox73.Text = '- Delays Features Updats Up To 3 Years'
	#
	# DefaultSetting
	#
	$DefaultSetting.BackColor = 'ControlLight'
	$DefaultSetting.Font = 'Microsoft Sans Serif, 12pt'
	$DefaultSetting.Location = '541, 73'
	$DefaultSetting.Margin = '4, 3, 4, 3'
	$DefaultSetting.Name = 'DefaultSetting'
	$DefaultSetting.Size = '164, 53'
	$DefaultSetting.TabIndex = 1442
	$DefaultSetting.Text = 'Default Setting'
	$DefaultSetting.UseCompatibleTextRendering = $True
	$DefaultSetting.UseVisualStyleBackColor = $False
	$DefaultSetting.add_Click($DefaultSetting_Click)
	#
	# SecurityUpdatesOnly
	#
	$SecurityUpdatesOnly.BackColor = 'ControlLight'
	$SecurityUpdatesOnly.Font = 'Microsoft Sans Serif, 12pt'
	$SecurityUpdatesOnly.Location = '713, 73'
	$SecurityUpdatesOnly.Margin = '4, 3, 4, 3'
	$SecurityUpdatesOnly.Name = 'SecurityUpdatesOnly'
	$SecurityUpdatesOnly.Size = '164, 53'
	$SecurityUpdatesOnly.TabIndex = 1441
	$SecurityUpdatesOnly.Text = 'Security Updates Only'
	$SecurityUpdatesOnly.UseCompatibleTextRendering = $True
	$SecurityUpdatesOnly.UseVisualStyleBackColor = $False
	$SecurityUpdatesOnly.add_Click($SecurityUpdatesOnly_Click)
	#
	# textbox74
	#
	$textbox74.AccessibleRole = 'None'
	$textbox74.BackColor = 'ControlLight'
	$textbox74.BorderStyle = 'None'
	$textbox74.Font = 'Microsoft Sans Serif, 20pt'
	$textbox74.Location = '599, 36'
	$textbox74.Margin = '4, 3, 4, 3'
	$textbox74.Name = 'textbox74'
	$textbox74.ReadOnly = $True
	$textbox74.Size = '226, 31'
	$textbox74.TabIndex = 1440
	$textbox74.TabStop = $False
	$textbox74.Text = 'Windows Updates'
	#
	# RemoveMalware
	#
	$RemoveMalware.BackColor = 'ControlLight'
	$RemoveMalware.Font = 'Microsoft Sans Serif, 14pt'
	$RemoveMalware.Location = '288, 222'
	$RemoveMalware.Margin = '4, 3, 4, 3'
	$RemoveMalware.Name = 'RemoveMalware'
	$RemoveMalware.Size = '167, 55'
	$RemoveMalware.TabIndex = 1439
	$RemoveMalware.Text = 'Remove Malware'
	$RemoveMalware.UseCompatibleTextRendering = $True
	$RemoveMalware.UseVisualStyleBackColor = $False
	$RemoveMalware.add_Click($RemoveMalware_Click)
	#
	# RemoveViruses
	#
	$RemoveViruses.BackColor = 'ControlLight'
	$RemoveViruses.Font = 'Microsoft Sans Serif, 15pt'
	$RemoveViruses.Location = '80, 222'
	$RemoveViruses.Margin = '4, 3, 4, 3'
	$RemoveViruses.Name = 'RemoveViruses'
	$RemoveViruses.Size = '167, 55'
	$RemoveViruses.TabIndex = 1438
	$RemoveViruses.Text = 'Remove Viruses'
	$RemoveViruses.UseCompatibleTextRendering = $True
	$RemoveViruses.UseVisualStyleBackColor = $False
	$RemoveViruses.add_Click($RemoveViruses_Click)
	#
	# textbox62
	#
	$textbox62.AccessibleRole = 'None'
	$textbox62.BackColor = 'ControlLight'
	$textbox62.BorderStyle = 'None'
	$textbox62.Font = 'Microsoft Sans Serif, 20pt'
	$textbox62.Location = '214, 36'
	$textbox62.Margin = '4, 3, 4, 3'
	$textbox62.Name = 'textbox62'
	$textbox62.ReadOnly = $True
	$textbox62.Size = '157, 31'
	$textbox62.TabIndex = 1437
	$textbox62.TabStop = $False
	$textbox62.Text = 'Security'
	#
	# textbox63
	#
	$textbox63.BackColor = 'ControlLight'
	$textbox63.BorderStyle = 'None'
	$textbox63.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox63.Location = '312, 145'
	$textbox63.Margin = '4, 3, 4, 3'
	$textbox63.Name = 'textbox63'
	$textbox63.ReadOnly = $True
	$textbox63.Size = '102, 13'
	$textbox63.TabIndex = 1436
	$textbox63.TabStop = $False
	$textbox63.Text = '- And More...'
	#
	# textbox64
	#
	$textbox64.BackColor = 'ControlLight'
	$textbox64.BorderStyle = 'None'
	$textbox64.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox64.Location = '312, 126'
	$textbox64.Margin = '4, 3, 4, 3'
	$textbox64.Name = 'textbox64'
	$textbox64.ReadOnly = $True
	$textbox64.Size = '102, 13'
	$textbox64.TabIndex = 1435
	$textbox64.TabStop = $False
	$textbox64.Text = '- Enable SBM1 '
	#
	# textbox65
	#
	$textbox65.BackColor = 'ControlLight'
	$textbox65.BorderStyle = 'None'
	$textbox65.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox65.Location = '107, 107'
	$textbox65.Margin = '4, 3, 4, 3'
	$textbox65.Name = 'textbox65'
	$textbox65.ReadOnly = $True
	$textbox65.Size = '166, 13'
	$textbox65.TabIndex = 1434
	$textbox65.TabStop = $False
	$textbox65.Text = '- Disable Windows Defender'
	#
	# textbox66
	#
	$textbox66.BackColor = 'ControlLight'
	$textbox66.BorderStyle = 'None'
	$textbox66.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox66.Location = '312, 88'
	$textbox66.Margin = '4, 3, 4, 3'
	$textbox66.Name = 'textbox66'
	$textbox66.ReadOnly = $True
	$textbox66.Size = '98, 13'
	$textbox66.TabIndex = 1433
	$textbox66.TabStop = $False
	$textbox66.Text = '- Enable Firewall'
	#
	# textbox67
	#
	$textbox67.BackColor = 'ControlLight'
	$textbox67.BorderStyle = 'None'
	$textbox67.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox67.Location = '107, 145'
	$textbox67.Margin = '4, 3, 4, 3'
	$textbox67.Name = 'textbox67'
	$textbox67.ReadOnly = $True
	$textbox67.Size = '166, 13'
	$textbox67.TabIndex = 1432
	$textbox67.TabStop = $False
	$textbox67.Text = '- And More...'
	#
	# textbox68
	#
	$textbox68.BackColor = 'ControlLight'
	$textbox68.BorderStyle = 'None'
	$textbox68.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox68.Location = '106, 126'
	$textbox68.Margin = '4, 3, 4, 3'
	$textbox68.Name = 'textbox68'
	$textbox68.ReadOnly = $True
	$textbox68.Size = '166, 13'
	$textbox68.TabIndex = 1431
	$textbox68.TabStop = $False
	$textbox68.Text = '- Disable SBM1 '
	#
	# textbox69
	#
	$textbox69.BackColor = 'ControlLight'
	$textbox69.BorderStyle = 'None'
	$textbox69.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox69.Location = '312, 107'
	$textbox69.Margin = '4, 3, 4, 3'
	$textbox69.Name = 'textbox69'
	$textbox69.ReadOnly = $True
	$textbox69.Size = '143, 13'
	$textbox69.TabIndex = 1430
	$textbox69.TabStop = $False
	$textbox69.Text = '- Enable Windows Defender'
	#
	# textbox70
	#
	$textbox70.BackColor = 'ControlLight'
	$textbox70.BorderStyle = 'None'
	$textbox70.Font = 'Microsoft Sans Serif, 8.25pt'
	$textbox70.Location = '111, 88'
	$textbox70.Margin = '4, 3, 4, 3'
	$textbox70.Name = 'textbox70'
	$textbox70.ReadOnly = $True
	$textbox70.Size = '161, 13'
	$textbox70.TabIndex = 1429
	$textbox70.TabStop = $False
	$textbox70.Text = '- Disable Firewall'
	#
	# High
	#
	$High.BackColor = 'ControlLight'
	$High.Font = 'Microsoft Sans Serif, 16pt'
	$High.Location = '312, 175'
	$High.Margin = '4, 3, 4, 3'
	$High.Name = 'High'
	$High.Size = '112, 41'
	$High.TabIndex = 1428
	$High.Text = 'High'
	$High.UseCompatibleTextRendering = $True
	$High.UseVisualStyleBackColor = $False
	$High.add_Click($High_Click)
	#
	# tabpage8
	#
	$tabpage8.Controls.Add($buttonUnistallGooglePlaySt)
	$tabpage8.Controls.Add($buttonInstallGooglePlaySto)
	$tabpage8.Controls.Add($textbox104)
	$tabpage8.Controls.Add($buttonGithub)
	$tabpage8.Controls.Add($textbox76)
	$tabpage8.Controls.Add($textbox77)
	$tabpage8.Controls.Add($textbox78)
	$tabpage8.Controls.Add($textbox79)
	$tabpage8.Controls.Add($textbox80)
	$tabpage8.Controls.Add($textbox81)
	$tabpage8.Controls.Add($textbox83)
	$tabpage8.Controls.Add($textbox82)
	$tabpage8.Controls.Add($GeforceExperience)
	$tabpage8.Controls.Add($IntelDriverSupportAs)
	$tabpage8.Controls.Add($GoogleChrome)
	$tabpage8.Controls.Add($FireFox)
	$tabpage8.Controls.Add($Ventoy)
	$tabpage8.Controls.Add($7zip)
	$tabpage8.Controls.Add($StartIsBack)
	$tabpage8.Controls.Add($VLC)
	$tabpage8.Controls.Add($Blender)
	$tabpage8.Controls.Add($PaintNET)
	$tabpage8.Controls.Add($OpenShell)
	$tabpage8.Controls.Add($DirectX)
	$tabpage8.Controls.Add($Cleanmgr)
	$tabpage8.Controls.Add($VisualC)
	$tabpage8.Controls.Add($LibreOffice)
	$tabpage8.Controls.Add($XNAFramework40)
	$tabpage8.Controls.Add($GreenShot)
	$tabpage8.Controls.Add($OpenAl)
	$tabpage8.Controls.Add($balenaEtcher)
	$tabpage8.Controls.Add($Audacity)
	$tabpage8.Controls.Add($Java)
	$tabpage8.Controls.Add($Discord)
	$tabpage8.Controls.Add($PhysX)
	$tabpage8.Controls.Add($OBSStudio)
	$tabpage8.Controls.Add($Everything)
	$tabpage8.Controls.Add($AMDRyzenChipsetDrive)
	$tabpage8.Controls.Add($SumatraPDF)
	$tabpage8.Controls.Add($Rufus)
	$tabpage8.Controls.Add($FoxitReader)
	$tabpage8.Controls.Add($WinRAR)
	$tabpage8.Controls.Add($IDM)
	$tabpage8.Controls.Add($MediaPlayerClassic)
	$tabpage8.Controls.Add($GPUZ)
	$tabpage8.Controls.Add($PowerToys)
	$tabpage8.Controls.Add($CPUZ)
	$tabpage8.Controls.Add($WindowsTerminal)
	$tabpage8.Controls.Add($Vivaldi)
	$tabpage8.Controls.Add($Brave)
	$tabpage8.Controls.Add($Edge)
	$tabpage8.Controls.Add($BleachBit)
	$tabpage8.Controls.Add($Notepad)
	$tabpage8.Controls.Add($MicrosoftSilverLight)
	$tabpage8.Controls.Add($UTorrent)
	$tabpage8.Controls.Add($ImageGlass)
	$tabpage8.Controls.Add($CCleaner)
	$tabpage8.Controls.Add($VSCode)
	$tabpage8.Controls.Add($Gimp)
	$tabpage8.Controls.Add($VSCodium)
	$tabpage8.Controls.Add($ShareX)
	$tabpage8.Controls.Add($AdobeReaderDC)
	$tabpage8.Controls.Add($Opera)
	$tabpage8.Controls.Add($IrfanView)
	$tabpage8.BackColor = 'ControlLight'
	$tabpage8.Location = '4, 22'
	$tabpage8.Name = 'tabpage8'
	$tabpage8.Size = '934, 908'
	$tabpage8.TabIndex = 8
	$tabpage8.Text = 'Program Installation'
	#
	# buttonUnistallGooglePlaySt
	#
	$buttonUnistallGooglePlaySt.BackColor = 'ControlLight'
	$buttonUnistallGooglePlaySt.Font = 'Microsoft Sans Serif, 12pt'
	$buttonUnistallGooglePlaySt.Location = '232, 638'
	$buttonUnistallGooglePlaySt.Margin = '4, 3, 4, 3'
	$buttonUnistallGooglePlaySt.Name = 'buttonUnistallGooglePlaySt'
	$buttonUnistallGooglePlaySt.Size = '175, 54'
	$buttonUnistallGooglePlaySt.TabIndex = 1493
	$buttonUnistallGooglePlaySt.Text = 'Unistall Google Play Store'
	$buttonUnistallGooglePlaySt.UseCompatibleTextRendering = $True
	$buttonUnistallGooglePlaySt.UseVisualStyleBackColor = $False
	$buttonUnistallGooglePlaySt.add_Click($buttonUnistallGooglePlaySt_Click)
	#
	# buttonInstallGooglePlaySto
	#
	$buttonInstallGooglePlaySto.BackColor = 'ControlLight'
	$buttonInstallGooglePlaySto.Font = 'Microsoft Sans Serif, 12pt'
	$buttonInstallGooglePlaySto.Location = '49, 638'
	$buttonInstallGooglePlaySto.Margin = '4, 3, 4, 3'
	$buttonInstallGooglePlaySto.Name = 'buttonInstallGooglePlaySto'
	$buttonInstallGooglePlaySto.Size = '175, 54'
	$buttonInstallGooglePlaySto.TabIndex = 1492
	$buttonInstallGooglePlaySto.Text = 'Install Google Play Store'
	$buttonInstallGooglePlaySto.UseCompatibleTextRendering = $True
	$buttonInstallGooglePlaySto.UseVisualStyleBackColor = $False
	$buttonInstallGooglePlaySto.add_Click($buttonInstallGooglePlaySto_Click)
	#
	# textbox104
	#
	$textbox104.BackColor = 'ControlLight'
	$textbox104.BorderStyle = 'None'
	$textbox104.Font = 'Arial, 9pt, style=Bold'
	$textbox104.Location = '175, 618'
	$textbox104.Margin = '4, 3, 4, 3'
	$textbox104.Name = 'textbox104'
	$textbox104.ReadOnly = $True
	$textbox104.Size = '101, 14'
	$textbox104.TabIndex = 1491
	$textbox104.TabStop = $False
	$textbox104.Text = 'Windows 11 Only'
	#
	# buttonGithub
	#
	$buttonGithub.BackColor = 'ControlLight'
	$buttonGithub.Font = 'Microsoft Sans Serif, 12pt'
	$buttonGithub.Location = '184, 520'
	$buttonGithub.Margin = '4, 3, 4, 3'
	$buttonGithub.Name = 'buttonGithub'
	$buttonGithub.Size = '132, 48'
	$buttonGithub.TabIndex = 1490
	$buttonGithub.Text = 'Github'
	$buttonGithub.UseCompatibleTextRendering = $True
	$buttonGithub.UseVisualStyleBackColor = $False
	$buttonGithub.add_Click($buttonGithub_Click)
	#
	# textbox76
	#
	$textbox76.BackColor = 'ControlLight'
	$textbox76.BorderStyle = 'None'
	$textbox76.Location = '529, 37'
	$textbox76.Margin = '4, 3, 4, 3'
	$textbox76.Name = 'textbox76'
	$textbox76.ReadOnly = $True
	$textbox76.Size = '139, 13'
	$textbox76.TabIndex = 1450
	$textbox76.TabStop = $False
	$textbox76.Text = '(Required Internet To Install)'
	#
	# textbox77
	#
	$textbox77.AccessibleRole = 'None'
	$textbox77.BackColor = 'ControlLight'
	$textbox77.BorderStyle = 'None'
	$textbox77.Font = 'Microsoft Sans Serif, 18pt'
	$textbox77.Location = '314, 25'
	$textbox77.Margin = '4, 3, 4, 3'
	$textbox77.Name = 'textbox77'
	$textbox77.ReadOnly = $True
	$textbox77.Size = '258, 28'
	$textbox77.TabIndex = 1430
	$textbox77.TabStop = $False
	$textbox77.Text = 'Program Installation'
	#
	# textbox78
	#
	$textbox78.BackColor = 'ControlLight'
	$textbox78.BorderStyle = 'None'
	$textbox78.Font = 'Arial, 9pt, style=Bold'
	$textbox78.Location = '49, 384'
	$textbox78.Margin = '4, 3, 4, 3'
	$textbox78.Name = 'textbox78'
	$textbox78.ReadOnly = $True
	$textbox78.Size = '99, 14'
	$textbox78.TabIndex = 1487
	$textbox78.TabStop = $False
	$textbox78.Text = 'Driver Updates'
	#
	# textbox79
	#
	$textbox79.BackColor = 'ControlLight'
	$textbox79.BorderStyle = 'None'
	$textbox79.Font = 'Arial, 9pt, style=Bold'
	$textbox79.Location = '787, 78'
	$textbox79.Margin = '4, 3, 4, 3'
	$textbox79.Name = 'textbox79'
	$textbox79.ReadOnly = $True
	$textbox79.Size = '95, 14'
	$textbox79.TabIndex = 1466
	$textbox79.TabStop = $False
	$textbox79.Text = 'Game Support'
	#
	# textbox80
	#
	$textbox80.BackColor = 'ControlLight'
	$textbox80.BorderStyle = 'None'
	$textbox80.Font = 'Arial, 10pt, style=Bold'
	$textbox80.Location = '57, 77'
	$textbox80.Margin = '4, 3, 4, 3'
	$textbox80.Name = 'textbox80'
	$textbox80.ReadOnly = $True
	$textbox80.Size = '103, 16'
	$textbox80.TabIndex = 1453
	$textbox80.TabStop = $False
	$textbox80.Text = 'Web Browsers'
	#
	# textbox81
	#
	$textbox81.BackColor = 'ControlLight'
	$textbox81.BorderStyle = 'None'
	$textbox81.Font = 'Arial, 10pt, style=Bold'
	$textbox81.Location = '288, 76'
	$textbox81.Margin = '4, 3, 4, 3'
	$textbox81.Name = 'textbox81'
	$textbox81.ReadOnly = $True
	$textbox81.Size = '62, 16'
	$textbox81.TabIndex = 1454
	$textbox81.TabStop = $False
	$textbox81.Text = 'Utilities'
	#
	# textbox83
	#
	$textbox83.BackColor = 'ControlLight'
	$textbox83.BorderStyle = 'None'
	$textbox83.Font = 'Arial, 9pt, style=Bold'
	$textbox83.Location = '525, 78'
	$textbox83.Margin = '4, 3, 4, 3'
	$textbox83.Name = 'textbox83'
	$textbox83.ReadOnly = $True
	$textbox83.Size = '181, 14'
	$textbox83.TabIndex = 1455
	$textbox83.TabStop = $False
	$textbox83.Text = 'Video, Audio And Image Tools'
	#
	# textbox82
	#
	$textbox82.BackColor = 'ControlLight'
	$textbox82.BorderStyle = 'None'
	$textbox82.Font = 'Arial, 9pt, style=Bold'
	$textbox82.Location = '619, 404'
	$textbox82.Margin = '4, 3, 4, 3'
	$textbox82.Name = 'textbox82'
	$textbox82.ReadOnly = $True
	$textbox82.Size = '141, 14'
	$textbox82.TabIndex = 1460
	$textbox82.TabStop = $False
	$textbox82.Text = 'Documment Tools'
	#
	# GeforceExperience
	#
	$GeforceExperience.BackColor = 'ControlLight'
	$GeforceExperience.Font = 'Microsoft Sans Serif, 13pt'
	$GeforceExperience.Location = '18, 514'
	$GeforceExperience.Margin = '4, 3, 4, 3'
	$GeforceExperience.Name = 'GeforceExperience'
	$GeforceExperience.Size = '151, 49'
	$GeforceExperience.TabIndex = 1489
	$GeforceExperience.Text = 'Geforce Experience'
	$GeforceExperience.UseCompatibleTextRendering = $True
	$GeforceExperience.UseVisualStyleBackColor = $False
	$GeforceExperience.add_Click($GeforceExperience_Click)
	#
	# IntelDriverSupportAs
	#
	$IntelDriverSupportAs.BackColor = 'ControlLight'
	$IntelDriverSupportAs.Font = 'Microsoft Sans Serif, 13pt'
	$IntelDriverSupportAs.Location = '18, 459'
	$IntelDriverSupportAs.Margin = '4, 3, 4, 3'
	$IntelDriverSupportAs.Name = 'IntelDriverSupportAs'
	$IntelDriverSupportAs.Size = '151, 49'
	$IntelDriverSupportAs.TabIndex = 1488
	$IntelDriverSupportAs.Text = 'Intel Driver Support Assitant'
	$IntelDriverSupportAs.UseCompatibleTextRendering = $True
	$IntelDriverSupportAs.UseVisualStyleBackColor = $False
	$IntelDriverSupportAs.add_Click($IntelDriverSupportAs_Click)
	#
	# GoogleChrome
	#
	$GoogleChrome.BackColor = 'ControlLight'
	$GoogleChrome.Font = 'Microsoft Sans Serif, 13pt'
	$GoogleChrome.Location = '17, 145'
	$GoogleChrome.Margin = '4, 3, 4, 3'
	$GoogleChrome.Name = 'GoogleChrome'
	$GoogleChrome.Size = '159, 40'
	$GoogleChrome.TabIndex = 1431
	$GoogleChrome.Text = 'Google Chrome'
	$GoogleChrome.UseCompatibleTextRendering = $True
	$GoogleChrome.UseVisualStyleBackColor = $False
	$GoogleChrome.add_Click($GoogleChrome_Click)
	#
	# FireFox
	#
	$FireFox.BackColor = 'ControlLight'
	$FireFox.Font = 'Microsoft Sans Serif, 13pt'
	$FireFox.Location = '17, 99'
	$FireFox.Margin = '4, 3, 4, 3'
	$FireFox.Name = 'FireFox'
	$FireFox.Size = '159, 40'
	$FireFox.TabIndex = 1432
	$FireFox.Text = 'Firefox'
	$FireFox.UseCompatibleTextRendering = $True
	$FireFox.UseVisualStyleBackColor = $False
	$FireFox.add_Click($FireFox_Click)
	#
	# Ventoy
	#
	$Ventoy.BackColor = 'ControlLight'
	$Ventoy.Font = 'Microsoft Sans Serif, 12pt'
	$Ventoy.Location = '184, 420'
	$Ventoy.Margin = '4, 3, 4, 3'
	$Ventoy.Name = 'Ventoy'
	$Ventoy.Size = '132, 40'
	$Ventoy.TabIndex = 1486
	$Ventoy.Text = 'Ventoy'
	$Ventoy.UseCompatibleTextRendering = $True
	$Ventoy.UseVisualStyleBackColor = $False
	$Ventoy.add_Click($Ventoy_Click)
	#
	# 7zip
	#
	$7zip.BackColor = 'ControlLight'
	$7zip.Font = 'Microsoft Sans Serif, 12pt'
	$7zip.Location = '324, 145'
	$7zip.Margin = '4, 3, 4, 3'
	$7zip.Name = '7zip'
	$7zip.Size = '132, 43'
	$7zip.TabIndex = 1433
	$7zip.Text = '7-Zip'
	$7zip.UseCompatibleTextRendering = $True
	$7zip.UseVisualStyleBackColor = $False
	$7zip.add_Click($7zip_Click)
	#
	# StartIsBack
	#
	$StartIsBack.BackColor = 'ControlLight'
	$StartIsBack.Font = 'Microsoft Sans Serif, 11.7pt'
	$StartIsBack.Location = '324, 373'
	$StartIsBack.Margin = '4, 3, 4, 3'
	$StartIsBack.Name = 'StartIsBack'
	$StartIsBack.Size = '132, 40'
	$StartIsBack.TabIndex = 1485
	$StartIsBack.Text = 'StartIsBack'
	$StartIsBack.UseCompatibleTextRendering = $True
	$StartIsBack.UseVisualStyleBackColor = $False
	$StartIsBack.add_Click($StartIsBack_Click)
	#
	# VLC
	#
	$VLC.BackColor = 'ControlLight'
	$VLC.Font = 'Microsoft Sans Serif, 12pt'
	$VLC.Location = '468, 98'
	$VLC.Margin = '4, 3, 4, 3'
	$VLC.Name = 'VLC'
	$VLC.Size = '132, 43'
	$VLC.TabIndex = 1434
	$VLC.Text = 'VLC '
	$VLC.UseCompatibleTextRendering = $True
	$VLC.UseVisualStyleBackColor = $False
	$VLC.add_Click($VLC_Click)
	#
	# Blender
	#
	$Blender.BackColor = 'ControlLight'
	$Blender.Font = 'Microsoft Sans Serif, 12pt'
	$Blender.Location = '608, 335'
	$Blender.Margin = '4, 3, 4, 3'
	$Blender.Name = 'Blender'
	$Blender.Size = '132, 43'
	$Blender.TabIndex = 1484
	$Blender.Text = 'Blender'
	$Blender.UseCompatibleTextRendering = $True
	$Blender.UseVisualStyleBackColor = $False
	$Blender.add_Click($Blender_Click)
	#
	# PaintNET
	#
	$PaintNET.BackColor = 'ControlLight'
	$PaintNET.Font = 'Microsoft Sans Serif, 12pt'
	$PaintNET.Location = '468, 237'
	$PaintNET.Margin = '4, 3, 4, 3'
	$PaintNET.Name = 'PaintNET'
	$PaintNET.Size = '132, 43'
	$PaintNET.TabIndex = 1435
	$PaintNET.Text = 'Paint.NET'
	$PaintNET.UseCompatibleTextRendering = $True
	$PaintNET.UseVisualStyleBackColor = $False
	$PaintNET.add_Click($PaintNET_Click)
	#
	# OpenShell
	#
	$OpenShell.BackColor = 'ControlLight'
	$OpenShell.Font = 'Microsoft Sans Serif, 12pt'
	$OpenShell.Location = '184, 374'
	$OpenShell.Margin = '4, 3, 4, 3'
	$OpenShell.Name = 'OpenShell'
	$OpenShell.Size = '132, 40'
	$OpenShell.TabIndex = 1483
	$OpenShell.Text = 'Openshell'
	$OpenShell.UseCompatibleTextRendering = $True
	$OpenShell.UseVisualStyleBackColor = $False
	$OpenShell.add_Click($OpenShell_Click)
	#
	# DirectX
	#
	$DirectX.BackColor = 'ControlLight'
	$DirectX.Font = 'Microsoft Sans Serif, 12pt'
	$DirectX.Location = '758, 217'
	$DirectX.Margin = '4, 3, 4, 3'
	$DirectX.Name = 'DirectX'
	$DirectX.Size = '150, 34'
	$DirectX.TabIndex = 1436
	$DirectX.Text = 'DirectX'
	$DirectX.UseCompatibleTextRendering = $True
	$DirectX.UseVisualStyleBackColor = $False
	$DirectX.add_Click($DirectX_Click)
	#
	# Cleanmgr
	#
	$Cleanmgr.BackColor = 'ControlLight'
	$Cleanmgr.Font = 'Microsoft Sans Serif, 12pt'
	$Cleanmgr.Location = '184, 466'
	$Cleanmgr.Margin = '4, 3, 4, 3'
	$Cleanmgr.Name = 'Cleanmgr'
	$Cleanmgr.Size = '132, 48'
	$Cleanmgr.TabIndex = 1482
	$Cleanmgr.Text = 'Cleanmgr+'
	$Cleanmgr.UseCompatibleTextRendering = $True
	$Cleanmgr.UseVisualStyleBackColor = $False
	$Cleanmgr.add_Click($Cleanmgr_Click)
	#
	# VisualC
	#
	$VisualC.BackColor = 'ControlLight'
	$VisualC.Font = 'Microsoft Sans Serif, 12pt'
	$VisualC.Location = '758, 177'
	$VisualC.Margin = '4, 3, 4, 3'
	$VisualC.Name = 'VisualC'
	$VisualC.Size = '150, 36'
	$VisualC.TabIndex = 1437
	$VisualC.Text = 'Visual C++'
	$VisualC.UseCompatibleTextRendering = $True
	$VisualC.UseVisualStyleBackColor = $False
	$VisualC.add_Click($VisualC_Click)
	#
	# LibreOffice
	#
	$LibreOffice.BackColor = 'ControlLight'
	$LibreOffice.Font = 'Microsoft Sans Serif, 11.8pt'
	$LibreOffice.Location = '682, 424'
	$LibreOffice.Margin = '4, 3, 4, 3'
	$LibreOffice.Name = 'LibreOffice'
	$LibreOffice.Size = '140, 49'
	$LibreOffice.TabIndex = 1481
	$LibreOffice.Text = 'LibreOffice'
	$LibreOffice.UseCompatibleTextRendering = $True
	$LibreOffice.UseVisualStyleBackColor = $False
	$LibreOffice.add_Click($LibreOffice_Click)
	#
	# XNAFramework40
	#
	$XNAFramework40.BackColor = 'ControlLight'
	$XNAFramework40.Font = 'Microsoft Sans Serif, 11pt'
	$XNAFramework40.Location = '758, 98'
	$XNAFramework40.Margin = '4, 3, 4, 3'
	$XNAFramework40.Name = 'XNAFramework40'
	$XNAFramework40.Size = '150, 38'
	$XNAFramework40.TabIndex = 1438
	$XNAFramework40.Text = 'XNA Framework 4.0'
	$XNAFramework40.UseCompatibleTextRendering = $True
	$XNAFramework40.UseVisualStyleBackColor = $False
	$XNAFramework40.add_Click($XNAFramework40_Click)
	#
	# GreenShot
	#
	$GreenShot.BackColor = 'ControlLight'
	$GreenShot.Font = 'Microsoft Sans Serif, 12pt'
	$GreenShot.Location = '468, 286'
	$GreenShot.Margin = '4, 3, 4, 3'
	$GreenShot.Name = 'GreenShot'
	$GreenShot.Size = '132, 43'
	$GreenShot.TabIndex = 1480
	$GreenShot.Text = 'GreenShot'
	$GreenShot.UseCompatibleTextRendering = $True
	$GreenShot.UseVisualStyleBackColor = $False
	$GreenShot.add_Click($GreenShot_Click)
	#
	# OpenAl
	#
	$OpenAl.BackColor = 'ControlLight'
	$OpenAl.Font = 'Microsoft Sans Serif, 12pt'
	$OpenAl.Location = '758, 142'
	$OpenAl.Margin = '4, 3, 4, 3'
	$OpenAl.Name = 'OpenAl'
	$OpenAl.Size = '150, 31'
	$OpenAl.TabIndex = 1439
	$OpenAl.Text = 'OpenAL'
	$OpenAl.UseCompatibleTextRendering = $True
	$OpenAl.UseVisualStyleBackColor = $False
	$OpenAl.add_Click($OpenAl_Click)
	#
	# balenaEtcher
	#
	$balenaEtcher.BackColor = 'ControlLight'
	$balenaEtcher.Font = 'Microsoft Sans Serif, 12pt'
	$balenaEtcher.Location = '324, 420'
	$balenaEtcher.Margin = '4, 3, 4, 3'
	$balenaEtcher.Name = 'balenaEtcher'
	$balenaEtcher.Size = '132, 40'
	$balenaEtcher.TabIndex = 1479
	$balenaEtcher.Text = 'balenaEtcher'
	$balenaEtcher.UseCompatibleTextRendering = $True
	$balenaEtcher.UseVisualStyleBackColor = $False
	$balenaEtcher.add_Click($balenaEtcher_Click)
	#
	# Audacity
	#
	$Audacity.BackColor = 'ControlLight'
	$Audacity.Font = 'Microsoft Sans Serif, 12.3pt'
	$Audacity.Location = '608, 237'
	$Audacity.Margin = '4, 3, 4, 3'
	$Audacity.Name = 'Audacity'
	$Audacity.Size = '132, 43'
	$Audacity.TabIndex = 1440
	$Audacity.Text = 'Audacity'
	$Audacity.UseCompatibleTextRendering = $True
	$Audacity.UseVisualStyleBackColor = $False
	$Audacity.add_Click($Audacity_Click)
	#
	# Java
	#
	$Java.BackColor = 'ControlLight'
	$Java.Font = 'Microsoft Sans Serif, 12pt'
	$Java.Location = '758, 333'
	$Java.Margin = '4, 3, 4, 3'
	$Java.Name = 'Java'
	$Java.Size = '150, 32'
	$Java.TabIndex = 1478
	$Java.Text = 'Java '
	$Java.UseCompatibleTextRendering = $True
	$Java.UseVisualStyleBackColor = $False
	$Java.add_Click($Java_Click)
	#
	# Discord
	#
	$Discord.BackColor = 'ControlLight'
	$Discord.Font = 'Microsoft Sans Serif, 12.3pt'
	$Discord.Location = '184, 283'
	$Discord.Margin = '4, 3, 4, 3'
	$Discord.Name = 'Discord'
	$Discord.Size = '132, 39'
	$Discord.TabIndex = 1441
	$Discord.Text = 'Discord'
	$Discord.UseCompatibleTextRendering = $True
	$Discord.UseVisualStyleBackColor = $False
	$Discord.add_Click($Discord_Click)
	#
	# PhysX
	#
	$PhysX.BackColor = 'ControlLight'
	$PhysX.Font = 'Microsoft Sans Serif, 12pt'
	$PhysX.Location = '758, 295'
	$PhysX.Margin = '4, 3, 4, 3'
	$PhysX.Name = 'PhysX'
	$PhysX.Size = '150, 32'
	$PhysX.TabIndex = 1477
	$PhysX.Text = 'PhysX'
	$PhysX.UseCompatibleTextRendering = $True
	$PhysX.UseVisualStyleBackColor = $False
	$PhysX.add_Click($PhysX_Click)
	#
	# OBSStudio
	#
	$OBSStudio.BackColor = 'ControlLight'
	$OBSStudio.Font = 'Microsoft Sans Serif, 12pt'
	$OBSStudio.Location = '608, 286'
	$OBSStudio.Margin = '4, 3, 4, 3'
	$OBSStudio.Name = 'OBSStudio'
	$OBSStudio.Size = '132, 43'
	$OBSStudio.TabIndex = 1442
	$OBSStudio.Text = 'OBS Studio'
	$OBSStudio.UseCompatibleTextRendering = $True
	$OBSStudio.UseVisualStyleBackColor = $False
	$OBSStudio.add_Click($OBSStudio_Click)
	#
	# Everything
	#
	$Everything.BackColor = 'ControlLight'
	$Everything.Font = 'Microsoft Sans Serif, 11.9pt'
	$Everything.Location = '324, 283'
	$Everything.Margin = '4, 3, 4, 3'
	$Everything.Name = 'Everything'
	$Everything.Size = '132, 39'
	$Everything.TabIndex = 1476
	$Everything.Text = 'Everything '
	$Everything.UseCompatibleTextRendering = $True
	$Everything.UseVisualStyleBackColor = $False
	$Everything.add_Click($Everything_Click)
	#
	# AMDRyzenChipsetDrive
	#
	$AMDRyzenChipsetDrive.BackColor = 'ControlLight'
	$AMDRyzenChipsetDrive.Font = 'Microsoft Sans Serif, 12pt'
	$AMDRyzenChipsetDrive.Location = '18, 404'
	$AMDRyzenChipsetDrive.Margin = '4, 3, 4, 3'
	$AMDRyzenChipsetDrive.Name = 'AMDRyzenChipsetDrive'
	$AMDRyzenChipsetDrive.Size = '150, 49'
	$AMDRyzenChipsetDrive.TabIndex = 1443
	$AMDRyzenChipsetDrive.Text = 'AMD Ryzen Chipset Drivers'
	$AMDRyzenChipsetDrive.UseCompatibleTextRendering = $True
	$AMDRyzenChipsetDrive.UseVisualStyleBackColor = $False
	$AMDRyzenChipsetDrive.add_Click($AMDRyzenChipsetDrive_Click)
	#
	# SumatraPDF
	#
	$SumatraPDF.BackColor = 'ControlLight'
	$SumatraPDF.Font = 'Microsoft Sans Serif, 11.5pt'
	$SumatraPDF.Location = '534, 479'
	$SumatraPDF.Margin = '4, 3, 4, 3'
	$SumatraPDF.Name = 'SumatraPDF'
	$SumatraPDF.Size = '140, 49'
	$SumatraPDF.TabIndex = 1475
	$SumatraPDF.Text = 'Sumatra PDF'
	$SumatraPDF.UseCompatibleTextRendering = $True
	$SumatraPDF.UseVisualStyleBackColor = $False
	$SumatraPDF.add_Click($SumatraPDF_Click)
	#
	# Rufus
	#
	$Rufus.BackColor = 'ControlLight'
	$Rufus.Font = 'Microsoft Sans Serif, 12pt'
	$Rufus.Location = '324, 466'
	$Rufus.Margin = '4, 3, 4, 3'
	$Rufus.Name = 'Rufus'
	$Rufus.Size = '132, 48'
	$Rufus.TabIndex = 1444
	$Rufus.Text = 'Rufus'
	$Rufus.UseCompatibleTextRendering = $True
	$Rufus.UseVisualStyleBackColor = $False
	$Rufus.add_Click($Rufus_Click)
	#
	# FoxitReader
	#
	$FoxitReader.BackColor = 'ControlLight'
	$FoxitReader.Font = 'Microsoft Sans Serif, 11.8pt'
	$FoxitReader.Location = '534, 534'
	$FoxitReader.Margin = '4, 3, 4, 3'
	$FoxitReader.Name = 'FoxitReader'
	$FoxitReader.Size = '140, 49'
	$FoxitReader.TabIndex = 1474
	$FoxitReader.Text = 'Foxit Reader'
	$FoxitReader.UseCompatibleTextRendering = $True
	$FoxitReader.UseVisualStyleBackColor = $False
	$FoxitReader.add_Click($FoxitReader_Click)
	#
	# WinRAR
	#
	$WinRAR.BackColor = 'ControlLight'
	$WinRAR.Font = 'Microsoft Sans Serif, 12pt'
	$WinRAR.Location = '184, 243'
	$WinRAR.Margin = '4, 3, 4, 3'
	$WinRAR.Name = 'WinRAR'
	$WinRAR.Size = '132, 39'
	$WinRAR.TabIndex = 1445
	$WinRAR.Text = 'WinRAR'
	$WinRAR.UseCompatibleTextRendering = $True
	$WinRAR.UseVisualStyleBackColor = $False
	$WinRAR.add_Click($WinRAR_Click)
	#
	# IDM
	#
	$IDM.BackColor = 'ControlLight'
	$IDM.Font = 'Microsoft Sans Serif, 12pt'
	$IDM.Location = '324, 328'
	$IDM.Margin = '4, 3, 4, 3'
	$IDM.Name = 'IDM'
	$IDM.Size = '132, 39'
	$IDM.TabIndex = 1473
	$IDM.Text = 'IDM'
	$IDM.UseCompatibleTextRendering = $True
	$IDM.UseVisualStyleBackColor = $False
	$IDM.add_Click($IDM_Click)
	#
	# MediaPlayerClassic
	#
	$MediaPlayerClassic.BackColor = 'ControlLight'
	$MediaPlayerClassic.Font = 'Microsoft Sans Serif, 12pt'
	$MediaPlayerClassic.Location = '608, 147'
	$MediaPlayerClassic.Margin = '4, 3, 4, 3'
	$MediaPlayerClassic.Name = 'MediaPlayerClassic'
	$MediaPlayerClassic.Size = '132, 44'
	$MediaPlayerClassic.TabIndex = 1446
	$MediaPlayerClassic.Text = 'Media Player Classic'
	$MediaPlayerClassic.UseCompatibleTextRendering = $True
	$MediaPlayerClassic.UseVisualStyleBackColor = $False
	$MediaPlayerClassic.add_Click($MediaPlayerClassic_Click)
	#
	# GPUZ
	#
	$GPUZ.BackColor = 'ControlLight'
	$GPUZ.Font = 'Microsoft Sans Serif, 12pt'
	$GPUZ.Location = '324, 243'
	$GPUZ.Margin = '4, 3, 4, 3'
	$GPUZ.Name = 'GPUZ'
	$GPUZ.Size = '132, 39'
	$GPUZ.TabIndex = 1472
	$GPUZ.Text = 'GPU-Z'
	$GPUZ.UseCompatibleTextRendering = $True
	$GPUZ.UseVisualStyleBackColor = $False
	$GPUZ.add_Click($GPUZ_Click)
	#
	# PowerToys
	#
	$PowerToys.BackColor = 'ControlLight'
	$PowerToys.Font = 'Microsoft Sans Serif, 12pt'
	$PowerToys.Location = '324, 96'
	$PowerToys.Margin = '4, 3, 4, 3'
	$PowerToys.Name = 'PowerToys'
	$PowerToys.Size = '132, 43'
	$PowerToys.TabIndex = 1447
	$PowerToys.Text = 'PowerToys'
	$PowerToys.UseCompatibleTextRendering = $True
	$PowerToys.UseVisualStyleBackColor = $False
	$PowerToys.add_Click($PowerToys_Click)
	#
	# CPUZ
	#
	$CPUZ.BackColor = 'ControlLight'
	$CPUZ.Font = 'Microsoft Sans Serif, 13pt'
	$CPUZ.Location = '184, 328'
	$CPUZ.Margin = '4, 3, 4, 3'
	$CPUZ.Name = 'CPUZ'
	$CPUZ.Size = '132, 40'
	$CPUZ.TabIndex = 1471
	$CPUZ.Text = 'CPU-Z'
	$CPUZ.UseCompatibleTextRendering = $True
	$CPUZ.UseVisualStyleBackColor = $False
	$CPUZ.add_Click($CPUZ_Click)
	#
	# WindowsTerminal
	#
	$WindowsTerminal.BackColor = 'ControlLight'
	$WindowsTerminal.Font = 'Microsoft Sans Serif, 12pt'
	$WindowsTerminal.Location = '184, 145'
	$WindowsTerminal.Margin = '4, 3, 4, 3'
	$WindowsTerminal.Name = 'WindowsTerminal'
	$WindowsTerminal.Size = '132, 46'
	$WindowsTerminal.TabIndex = 1448
	$WindowsTerminal.Text = 'Windows Terminal'
	$WindowsTerminal.UseCompatibleTextRendering = $True
	$WindowsTerminal.UseVisualStyleBackColor = $False
	$WindowsTerminal.add_Click($WindowsTerminal_Click)
	#
	# Vivaldi
	#
	$Vivaldi.BackColor = 'ControlLight'
	$Vivaldi.Font = 'Microsoft Sans Serif, 12pt'
	$Vivaldi.Location = '17, 327'
	$Vivaldi.Margin = '4, 3, 4, 3'
	$Vivaldi.Name = 'Vivaldi'
	$Vivaldi.Size = '159, 40'
	$Vivaldi.TabIndex = 1470
	$Vivaldi.Text = 'Vivaldi'
	$Vivaldi.UseCompatibleTextRendering = $True
	$Vivaldi.UseVisualStyleBackColor = $False
	$Vivaldi.add_Click($Vivaldi_Click)
	#
	# Brave
	#
	$Brave.BackColor = 'ControlLight'
	$Brave.Font = 'Microsoft Sans Serif, 12pt'
	$Brave.Location = '17, 191'
	$Brave.Margin = '4, 3, 4, 3'
	$Brave.Name = 'Brave'
	$Brave.Size = '159, 40'
	$Brave.TabIndex = 1449
	$Brave.Text = 'Brave'
	$Brave.UseCompatibleTextRendering = $True
	$Brave.UseVisualStyleBackColor = $False
	$Brave.add_Click($Brave_Click)
	#
	# Edge
	#
	$Edge.BackColor = 'ControlLight'
	$Edge.Font = 'Microsoft Sans Serif, 12pt'
	$Edge.Location = '17, 281'
	$Edge.Margin = '4, 3, 4, 3'
	$Edge.Name = 'Edge'
	$Edge.Size = '159, 40'
	$Edge.TabIndex = 1469
	$Edge.Text = 'Edge'
	$Edge.UseCompatibleTextRendering = $True
	$Edge.UseVisualStyleBackColor = $False
	$Edge.add_Click($Edge_Click)
	#
	# BleachBit
	#
	$BleachBit.BackColor = 'ControlLight'
	$BleachBit.Font = 'Microsoft Sans Serif, 12pt'
	$BleachBit.Location = '324, 194'
	$BleachBit.Margin = '4, 3, 4, 3'
	$BleachBit.Name = 'BleachBit'
	$BleachBit.Size = '132, 43'
	$BleachBit.TabIndex = 1468
	$BleachBit.Text = 'BleachBit'
	$BleachBit.UseCompatibleTextRendering = $True
	$BleachBit.UseVisualStyleBackColor = $False
	$BleachBit.add_Click($BleachBit_Click)
	#
	# Notepad
	#
	$Notepad.BackColor = 'ControlLight'
	$Notepad.Font = 'Microsoft Sans Serif, 11.9pt'
	$Notepad.Location = '534, 424'
	$Notepad.Margin = '4, 3, 4, 3'
	$Notepad.Name = 'Notepad'
	$Notepad.Size = '140, 49'
	$Notepad.TabIndex = 1451
	$Notepad.Text = 'Notepad++'
	$Notepad.UseCompatibleTextRendering = $True
	$Notepad.UseVisualStyleBackColor = $False
	$Notepad.add_Click($Notepad_Click)
	#
	# MicrosoftSilverLight
	#
	$MicrosoftSilverLight.BackColor = 'ControlLight'
	$MicrosoftSilverLight.Font = 'Microsoft Sans Serif, 11.2pt'
	$MicrosoftSilverLight.Location = '758, 253'
	$MicrosoftSilverLight.Margin = '4, 3, 4, 3'
	$MicrosoftSilverLight.Name = 'MicrosoftSilverLight'
	$MicrosoftSilverLight.Size = '150, 36'
	$MicrosoftSilverLight.TabIndex = 1467
	$MicrosoftSilverLight.Text = 'Microsoft Silverlight'
	$MicrosoftSilverLight.UseCompatibleTextRendering = $True
	$MicrosoftSilverLight.UseVisualStyleBackColor = $False
	$MicrosoftSilverLight.add_Click($MicrosoftSilverLight_Click)
	#
	# UTorrent
	#
	$UTorrent.BackColor = 'ControlLight'
	$UTorrent.Font = 'Microsoft Sans Serif, 12pt'
	$UTorrent.Location = '184, 194'
	$UTorrent.Margin = '4, 3, 4, 3'
	$UTorrent.Name = 'UTorrent'
	$UTorrent.Size = '132, 43'
	$UTorrent.TabIndex = 1452
	$UTorrent.Text = 'UTorrent'
	$UTorrent.UseCompatibleTextRendering = $True
	$UTorrent.UseVisualStyleBackColor = $False
	$UTorrent.add_Click($UTorrent_Click)
	#
	# ImageGlass
	#
	$ImageGlass.BackColor = 'ControlLight'
	$ImageGlass.Font = 'Microsoft Sans Serif, 12pt'
	$ImageGlass.Location = '608, 191'
	$ImageGlass.Margin = '4, 3, 4, 3'
	$ImageGlass.Name = 'ImageGlass'
	$ImageGlass.Size = '132, 41'
	$ImageGlass.TabIndex = 1465
	$ImageGlass.Text = 'ImageGlass'
	$ImageGlass.UseCompatibleTextRendering = $True
	$ImageGlass.UseVisualStyleBackColor = $False
	$ImageGlass.add_Click($ImageGlass_Click)
	#
	# CCleaner
	#
	$CCleaner.BackColor = 'ControlLight'
	$CCleaner.Font = 'Microsoft Sans Serif, 12pt'
	$CCleaner.Location = '184, 96'
	$CCleaner.Margin = '4, 3, 4, 3'
	$CCleaner.Name = 'CCleaner'
	$CCleaner.Size = '132, 43'
	$CCleaner.TabIndex = 1464
	$CCleaner.Text = 'CCleaner'
	$CCleaner.UseCompatibleTextRendering = $True
	$CCleaner.UseVisualStyleBackColor = $False
	$CCleaner.add_Click($CCleaner_Click)
	#
	# VSCode
	#
	$VSCode.BackColor = 'ControlLight'
	$VSCode.Font = 'Microsoft Sans Serif, 11.9pt'
	$VSCode.Location = '682, 479'
	$VSCode.Margin = '4, 3, 4, 3'
	$VSCode.Name = 'VSCode'
	$VSCode.Size = '140, 49'
	$VSCode.TabIndex = 1463
	$VSCode.Text = 'VS Code'
	$VSCode.UseCompatibleTextRendering = $True
	$VSCode.UseVisualStyleBackColor = $False
	$VSCode.add_Click($VSCode_Click)
	#
	# Gimp
	#
	$Gimp.BackColor = 'ControlLight'
	$Gimp.Font = 'Microsoft Sans Serif, 12pt'
	$Gimp.Location = '468, 147'
	$Gimp.Margin = '4, 3, 4, 3'
	$Gimp.Name = 'Gimp'
	$Gimp.Size = '132, 43'
	$Gimp.TabIndex = 1456
	$Gimp.Text = 'Gimp'
	$Gimp.UseCompatibleTextRendering = $True
	$Gimp.UseVisualStyleBackColor = $False
	$Gimp.add_Click($Gimp_Click)
	#
	# VSCodium
	#
	$VSCodium.BackColor = 'ControlLight'
	$VSCodium.Font = 'Microsoft Sans Serif, 11.9pt'
	$VSCodium.Location = '682, 534'
	$VSCodium.Margin = '4, 3, 4, 3'
	$VSCodium.Name = 'VSCodium'
	$VSCodium.Size = '140, 49'
	$VSCodium.TabIndex = 1462
	$VSCodium.Text = 'VS Codium'
	$VSCodium.UseCompatibleTextRendering = $True
	$VSCodium.UseVisualStyleBackColor = $False
	$VSCodium.add_Click($VSCodium_Click)
	#
	# ShareX
	#
	$ShareX.BackColor = 'ControlLight'
	$ShareX.Font = 'Microsoft Sans Serif, 12pt'
	$ShareX.Location = '468, 191'
	$ShareX.Margin = '4, 3, 4, 3'
	$ShareX.Name = 'ShareX'
	$ShareX.Size = '132, 43'
	$ShareX.TabIndex = 1457
	$ShareX.Text = 'ShareX'
	$ShareX.UseCompatibleTextRendering = $True
	$ShareX.UseVisualStyleBackColor = $False
	$ShareX.add_Click($ShareX_Click)
	#
	# AdobeReaderDC
	#
	$AdobeReaderDC.BackColor = 'ControlLight'
	$AdobeReaderDC.Font = 'Microsoft Sans Serif, 12pt'
	$AdobeReaderDC.Location = '534, 589'
	$AdobeReaderDC.Margin = '4, 3, 4, 3'
	$AdobeReaderDC.Name = 'AdobeReaderDC'
	$AdobeReaderDC.Size = '140, 49'
	$AdobeReaderDC.TabIndex = 1461
	$AdobeReaderDC.Text = 'Adobe Reader DC'
	$AdobeReaderDC.UseCompatibleTextRendering = $True
	$AdobeReaderDC.UseVisualStyleBackColor = $False
	$AdobeReaderDC.add_Click($AdobeReaderDC_Click)
	#
	# Opera
	#
	$Opera.BackColor = 'ControlLight'
	$Opera.Font = 'Microsoft Sans Serif, 12pt'
	$Opera.Location = '17, 235'
	$Opera.Margin = '4, 3, 4, 3'
	$Opera.Name = 'Opera'
	$Opera.Size = '159, 40'
	$Opera.TabIndex = 1458
	$Opera.Text = 'Opera'
	$Opera.UseCompatibleTextRendering = $True
	$Opera.UseVisualStyleBackColor = $False
	$Opera.add_Click($Opera_Click)
	#
	# IrfanView
	#
	$IrfanView.BackColor = 'ControlLight'
	$IrfanView.Font = 'Microsoft Sans Serif, 12pt'
	$IrfanView.Location = '608, 98'
	$IrfanView.Margin = '4, 3, 4, 3'
	$IrfanView.Name = 'IrfanView'
	$IrfanView.Size = '132, 43'
	$IrfanView.TabIndex = 1459
	$IrfanView.Text = 'IrfanView'
	$IrfanView.UseCompatibleTextRendering = $True
	$IrfanView.UseVisualStyleBackColor = $False
	$IrfanView.add_Click($IrfanView_Click)
	$tabpage8.ResumeLayout()
	$tabpage3.ResumeLayout()
	$tabpage6.ResumeLayout()
	$tabpage1.ResumeLayout()
	$tabcontrol1.ResumeLayout()
	$formWindowsOptimizationT.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formWindowsOptimizationT.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formWindowsOptimizationT.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formWindowsOptimizationT.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formWindowsOptimizationT.ShowDialog()

} #End Function

#Call the form
Show-wintoolbox_psf | Out-Null
